MethodJson	MethodSignature	FanInJsons	FanInSignatures	Accurate?	DiscardDays
1057.json	me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.get()	null,null,2487.json,2486.json	me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite)	true	729
572.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setLockManagerCF(java.lang.String)	noCall	noCall	true	379
2818.json	me.prettyprint.cassandra.service.MultigetSliceIterator.getThreadCountUsed()	noCall	noCall	true	129
2037.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSubCountQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	1059
491.json	me.prettyprint.hector.api.beans.AbstractComposite.compareTo(me.prettyprint.hector.api.beans.AbstractComposite)	noCall	noCall	true	860
1202.json	me.prettyprint.cassandra.locking.HLockManagerImpl.smartWait(long)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
953.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getNumIdle()	958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	true	1023
1513.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1045
1093.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.toByteArray(java.math.BigDecimal)	1092.json,1090.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.toByteBuffer(java.math.BigDecimal),me.prettyprint.cassandra.serializers.BigDecimalSerializer.toBytes(java.math.BigDecimal)	true	268
955.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getMaxActive()	noCall	noCall	true	1016
1565.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_update_column_family()	noCall	noCall	true	918
487.json	me.prettyprint.hector.api.beans.AbstractComposite.getComparatorsByPosition()	noCall	noCall	true	859
336.json	me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.service.FailoverPolicy, java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	970
205.json	me.prettyprint.hom.EntityManagerFactoryImpl.getCache()	noCall	noCall	true	344
923.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.clear()	null	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.Anonymous-b1ff5ad2-c13e-4b62-85cc-ab0edd14319f.run()	true	880
2453.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.getCurrentMutator()	2445.json,2602.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.update(me.prettyprint.cassandra.service.template.SuperCfUpdater<K, SN, N>),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.cassandra.service.template.AbstractTemplateUpdater<K, N>)	true	658
98.json	me.prettyprint.hom.PropertyMappingDefinition.toString()	noCall	noCall	true	954
471.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getBytes(me.prettyprint.hector.api.Serializer<A>)	522.json,472.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize(),me.prettyprint.hector.api.beans.AbstractComposite.Component.getBytes()	true	852
1549.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_get()	noCall	noCall	true	918
498.json	me.prettyprint.hector.api.beans.AbstractComposite.clear()	noCall	noCall	true	860
1924.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.setDestinationKey(K)	noCall	noCall	true	340
466.json	me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality.toByte()	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	851
2605.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteColumn(K, N)	noCall	noCall	true	866
207.json	me.prettyprint.hom.EntityManagerImpl.initialize(me.prettyprint.hom.annotations.AnnotationScanner, java.lang.String[])	noCall	noCall	true	941
106.json	me.prettyprint.hom.EntityManagerConfigurator.getClusterName()	noCall	noCall	true	937
920.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.p(double)	919.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.score()	true	880
1523.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_splits(java.lang.String, java.lang.String, java.lang.String, int)	noCall	noCall	true	918
2575.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getInteger(SN, N)	noCall	noCall	true	847
208.json	me.prettyprint.hom.EntityManagerImpl.initializeClasspath(me.prettyprint.hom.annotations.AnnotationScanner, java.lang.String)	207.json	me.prettyprint.hom.EntityManagerImpl.initialize(me.prettyprint.hom.annotations.AnnotationScanner, java.lang.String[])	true	941
1801.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.get(int)	noCall	noCall	true	855
1646.json	me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.toString()	noCall	noCall	true	1078
2651.json	me.prettyprint.cassandra.service.ThriftCfDef.getMemtableFlushAfterMins()	noCall	noCall	true	920
2529.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.createUpdater(K)	noCall	noCall	true	866
85.json	me.prettyprint.hom.ClassCacheMgr.getCfMapDef(java.lang.String, boolean)	47.json	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I)	true	954
843.json	me.prettyprint.cassandra.connection.client.HThriftClient.getCassandra(java.lang.String)	noCall	noCall	true	941
2788.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setLoadBalancingPolicy(me.prettyprint.cassandra.connection.LoadBalancingPolicy)	noCall	noCall	true	1018
1131.json	me.prettyprint.cassandra.serializers.DoubleSerializer.toByteBuffer(java.lang.Double)	noCall	noCall	true	1016
1700.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.execute()	noCall	noCall	true	789
1288.json	me.prettyprint.cassandra.model.RowImpl.getKey()	noCall	noCall	true	1132
1731.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setRowCount(int)	noCall	noCall	true	1089
1823.json	me.prettyprint.cassandra.model.HCounterColumnImpl.setValue(java.lang.Long)	1833.json	me.prettyprint.cassandra.model.HCounterColumnImpl.apply(java.lang.Long, int)	true	1173
2279.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getExecutionTimeNano()	noCall	noCall	true	859
2371.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getFloat(N)	noCall	noCall	true	328
1208.json	me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
1115.json	me.prettyprint.cassandra.serializers.LongSerializer.toByteBuffer(java.lang.Long)	1131.json,1157.json	me.prettyprint.cassandra.serializers.DoubleSerializer.toByteBuffer(java.lang.Double),me.prettyprint.cassandra.serializers.DateSerializer.toByteBuffer(java.util.Date)	true	1121
1697.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setKeys(K, K)	noCall	noCall	true	789
2441.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(K)	noCall	noCall	true	846
1767.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.execute()	noCall	noCall	true	549
6.json	me.prettyprint.hom.CFMappingDef.getPropMapByColumnName(java.lang.String)	55.json,6.json,115.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.CFMappingDef.getPropMapByColumnName(java.lang.String),me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	true	954
1413.json	me.prettyprint.cassandra.model.BasicColumnDefinition.setIndexName(java.lang.String)	noCall	noCall	true	991
2418.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setLong(N, java.lang.Long)	noCall	noCall	true	866
2720.json	me.prettyprint.cassandra.service.CassandraHost.setMaxWaitTimeWhenExhausted(long)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	1216
1917.json	me.prettyprint.cassandra.service.ClearCounterRow.setColumnFamily(java.lang.String)	noCall	noCall	true	261
2812.json	me.prettyprint.cassandra.service.MultigetSliceIterator.hasNext()	noCall	noCall	true	129
1399.json	me.prettyprint.cassandra.model.SuperRowsImpl.toString()	noCall	noCall	true	1094
1912.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setRowCacheProvider(java.lang.String)	noCall	noCall	true	584
1765.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setSuperColumn(SN)	noCall	noCall	true	549
1397.json	me.prettyprint.cassandra.model.SuperRowsImpl.getCount()	noCall	noCall	true	1094
2031.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.initKeyspaceOperator()	2030.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.init()	true	1056
577.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getBackOffRetryDelayInMillis()	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
1491.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	789
1493.json	me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.setName(N)	noCall	noCall	true	853
2813.json	me.prettyprint.cassandra.service.MultigetSliceIterator.next()	noCall	noCall	true	129
530.json	me.prettyprint.hector.api.beans.DynamicComposite.toByteBuffer(java.lang.Object...)	noCall	noCall	true	850
480.json	me.prettyprint.hector.api.beans.AbstractComposite.getAliasesToComparatorMapping()	noCall	noCall	true	860
255.json	me.prettyprint.hom.annotations.DefaultAnnotationScanner.scan(java.lang.String, java.lang.Class<? extends java.lang.annotation.Annotation>)	noCall	noCall	true	344
2836.json	me.prettyprint.cassandra.service.SliceCounterIterator.Anonymous-987adf99-b757-424c-98dd-32d8d7a16fe5.function()	noCall	noCall	true	339
2522.json	me.prettyprint.cassandra.service.template.IndexedSlicesPredicate.count(int)	noCall	noCall	true	645
971.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.getPool(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	noCall	noCall	true	880
1976.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.next()	1975.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.hasNext()	true	682
1436.json	me.prettyprint.cassandra.model.SuperRowImpl.getKey()	noCall	noCall	true	1094
378.json	me.prettyprint.hector.api.factory.HFactory.createCounterColumn(N, long, me.prettyprint.hector.api.Serializer<N>)	379.json,2065.json	me.prettyprint.hector.api.factory.HFactory.createCounterColumn(java.lang.String, long),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumn(N, long, me.prettyprint.hector.api.Serializer<N>)	true	854
2635.json	me.prettyprint.cassandra.service.ThriftCfDef.setSubComparatorTypeAlias(java.lang.String)	noCall	noCall	true	682
2538.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	2537.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	true	852
1194.json	me.prettyprint.cassandra.locking.AbstractLockManager.setKeyspace(me.prettyprint.hector.api.Keyspace)	noCall	noCall	true	379
1128.json	me.prettyprint.cassandra.serializers.AbstractSerializer.computeInitialHashSize(int)	null,1147.json,1127.json,1126.json	me.prettyprint.cassandra.serializers.AbstractSerializer.toBytesSet(java.util.List<T>),me.prettyprint.cassandra.serializers.PrefixedSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>),me.prettyprint.cassandra.serializers.AbstractSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>),me.prettyprint.cassandra.serializers.AbstractSerializer.toBytesMap(java.util.Map<T, V>)	true	933
1524.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_version()	noCall	noCall	true	918
2568.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getColumnNames()	noCall	noCall	true	847
8.json	me.prettyprint.hom.CFMappingDef.getColFamName()	9.json,191.json	me.prettyprint.hom.CFMappingDef.getEffectiveColFamName(),me.prettyprint.hom.cache.TableParserValidator.validateBaseEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	954
1103.json	me.prettyprint.cassandra.serializers.UUIDSerializer.toByteBuffer(java.util.UUID)	noCall	noCall	true	1081
1489.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnNames(SN...)	noCall	noCall	true	789
1496.json	me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.execute()	noCall	noCall	true	853
2579.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getString(SN, N)	noCall	noCall	true	847
2817.json	me.prettyprint.cassandra.service.MultigetSliceIterator.getHostsUsed()	noCall	noCall	true	129
968.json	me.prettyprint.cassandra.connection.BackgroundCassandraHostService.setRetryDelayInSeconds(int)	null	me.prettyprint.cassandra.connection.HConnectionManager.setCassandraHostRetryDelay(int)	true	1021
2379.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteSlice(K, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	noCall	noCall	true	866
99.json	me.prettyprint.hom.PropertyMappingDefinition.getPropDesc()	7.json,114.json,55.json,167.json,77.json,69.json,90.json,130.json,60.json,67.json,53.json,68.json,null	me.prettyprint.hom.CFMappingDef.addPropertyDefinition(me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.CollectionMapperHelper.instantiateCollection(java.lang.Object, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.ReflectionHelper.invokeGetter(java.lang.Object, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.converters.VariableIntegerConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[]),me.prettyprint.hom.HectorObjectMapper.setPropertyUsingColumn(T, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.ClassCacheMgr.processIdCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Id, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, java.beans.PropertyDescriptor>),me.prettyprint.hom.KeyDefinition.addIdPropertyMap(me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.setSimpleId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.converters.DefaultConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[])	false	954
1310.json	me.prettyprint.cassandra.model.HColumnImpl.apply(V, long, int)	noCall	noCall	true	884
1242.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeChar(char)	noCall	noCall	true	860
191.json	me.prettyprint.hom.cache.TableParserValidator.validateBaseEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	189.json	me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
504.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	536.json,503.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	true	853
2743.json	me.prettyprint.cassandra.service.clock.SecondsClockResolution.createClock()	noCall	noCall	true	955
2057.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	1059
1069.json	me.prettyprint.cassandra.serializers.DoubleTypeSerializer.get()	noCall	noCall	true	286
1452.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	998
1236.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.prepend(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	860
1230.json	me.prettyprint.cassandra.utils.Assert.noneNull(java.lang.Object...)	1629.json,1630.json,1501.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.execute()	true	1118
2711.json	me.prettyprint.cassandra.service.CassandraHost.getHost()	null,944.json,null,null	me.prettyprint.cassandra.connection.client.HThriftClient.open(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient(),me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.connection.client.HSaslThriftClient.open()	true	1216
1136.json	me.prettyprint.cassandra.serializers.BigIntegerSerializer.get()	null,null,78.json	me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.hom.converters.VariableIntegerConverter.convertObjTypeToCassType(java.lang.Object)	true	864
1411.json	me.prettyprint.cassandra.model.BasicColumnDefinition.setValidationClass(java.lang.String)	noCall	noCall	true	991
35.json	me.prettyprint.hom.CFMappingDef.getSliceColumnNameArr()	47.json	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I)	true	912
104.json	me.prettyprint.hom.EntityManagerConfigurator.getPropertyGently(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, boolean)	noCall	noCall	true	937
2753.json	me.prettyprint.cassandra.service.BatchMutation.isEmpty()	1373.json	me.prettyprint.cassandra.model.MutatorImpl.execute()	true	1121
1438.json	me.prettyprint.cassandra.model.SuperRowImpl.toString()	noCall	noCall	true	1094
2584.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.applySuperColumn(SN)	2457.json	me.prettyprint.cassandra.service.template.ThriftSuperCfTemplate.doExecuteSlice(K, SN, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	true	847
1342.json	me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>)	noCall	noCall	true	917
1206.json	me.prettyprint.cassandra.locking.HLockManagerImpl.generateLockId()	1204.json,1216.json	me.prettyprint.cassandra.locking.HLockManagerImpl.maybeSetInternalLockId(me.prettyprint.hector.api.locking.HLock),me.prettyprint.cassandra.locking.HLockManagerImpl.createLock(java.lang.String)	true	379
2566.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getKey()	2562.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.next()	true	847
2245.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.addKey(K)	noCall	noCall	true	892
2539.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, java.util.List<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	noCall	noCall	true	866
1580.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_version()	noCall	noCall	true	918
1338.json	me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecute(me.prettyprint.cassandra.model.KeyspaceOperationCallback<T>)	noCall	noCall	true	920
1132.json	me.prettyprint.cassandra.serializers.DoubleSerializer.fromByteBuffer(java.nio.ByteBuffer)	2372.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDouble(N)	true	1016
1145.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.fromByteBuffer(java.nio.ByteBuffer)	1146.json,1147.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.fromBytesList(java.util.List<java.nio.ByteBuffer>),me.prettyprint.cassandra.serializers.PrefixedSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>)	true	922
2394.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultIterator.getRes()	noCall	noCall	true	159
2062.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>)	noCall	noCall	true	1049
2726.json	me.prettyprint.cassandra.service.CassandraHost.setUseThriftFramedTransport(boolean)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	1204
1382.json	me.prettyprint.cassandra.model.MutatorImpl.deleteCounter(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	853
2373.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getBoolean(N)	noCall	noCall	true	866
1256.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.getReplicationFactor()	noCall	noCall	true	1014
21.json	me.prettyprint.hom.CFMappingDef.getCfBaseMapDef()	193.json,179.json,57.json,192.json	me.prettyprint.hom.cache.TableParserValidator.validateDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.InheritanceParserValidator.validateDerivedClassInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T),me.prettyprint.hom.cache.TableParserValidator.validatePersistableDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	954
2269.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getExecutionTimeMicro()	noCall	noCall	true	877
136.json	me.prettyprint.hom.KeyDefinition.isSimpleIdPresent()	noCall	noCall	true	909
2792.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setHostTimeoutWindow(int)	noCall	noCall	true	891
1707.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.Anonymous-efbfae1d-ccd2-4d7d-af44-4d606f36a75b.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	549
536.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	noCall	noCall	true	137
63.json	me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
1625.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1046
2586.json	me.prettyprint.cassandra.service.template.MappedColumnFamilyResultWrapper.getRow()	noCall	noCall	true	861
2730.json	me.prettyprint.cassandra.service.CassandraHost.parsePortFromUrl(java.lang.String)	noCall	noCall	true	1216
1147.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>)	noCall	noCall	true	920
1769.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setColumnNames(N...)	noCall	noCall	true	549
997.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnHostRestored(me.prettyprint.cassandra.service.CassandraHost)	896.json,null,889.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts(),me.prettyprint.cassandra.connection.CassandraHostRetryService.Anonymous-f1d61900-d660-44e6-aae7-6a883ee907a3.run(),me.prettyprint.cassandra.connection.CassandraHostRetryService.add(me.prettyprint.cassandra.service.CassandraHost)	true	466
1626.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	1496.json,1610.json,1609.json,1495.json	me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftColumnQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftColumnQuery.Anonymous-0453ced7-df59-400c-a70d-7c96f01c9540.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.Anonymous-b9ae99bb-f6f2-4b55-9c88-bb5fff5ec690.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	true	1136
329.json	me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator, java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	1135
2780.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getAutoDiscoverHosts()	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	988
131.json	me.prettyprint.hom.KeyDefinition.setPkClass(java.lang.Class<?>)	noCall	noCall	false	910
1715.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.Anonymous-fe8046f6-e430-4731-9774-b9454f12ee69.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1094
857.json	me.prettyprint.cassandra.connection.client.HThriftClient.getCreatedTime()	noCall	noCall	true	193
925.json	me.prettyprint.cassandra.connection.security.SSLHelper.getTSSLTransportParameters()	912.json	me.prettyprint.cassandra.connection.factory.HThriftClientFactoryImpl.createClient(me.prettyprint.cassandra.service.CassandraHost)	true	265
2740.json	me.prettyprint.cassandra.service.clock.MicrosecondsSyncClockResolution.createClock()	noCall	noCall	true	1084
1859.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setSubComparatorTypeAlias(java.lang.String)	noCall	noCall	true	682
1220.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeUUID(long)	1219.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeUUID(me.prettyprint.hector.api.ClockResolution)	true	954
11.json	me.prettyprint.hom.CFMappingDef.getInheritanceType()	63.json,177.json	me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.cache.InheritanceParserValidator.validateBaseClassInheritance(me.prettyprint.hom.CFMappingDef<T>)	true	954
2581.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteBuffer(SN, N)	noCall	noCall	true	847
1096.json	me.prettyprint.cassandra.serializers.CompositeSerializer.toByteBuffer(me.prettyprint.hector.api.beans.Composite)	noCall	noCall	true	859
908.json	me.prettyprint.cassandra.connection.NodeAutoDiscoverService.applyRetryDelay()	noCall	noCall	true	990
473.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getComparator()	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	860
1071.json	me.prettyprint.cassandra.serializers.DoubleTypeSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	286
2662.json	me.prettyprint.cassandra.service.ThriftCfDef.setName(java.lang.String)	noCall	noCall	true	770
360.json	me.prettyprint.hector.api.factory.HFactory.createRangeSuperSlicesCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	789
1704.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	789
2469.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long, int)	noCall	noCall	true	866
2154.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.setResult(T)	noCall	noCall	true	917
1983.json	me.prettyprint.cassandra.service.ColumnSliceIterator.peek()	noCall	noCall	true	0
371.json	me.prettyprint.hector.api.factory.HFactory.createCounterSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HCounterColumn<N>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	2069.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HCounterColumn<N>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	true	854
1670.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.Anonymous-0da7213b-7cf2-40b9-944e-bd65a507f546.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1096
2532.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.isColumnsExist(K)	noCall	noCall	true	866
1893.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getId()	noCall	noCall	true	1014
2412.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.getCurrentSuperColumn()	2415.json,2413.json,2414.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N),me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSuperColumn()	true	851
2830.json	me.prettyprint.cassandra.service.ThriftColumnDef.toString()	noCall	noCall	true	970
1412.json	me.prettyprint.cassandra.model.BasicColumnDefinition.setIndexType(me.prettyprint.hector.api.ddl.ColumnIndexType)	noCall	noCall	true	991
2084.json	me.prettyprint.cassandra.service.ThriftKsDef.addColumnFamilyDefinition(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	noCall	noCall	true	782
2281.json	me.prettyprint.cassandra.service.BatchSizeHint.getNumOfRows()	noCall	noCall	true	718
1228.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.uuid(java.nio.ByteBuffer)	noCall	noCall	true	954
1719.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnNames(SN...)	noCall	noCall	true	1046
2454.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.setClock(long)	noCall	noCall	true	550
30.json	me.prettyprint.hom.CFMappingDef.isBaseEntity()	83.json,32.json,176.json,189.json,33.json	me.prettyprint.hom.ClassCacheMgr.findBaseClassViaMappings(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.isPersistableDerivedEntity(),me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.isNonPersistableDerivedEntity()	true	923
2573.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteArray(SN, N)	noCall	noCall	true	847
476.json	me.prettyprint.hector.api.beans.AbstractComposite.getComponents()	506.json	me.prettyprint.hector.api.beans.AbstractComposite.flatten(java.util.Collection<?>)	true	860
1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	1197.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock)	true	379
66.json	me.prettyprint.hom.HectorObjectMapper.setIdIfCan(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
1200.json	me.prettyprint.cassandra.locking.HLockManagerImpl.logLock(me.prettyprint.hector.api.locking.HLock, java.util.Set<java.lang.String>)	1198.json,1199.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long),me.prettyprint.cassandra.locking.HLockManagerImpl.setAcquired(me.prettyprint.hector.api.locking.HLock, java.util.Map<java.lang.String, java.lang.String>)	true	269
1690.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setRowCount(int)	noCall	noCall	true	1093
1076.json	me.prettyprint.cassandra.serializers.AsciiSerializer.get()	noCall	noCall	true	864
327.json	me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, java.lang.String)	1050.json,2492.json	me.prettyprint.cassandra.examples.ExampleDaoV2.main(java.lang.String[]),me.prettyprint.cassandra.service.template.CassandraClusterFactory.getInstance(java.lang.String, java.lang.String, int)	true	1137
2378.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getHostUsed()	noCall	noCall	true	866
204.json	me.prettyprint.hom.EntityManagerFactoryImpl.getProperties()	noCall	noCall	true	344
2253.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setColumnNames(java.util.Collection<N>)	noCall	noCall	true	892
1018.json	me.prettyprint.cassandra.connection.HConnectionManager.getSuspendedCassandraHosts()	1969.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getSuspendedCassandraHosts()	true	899
1640.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	789
187.json	me.prettyprint.hom.cache.TableParserValidator.parse(me.prettyprint.hom.ClassCacheMgr, java.lang.annotation.Annotation, me.prettyprint.hom.CFMappingDef<T>)	91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	true	923
509.json	me.prettyprint.hector.api.beans.AbstractComposite.removeAll(java.util.Collection<?>)	noCall	noCall	true	848
2553.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.querySingleColumn(K, N, me.prettyprint.hector.api.Serializer<V>)	2552.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.querySingleColumn(K, N, java.lang.Class<V>)	true	866
1728.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setRange(N, N, boolean, int)	noCall	noCall	true	789
1830.json	me.prettyprint.cassandra.model.HCounterColumnImpl.getNameSerializer()	noCall	noCall	true	1125
1871.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMemtableThroughputInMb(int)	noCall	noCall	true	920
2542.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, me.prettyprint.cassandra.model.HSlicePredicate<N>)	noCall	noCall	true	782
1100.json	me.prettyprint.cassandra.serializers.ShortSerializer.toByteBuffer(java.lang.Short)	noCall	noCall	true	878
2255.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getColumns()	noCall	noCall	true	892
1910.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMergeShardsChance(double)	noCall	noCall	true	584
982.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.setBadnessThreshold(double)	noCall	noCall	true	880
22.json	me.prettyprint.hom.CFMappingDef.setCfBaseMapDef(me.prettyprint.hom.CFMappingDef<? super T>)	194.json	me.prettyprint.hom.cache.TableParserValidator.findAndSetBaseClassViaMappings(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	954
2715.json	me.prettyprint.cassandra.service.CassandraHost.equals(java.lang.Object)	924.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.equals(java.lang.Object)	true	1216
1189.json	me.prettyprint.cassandra.locking.AbstractLockManager.doesLockCFExist(me.prettyprint.hector.api.ddl.KeyspaceDefinition)	1187.json	me.prettyprint.cassandra.locking.AbstractLockManager.checkCreateLockSchema()	true	379
461.json	me.prettyprint.hector.api.beans.Composite.toByteBuffer(java.util.List<?>)	noCall	noCall	true	849
2457.json	me.prettyprint.cassandra.service.template.ThriftSuperCfTemplate.doExecuteSlice(K, SN, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	noCall	noCall	true	851
2772.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getLifo()	noCall	noCall	true	1145
2684.json	me.prettyprint.cassandra.service.AbstractCluster.describeClusterName()	2689.json	me.prettyprint.cassandra.service.AbstractCluster.getClusterName()	true	1118
897.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	896.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts()	true	642
582.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setReplicationFactor(int)	noCall	noCall	true	379
1780.json	me.prettyprint.cassandra.model.AbstractSliceQuery.toStringInternal()	1768.json,1753.json,1614.json,1726.json,1717.json,1510.json,1672.json,1502.json,1709.json,1487.json,1693.json,1654.json,1638.json,1701.json,1622.json,1679.json,1735.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.toString(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.toString()	true	1107
2531.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.update(me.prettyprint.cassandra.service.template.ColumnFamilyUpdater<K, N>)	1926.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	true	866
1191.json	me.prettyprint.cassandra.locking.AbstractLockManager.getCluster()	noCall	noCall	true	379
2278.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteMultigetSlice()	2272.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.maybeExecuteSlice(N)	true	892
1774.json	me.prettyprint.cassandra.model.AbstractSliceQuery.setColumnNames(N...)	1756.json,1710.json,1736.json,1702.json,1615.json,1769.json,1641.json,1505.json,1694.json,1489.json,1655.json,1511.json,1719.json,1448.json,1727.json,1673.json,1623.json,1680.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnNames(SN...),me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setColumnNames(N...),me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setColumnNames(N...)	true	1108
1235.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.getByteBuffer()	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	860
1926.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	noCall	noCall	true	340
2802.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setUseSocketKeepalive(boolean)	noCall	noCall	true	825
88.json	me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>)	86.json	me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	true	954
962.json	me.prettyprint.cassandra.connection.HostTimeoutTracker.Unsuspender.run()	noCall	noCall	true	891
1558.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_remove()	noCall	noCall	true	918
1703.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	789
2166.json	me.prettyprint.cassandra.service.VirtualKeyspaceServiceImpl.batchMutate(me.prettyprint.cassandra.service.BatchMutation)	noCall	noCall	true	693
1752.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.execute()	noCall	noCall	true	1108
2250.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setReversed(boolean)	noCall	noCall	true	892
1313.json	me.prettyprint.cassandra.model.HColumnImpl.hashCode()	noCall	noCall	true	1108
1015.json	me.prettyprint.cassandra.connection.HConnectionManager.removeCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	1968.json	me.prettyprint.cassandra.service.CassandraClientMonitor.removeCassandraHost(java.lang.String)	true	962
2430.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.isSubColumnsExist(K, SN)	noCall	noCall	true	866
2652.json	me.prettyprint.cassandra.service.ThriftCfDef.getMemtableOperationsInMillions()	noCall	noCall	true	920
1576.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_ring(java.lang.String)	noCall	noCall	true	918
2380.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteSlice(K, me.prettyprint.cassandra.model.HSlicePredicate<N>)	2379.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteSlice(K, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	true	866
234.json	me.prettyprint.hom.EntityManagerImpl.contains(java.lang.Object)	noCall	noCall	true	344
1398.json	me.prettyprint.cassandra.model.SuperRowsImpl.iterator()	noCall	noCall	true	1094
2742.json	me.prettyprint.cassandra.service.clock.MillisecondsClockResolution.createClock()	noCall	noCall	true	955
1620.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.Anonymous-c3904543-d246-492e-93f8-504f8c9c92d3.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1107
1272.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getName()	1278.json,1277.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getNameByteBuffer(),me.prettyprint.cassandra.model.HSuperColumnImpl.getNameBytes()	true	1132
1522.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_snitch()	noCall	noCall	true	918
1881.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getComparatorType()	noCall	noCall	true	1014
2040.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createMultigetSuperSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1485.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.Anonymous-1b1e8dbb-0477-49a5-8f51-f012e5ac0fcd.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	789
2048.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	2062.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>)	true	1059
2688.json	me.prettyprint.cassandra.service.AbstractCluster.describeKeyspace(java.lang.String)	noCall	noCall	true	1118
2686.json	me.prettyprint.cassandra.service.AbstractCluster.describeThriftVersion()	noCall	noCall	true	1118
519.json	me.prettyprint.hector.api.beans.AbstractComposite.get(int, me.prettyprint.hector.api.Serializer<T>)	noCall	noCall	true	860
1868.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMinCompactionThreshold(int)	noCall	noCall	true	1006
1264.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.removeStrategyOption(java.lang.String)	noCall	noCall	true	1014
2800.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setRunAutoDiscoveryAtStartup(boolean)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	879
2604.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteRow(me.prettyprint.hector.api.mutation.Mutator<K>, K)	noCall	noCall	true	866
2702.json	me.prettyprint.cassandra.service.AbstractCluster.getConfigurator()	1190.json,2150.json	me.prettyprint.cassandra.locking.AbstractLockManager.getConfigurator(),me.prettyprint.cassandra.service.ThriftCluster.onStartup()	true	566
2710.json	me.prettyprint.cassandra.service.CassandraHost.getName()	null,945.json,896.json,1014.json,1034.json,null,1969.json,949.json,1461.json,889.json	me.prettyprint.cassandra.connection.client.HThriftClient.open(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.waitForConnection(),me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts(),me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.connection.HConnectionManager.markHostAsDown(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.service.CassandraClientMonitor.getSuspendedCassandraHosts(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.getName(),me.prettyprint.cassandra.model.ExecutionResult.formatMessage(java.lang.String, java.lang.String),me.prettyprint.cassandra.connection.CassandraHostRetryService.add(me.prettyprint.cassandra.service.CassandraHost)	true	1216
1067.json	me.prettyprint.cassandra.serializers.TimeUUIDSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	729
2099.json	me.prettyprint.cassandra.service.Operation.getResult()	null,null,null,null,null,2682.json,2146.json,null,2684.json,2137.json,2686.json,2688.json,2155.json	me.prettyprint.cassandra.service.ThriftCluster.updateKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.ThriftCluster.addKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.dropColumnFamily(java.lang.String, java.lang.String, boolean),me.prettyprint.cassandra.service.AbstractCluster.describePartitioner(),me.prettyprint.cassandra.service.ThriftCluster.addColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspaces(),me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.dropKeyspace(java.lang.String, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeClusterName(),me.prettyprint.cassandra.service.ThriftCluster.describeSchemaVersions(),me.prettyprint.cassandra.service.AbstractCluster.describeThriftVersion(),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspace(java.lang.String),me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getResult()	false	1260
1455.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.Anonymous-6f4f81a8-5d00-44db-a4c1-030f4fefe856.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	919
503.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	502.json,535.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String),me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	true	860
2589.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.isBatched()	2602.json,2601.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.cassandra.service.template.AbstractTemplateUpdater<K, N>),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.hector.api.mutation.Mutator<K>)	true	866
2487.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite, int)	noCall	noCall	true	0
1679.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.toString()	noCall	noCall	true	1107
2797.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getUseHostTimeoutTracker()	noCall	noCall	true	888
1904.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setCompactionStrategy(java.lang.String)	noCall	noCall	true	584
1762.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.addGtExpression(N, V)	noCall	noCall	true	419
2481.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer, int)	noCall	noCall	true	851
967.json	me.prettyprint.cassandra.connection.BackgroundCassandraHostService.getRetryDelayInSeconds()	noCall	noCall	true	1021
2467.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID, int)	noCall	noCall	true	866
1831.json	me.prettyprint.cassandra.model.HCounterColumnImpl.getNameBytes()	noCall	noCall	true	872
1978.json	me.prettyprint.cassandra.service.ColumnSliceIterator.Anonymous-0f7904c2-5402-486b-b898-a8a1417ea371.function()	noCall	noCall	true	682
2106.json	me.prettyprint.cassandra.service.Operation.getCassandraHost()	2289.json,2276.json,2161.json,2278.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>),me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteSlice(),me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getCassandraHost(),me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteMultigetSlice()	false	1118
2464.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String)	noCall	noCall	true	866
1711.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setRange(N, N, boolean, int)	noCall	noCall	true	549
515.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String)	514.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>)	true	853
1813.json	me.prettyprint.cassandra.model.AbstractSubColumnQuery.toString()	noCall	noCall	true	1072
853.json	me.prettyprint.cassandra.connection.client.HThriftClient.getCassandraHost()	noCall	noCall	true	650
516.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	515.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>, java.lang.String)	true	853
2265.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.remove()	noCall	noCall	true	879
1723.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setKeys(java.lang.Iterable<K>)	noCall	noCall	true	789
2791.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getHostTimeoutWindow()	noCall	noCall	true	891
2771.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.toString()	noCall	noCall	true	1175
1734.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.execute()	noCall	noCall	true	1089
1718.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	1046
1234.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.getBufferList()	1235.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.getByteBuffer()	true	860
1408.json	me.prettyprint.cassandra.model.BasicColumnDefinition.getIndexType()	noCall	noCall	true	991
1171.json	me.prettyprint.cassandra.io.ChunkInputStream.fetchChunk()	1170.json	me.prettyprint.cassandra.io.ChunkInputStream.read()	true	901
1564.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_drop_keyspace()	noCall	noCall	true	918
1560.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_set_keyspace()	noCall	noCall	true	918
1165.json	me.prettyprint.cassandra.serializers.StringSerializer.getComparatorType()	noCall	noCall	true	850
352.json	me.prettyprint.hector.api.factory.HFactory.createSuperSliceCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	789
949.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getName()	null,944.json,958.json,947.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.releaseClient(me.prettyprint.cassandra.connection.client.HClient),me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.shutdown()	true	1023
60.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	59.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	679
2582.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getActiveSuperColumn()	noCall	noCall	true	846
1775.json	me.prettyprint.cassandra.model.AbstractSliceQuery.setColumnNames(java.util.Collection<N>)	1447.json,1490.json,1506.json,1720.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnNames(java.util.Collection<N>),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnNames(java.util.Collection<SN>),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnNames(java.util.Collection<N>),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnNames(java.util.Collection<SN>)	true	1016
1028.json	me.prettyprint.cassandra.connection.HConnectionManager.removeAllListeners()	noCall	noCall	true	466
1277.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getNameBytes()	noCall	noCall	true	1120
1714.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setKeys(java.util.Collection<K>)	noCall	noCall	true	865
2774.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getPort()	942.json,897.json	me.prettyprint.cassandra.connection.NodeDiscovery.discoverNodes(),me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	true	1083
251.json	me.prettyprint.hom.EntityManagerImpl.getTransaction()	noCall	noCall	true	344
922.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.resetIntervel()	null	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.updateScores()	true	880
1538.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_batch_mutate()	noCall	noCall	true	918
939.json	me.prettyprint.cassandra.connection.RoundRobinBalancingPolicy.getAndIncrement(int)	938.json	me.prettyprint.cassandra.connection.RoundRobinBalancingPolicy.getPoolSafely(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>)	true	1020
48.json	me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, T)	217.json,null	me.prettyprint.hom.EntityManagerImpl.merge(T),me.prettyprint.hom.EntityManagerImpl.persist(java.lang.Object)	true	954
2477.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean, int)	noCall	noCall	true	306
1024.json	me.prettyprint.cassandra.connection.HConnectionManager.getTimer()	noCall	noCall	true	753
1550.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_get_count()	noCall	noCall	true	918
2056.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnPath(java.lang.String)	noCall	noCall	true	1059
2680.json	me.prettyprint.cassandra.service.AbstractCluster.getName()	noCall	noCall	true	1135
61.json	me.prettyprint.hom.HectorObjectMapper.createBytesFromPropertyValue(java.lang.Object, me.prettyprint.hom.PropertyMappingDefinition)	59.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	954
1014.json	me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	2679.json,896.json,941.json,null,889.json,1967.json	me.prettyprint.cassandra.service.AbstractCluster.addHost(me.prettyprint.cassandra.service.CassandraHost, boolean),me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts(),me.prettyprint.cassandra.connection.NodeDiscovery.doAddNodes(),me.prettyprint.cassandra.connection.CassandraHostRetryService.Anonymous-f1d61900-d660-44e6-aae7-6a883ee907a3.run(),me.prettyprint.cassandra.connection.CassandraHostRetryService.add(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.service.CassandraClientMonitor.addCassandraHost(java.lang.String)	true	1021
1782.json	me.prettyprint.cassandra.model.CounterSuperSliceImpl.getSuperColumns()	noCall	noCall	true	789
459.json	me.prettyprint.hector.api.beans.Composite.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	853
2433.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countColumns(K, SN, SN, int)	2431.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countColumns(K)	true	866
2434.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countSubColumns(K, SN, N, N, int)	2432.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countSubColumns(K, SN)	true	866
1148.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.compareByteArrays(byte[], int, int, byte[], int, int)	1145.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.fromByteBuffer(java.nio.ByteBuffer)	true	920
78.json	me.prettyprint.hom.converters.VariableIntegerConverter.convertObjTypeToCassType(java.lang.Object)	noCall	noCall	true	544
1437.json	me.prettyprint.cassandra.model.SuperRowImpl.getSuperSlice()	noCall	noCall	true	1094
1639.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setRange(N, N, boolean, int)	noCall	noCall	true	789
1567.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_truncate()	noCall	noCall	true	918
1621.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.execute()	noCall	noCall	true	1132
117.json	me.prettyprint.hom.CollectionMapperHelper.deserializeCollectionValue(byte[])	115.json	me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	true	679
1187.json	me.prettyprint.cassandra.locking.AbstractLockManager.checkCreateLockSchema()	1186.json	me.prettyprint.cassandra.locking.AbstractLockManager.init()	true	379
1553.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_get_slice()	noCall	noCall	true	918
928.json	me.prettyprint.cassandra.connection.security.KerberosHelper.loginService(java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	648
335.json	me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.service.FailoverPolicy)	333.json,334.json	me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster),me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster, me.prettyprint.hector.api.ConsistencyLevelPolicy)	true	991
2766.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setRetryDownedHostsDelayInSeconds(int)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	1034
1593.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_set_keyspace(java.lang.String)	noCall	noCall	true	918
1222.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.toUUID(byte[])	1223.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeFromUUID(byte[])	true	954
1471.json	me.prettyprint.cassandra.model.CqlQuery.useCompression()	noCall	noCall	true	797
1963.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableTransportExceptionCount()	1964.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableErrorCount()	true	1258
71.json	me.prettyprint.hom.HectorObjectMapper.isSerializable(java.lang.Class<?>)	noCall	noCall	true	937
1820.json	me.prettyprint.cassandra.model.CounterSuperRowImpl.getSuperSlice()	noCall	noCall	true	789
153.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getJtaDataSource()	noCall	noCall	true	344
2410.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.addKey(K)	2444.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.createUpdater(K)	true	845
2360.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.end(java.lang.String)	noCall	noCall	true	213
1077.json	me.prettyprint.cassandra.serializers.AsciiSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	864
1833.json	me.prettyprint.cassandra.model.HCounterColumnImpl.apply(java.lang.Long, int)	noCall	noCall	true	858
245.json	me.prettyprint.hom.EntityManagerImpl.createNativeQuery(java.lang.String, java.lang.String)	noCall	noCall	true	344
1138.json	me.prettyprint.cassandra.serializers.BigIntegerSerializer.toByteBuffer(java.math.BigInteger)	noCall	noCall	true	864
2729.json	me.prettyprint.cassandra.service.CassandraHost.parseHostFromUrl(java.lang.String)	noCall	noCall	true	1216
1855.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setColumnType(me.prettyprint.hector.api.ddl.ColumnType)	noCall	noCall	true	1006
1168.json	me.prettyprint.cassandra.io.ChunkOutputStream.flush()	1166.json	me.prettyprint.cassandra.io.ChunkOutputStream.write(int)	true	901
2735.json	me.prettyprint.cassandra.service.CassandraHost.getMaxConnectTimeMillis()	944.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient()	true	193
2569.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.hasNext()	2562.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.next()	true	847
233.json	me.prettyprint.hom.EntityManagerImpl.detach(java.lang.Object)	noCall	noCall	true	344
2837.json	me.prettyprint.cassandra.service.SliceCounterIterator.setFilter(me.prettyprint.cassandra.service.template.SliceFilter<me.prettyprint.hector.api.beans.HCounterColumn<N>>)	noCall	noCall	true	199
1968.json	me.prettyprint.cassandra.service.CassandraClientMonitor.removeCassandraHost(java.lang.String)	noCall	noCall	true	916
1441.json	me.prettyprint.cassandra.model.CounterSliceImpl.toString()	noCall	noCall	true	834
177.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateBaseClassInheritance(me.prettyprint.hom.CFMappingDef<T>)	176.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
2590.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setBatched(boolean)	2527.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.setBatched(boolean)	true	866
1216.json	me.prettyprint.cassandra.locking.HLockManagerImpl.createLock(java.lang.String)	noCall	noCall	true	379
328.json	me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator)	1049.json,327.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference),me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, java.lang.String)	true	1135
1061.json	me.prettyprint.cassandra.serializers.ObjectSerializer.toByteBuffer(java.lang.Object)	noCall	noCall	true	1053
2809.json	me.prettyprint.cassandra.service.MultigetSliceIterator.Anonymous-ec90b09c-2a02-4b3f-9614-a9bc70632cdc.run()	noCall	noCall	true	129
2445.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.update(me.prettyprint.cassandra.service.template.SuperCfUpdater<K, SN, N>)	noCall	noCall	true	851
2407.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.remove()	noCall	noCall	true	866
2783.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setAutoDiscoveryDelayInSeconds(int)	noCall	noCall	true	988
2422.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteBuffer(N, java.nio.ByteBuffer)	noCall	noCall	true	866
1735.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.toString()	noCall	noCall	true	1089
2835.json	me.prettyprint.cassandra.service.RangeSlicesIterator.refresh()	2831.json	me.prettyprint.cassandra.service.RangeSlicesIterator.hasNext()	true	199
2376.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getExecutionTimeMicro()	noCall	noCall	true	866
1561.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_add_column_family()	noCall	noCall	true	918
2050.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumn(N, V, long, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
2665.json	me.prettyprint.cassandra.service.ThriftCfDef.getCompactionStrategyOptions()	noCall	noCall	true	584
1173.json	me.prettyprint.cassandra.locking.HLockImpl.getPath()	noCall	noCall	true	379
941.json	me.prettyprint.cassandra.connection.NodeDiscovery.doAddNodes()	null,909.json	me.prettyprint.cassandra.connection.HConnectionManager.doAddNodes(),me.prettyprint.cassandra.connection.NodeAutoDiscoverService.doAddNodes()	true	80
1792.json	me.prettyprint.cassandra.model.AbstractSuperColumnQuery.toString()	noCall	noCall	true	1118
1892.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getDefaultValidationClass()	noCall	noCall	true	1014
115.json	me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	679
345.json	me.prettyprint.hector.api.factory.HFactory.createCounterColumnQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	2067.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumnQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	true	853
52.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object)	47.json	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I)	true	909
1072.json	me.prettyprint.cassandra.serializers.FloatSerializer.get()	2472.json,null,null,2371.json,2473.json,2483.json,null,2577.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getFloat(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, float),me.prettyprint.cassandra.service.template.SuperCfUpdater.setFloat(N, java.lang.Float),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getFloat(SN, N)	true	851
2414.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSuperColumn()	noCall	noCall	true	851
1827.json	me.prettyprint.cassandra.model.HCounterColumnImpl.getValue()	1835.json,1837.json,1836.json	me.prettyprint.cassandra.model.HCounterColumnImpl.toString(),me.prettyprint.cassandra.model.HCounterColumnImpl.equals(java.lang.Object),me.prettyprint.cassandra.model.HCounterColumnImpl.hashCode()	true	858
2432.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countSubColumns(K, SN)	2430.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.isSubColumnsExist(K, SN)	true	866
158.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getManagedClassNames()	noCall	noCall	true	344
218.json	me.prettyprint.hom.EntityManagerImpl.remove(java.lang.Object)	noCall	noCall	true	344
1783.json	me.prettyprint.cassandra.model.CounterSuperSliceImpl.getColumnByName(SN)	noCall	noCall	true	789
2156.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getExecutionResult()	noCall	noCall	true	917
1826.json	me.prettyprint.cassandra.model.HCounterColumnImpl.getName()	1835.json,1837.json,1836.json	me.prettyprint.cassandra.model.HCounterColumnImpl.toString(),me.prettyprint.cassandra.model.HCounterColumnImpl.equals(java.lang.Object),me.prettyprint.cassandra.model.HCounterColumnImpl.hashCode()	true	1173
2075.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.setConfigurableConsistencyLevelPolicy(me.prettyprint.cassandra.model.ConfigurableConsistencyLevel)	noCall	noCall	true	1059
45.json	me.prettyprint.hom.CFMappingDef.getCollectionProperties()	noCall	noCall	true	679
578.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setBackOffRetryDelayInMillis(long)	noCall	noCall	true	379
1114.json	me.prettyprint.cassandra.serializers.LongSerializer.get()	1171.json,2468.json,2576.json,null,2418.json,null,1131.json,null,2369.json,1169.json,1132.json,2260.json,2469.json	me.prettyprint.cassandra.io.ChunkInputStream.fetchChunk(),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getLong(SN, N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.service.template.SuperCfUpdater.setLong(N, java.lang.Long),me.prettyprint.hom.converters.JodaTimeHectorConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[]),me.prettyprint.cassandra.serializers.DoubleSerializer.toByteBuffer(java.lang.Double),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getLong(N),me.prettyprint.cassandra.io.ChunkOutputStream.writeData(boolean),me.prettyprint.cassandra.serializers.DoubleSerializer.fromByteBuffer(java.nio.ByteBuffer),me.prettyprint.cassandra.service.HColumnFamilyImpl.getLong(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long, int)	false	1086
179.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateDerivedClassInheritance(me.prettyprint.hom.CFMappingDef<T>)	176.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
1283.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getValueSerializer()	noCall	noCall	true	1118
2196.json	me.prettyprint.cassandra.service.KeyIterator.Builder.start(K)	2359.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.start(java.lang.String)	true	213
1036.json	me.prettyprint.cassandra.connection.HConnectionManager.getActivePools()	1957.json,1956.json,1959.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumBlockedThreads(),me.prettyprint.cassandra.service.CassandraClientMonitor.getNumActive(),me.prettyprint.cassandra.service.CassandraClientMonitor.getNumIdleConnections()	true	984
2719.json	me.prettyprint.cassandra.service.CassandraHost.getMaxWaitTimeWhenExhausted()	noCall	noCall	true	1216
1212.json	me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
1215.json	me.prettyprint.cassandra.locking.HLockManagerImpl.createColumnForLock(java.lang.String, java.lang.String)	1210.json	me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.lang.String)	true	379
43.json	me.prettyprint.hom.CFMappingDef.setAnonymousPropertyAddHandler(java.lang.reflect.Method)	181.json	me.prettyprint.hom.cache.AnonymousParserValidator.parseInheritanceAnnotation(me.prettyprint.hom.annotations.AnonymousPropertyHandling, me.prettyprint.hom.CFMappingDef<T>)	true	912
745.json	me.prettyprint.hector.api.ddl.ComparatorType.getByClassName(java.lang.String)	noCall	noCall	true	1005
2731.json	me.prettyprint.cassandra.service.CassandraHost.getLifo()	noCall	noCall	true	1145
2268.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setWriteConsistencyLevel(me.prettyprint.hector.api.HConsistencyLevel)	noCall	noCall	true	887
1975.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.hasNext()	noCall	noCall	true	682
1883.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getComparatorTypeAlias()	noCall	noCall	true	682
1573.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_keyspace(java.lang.String)	noCall	noCall	true	918
225.json	me.prettyprint.hom.EntityManagerImpl.getFlushMode()	noCall	noCall	true	344
1854.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setName(java.lang.String)	noCall	noCall	true	1006
1835.json	me.prettyprint.cassandra.model.HCounterColumnImpl.toString()	noCall	noCall	true	858
2431.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.countColumns(K)	2429.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.isColumnsExist(K)	true	866
1329.json	me.prettyprint.cassandra.model.MultigetCountQuery.setRange(N, N, int)	noCall	noCall	true	1054
2405.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.next()	noCall	noCall	true	866
1709.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.toString()	noCall	noCall	true	549
2435.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySingleSubColumn(K, SN, N, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	866
1798.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getSize()	noCall	noCall	true	855
574.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setRowsCacheEnabled(boolean)	noCall	noCall	true	379
20.json	me.prettyprint.hom.CFMappingDef.getAllProperties()	20.json,94.json,45.json,57.json,3.json	me.prettyprint.hom.CFMappingDef.getAllProperties(),me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.CFMappingDef.getCollectionProperties(),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T),me.prettyprint.hom.CFMappingDef.isAnyCollections()	true	954
2427.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.addToSubColumns(N, V, me.prettyprint.hector.api.Serializer<V>, int)	2419.json,2426.json,2423.json,2416.json,2421.json,2417.json,2420.json,2422.json,2418.json,2425.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setInteger(N, java.lang.Integer),me.prettyprint.cassandra.service.template.SuperCfUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>),me.prettyprint.cassandra.service.template.SuperCfUpdater.setDate(N, java.util.Date),me.prettyprint.cassandra.service.template.SuperCfUpdater.setString(N, java.lang.String),me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteArray(N, byte[]),me.prettyprint.cassandra.service.template.SuperCfUpdater.setUUID(N, java.util.UUID),me.prettyprint.cassandra.service.template.SuperCfUpdater.setBoolean(N, java.lang.Boolean),me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteBuffer(N, java.nio.ByteBuffer),me.prettyprint.cassandra.service.template.SuperCfUpdater.setLong(N, java.lang.Long),me.prettyprint.cassandra.service.template.SuperCfUpdater.setDouble(N, java.lang.Double)	true	306
1660.json	me.prettyprint.cassandra.model.thrift.ThriftColumnFactory.createColumn(N, V, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	null	me.prettyprint.cassandra.model.thrift.ThriftColumnFactory.createStringColumn(java.lang.String, java.lang.String)	true	857
933.json	me.prettyprint.cassandra.connection.LeastActiveBalancingPolicy.getPool(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	noCall	noCall	true	1021
195.json	me.prettyprint.hom.cache.ColumnParser.parse(java.lang.reflect.Field, java.lang.annotation.Annotation, java.beans.PropertyDescriptor, me.prettyprint.hom.CFMappingDef<T>)	88.json	me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>)	true	902
189.json	me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	923
1050.json	me.prettyprint.cassandra.examples.ExampleDaoV2.main(java.lang.String[])	noCall	noCall	true	1137
2758.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setMaxActive(int)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	1214
1481.json	me.prettyprint.cassandra.model.HKeyRange.toThrift()	1752.json,1700.json,1766.json,1637.json,1691.json,1767.json,1733.json,1699.json,1636.json,1692.json,1751.json,1734.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.Anonymous-d6102168-c30a-4cf5-9b50-dc61536b9dfe.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.Anonymous-956ffae1-7ffe-4c60-ad02-738cad71af0f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.Anonymous-020ad220-188d-44a4-a2e8-6d5467042b1e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.Anonymous-33d01efa-4041-4580-b42a-1a4640cec4ee.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.Anonymous-396e9f3c-3679-4a5b-ae10-92963bee8f6f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.Anonymous-5e260cce-0a7a-4a60-b94f-13312120039e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.execute()	true	1089
1566.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_update_keyspace()	noCall	noCall	true	918
2708.json	me.prettyprint.cassandra.service.CassandraHost.getUrl()	851.json	me.prettyprint.cassandra.connection.client.HThriftClient.toString()	true	1216
1992.json	me.prettyprint.cassandra.service.JmxMonitor.getCassandraMonitor(me.prettyprint.cassandra.connection.HConnectionManager)	noCall	noCall	true	1260
2358.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.toString()	noCall	noCall	true	1259
1167.json	me.prettyprint.cassandra.io.ChunkOutputStream.close()	noCall	noCall	true	901
1120.json	me.prettyprint.cassandra.serializers.AbstractSerializer.fromBytes(byte[])	1926.json,null,117.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy(),me.prettyprint.hom.converters.JodaTimeHectorConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[]),me.prettyprint.hom.CollectionMapperHelper.deserializeCollectionValue(byte[])	true	985
1797.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.setSubcolumns(java.util.List<me.prettyprint.hector.api.beans.HCounterColumn<N>>)	noCall	noCall	true	855
571.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getLockManagerCF()	1188.json,1213.json,1211.json,1212.json,1189.json,1210.json	me.prettyprint.cassandra.locking.AbstractLockManager.createColumnFamilyDefinition(),me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock, java.lang.String),me.prettyprint.cassandra.locking.HLockManagerImpl.deleteLock(me.prettyprint.hector.api.locking.HLock),me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock),me.prettyprint.cassandra.locking.AbstractLockManager.doesLockCFExist(me.prettyprint.hector.api.ddl.KeyspaceDefinition),me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.lang.String)	true	379
1872.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMemtableFlushAfterMins(int)	noCall	noCall	true	920
108.json	me.prettyprint.hom.EntityManagerConfigurator.getCassandraHostConfigurator()	noCall	noCall	true	941
1991.json	me.prettyprint.cassandra.service.JmxMonitor.getContextPath()	1990.json	me.prettyprint.cassandra.service.JmxMonitor.getUniqueClassloaderIdentifier()	true	1259
384.json	me.prettyprint.hector.api.factory.HFactory.createColumnFamilyDefinition(java.lang.String, java.lang.String, me.prettyprint.hector.api.ddl.ComparatorType)	1188.json	me.prettyprint.cassandra.locking.AbstractLockManager.createColumnFamilyDefinition()	true	973
141.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.setDelimiter(byte[])	noCall	noCall	true	909
101.json	me.prettyprint.hom.PropertyMappingDefinition.getConverter()	52.json,61.json,69.json,53.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.createBytesFromPropertyValue(java.lang.Object, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.setPropertyUsingColumn(T, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>)	true	954
1655.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setColumnNames(N...)	noCall	noCall	true	834
2485.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite, int)	noCall	noCall	true	0
1559.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_remove_counter()	noCall	noCall	true	730
2814.json	me.prettyprint.cassandra.service.MultigetSliceIterator.remove()	noCall	noCall	true	129
958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	noCall	noCall	true	1021
499.json	me.prettyprint.hector.api.beans.AbstractComposite.size()	noCall	noCall	true	860
579.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getKeyspaceName()	noCall	noCall	true	379
2272.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.maybeExecuteSlice(N)	2271.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.extractColumnValue(N, me.prettyprint.hector.api.Serializer<V>)	true	892
1539.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_cluster_name()	noCall	noCall	true	918
2678.json	me.prettyprint.cassandra.service.AbstractCluster.getKnownPoolHosts(boolean)	noCall	noCall	true	1118
1287.json	me.prettyprint.cassandra.model.SuperSliceImpl.toString()	noCall	noCall	true	1101
2420.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setBoolean(N, java.lang.Boolean)	noCall	noCall	true	866
1025.json	me.prettyprint.cassandra.connection.HConnectionManager.setTimer(me.prettyprint.cassandra.connection.HOpTimer)	noCall	noCall	true	753
33.json	me.prettyprint.hom.CFMappingDef.isNonPersistableDerivedEntity()	176.json,34.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.isDerivedEntity()	true	679
736.json	me.prettyprint.hector.api.ddl.ColumnType.getFromValue(java.lang.String)	noCall	noCall	true	1014
37.json	me.prettyprint.hom.CFMappingDef.getAnonymousPropertyAddHandler()	37.json,73.json	me.prettyprint.hom.CFMappingDef.getAnonymousPropertyAddHandler(),me.prettyprint.hom.HectorObjectMapper.addToExtraIfCan(java.lang.Object, me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>)	true	912
1546.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_splits()	noCall	noCall	true	918
1247.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(byte[])	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	693
1753.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.toString()	noCall	noCall	true	1093
2249.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setFinish(N)	noCall	noCall	true	892
2576.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getLong(SN, N)	noCall	noCall	true	847
2659.json	me.prettyprint.cassandra.service.ThriftCfDef.isReplicateOnWrite()	noCall	noCall	true	789
2388.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.sliceInternal(K, me.prettyprint.cassandra.model.HSlicePredicate<N>)	2380.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteSlice(K, me.prettyprint.cassandra.model.HSlicePredicate<N>)	true	861
2369.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getLong(N)	noCall	noCall	true	866
1444.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.addGteExpression(N, V)	noCall	noCall	true	1029
1572.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_cluster_name()	noCall	noCall	true	918
1494.json	me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	853
379.json	me.prettyprint.hector.api.factory.HFactory.createCounterColumn(java.lang.String, long)	2066.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumn(java.lang.String, long)	true	854
118.json	me.prettyprint.hom.CollectionMapperHelper.CollectionItemColName.getPropertyName()	115.json	me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	true	679
743.json	me.prettyprint.hector.api.ddl.ComparatorType.getClassName()	1188.json,null	me.prettyprint.cassandra.locking.AbstractLockManager.createColumnFamilyDefinition(),me.prettyprint.cassandra.service.ThriftCfDef.toThrift()	true	1005
2535.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K)	noCall	noCall	true	866
1282.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getSuperNameSerializer()	noCall	noCall	true	1118
585.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getMaxSelectSize()	noCall	noCall	true	263
29.json	me.prettyprint.hom.CFMappingDef.isAbstract()	2.json,31.json,32.json,178.json,33.json	me.prettyprint.hom.CFMappingDef.isColumnSliceRequired(),me.prettyprint.hom.CFMappingDef.isPersistableEntity(),me.prettyprint.hom.CFMappingDef.isPersistableDerivedEntity(),me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.isNonPersistableDerivedEntity()	true	679
1895.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMinCompactionThreshold()	noCall	noCall	true	1014
112.json	me.prettyprint.hom.CollectionMapperHelper.createCollectionInfoColValue(java.util.Collection<java.lang.Object>)	60.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	679
2480.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer)	noCall	noCall	true	851
2714.json	me.prettyprint.cassandra.service.CassandraHost.toString()	1955.json,2817.json,1961.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getExhaustedPoolNames(),me.prettyprint.cassandra.service.MultigetSliceIterator.getHostsUsed(),me.prettyprint.cassandra.service.CassandraClientMonitor.getKnownHosts()	true	1216
1948.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getReadSuccess()	noCall	noCall	true	1259
994.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.remove(java.lang.String)	1027.json	me.prettyprint.cassandra.connection.HConnectionManager.removeListener(java.lang.String)	true	466
1556.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_multiget_count()	noCall	noCall	true	918
1151.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.toByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	1122
1710.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setColumnNames(N...)	noCall	noCall	true	549
376.json	me.prettyprint.hector.api.factory.HFactory.createColumn(N, V, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	null,null,1169.json,62.json,1041.json,null	me.prettyprint.hector.api.factory.HFactory.createStringColumn(java.lang.String, java.lang.String),me.prettyprint.hom.HectorObjectMapper.addAnonymousProperties(T, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>>),me.prettyprint.cassandra.io.ChunkOutputStream.writeData(boolean),me.prettyprint.hom.HectorObjectMapper.createHColumn(java.lang.String, byte[]),me.prettyprint.cassandra.dao.SimpleCassandraDao.insert(java.lang.String, java.lang.String, java.lang.String),me.prettyprint.cassandra.examples.ExampleDaoV2.insert(K, java.lang.String, me.prettyprint.hector.api.Serializer<K>)	true	1137
1812.json	me.prettyprint.cassandra.model.AbstractSubColumnQuery.setColumn(N)	noCall	noCall	true	1072
59.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	57.json	me.prettyprint.hom.HectorObjectMapper.createColumnMap(T)	true	954
1280.json	me.prettyprint.cassandra.model.HSuperColumnImpl.toThriftColumn()	1279.json	me.prettyprint.cassandra.model.HSuperColumnImpl.toThrift()	true	1119
1672.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.toString()	noCall	noCall	true	1096
1504.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1046
1293.json	me.prettyprint.cassandra.model.AbstractColumnQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1059
2047.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	2064.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperSliceQuery()	true	1059
96.json	me.prettyprint.hom.PropertyMappingDefinition.getCollectionType()	noCall	noCall	true	679
2736.json	me.prettyprint.cassandra.service.CassandraHost.setMaxConnectTimeMillis(long)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	193
2439.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(java.util.List<K>)	noCall	noCall	true	847
2669.json	me.prettyprint.cassandra.service.ThriftCfDef.getMergeShardsChance()	noCall	noCall	true	584
113.json	me.prettyprint.hom.CollectionMapperHelper.parseCollectionInfoColValue(byte[])	114.json	me.prettyprint.hom.CollectionMapperHelper.instantiateCollection(java.lang.Object, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition)	true	679
31.json	me.prettyprint.hom.CFMappingDef.isPersistableEntity()	94.json,189.json	me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	679
2545.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(java.lang.Iterable<K>, java.util.List<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, V>)	noCall	noCall	true	861
1196.json	me.prettyprint.cassandra.locking.AbstractLockManager.setLockManagerConfigurator(me.prettyprint.hector.api.locking.HLockManagerConfigurator)	noCall	noCall	true	379
1479.json	me.prettyprint.cassandra.model.HKeyRange.getRowCount()	1747.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.getRowCount()	true	357
1305.json	me.prettyprint.cassandra.model.HColumnImpl.getNameSerializer()	noCall	noCall	true	1125
1751.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.Anonymous-5e260cce-0a7a-4a60-b94f-13312120039e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1093
522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	531.json,491.json,1096.json,1058.json,461.json,530.json,460.json	me.prettyprint.hector.api.beans.DynamicComposite.toByteBuffer(java.util.List<?>),me.prettyprint.hector.api.beans.AbstractComposite.compareTo(me.prettyprint.hector.api.beans.AbstractComposite),me.prettyprint.cassandra.serializers.CompositeSerializer.toByteBuffer(me.prettyprint.hector.api.beans.Composite),me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.toByteBuffer(me.prettyprint.hector.api.beans.DynamicComposite),me.prettyprint.hector.api.beans.Composite.toByteBuffer(java.util.List<?>),me.prettyprint.hector.api.beans.DynamicComposite.toByteBuffer(java.lang.Object...),me.prettyprint.hector.api.beans.Composite.toByteBuffer(java.lang.Object...)	true	860
1969.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getSuspendedCassandraHosts()	noCall	noCall	true	899
493.json	me.prettyprint.hector.api.beans.AbstractComposite.serializerForComparator(java.lang.String)	495.json	me.prettyprint.hector.api.beans.AbstractComposite.getSerializer(int, java.lang.String)	true	860
2806.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setMaxConnectTimeMillis(long)	noCall	noCall	true	193
875.json	me.prettyprint.cassandra.connection.MetricsOpTimer.start(java.lang.String)	noCall	noCall	true	455
1459.json	me.prettyprint.cassandra.model.ExecutionResult.getExecutionTimeMicro()	1461.json	me.prettyprint.cassandra.model.ExecutionResult.formatMessage(java.lang.String, java.lang.String)	true	1125
2425.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setDouble(N, java.lang.Double)	noCall	noCall	true	866
156.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getJarFileUrls()	noCall	noCall	true	344
1842.json	me.prettyprint.cassandra.model.HSlicePredicate.setStartOn(N)	2251.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setStart(N)	true	887
852.json	me.prettyprint.cassandra.connection.client.HThriftClient.equals(java.lang.Object)	noCall	noCall	true	1016
1427.json	me.prettyprint.cassandra.model.ExecutingKeyspace.getKeyspaceName()	noCall	noCall	true	916
1680.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setColumnNames(N...)	noCall	noCall	true	1044
1888.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getKeyCacheSize()	noCall	noCall	true	1014
1130.json	me.prettyprint.cassandra.serializers.DoubleSerializer.get()	2475.json,2258.json,2578.json,null,null,2425.json,2474.json,2372.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double, int),me.prettyprint.cassandra.service.HColumnFamilyImpl.getDouble(N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDouble(SN, N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.SuperCfUpdater.setDouble(N, java.lang.Double),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDouble(N)	true	1016
1021.json	me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	2289.json,null,null,null,null,null,2682.json,2146.json,1342.json,null,2684.json,2137.json,1434.json,2686.json,2688.json,2700.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>),me.prettyprint.cassandra.service.ThriftCluster.updateKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.ThriftCluster.addKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.dropColumnFamily(java.lang.String, java.lang.String, boolean),me.prettyprint.cassandra.service.AbstractCluster.describePartitioner(),me.prettyprint.cassandra.service.ThriftCluster.addColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspaces(),me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>),me.prettyprint.cassandra.service.AbstractCluster.dropKeyspace(java.lang.String, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeClusterName(),me.prettyprint.cassandra.service.ThriftCluster.describeSchemaVersions(),me.prettyprint.cassandra.model.ExecutingKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>),me.prettyprint.cassandra.service.AbstractCluster.describeThriftVersion(),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspace(java.lang.String),me.prettyprint.cassandra.service.AbstractCluster.truncate(java.lang.String, java.lang.String)	true	1021
1239.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.getBufferWithCapacity(int)	1243.json,1248.json,1246.json,1245.json,1242.json,1244.json,1241.json,1240.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeInt(int),me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(byte[], int, int),me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeDouble(double),me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeLong(long),me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeChar(char),me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeFloat(float),me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeShort(short),me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(int)	true	860
1744.json	me.prettyprint.cassandra.model.thrift.AbstractThriftCountQuery.countColumns()	1662.json,1683.json	me.prettyprint.cassandra.model.thrift.ThriftSuperCountQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftCountQuery.execute()	true	1078
358.json	me.prettyprint.hector.api.factory.HFactory.createRangeSlicesCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	789
1961.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getKnownHosts()	noCall	noCall	true	1259
1137.json	me.prettyprint.cassandra.serializers.BigIntegerSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	864
988.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onSuspendHost(me.prettyprint.cassandra.service.CassandraHost, boolean)	noCall	noCall	true	466
2782.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getAutoDiscoveryDelayInSeconds()	noCall	noCall	true	988
1387.json	me.prettyprint.cassandra.model.MutatorImpl.addCounterDeletion(K, java.lang.String)	noCall	noCall	true	853
1043.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.getMulti(java.lang.String, java.lang.String...)	noCall	noCall	true	1084
138.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.split(byte[])	noCall	noCall	true	909
2155.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getResult()	noCall	noCall	true	917
1375.json	me.prettyprint.cassandra.model.MutatorImpl.toString()	noCall	noCall	true	1125
326.json	me.prettyprint.hector.api.factory.HFactory.getCluster(java.lang.String)	942.json,897.json	me.prettyprint.cassandra.connection.NodeDiscovery.discoverNodes(),me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	true	1135
103.json	me.prettyprint.hom.PropertyMappingDefinition.isDefaultConverter()	null	me.prettyprint.hom.cache.ColumnParser.processColumnCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Column, java.beans.PropertyDescriptor, me.prettyprint.hom.CFMappingDef<?>)	true	646
2527.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.setBatched(boolean)	noCall	noCall	true	866
2270.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getHostUsed()	noCall	noCall	true	877
2069.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HCounterColumn<N>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	14
161.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getValidationMode()	noCall	noCall	true	344
1442.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.addEqualsExpression(N, V)	noCall	noCall	true	1078
991.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onRemoveHost(me.prettyprint.cassandra.service.CassandraHost, boolean, java.lang.String)	noCall	noCall	true	466
2577.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getFloat(SN, N)	noCall	noCall	true	328
1279.json	me.prettyprint.cassandra.model.HSuperColumnImpl.toThrift()	null	me.prettyprint.cassandra.model.MutatorImpl.addInsertion(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>)	true	1119
1817.json	me.prettyprint.cassandra.model.AbstractSubColumnQuery.execute()	noCall	noCall	true	1072
1724.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.Anonymous-68e7992b-916d-44d6-a744-1bff1dc8e077.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	789
54.json	me.prettyprint.hom.HectorObjectMapper.callMethodAndConvertToCassandraType(java.lang.Object, java.lang.reflect.Method, me.prettyprint.hom.converters.Converter)	52.json,53.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>)	true	909
1869.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setRowCacheSavePeriodInSeconds(int)	noCall	noCall	true	920
1143.json	me.prettyprint.cassandra.serializers.JaxbSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	898
151.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getPersistenceProviderClassName()	noCall	noCall	true	344
2452.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.update()	2445.json,2531.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.update(me.prettyprint.cassandra.service.template.SuperCfUpdater<K, SN, N>),me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.update(me.prettyprint.cassandra.service.template.ColumnFamilyUpdater<K, N>)	true	851
2597.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setClock(java.lang.Long)	noCall	noCall	true	866
222.json	me.prettyprint.hom.EntityManagerImpl.getReference(java.lang.Class<T>, java.lang.Object)	noCall	noCall	true	344
150.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getPersistenceUnitName()	noCall	noCall	true	344
1841.json	me.prettyprint.cassandra.model.HSlicePredicate.setKeysOnlyPredicate()	1774.json,null,1775.json	me.prettyprint.cassandra.model.AbstractSliceQuery.setColumnNames(N...),me.prettyprint.cassandra.model.AbstractSliceQuery.setReturnKeysOnly(),me.prettyprint.cassandra.model.AbstractSliceQuery.setColumnNames(java.util.Collection<N>)	true	1054
1663.json	me.prettyprint.cassandra.model.thrift.ThriftSuperCountQuery.toString()	noCall	noCall	true	1078
1164.json	me.prettyprint.cassandra.serializers.StringSerializer.fromByteBuffer(java.nio.ByteBuffer)	2368.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getString(N)	true	1132
1894.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMaxCompactionThreshold()	noCall	noCall	true	1014
1852.json	me.prettyprint.cassandra.model.HSlicePredicate.formatPredicate()	null	me.prettyprint.cassandra.model.HSlicePredicate.toString()	true	887
1865.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setDefaultValidationClass(java.lang.String)	noCall	noCall	true	1006
1537.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_add()	noCall	noCall	true	730
1460.json	me.prettyprint.cassandra.model.ExecutionResult.toString()	noCall	noCall	true	1125
2626.json	me.prettyprint.cassandra.service.ThriftCfDef.getKeyValidationClass()	noCall	noCall	true	790
938.json	me.prettyprint.cassandra.connection.RoundRobinBalancingPolicy.getPoolSafely(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>)	937.json	me.prettyprint.cassandra.connection.RoundRobinBalancingPolicy.getPool(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	true	878
5.json	me.prettyprint.hom.CFMappingDef.getPropMapByPropName(java.lang.String)	noCall	noCall	true	954
1763.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setKeys(K, K)	noCall	noCall	true	549
1600.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_truncate(java.lang.String)	noCall	noCall	true	918
1787.json	me.prettyprint.cassandra.model.RowsImpl.iterator()	noCall	noCall	true	1108
1155.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>)	noCall	noCall	true	993
1315.json	me.prettyprint.cassandra.model.CounterSuperRowsImpl.getByKey(K)	noCall	noCall	true	789
1082.json	me.prettyprint.cassandra.serializers.FloatTypeSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	286
1873.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setReplicateOnWrite(boolean)	noCall	noCall	true	789
2698.json	me.prettyprint.cassandra.service.AbstractCluster.getCredentials()	null,null,null,2135.json,null,null,2682.json,2146.json,null,2684.json,2137.json,2686.json,2688.json,2700.json	me.prettyprint.cassandra.service.ThriftCluster.updateKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.ThriftCluster.addKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.dropColumnFamily(java.lang.String, java.lang.String, boolean),me.prettyprint.cassandra.service.ThriftCluster.describeRing(java.lang.String),me.prettyprint.cassandra.service.AbstractCluster.describePartitioner(),me.prettyprint.cassandra.service.ThriftCluster.addColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspaces(),me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.AbstractCluster.dropKeyspace(java.lang.String, boolean),me.prettyprint.cassandra.service.AbstractCluster.describeClusterName(),me.prettyprint.cassandra.service.ThriftCluster.describeSchemaVersions(),me.prettyprint.cassandra.service.AbstractCluster.describeThriftVersion(),me.prettyprint.cassandra.service.AbstractCluster.describeKeyspace(java.lang.String),me.prettyprint.cassandra.service.AbstractCluster.truncate(java.lang.String, java.lang.String)	true	970
954.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.isExhausted()	noCall	noCall	true	1023
1557.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_multiget_slice()	noCall	noCall	true	918
1303.json	me.prettyprint.cassandra.model.HColumnImpl.toThrift()	1280.json,null	me.prettyprint.cassandra.model.HSuperColumnImpl.toThriftColumn(),me.prettyprint.cassandra.model.MutatorImpl.addInsertion(K, java.lang.String, me.prettyprint.hector.api.beans.HColumn<N, V>)	true	1132
1035.json	me.prettyprint.cassandra.connection.HConnectionManager.getDownedHosts()	1955.json,1958.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getExhaustedPoolNames(),me.prettyprint.cassandra.service.CassandraClientMonitor.getNumExhaustedPools()	true	1014
488.json	me.prettyprint.hector.api.beans.AbstractComposite.setComparatorsByPosition(java.util.List<java.lang.String>)	noCall	noCall	true	859
1766.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.Anonymous-d6102168-c30a-4cf5-9b50-dc61536b9dfe.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	549
1229.json	me.prettyprint.cassandra.utils.Assert.notNull(java.lang.Object, java.lang.String)	1296.json,1797.json,1796.json,1752.json,1700.json,1405.json,1823.json,1295.json,1725.json,1659.json,1744.json,1637.json,1499.json,1767.json,1621.json,1645.json,1333.json,1268.json,1708.json,1822.json,1732.json,1267.json,1671.json,1627.json,1692.json,1734.json,1765.json	me.prettyprint.cassandra.model.HColumnImpl.setValue(V),me.prettyprint.cassandra.model.HCounterSuperColumnImpl.setSubcolumns(java.util.List<me.prettyprint.hector.api.beans.HCounterColumn<N>>),me.prettyprint.cassandra.model.HCounterSuperColumnImpl.setName(SN),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.MultigetSubCountQuery.execute(),me.prettyprint.cassandra.model.HCounterColumnImpl.setValue(java.lang.Long),me.prettyprint.cassandra.model.HColumnImpl.setName(N),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftSuperColumnQuery.execute(),me.prettyprint.cassandra.model.thrift.AbstractThriftCountQuery.countColumns(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setSuperColumn(SN),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.execute(),me.prettyprint.cassandra.model.MultigetCountQuery.execute(),me.prettyprint.cassandra.model.HSuperColumnImpl.setSubcolumns(java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.execute(),me.prettyprint.cassandra.model.HCounterColumnImpl.setName(N),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setSuperColumn(SN),me.prettyprint.cassandra.model.HSuperColumnImpl.setName(SN),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String, java.nio.ByteBuffer),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setSuperColumn(SN)	true	1120
2660.json	me.prettyprint.cassandra.service.ThriftCfDef.setReplicateOnWrite(boolean)	noCall	noCall	true	789
155.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getMappingFileNames()	noCall	noCall	true	344
1967.json	me.prettyprint.cassandra.service.CassandraClientMonitor.addCassandraHost(java.lang.String)	noCall	noCall	true	916
2258.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getDouble(N)	noCall	noCall	true	892
2100.json	me.prettyprint.cassandra.service.Operation.getExecutionResult()	2156.json,1434.json,1342.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getExecutionResult(),me.prettyprint.cassandra.model.ExecutingKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>),me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>)	true	943
1376.json	me.prettyprint.cassandra.model.MutatorImpl.getPendingMutationCount()	noCall	noCall	true	481
1204.json	me.prettyprint.cassandra.locking.HLockManagerImpl.maybeSetInternalLockId(me.prettyprint.hector.api.locking.HLock)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
1415.json	me.prettyprint.cassandra.model.AbstractBasicQuery.setColumnFamily(java.lang.String)	1617.json,1721.json,1503.json,1712.json,1452.json,1513.json,1791.json,1293.json,1729.json,1675.json,1491.json,1771.json,1657.json,1682.json,1738.json,1755.json,1640.json,1696.json,1704.json,1625.json,1494.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.AbstractSuperColumnQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.AbstractColumnQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.setColumnFamily(java.lang.String)	true	1136
2191.json	me.prettyprint.cassandra.service.KeyIterator.Anonymous-1e44bbe1-5c3b-4e60-b971-d6217ec7eaf7.next()	noCall	noCall	true	872
1079.json	me.prettyprint.cassandra.serializers.AsciiSerializer.getComparatorType()	noCall	noCall	true	850
2673.json	me.prettyprint.cassandra.service.ThriftCfDef.getKeyAlias()	noCall	noCall	true	584
892.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.getDownedHosts()	1035.json	me.prettyprint.cassandra.connection.HConnectionManager.getDownedHosts()	true	1014
181.json	me.prettyprint.hom.cache.AnonymousParserValidator.parseInheritanceAnnotation(me.prettyprint.hom.annotations.AnonymousPropertyHandling, me.prettyprint.hom.CFMappingDef<T>)	180.json	me.prettyprint.hom.cache.AnonymousParserValidator.parse(me.prettyprint.hom.ClassCacheMgr, java.lang.annotation.Annotation, me.prettyprint.hom.CFMappingDef<T>)	true	637
1290.json	me.prettyprint.cassandra.model.RowImpl.toString()	noCall	noCall	true	1107
1439.json	me.prettyprint.cassandra.model.CounterSliceImpl.getColumns()	noCall	noCall	true	834
1457.json	me.prettyprint.cassandra.model.ExecutionResult.get()	noCall	noCall	true	1132
525.json	me.prettyprint.hector.api.beans.AbstractComposite.getBytes(java.nio.ByteBuffer, int)	497.json,526.json	me.prettyprint.hector.api.beans.AbstractComposite.getComparator(int, java.nio.ByteBuffer),me.prettyprint.hector.api.beans.AbstractComposite.getWithShortLength(java.nio.ByteBuffer)	true	860
198.json	me.prettyprint.hom.EntityManagerFactoryImpl.createEntityManager()	noCall	noCall	true	344
1366.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String, long)	noCall	noCall	true	909
1821.json	me.prettyprint.cassandra.model.CounterSuperRowImpl.toString()	noCall	noCall	true	789
1631.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createCounterColumn(java.lang.String, long)	noCall	noCall	true	853
192.json	me.prettyprint.hom.cache.TableParserValidator.validatePersistableDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	189.json	me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	679
228.json	me.prettyprint.hom.EntityManagerImpl.refresh(java.lang.Object)	noCall	noCall	true	344
916.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.borrowClient()	noCall	noCall	true	880
1183.json	me.prettyprint.cassandra.locking.HLockImpl.hashCode()	noCall	noCall	true	379
2055.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnPath(java.lang.String, java.nio.ByteBuffer)	2054.json,2057.json,2056.json,2058.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnPath(java.lang.String, N, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnPath(java.lang.String),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	true	1059
483.json	me.prettyprint.hector.api.beans.AbstractComposite.getSerializersByPosition()	noCall	noCall	true	859
386.json	me.prettyprint.hector.api.factory.HFactory.createClockResolution(java.lang.String)	null	me.prettyprint.cassandra.service.CassandraHostConfigurator.setClockResolution(java.lang.String)	true	955
1110.json	me.prettyprint.cassandra.serializers.IntegerSerializer.get()	2419.json,1073.json,2575.json,2370.json,2471.json,2470.json,2259.json,null,null,1093.json,1074.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setInteger(N, java.lang.Integer),me.prettyprint.cassandra.serializers.FloatSerializer.toByteBuffer(java.lang.Float),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getInteger(SN, N),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getInteger(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer),me.prettyprint.cassandra.service.HColumnFamilyImpl.getInt(N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.serializers.BigDecimalSerializer.toByteArray(java.math.BigDecimal),me.prettyprint.cassandra.serializers.FloatSerializer.fromByteBuffer(java.nio.ByteBuffer)	false	1049
478.json	me.prettyprint.hector.api.beans.AbstractComposite.getSerializerToComparatorMapping()	noCall	noCall	true	860
1.json	me.prettyprint.hom.CFMappingDef.setDefaults(java.lang.Class<T>)	noCall	noCall	true	923
1295.json	me.prettyprint.cassandra.model.HColumnImpl.setName(N)	noCall	noCall	true	1173
1218.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getUniqueTimeUUIDinMillis()	noCall	noCall	true	954
2035.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCountQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	1059
858.json	me.prettyprint.cassandra.connection.client.HThriftClient.getLastSuccessTime()	noCall	noCall	true	158
2362.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.build()	noCall	noCall	true	213
2838.json	me.prettyprint.cassandra.service.SliceCounterIterator.hasNext()	1921.json	me.prettyprint.cassandra.service.ClearCounterRow.clear()	true	339
2571.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.extractType(SN, N, me.prettyprint.hector.api.Serializer<V>)	2580.json,2575.json,2578.json,2581.json,2573.json,2576.json,2579.json,2574.json,2572.json,2577.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getUUID(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getInteger(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDouble(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteBuffer(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteArray(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getLong(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getString(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDate(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getBoolean(SN, N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getFloat(SN, N)	true	847
1027.json	me.prettyprint.cassandra.connection.HConnectionManager.removeListener(java.lang.String)	noCall	noCall	true	466
2672.json	me.prettyprint.cassandra.service.ThriftCfDef.setRowCacheProvider(java.lang.String)	noCall	noCall	true	584
77.json	me.prettyprint.hom.converters.VariableIntegerConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[])	noCall	noCall	true	544
24.json	me.prettyprint.hom.CFMappingDef.getDerivedClassMap()	63.json	me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
2375.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDate(N)	noCall	noCall	true	866
157.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getPersistenceUnitRootUrl()	noCall	noCall	true	344
252.json	me.prettyprint.hom.EntityManagerImpl.getEntityManagerFactory()	noCall	noCall	true	344
44.json	me.prettyprint.hom.CFMappingDef.isAnonymousHandlerAvailable()	2.json	me.prettyprint.hom.CFMappingDef.isColumnSliceRequired()	true	912
194.json	me.prettyprint.hom.cache.TableParserValidator.findAndSetBaseClassViaMappings(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	193.json	me.prettyprint.hom.cache.TableParserValidator.validateDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
26.json	me.prettyprint.hom.CFMappingDef.setCfSuperMapDef(me.prettyprint.hom.CFMappingDef<? super T>)	91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	true	954
1104.json	me.prettyprint.cassandra.serializers.UUIDSerializer.fromByteBuffer(java.nio.ByteBuffer)	2367.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getUUID(N)	true	1081
2741.json	me.prettyprint.cassandra.service.clock.MicrosecondsClockResolution.createClock()	noCall	noCall	true	955
1386.json	me.prettyprint.cassandra.model.MutatorImpl.addCounterDeletion(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	1382.json	me.prettyprint.cassandra.model.MutatorImpl.deleteCounter(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	true	853
535.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	noCall	noCall	true	137
2049.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>, long, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
250.json	me.prettyprint.hom.EntityManagerImpl.isOpen()	noCall	noCall	true	344
1870.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMemtableOperationsInMillions(double)	noCall	noCall	true	920
2646.json	me.prettyprint.cassandra.service.ThriftCfDef.setKeyValidationAlias(java.lang.String)	noCall	noCall	true	319
84.json	me.prettyprint.hom.ClassCacheMgr.getCfMapDef(java.lang.Class<T>, boolean)	91.json,null,null,57.json,null	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>),me.prettyprint.hom.EntityManagerImpl.find(java.lang.Class<T>, java.lang.Object),me.prettyprint.hom.EntityManagerImpl.find(java.lang.Class<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T),me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.mutation.Mutator<byte[]>, java.lang.Object)	true	954
2104.json	me.prettyprint.cassandra.service.Operation.hasException()	2159.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.hasException()	true	1259
365.json	me.prettyprint.hector.api.factory.HFactory.createCounterSliceQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	1921.json,2068.json	me.prettyprint.cassandra.service.ClearCounterRow.clear(),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	true	834
2656.json	me.prettyprint.cassandra.service.ThriftCfDef.setMemtableThroughputInMb(int)	noCall	noCall	true	789
1953.json	me.prettyprint.cassandra.service.CassandraClientMonitor.updateKnownHosts()	noCall	noCall	true	1259
2081.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.setCluster(me.prettyprint.hector.api.Cluster)	noCall	noCall	true	1059
2260.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getLong(N)	noCall	noCall	true	892
2247.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.removeKeys()	noCall	noCall	true	885
1698.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setRowCount(int)	noCall	noCall	true	789
1285.json	me.prettyprint.cassandra.model.SuperSliceImpl.getSuperColumns()	noCall	noCall	true	1101
1039.json	me.prettyprint.cassandra.connection.HConnectionManager.shutdown()	332.json	me.prettyprint.hector.api.factory.HFactory.shutdownCluster(me.prettyprint.hector.api.Cluster)	true	992
849.json	me.prettyprint.cassandra.connection.client.HThriftClient.startToUse()	noCall	noCall	true	880
747.json	me.prettyprint.hector.api.ddl.ComparatorType.equals(java.lang.Object)	noCall	noCall	true	577
1097.json	me.prettyprint.cassandra.serializers.CompositeSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	859
2150.json	me.prettyprint.cassandra.service.ThriftCluster.onStartup()	noCall	noCall	true	566
1498.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setKeys(java.util.Collection<K>)	noCall	noCall	true	865
1960.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumPools()	noCall	noCall	true	1259
1139.json	me.prettyprint.cassandra.serializers.BigIntegerSerializer.getComparatorType()	noCall	noCall	true	850
575.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getLocksTTLInMillis()	noCall	noCall	true	379
116.json	me.prettyprint.hom.CollectionMapperHelper.serializeCollectionValue(java.lang.Object)	60.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	679
1973.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumRenewedIdleConnections()	noCall	noCall	true	127
2458.json	me.prettyprint.cassandra.service.template.ThriftSuperCfTemplate.doExecuteMultigetSlice(java.util.List<K>, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	noCall	noCall	true	847
1462.json	me.prettyprint.cassandra.model.ExecutionResult.getHostUsed()	noCall	noCall	true	1083
374.json	me.prettyprint.hector.api.factory.HFactory.createColumn(N, V)	noCall	noCall	true	526
2195.json	me.prettyprint.cassandra.service.KeyIterator.iterator()	noCall	noCall	true	872
114.json	me.prettyprint.hom.CollectionMapperHelper.instantiateCollection(java.lang.Object, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition)	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	679
998.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnAllHostsDown()	896.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts()	true	466
2765.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getRetryDownedHostsQueueSize()	noCall	noCall	true	1034
2762.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getRetryDownedHosts()	noCall	noCall	true	1034
1825.json	me.prettyprint.cassandra.model.HCounterColumnImpl.getTtl()	noCall	noCall	true	858
124.json	me.prettyprint.hom.CollectionMapperHelper.CollectionInfoColValue.getCollTypeName()	114.json	me.prettyprint.hom.CollectionMapperHelper.instantiateCollection(java.lang.Object, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition)	true	679
57.json	me.prettyprint.hom.HectorObjectMapper.createColumnMap(T)	56.json	me.prettyprint.hom.HectorObjectMapper.createColumnSet(java.lang.Object)	true	954
18.json	me.prettyprint.hom.CFMappingDef.setDiscValue(java.lang.Object)	noCall	noCall	true	954
1463.json	me.prettyprint.cassandra.model.CounterRowsImpl.getByKey(K)	noCall	noCall	true	789
1541.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_keyspaces()	noCall	noCall	true	918
978.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.setUpdateInterval(int)	noCall	noCall	true	880
948.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getCassandraHost()	924.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.equals(java.lang.Object)	true	1023
2606.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteColumn(me.prettyprint.hector.api.mutation.Mutator<K>, K, N)	noCall	noCall	true	866
964.json	me.prettyprint.cassandra.connection.HostTimeoutTracker.shutdown()	1039.json	me.prettyprint.cassandra.connection.HConnectionManager.shutdown()	true	891
1380.json	me.prettyprint.cassandra.model.MutatorImpl.decrementCounter(K, java.lang.String, N, long)	noCall	noCall	true	852
232.json	me.prettyprint.hom.EntityManagerImpl.clear()	noCall	noCall	true	344
1503.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1046
1637.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.execute()	noCall	noCall	true	789
1087.json	me.prettyprint.cassandra.serializers.CharSerializer.toByteBuffer(java.lang.Character)	noCall	noCall	true	851
1159.json	me.prettyprint.cassandra.serializers.BooleanSerializer.get()	2373.json,null,2420.json,null,2477.json,2572.json,2476.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getBoolean(N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.service.template.SuperCfUpdater.setBoolean(N, java.lang.Boolean),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean, int),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getBoolean(SN, N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean)	true	1049
1981.json	me.prettyprint.cassandra.service.ColumnSliceIterator.next()	1980.json,1926.json,1984.json	me.prettyprint.cassandra.service.ColumnSliceIterator.hasNext(),me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy(),me.prettyprint.cassandra.service.ColumnSliceIterator.refresh()	true	682
1708.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.execute()	noCall	noCall	true	549
180.json	me.prettyprint.hom.cache.AnonymousParserValidator.parse(me.prettyprint.hom.ClassCacheMgr, java.lang.annotation.Annotation, me.prettyprint.hom.CFMappingDef<T>)	91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	true	637
2076.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.getReplicationStrategyClass()	noCall	noCall	true	1056
1478.json	me.prettyprint.cassandra.model.HKeyRange.setRowCount(int)	1698.json,1731.json,1635.json,1764.json,1690.json,1750.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setRowCount(int),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setRowCount(int),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setRowCount(int),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setRowCount(int),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setRowCount(int),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setRowCount(int)	true	1089
2734.json	me.prettyprint.cassandra.service.CassandraHost.setUseSocketKeepalive(boolean)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	825
1627.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String, java.nio.ByteBuffer)	1629.json,1628.json,1630.json,1626.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>),me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	true	1125
1692.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.execute()	noCall	noCall	true	1108
1740.json	me.prettyprint.cassandra.model.thrift.AbstractThriftCountQuery.setColumnFamily(java.lang.String)	1665.json,1648.json,1686.json	me.prettyprint.cassandra.model.thrift.ThriftSuperCountQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.setColumnFamily(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftCountQuery.setColumnFamily(java.lang.String)	true	1078
2200.json	me.prettyprint.cassandra.service.FailoverPolicy.shouldRetryFor(java.lang.Class<E>)	1021.json	me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	329
351.json	me.prettyprint.hector.api.factory.HFactory.createMultigetSliceCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	789
130.json	me.prettyprint.hom.KeyDefinition.addIdPropertyMap(me.prettyprint.hom.PropertyMappingDefinition)	90.json	me.prettyprint.hom.ClassCacheMgr.processIdCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Id, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, java.beans.PropertyDescriptor>)	false	910
2798.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setUseHostTimeoutTracker(boolean)	noCall	noCall	true	888
2263.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.next()	noCall	noCall	true	879
2067.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumnQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	14
495.json	me.prettyprint.hector.api.beans.AbstractComposite.getSerializer(int, java.lang.String)	523.json	me.prettyprint.hector.api.beans.AbstractComposite.deserialize(java.nio.ByteBuffer)	true	859
1056.json	me.prettyprint.cassandra.examples.ExampleClient.main(java.lang.String[])	noCall	noCall	true	1259
1062.json	me.prettyprint.cassandra.serializers.ObjectSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	1053
1880.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getColumnType()	noCall	noCall	true	1014
2819.json	me.prettyprint.cassandra.service.MultigetSliceIterator.getRowCountPerQueryUsed()	noCall	noCall	true	129
907.json	me.prettyprint.cassandra.connection.NodeAutoDiscoverService.shutdown()	1039.json	me.prettyprint.cassandra.connection.HConnectionManager.shutdown()	true	990
1381.json	me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>)	noCall	noCall	true	853
2251.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setStart(N)	noCall	noCall	true	892
1252.json	me.prettyprint.cassandra.constants.CFMetaDataDefaults.sizeMemtableOperations(int)	noCall	noCall	true	718
2468.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long)	noCall	noCall	true	866
2661.json	me.prettyprint.cassandra.service.ThriftCfDef.setKeyspaceName(java.lang.String)	noCall	noCall	true	770
2144.json	me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	noCall	noCall	true	954
97.json	me.prettyprint.hom.PropertyMappingDefinition.setCollectionType(java.lang.Class<?>)	null	me.prettyprint.hom.cache.ColumnParser.processColumnCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Column, java.beans.PropertyDescriptor, me.prettyprint.hom.CFMappingDef<?>)	true	679
2670.json	me.prettyprint.cassandra.service.ThriftCfDef.setMergeShardsChance(double)	noCall	noCall	true	584
1374.json	me.prettyprint.cassandra.model.MutatorImpl.discardPendingMutations()	noCall	noCall	true	1121
1896.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMemtableFlushAfterMins()	noCall	noCall	true	920
2197.json	me.prettyprint.cassandra.service.KeyIterator.Builder.end(K)	2360.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.end(java.lang.String)	true	213
1113.json	me.prettyprint.cassandra.serializers.IntegerSerializer.fromBytes(byte[])	noCall	noCall	true	913
531.json	me.prettyprint.hector.api.beans.DynamicComposite.toByteBuffer(java.util.List<?>)	noCall	noCall	true	849
1324.json	me.prettyprint.cassandra.model.OrderedRowsImpl.getList()	noCall	noCall	true	1132
2598.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getEffectiveClock()	noCall	noCall	true	866
2443.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.createUpdater(K, SN)	noCall	noCall	true	851
911.json	me.prettyprint.cassandra.connection.factory.HKerberosSecuredThriftClientFactoryImpl.createClient(me.prettyprint.cassandra.service.CassandraHost)	noCall	noCall	true	649
144.json	me.prettyprint.hom.CassandraPersistenceProvider.createEntityManagerFactory(java.lang.String, java.util.Map)	noCall	noCall	true	344
385.json	me.prettyprint.hector.api.factory.HFactory.createColumnFamilyDefinition(java.lang.String, java.lang.String, me.prettyprint.hector.api.ddl.ComparatorType, java.util.List<me.prettyprint.hector.api.ddl.ColumnDefinition>)	noCall	noCall	true	973
167.json	me.prettyprint.hom.ReflectionHelper.invokeGetter(java.lang.Object, me.prettyprint.hom.PropertyMappingDefinition)	61.json,60.json,115.json	me.prettyprint.hom.HectorObjectMapper.createBytesFromPropertyValue(java.lang.Object, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	true	679
1262.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.removeColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	noCall	noCall	true	1014
2267.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setReadConsistencyLevel(me.prettyprint.hector.api.HConsistencyLevel)	noCall	noCall	true	887
2781.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setAutoDiscoverHosts(boolean)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	988
1505.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnNames(N...)	noCall	noCall	true	1046
1987.json	me.prettyprint.cassandra.service.JmxMonitor.registerMonitor(java.lang.String, java.lang.String, java.lang.Object)	1992.json	me.prettyprint.cassandra.service.JmxMonitor.getCassandraMonitor(me.prettyprint.cassandra.connection.HConnectionManager)	true	1260
1259.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.setStrategyClass(java.lang.String)	noCall	noCall	true	1014
1469.json	me.prettyprint.cassandra.model.CqlQuery.setCqlVersion(java.lang.String)	noCall	noCall	true	268
1019.json	me.prettyprint.cassandra.connection.HConnectionManager.getHosts()	896.json,1015.json,1014.json,942.json,2678.json,1961.json,1960.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts(),me.prettyprint.cassandra.connection.HConnectionManager.removeCassandraHost(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.connection.NodeDiscovery.discoverNodes(),me.prettyprint.cassandra.service.AbstractCluster.getKnownPoolHosts(boolean),me.prettyprint.cassandra.service.CassandraClientMonitor.getKnownHosts(),me.prettyprint.cassandra.service.CassandraClientMonitor.getNumPools()	true	1016
1223.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeFromUUID(byte[])	noCall	noCall	true	954
490.json	me.prettyprint.hector.api.beans.AbstractComposite.setComparatorByPosition(int, java.lang.String)	noCall	noCall	true	853
460.json	me.prettyprint.hector.api.beans.Composite.toByteBuffer(java.lang.Object...)	noCall	noCall	true	850
1629.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	null,1658.json,1659.json,null	me.prettyprint.cassandra.model.MutatorImpl.subDelete(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.thrift.ThriftSuperColumnQuery.Anonymous-eaf771a5-80bd-426e-bad5-a83716221bd8.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSuperColumnQuery.execute(),me.prettyprint.cassandra.model.MutatorImpl.Anonymous-dd984a77-da1b-4867-8674-422e3c017821.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	true	1119
1092.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.toByteBuffer(java.math.BigDecimal)	noCall	noCall	true	268
1296.json	me.prettyprint.cassandra.model.HColumnImpl.setValue(V)	1310.json	me.prettyprint.cassandra.model.HColumnImpl.apply(V, long, int)	true	1173
73.json	me.prettyprint.hom.HectorObjectMapper.addToExtraIfCan(java.lang.Object, me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>)	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
2820.json	me.prettyprint.cassandra.service.MultigetSliceIterator.prepareKeysForParallelism()	noCall	noCall	true	129
518.json	me.prettyprint.hector.api.beans.AbstractComposite.get(int)	noCall	noCall	true	860
2460.json	me.prettyprint.cassandra.service.template.ThriftSuperCfTemplate.sliceInternal(K, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	2457.json	me.prettyprint.cassandra.service.template.ThriftSuperCfTemplate.doExecuteSlice(K, SN, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	true	851
2682.json	me.prettyprint.cassandra.service.AbstractCluster.describeKeyspaces()	897.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	true	1118
1373.json	me.prettyprint.cassandra.model.MutatorImpl.execute()	1382.json,1355.json,null,1381.json,null,1383.json,null,1378.json	me.prettyprint.cassandra.model.MutatorImpl.deleteCounter(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.MutatorImpl.delete(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>, long),me.prettyprint.cassandra.model.MutatorImpl.insert(K, java.lang.String, me.prettyprint.hector.api.beans.HColumn<N, V>),me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>),me.prettyprint.cassandra.model.MutatorImpl.insert(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>),me.prettyprint.cassandra.model.MutatorImpl.subDeleteCounter(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.MutatorImpl.delete(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>)	true	1125
1796.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.setName(SN)	1383.json	me.prettyprint.cassandra.model.MutatorImpl.subDeleteCounter(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	true	855
1770.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setRange(N, N, boolean, int)	noCall	noCall	true	549
947.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.shutdown()	noCall	noCall	true	1021
1882.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getSubComparatorType()	noCall	noCall	true	1014
2137.json	me.prettyprint.cassandra.service.ThriftCluster.describeSchemaVersions()	noCall	noCall	true	843
910.json	me.prettyprint.cassandra.connection.NodeAutoDiscoverService.QueryRing.run()	noCall	noCall	true	990
1737.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1045
2634.json	me.prettyprint.cassandra.service.ThriftCfDef.setComparatorTypeAlias(java.lang.String)	noCall	noCall	true	682
1400.json	me.prettyprint.cassandra.model.OrderedSuperRowsImpl.getList()	noCall	noCall	true	1089
1221.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.createTime(long)	1220.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeUUID(long)	true	954
520.json	me.prettyprint.hector.api.beans.AbstractComposite.getComponent(int)	noCall	noCall	true	859
2194.json	me.prettyprint.cassandra.service.KeyIterator.runQuery(K, K)	2193.json	me.prettyprint.cassandra.service.KeyIterator.findNext(boolean)	true	872
482.json	me.prettyprint.hector.api.beans.AbstractComposite.isDynamic()	noCall	noCall	true	859
1791.json	me.prettyprint.cassandra.model.AbstractSuperColumnQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1051
1333.json	me.prettyprint.cassandra.model.MultigetCountQuery.execute()	noCall	noCall	true	1054
1750.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setRowCount(int)	noCall	noCall	true	1093
373.json	me.prettyprint.hector.api.factory.HFactory.createColumn(N, V, long)	374.json	me.prettyprint.hector.api.factory.HFactory.createColumn(N, V)	true	526
2423.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setDate(N, java.util.Date)	noCall	noCall	true	866
1858.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setComparatorTypeAlias(java.lang.String)	noCall	noCall	true	682
2381.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteMultigetSlice(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>)	noCall	noCall	true	866
1301.json	me.prettyprint.cassandra.model.HColumnImpl.getValue()	1313.json,1314.json,1312.json	me.prettyprint.cassandra.model.HColumnImpl.hashCode(),me.prettyprint.cassandra.model.HColumnImpl.equals(java.lang.Object),me.prettyprint.cassandra.model.HColumnImpl.toString()	true	1173
2043.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createRangeSuperSlicesQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1653.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.execute()	noCall	noCall	true	834
2437.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(K, java.util.List<SN>)	noCall	noCall	true	847
1213.json	me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock, java.lang.String)	1217.json	me.prettyprint.cassandra.locking.HLockManagerImpl.Heartbeat.call()	true	264
921.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.mean()	920.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.p(double)	true	880
62.json	me.prettyprint.hom.HectorObjectMapper.createHColumn(java.lang.String, byte[])	59.json,60.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	954
1426.json	me.prettyprint.cassandra.model.ExecutingKeyspace.setConsistencyLevelPolicy(me.prettyprint.hector.api.ConsistencyLevelPolicy)	noCall	noCall	true	1136
1160.json	me.prettyprint.cassandra.serializers.BooleanSerializer.toByteBuffer(java.lang.Boolean)	noCall	noCall	true	1049
1694.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setColumnNames(SN...)	noCall	noCall	true	1045
2079.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.setReplicationFactor(int)	noCall	noCall	true	1056
2552.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.querySingleColumn(K, N, java.lang.Class<V>)	noCall	noCall	true	866
3.json	me.prettyprint.hom.CFMappingDef.isAnyCollections()	2.json,null	me.prettyprint.hom.CFMappingDef.isColumnSliceRequired(),me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.mutation.Mutator<byte[]>, java.lang.Object)	true	679
1307.json	me.prettyprint.cassandra.model.HColumnImpl.getNameBytes()	noCall	noCall	true	872
182.json	me.prettyprint.hom.cache.AnonymousParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	637
1866.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setId(int)	noCall	noCall	true	1006
924.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.equals(java.lang.Object)	noCall	noCall	true	880
1284.json	me.prettyprint.cassandra.model.HSuperColumnImpl.toString()	noCall	noCall	true	1118
238.json	me.prettyprint.hom.EntityManagerImpl.createQuery(java.lang.String)	noCall	noCall	true	344
1251.json	me.prettyprint.cassandra.utils.DaemonThreadPoolFactory.newThread(java.lang.Runnable)	noCall	noCall	true	719
2755.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.buildCassandraHosts()	noCall	noCall	true	1214
83.json	me.prettyprint.hom.ClassCacheMgr.findBaseClassViaMappings(me.prettyprint.hom.CFMappingDef<T>)	194.json,176.json	me.prettyprint.hom.cache.TableParserValidator.findAndSetBaseClassViaMappings(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
2198.json	me.prettyprint.cassandra.service.KeyIterator.Builder.maxRowCount(int)	2361.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.maxRowCount(int)	true	213
148.json	me.prettyprint.hom.CassandraPersistenceProvider.keyspace(java.lang.String, java.lang.String, java.lang.String, java.lang.String)	144.json	me.prettyprint.hom.CassandraPersistenceProvider.createEntityManagerFactory(java.lang.String, java.util.Map)	false	344
9.json	me.prettyprint.hom.CFMappingDef.getEffectiveColFamName()	190.json,null,null,86.json	me.prettyprint.hom.cache.TableParserValidator.validatePersistableEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.EntityManagerImpl.find(java.lang.Class<T>, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.mutation.Mutator<byte[]>, java.lang.Object),me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	false	923
1597.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_system_drop_keyspace(java.lang.String)	noCall	noCall	true	918
1175.json	me.prettyprint.cassandra.locking.HLockImpl.getLockId()	noCall	noCall	true	379
4.json	me.prettyprint.hom.CFMappingDef.addDerivedClassMap(me.prettyprint.hom.CFMappingDef<? extends T>)	192.json	me.prettyprint.hom.cache.TableParserValidator.validatePersistableDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	954
2095.json	me.prettyprint.cassandra.service.ThriftKsDef.isDurableWrites()	noCall	noCall	true	651
2588.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getValueSerializer(N)	noCall	noCall	true	866
2541.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(java.lang.Iterable<K>, java.util.List<N>)	noCall	noCall	true	68
912.json	me.prettyprint.cassandra.connection.factory.HThriftClientFactoryImpl.createClient(me.prettyprint.cassandra.service.CassandraHost)	noCall	noCall	true	650
1506.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setColumnNames(java.util.Collection<N>)	noCall	noCall	true	865
1682.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1044
1916.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setRowCacheKeysToSave(int)	noCall	noCall	true	584
1068.json	me.prettyprint.cassandra.serializers.TimeUUIDSerializer.getComparatorType()	noCall	noCall	true	729
1918.json	me.prettyprint.cassandra.service.ClearCounterRow.setRowKey(K)	noCall	noCall	true	261
2199.json	me.prettyprint.cassandra.service.KeyIterator.Builder.build()	noCall	noCall	true	213
162.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getProperties()	noCall	noCall	true	344
2479.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[], int)	noCall	noCall	true	306
1385.json	me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>)	1381.json	me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>)	true	853
1804.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getNameByteBuffer()	noCall	noCall	true	855
894.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.flushQueue()	noCall	noCall	true	1021
1793.json	me.prettyprint.cassandra.model.QuorumAllConsistencyLevelPolicy.get(me.prettyprint.cassandra.service.OperationType)	noCall	noCall	true	1129
210.json	me.prettyprint.hom.EntityManagerImpl.load(java.lang.Class<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	noCall	noCall	true	941
1443.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.addLteExpression(N, V)	noCall	noCall	true	1029
2068.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	14
1343.json	me.prettyprint.cassandra.model.ConfigurableConsistencyLevel.get(me.prettyprint.cassandra.service.OperationType)	noCall	noCall	true	1083
2421.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteArray(N, byte[])	noCall	noCall	true	866
102.json	me.prettyprint.hom.PropertyMappingDefinition.isCollectionType()	55.json,59.json,45.json,3.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.CFMappingDef.getCollectionProperties(),me.prettyprint.hom.CFMappingDef.isAnyCollections()	true	679
850.json	me.prettyprint.cassandra.connection.client.HThriftClient.getSinceLastUsed()	noCall	noCall	true	880
1365.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String)	noCall	noCall	true	909
1966.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumConnectionErrors()	noCall	noCall	true	1245
2540.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, java.util.List<N>)	noCall	noCall	true	782
2098.json	me.prettyprint.cassandra.service.Operation.setResult(T)	2154.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.setResult(T)	true	1260
14.json	me.prettyprint.hom.CFMappingDef.setDiscColumn(java.lang.String)	noCall	noCall	true	954
533.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>)	noCall	noCall	true	137
1901.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getKeyValidationClass()	noCall	noCall	true	790
1512.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	1045
1020.json	me.prettyprint.cassandra.connection.HConnectionManager.getStatusPerPool()	1962.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getStatisticsPerPool()	true	961
2543.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(java.lang.Iterable<K>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, V>)	noCall	noCall	true	861
1195.json	me.prettyprint.cassandra.locking.AbstractLockManager.getLockManagerConfigurator()	noCall	noCall	true	379
1875.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyCacheSavePeriodInSeconds(int)	noCall	noCall	true	861
2841.json	me.prettyprint.cassandra.service.SliceCounterIterator.refresh()	2838.json	me.prettyprint.cassandra.service.SliceCounterIterator.hasNext()	true	199
2444.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.createUpdater(K)	2443.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.createUpdater(K, SN)	true	851
74.json	me.prettyprint.hom.HectorObjectMapper.setKeyConcatStrategy(me.prettyprint.hom.KeyConcatenationStrategy)	noCall	noCall	true	909
1030.json	me.prettyprint.cassandra.connection.HConnectionManager.sleepBetweenHostSkips(me.prettyprint.cassandra.service.FailoverPolicy)	1021.json	me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	1016
2565.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getColumnValue(N)	noCall	noCall	true	847
1645.json	me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.execute()	noCall	noCall	true	1078
1905.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getCompactionStrategyOptions()	noCall	noCall	true	584
1915.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getRowCacheKeysToSave()	noCall	noCall	true	584
1648.json	me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1078
1178.json	me.prettyprint.cassandra.locking.HLockImpl.setAcquired(boolean)	1205.json,1199.json	me.prettyprint.cassandra.locking.HLockManagerImpl.release(me.prettyprint.hector.api.locking.HLock),me.prettyprint.cassandra.locking.HLockManagerImpl.setAcquired(me.prettyprint.hector.api.locking.HLock, java.util.Map<java.lang.String, java.lang.String>)	true	379
2657.json	me.prettyprint.cassandra.service.ThriftCfDef.setMemtableFlushAfterMins(int)	noCall	noCall	true	789
733.json	me.prettyprint.hector.api.exceptions.HInvalidRequestException.setWhy(java.lang.String)	null	me.prettyprint.cassandra.service.ExceptionsTranslatorImpl.translate(java.lang.Throwable)	true	1140
1119.json	me.prettyprint.cassandra.serializers.AbstractSerializer.toBytes(T)	116.json,1093.json,78.json	me.prettyprint.hom.CollectionMapperHelper.serializeCollectionValue(java.lang.Object),me.prettyprint.cassandra.serializers.BigDecimalSerializer.toByteArray(java.math.BigDecimal),me.prettyprint.hom.converters.VariableIntegerConverter.convertObjTypeToCassType(java.lang.Object)	false	985
2382.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteMultigetSlice(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, V>)	noCall	noCall	true	861
25.json	me.prettyprint.hom.CFMappingDef.getCfSuperMapDef()	83.json	me.prettyprint.hom.ClassCacheMgr.findBaseClassViaMappings(me.prettyprint.hom.CFMappingDef<T>)	true	954
2764.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setRetryDownedHostsQueueSize(int)	noCall	noCall	true	1034
2583.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getSuperColumn(SN)	noCall	noCall	true	728
1406.json	me.prettyprint.cassandra.model.BasicColumnDefinition.getName()	noCall	noCall	true	991
1073.json	me.prettyprint.cassandra.serializers.FloatSerializer.toByteBuffer(java.lang.Float)	noCall	noCall	true	851
2052.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumn(N, V, long)	noCall	noCall	true	961
1273.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getColumns()	noCall	noCall	true	1131
1047.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.setKeyspace(me.prettyprint.hector.api.Keyspace)	noCall	noCall	true	1084
581.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getReplicationFactor()	1187.json	me.prettyprint.cassandra.locking.AbstractLockManager.checkCreateLockSchema()	true	379
1454.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.getRowCount()	1975.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.hasNext()	true	584
2700.json	me.prettyprint.cassandra.service.AbstractCluster.truncate(java.lang.String, java.lang.String)	noCall	noCall	true	888
1154.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.toBytesMap(java.util.Map<java.nio.ByteBuffer, V>)	noCall	noCall	true	993
1768.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.toString()	noCall	noCall	true	549
2676.json	me.prettyprint.cassandra.service.ThriftCfDef.setRowCacheKeysToSave(int)	noCall	noCall	true	584
1501.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.execute()	noCall	noCall	true	1093
2489.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>, int)	noCall	noCall	true	851
2059.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.noNullElements(java.lang.Object...)	2057.json,2058.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	true	1059
2397.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultIterator.remove()	noCall	noCall	true	159
147.json	me.prettyprint.hom.CassandraPersistenceProvider.value(java.lang.String, java.util.Map, java.util.Properties)	144.json	me.prettyprint.hom.CassandraPersistenceProvider.createEntityManagerFactory(java.lang.String, java.util.Map)	true	344
1384.json	me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>)	1378.json	me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>)	true	853
1837.json	me.prettyprint.cassandra.model.HCounterColumnImpl.equals(java.lang.Object)	noCall	noCall	true	858
137.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.concat(java.util.List<byte[]>)	noCall	noCall	true	909
1466.json	me.prettyprint.cassandra.model.CounterRowsImpl.toString()	noCall	noCall	true	789
2664.json	me.prettyprint.cassandra.service.ThriftCfDef.setCompactionStrategy(java.lang.String)	noCall	noCall	true	584
2044.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createRangeSubSlicesQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1410.json	me.prettyprint.cassandra.model.BasicColumnDefinition.setName(java.nio.ByteBuffer)	noCall	noCall	true	991
2786.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getAutoDiscoveryDataCenters()	noCall	noCall	true	642
2064.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperSliceQuery()	noCall	noCall	true	1049
1434.json	me.prettyprint.cassandra.model.ExecutingKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>)	1474.json,1373.json	me.prettyprint.cassandra.model.CqlQuery.execute(),me.prettyprint.cassandra.model.MutatorImpl.execute()	true	943
945.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.waitForConnection()	944.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient()	true	696
1634.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setTokens(K, java.lang.String, java.lang.String)	noCall	noCall	true	75
237.json	me.prettyprint.hom.EntityManagerImpl.getProperties()	noCall	noCall	true	344
1962.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getStatisticsPerPool()	noCall	noCall	true	961
1861.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setRowCacheSize(double)	noCall	noCall	true	1006
2256.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.clear()	noCall	noCall	true	885
1681.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1044
1453.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setRowCount(int)	noCall	noCall	true	970
1957.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumBlockedThreads()	noCall	noCall	true	1259
2654.json	me.prettyprint.cassandra.service.ThriftCfDef.getKeyCacheSavePeriodInSeconds()	noCall	noCall	true	861
494.json	me.prettyprint.hector.api.beans.AbstractComposite.serializerForPosition(int)	517.json,522.json,495.json,500.json	me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object),me.prettyprint.hector.api.beans.AbstractComposite.serialize(),me.prettyprint.hector.api.beans.AbstractComposite.getSerializer(int, java.lang.String),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	true	859
1857.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setSubComparatorType(me.prettyprint.hector.api.ddl.ComparatorType)	noCall	noCall	true	1006
2794.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setHostTimeoutSuspensionDurationInSeconds(int)	noCall	noCall	true	891
28.json	me.prettyprint.hom.CFMappingDef.toString()	9.json	me.prettyprint.hom.CFMappingDef.getEffectiveColFamName()	true	923
2574.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDate(SN, N)	noCall	noCall	true	847
2795.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getHostTimeoutUnsuspendCheckDelay()	noCall	noCall	true	891
2276.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteSlice()	2272.json,2255.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.maybeExecuteSlice(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getColumns()	true	892
934.json	me.prettyprint.cassandra.connection.LeastActiveBalancingPolicy.ShufflingCompare.compare(me.prettyprint.cassandra.connection.HClientPool, me.prettyprint.cassandra.connection.HClientPool)	noCall	noCall	true	1021
2732.json	me.prettyprint.cassandra.service.CassandraHost.setLifo(boolean)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	1145
2793.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getHostTimeoutSuspensionDurationInSeconds()	noCall	noCall	true	891
1622.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.toString()	noCall	noCall	true	1107
2274.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.applyResultStatus(long, me.prettyprint.cassandra.service.CassandraHost)	2276.json,2278.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteSlice(),me.prettyprint.cassandra.service.HColumnFamilyImpl.doExecuteMultigetSlice()	false	877
1612.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.Anonymous-16c1f080-fee2-4f4b-b1c5-561e56e37bba.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	789
95.json	me.prettyprint.hom.ClassCacheMgr.findAnnotatedMethod(java.lang.Class<?>, java.lang.Class<? extends java.lang.annotation.Annotation>)	noCall	noCall	true	954
1673.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setColumnNames(N...)	noCall	noCall	true	1045
2361.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.maxRowCount(int)	noCall	noCall	true	213
1368.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(java.lang.Iterable<K>, java.lang.String, long)	1367.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(java.lang.Iterable<K>, java.lang.String)	true	701
517.json	me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object)	noCall	noCall	true	860
989.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onUnSuspendHost(me.prettyprint.cassandra.service.CassandraHost, boolean)	noCall	noCall	true	466
513.json	me.prettyprint.hector.api.beans.AbstractComposite.remove(int)	noCall	noCall	true	860
511.json	me.prettyprint.hector.api.beans.AbstractComposite.addAll(int, java.util.Collection<? extends java.lang.Object>)	noCall	noCall	true	848
1240.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(int)	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	860
1084.json	me.prettyprint.cassandra.serializers.BytesArraySerializer.toByteBuffer(byte[])	noCall	noCall	true	993
996.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnHostDown(me.prettyprint.cassandra.service.CassandraHost)	1034.json	me.prettyprint.cassandra.connection.HConnectionManager.markHostAsDown(me.prettyprint.cassandra.service.CassandraHost)	true	466
1764.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setRowCount(int)	noCall	noCall	true	549
1636.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.Anonymous-396e9f3c-3679-4a5b-ae10-92963bee8f6f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	789
1919.json	me.prettyprint.cassandra.service.ClearCounterRow.setMutateInterval(int)	noCall	noCall	true	261
1378.json	me.prettyprint.cassandra.model.MutatorImpl.insertCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>)	1379.json	me.prettyprint.cassandra.model.MutatorImpl.incrementCounter(K, java.lang.String, N, long)	true	853
1757.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setReturnKeysOnly()	noCall	noCall	true	964
200.json	me.prettyprint.hom.EntityManagerFactoryImpl.getCriteriaBuilder()	noCall	noCall	true	344
1486.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.execute()	noCall	noCall	true	789
744.json	me.prettyprint.hector.api.ddl.ComparatorType.getTypeName()	493.json,522.json,497.json,492.json	me.prettyprint.hector.api.beans.AbstractComposite.serializerForComparator(java.lang.String),me.prettyprint.hector.api.beans.AbstractComposite.serialize(),me.prettyprint.hector.api.beans.AbstractComposite.getComparator(int, java.nio.ByteBuffer),me.prettyprint.hector.api.beans.AbstractComposite.comparatorForSerializer(me.prettyprint.hector.api.Serializer<?>)	true	859
2491.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setColumn(me.prettyprint.hector.api.beans.HColumn<N, V>)	noCall	noCall	true	780
2105.json	me.prettyprint.cassandra.service.Operation.getException()	2160.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getException()	true	1259
1732.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setSuperColumn(SN)	noCall	noCall	true	1089
2160.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getException()	noCall	noCall	true	917
1925.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.setMutateInterval(int)	noCall	noCall	true	340
1241.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeShort(short)	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	860
1000.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnUnSuspendHost(me.prettyprint.cassandra.service.CassandraHost, boolean)	1017.json	me.prettyprint.cassandra.connection.HConnectionManager.unsuspendCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	466
2415.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N)	noCall	noCall	true	866
55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	47.json,null	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I),me.prettyprint.hom.EntityManagerImpl.find(java.lang.Class<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
931.json	me.prettyprint.cassandra.connection.security.KerberosHelper.getSourcePrinciple(org.ietf.jgss.GSSContext)	noCall	noCall	true	649
1152.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.toBytesList(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	993
2833.json	me.prettyprint.cassandra.service.RangeSlicesIterator.remove()	noCall	noCall	true	357
1777.json	me.prettyprint.cassandra.model.AbstractSliceQuery.getColumnNames()	noCall	noCall	true	1072
1344.json	me.prettyprint.cassandra.model.ConfigurableConsistencyLevel.get(me.prettyprint.cassandra.service.OperationType, java.lang.String)	noCall	noCall	true	1083
1980.json	me.prettyprint.cassandra.service.ColumnSliceIterator.hasNext()	1983.json,1926.json	me.prettyprint.cassandra.service.ColumnSliceIterator.peek(),me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	true	682
1266.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.setDurableWrites(boolean)	noCall	noCall	true	651
178.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>)	177.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateBaseClassInheritance(me.prettyprint.hom.CFMappingDef<T>)	true	923
92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	86.json	me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	true	923
2151.json	me.prettyprint.cassandra.service.ThriftCluster.toThriftImplementation(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	null,2146.json	me.prettyprint.cassandra.service.ThriftCluster.addColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean),me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean)	false	678
1922.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.setColumnFamily(java.lang.String)	noCall	noCall	true	340
950.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getNumActive()	958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	true	1023
1662.json	me.prettyprint.cassandra.model.thrift.ThriftSuperCountQuery.execute()	noCall	noCall	true	1078
986.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onHostRestored(me.prettyprint.cassandra.service.CassandraHost)	noCall	noCall	true	466
2280.json	me.prettyprint.cassandra.service.BatchSizeHint.getNumOfColumns()	noCall	noCall	false	718
2408.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.hasResults()	noCall	noCall	true	846
134.json	me.prettyprint.hom.KeyDefinition.getPropertyDescriptorMap()	52.json,68.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	true	909
2066.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumn(java.lang.String, long)	noCall	noCall	true	14
2395.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultIterator.setRes(me.prettyprint.cassandra.service.template.ColumnFamilyResult<?, ?>)	noCall	noCall	true	159
2816.json	me.prettyprint.cassandra.service.MultigetSliceIterator.getTotalExecutionTimeNano()	noCall	noCall	true	129
1552.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_get_range_slices()	noCall	noCall	true	918
506.json	me.prettyprint.hector.api.beans.AbstractComposite.flatten(java.util.Collection<?>)	510.json,508.json,511.json,507.json,506.json,509.json	me.prettyprint.hector.api.beans.AbstractComposite.retainAll(java.util.Collection<?>),me.prettyprint.hector.api.beans.AbstractComposite.containsAll(java.util.Collection<?>),me.prettyprint.hector.api.beans.AbstractComposite.addAll(int, java.util.Collection<? extends java.lang.Object>),me.prettyprint.hector.api.beans.AbstractComposite.addAll(java.util.Collection<? extends java.lang.Object>),me.prettyprint.hector.api.beans.AbstractComposite.flatten(java.util.Collection<?>),me.prettyprint.hector.api.beans.AbstractComposite.removeAll(java.util.Collection<?>)	true	848
514.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>)	noCall	noCall	true	853
1819.json	me.prettyprint.cassandra.model.CounterSuperRowImpl.getKey()	noCall	noCall	true	789
1959.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumIdleConnections()	noCall	noCall	true	1259
1016.json	me.prettyprint.cassandra.connection.HConnectionManager.suspendCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	1029.json,1970.json,961.json	me.prettyprint.cassandra.connection.HConnectionManager.doTimeoutCheck(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.service.CassandraClientMonitor.suspendCassandraHost(java.lang.String),me.prettyprint.cassandra.connection.HostTimeoutTracker.checkTimeout(me.prettyprint.cassandra.service.CassandraHost)	true	899
190.json	me.prettyprint.hom.cache.TableParserValidator.validatePersistableEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	189.json	me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
1717.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.toString()	noCall	noCall	true	1094
1702.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setColumnNames(SN...)	noCall	noCall	true	789
2039.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createMultigetSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
2072.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.getKeyspace()	noCall	noCall	true	1059
1233.json	me.prettyprint.cassandra.utils.StringUtils.string(byte[])	noCall	noCall	true	1263
2523.json	me.prettyprint.cassandra.service.template.IndexedSlicesPredicate.startKey(K)	noCall	noCall	true	645
999.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnSuspendHost(me.prettyprint.cassandra.service.CassandraHost, boolean)	1016.json	me.prettyprint.cassandra.connection.HConnectionManager.suspendCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	466
2754.json	me.prettyprint.cassandra.service.BatchMutation.getSize()	1376.json	me.prettyprint.cassandra.model.MutatorImpl.getPendingMutationCount()	true	481
1669.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setSuperColumn(SN)	noCall	noCall	true	1096
1954.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumPoolExhaustedEventCount()	noCall	noCall	true	1259
229.json	me.prettyprint.hom.EntityManagerImpl.refresh(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>)	noCall	noCall	true	344
2041.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createMultigetSubSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	1048.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)	true	871
1863.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setReadRepairChance(double)	noCall	noCall	true	1006
1316.json	me.prettyprint.cassandra.model.CounterSuperRowsImpl.getCount()	noCall	noCall	true	789
481.json	me.prettyprint.hector.api.beans.AbstractComposite.setAliasesToComparatorMapping(java.util.Map<java.lang.Byte, java.lang.String>)	noCall	noCall	true	860
1802.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getNameSerializer()	noCall	noCall	true	855
1306.json	me.prettyprint.cassandra.model.HColumnImpl.getValueSerializer()	noCall	noCall	true	1125
2036.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperCountQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>)	noCall	noCall	true	1059
985.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onHostDown(me.prettyprint.cassandra.service.CassandraHost)	noCall	noCall	true	466
2411.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.addSuperColumn(SN)	2443.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.createUpdater(K, SN)	true	851
1828.json	me.prettyprint.cassandra.model.HCounterColumnImpl.toThrift()	1384.json,1806.json	me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>),me.prettyprint.cassandra.model.HCounterSuperColumnImpl.toThriftColumn()	true	1132
735.json	me.prettyprint.hector.api.ddl.ColumnType.getValue()	736.json,null	me.prettyprint.hector.api.ddl.ColumnType.getFromValue(java.lang.String),me.prettyprint.cassandra.service.ThriftCfDef.toThrift()	true	1014
242.json	me.prettyprint.hom.EntityManagerImpl.createNamedQuery(java.lang.String, java.lang.Class<T>)	noCall	noCall	true	344
2642.json	me.prettyprint.cassandra.service.ThriftCfDef.addColumnDefinition(me.prettyprint.hector.api.ddl.ColumnDefinition)	noCall	noCall	true	770
1271.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getSize()	noCall	noCall	true	1131
2738.json	me.prettyprint.cassandra.service.CassandraHost.setMaxLastSuccessTimeMillis(long)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	158
1214.json	me.prettyprint.cassandra.locking.HLockManagerImpl.getResults(me.prettyprint.hector.api.query.QueryResult<me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, java.lang.String>>)	1213.json,1212.json	me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock, java.lang.String),me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock)	true	264
1088.json	me.prettyprint.cassandra.serializers.CharSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	851
1979.json	me.prettyprint.cassandra.service.ColumnSliceIterator.setFilter(me.prettyprint.cassandra.service.template.SliceFilter<me.prettyprint.hector.api.beans.HColumn<N, V>>)	noCall	noCall	true	199
1250.json	me.prettyprint.cassandra.utils.DaemonThreadPoolFactory.getNextThreadNumber()	1251.json	me.prettyprint.cassandra.utils.DaemonThreadPoolFactory.newThread(java.lang.Runnable)	true	718
69.json	me.prettyprint.hom.HectorObjectMapper.setPropertyUsingColumn(T, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition)	55.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>)	true	954
254.json	me.prettyprint.hom.EntityManagerImpl.getMetamodel()	noCall	noCall	true	344
1502.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.toString()	noCall	noCall	true	1093
1017.json	me.prettyprint.cassandra.connection.HConnectionManager.unsuspendCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	1971.json,962.json	me.prettyprint.cassandra.service.CassandraClientMonitor.unsuspendCassandraHost(java.lang.String),me.prettyprint.cassandra.connection.HostTimeoutTracker.Unsuspender.run()	true	899
1318.json	me.prettyprint.cassandra.model.CounterSuperRowsImpl.toString()	noCall	noCall	true	789
2832.json	me.prettyprint.cassandra.service.RangeSlicesIterator.next()	2835.json,2831.json	me.prettyprint.cassandra.service.RangeSlicesIterator.refresh(),me.prettyprint.cassandra.service.RangeSlicesIterator.hasNext()	true	357
15.json	me.prettyprint.hom.CFMappingDef.getDiscType()	15.json,63.json,57.json	me.prettyprint.hom.CFMappingDef.getDiscType(),me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T)	true	954
979.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.getResetInterval()	noCall	noCall	true	880
2785.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setAutoDiscoveryDataCenter(java.util.List<java.lang.String>)	noCall	noCall	true	642
2345.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.getName()	noCall	noCall	true	1263
2601.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.hector.api.mutation.Mutator<K>)	2445.json,2606.json,2604.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.update(me.prettyprint.cassandra.service.template.SuperCfUpdater<K, SN, N>),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteColumn(me.prettyprint.hector.api.mutation.Mutator<K>, K, N),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteRow(me.prettyprint.hector.api.mutation.Mutator<K>, K)	true	866
951.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getNumBeforeExhausted()	954.json,958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.isExhausted(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	true	1023
1913.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getKeyAlias()	noCall	noCall	true	584
1733.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.Anonymous-020ad220-188d-44a4-a2e8-6d5467042b1e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1089
331.json	me.prettyprint.hector.api.factory.HFactory.createCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator, java.util.Map<java.lang.String, java.lang.String>)	328.json,330.json,329.json	me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator),me.prettyprint.hector.api.factory.HFactory.createCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator),me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator, java.util.Map<java.lang.String, java.lang.String>)	true	970
1326.json	me.prettyprint.cassandra.model.MultigetCountQuery.setKeys(K...)	noCall	noCall	true	1054
584.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setNumberOfLockObserverThreads(int)	noCall	noCall	true	278
100.json	me.prettyprint.hom.PropertyMappingDefinition.getColName()	7.json,59.json,94.json,77.json,60.json	me.prettyprint.hom.CFMappingDef.addPropertyDefinition(me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.HectorObjectMapper.createColumnsFromProperty(T, me.prettyprint.hom.PropertyMappingDefinition),me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.converters.VariableIntegerConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[]),me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	954
2717.json	me.prettyprint.cassandra.service.CassandraHost.getMaxActive()	null,944.json,951.json,955.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.releaseClient(me.prettyprint.cassandra.connection.client.HClient),me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.getNumBeforeExhausted(),me.prettyprint.cassandra.connection.ConcurrentHClientPool.getMaxActive()	true	1216
1355.json	me.prettyprint.cassandra.model.MutatorImpl.delete(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>, long)	noCall	noCall	true	926
746.json	me.prettyprint.hector.api.ddl.ComparatorType.hashCode()	noCall	noCall	true	577
1908.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setCompressionOptions(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	584
1464.json	me.prettyprint.cassandra.model.CounterRowsImpl.getCount()	noCall	noCall	true	789
1949.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getSkipHostSuccess()	noCall	noCall	true	1259
1149.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.get()	493.json,2481.json,2581.json,null,2064.json,null,2063.json,2422.json,2583.json,2480.json	me.prettyprint.hector.api.beans.AbstractComposite.serializerForComparator(java.lang.String),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer, int),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteBuffer(SN, N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperSliceQuery(),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSliceQuery(),me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteBuffer(N, java.nio.ByteBuffer),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getSuperColumn(SN),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer)	false	1122
2065.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createCounterColumn(N, long, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	14
1832.json	me.prettyprint.cassandra.model.HCounterColumnImpl.clear()	noCall	noCall	true	858
2618.json	me.prettyprint.cassandra.service.ThriftCfDef.getRowCacheSavePeriodInSeconds()	noCall	noCall	true	1001
166.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getNewTempClassLoader()	noCall	noCall	true	344
203.json	me.prettyprint.hom.EntityManagerFactoryImpl.close()	noCall	noCall	true	344
2252.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.addColumnName(N)	noCall	noCall	true	892
479.json	me.prettyprint.hector.api.beans.AbstractComposite.setSerializerToComparatorMapping(java.util.Map<java.lang.Class<? extends me.prettyprint.hector.api.Serializer>, java.lang.String>)	noCall	noCall	true	860
1321.json	me.prettyprint.cassandra.model.CounterRowImpl.getKey()	noCall	noCall	true	789
1547.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_version()	noCall	noCall	true	918
139.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.copyFromMark(java.nio.ByteBuffer, int, int)	138.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.split(byte[])	true	909
2038.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
169.json	me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	920
1317.json	me.prettyprint.cassandra.model.CounterSuperRowsImpl.iterator()	noCall	noCall	true	789
1642.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setReturnKeysOnly()	noCall	noCall	true	789
341.json	me.prettyprint.hector.api.factory.HFactory.createDefaultConsistencyLevelPolicy()	null,2031.json,333.json	me.prettyprint.hector.api.factory.HFactory.createVirtualKeyspace(java.lang.String, E, me.prettyprint.hector.api.Serializer<E>, me.prettyprint.hector.api.Cluster),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.initKeyspaceOperator(),me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster)	true	1129
2471.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer, int)	noCall	noCall	true	866
1424.json	me.prettyprint.cassandra.model.QueryResultImpl.getQuery()	noCall	noCall	true	1136
2451.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.getCurrentKey()	2491.json,2415.json,2463.json,2490.json,2413.json,2414.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setColumn(me.prettyprint.hector.api.beans.HColumn<N, V>),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.deleteColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.addInsertion(N, V, me.prettyprint.hector.api.Serializer<V>, int),me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSuperColumn()	true	866
2799.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getRunAutoDiscoveryAtStartup()	2150.json	me.prettyprint.cassandra.service.ThriftCluster.onStartup()	true	879
1170.json	me.prettyprint.cassandra.io.ChunkInputStream.read()	noCall	noCall	true	901
1970.json	me.prettyprint.cassandra.service.CassandraClientMonitor.suspendCassandraHost(java.lang.String)	noCall	noCall	true	899
1695.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	1045
1803.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getNameBytes()	noCall	noCall	true	855
355.json	me.prettyprint.hector.api.factory.HFactory.createMultigetSuperSliceCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	789
125.json	me.prettyprint.hom.CollectionMapperHelper.CollectionInfoColValue.getSize()	114.json	me.prettyprint.hom.CollectionMapperHelper.instantiateCollection(java.lang.Object, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>, me.prettyprint.hom.PropertyMappingDefinition)	true	679
946.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.createClient()	null,944.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.releaseClient(me.prettyprint.cassandra.connection.client.HClient),me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient()	true	908
497.json	me.prettyprint.hector.api.beans.AbstractComposite.getComparator(int, java.nio.ByteBuffer)	523.json	me.prettyprint.hector.api.beans.AbstractComposite.deserialize(java.nio.ByteBuffer)	true	860
2562.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.next()	noCall	noCall	true	847
105.json	me.prettyprint.hom.EntityManagerConfigurator.getClasspathPrefix()	noCall	noCall	true	937
2840.json	me.prettyprint.cassandra.service.SliceCounterIterator.remove()	noCall	noCall	true	339
1456.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.execute()	1975.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.hasNext()	true	1078
1952.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getWriteFail()	noCall	noCall	true	1259
1578.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_snitch()	noCall	noCall	true	918
485.json	me.prettyprint.hector.api.beans.AbstractComposite.setSerializersByPosition(me.prettyprint.hector.api.Serializer<?>...)	noCall	noCall	true	859
109.json	me.prettyprint.hom.EntityManagerConfigurator.toString()	noCall	noCall	true	927
1312.json	me.prettyprint.cassandra.model.HColumnImpl.toString()	noCall	noCall	true	1125
1755.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1045
7.json	me.prettyprint.hom.CFMappingDef.addPropertyDefinition(me.prettyprint.hom.PropertyMappingDefinition)	null	me.prettyprint.hom.cache.ColumnParser.processColumnCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Column, java.beans.PropertyDescriptor, me.prettyprint.hom.CFMappingDef<?>)	false	954
2801.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getUseSocketKeepalive()	noCall	noCall	true	825
2490.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.addInsertion(N, V, me.prettyprint.hector.api.Serializer<V>, int)	2468.json,2472.json,2478.json,2485.json,2470.json,2473.json,2477.json,2487.json,2469.json,2475.json,2481.json,2471.json,2467.json,2484.json,2464.json,2489.json,2483.json,2479.json,2465.json,2476.json,2480.json,2486.json,2474.json,2466.json,2482.json,2488.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[]),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setLong(N, java.lang.Long, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, float),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[], int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteBuffer(N, java.nio.ByteBuffer),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDate(N, java.util.Date),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>)	true	306
885.json	me.prettyprint.cassandra.connection.SpeedForJOpTimer.start(java.lang.String)	noCall	noCall	true	753
183.json	me.prettyprint.hom.cache.AnonymousParserValidator.instantiateSerializer(java.lang.Class)	noCall	noCall	true	637
1911.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getRowCacheProvider()	noCall	noCall	true	584
2486.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDynamicComposite(N, me.prettyprint.hector.api.beans.DynamicComposite)	noCall	noCall	true	550
1369.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>, long)	1368.json,1355.json,null,1365.json,1366.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(java.lang.Iterable<K>, java.lang.String, long),me.prettyprint.cassandra.model.MutatorImpl.delete(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>, long),me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String),me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String, long)	true	991
1320.json	me.prettyprint.cassandra.model.KeyspaceOperationCallback.doInKeyspaceAndMeasure(me.prettyprint.cassandra.service.KeyspaceService)	1338.json,null	me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecute(me.prettyprint.cassandra.model.KeyspaceOperationCallback<T>),me.prettyprint.cassandra.model.ExecutingKeyspace.doExecute(me.prettyprint.cassandra.model.KeyspaceOperationCallback<T>)	true	1125
1879.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getName()	noCall	noCall	true	1014
363.json	me.prettyprint.hector.api.factory.HFactory.createRangeSubSlicesCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	549
1211.json	me.prettyprint.cassandra.locking.HLockManagerImpl.deleteLock(me.prettyprint.hector.api.locking.HLock)	1198.json,1205.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long),me.prettyprint.cassandra.locking.HLockManagerImpl.release(me.prettyprint.hector.api.locking.HLock)	true	379
1201.json	me.prettyprint.cassandra.locking.HLockManagerImpl.shutdownScheduler()	noCall	noCall	true	278
1635.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setRowCount(int)	noCall	noCall	true	789
992.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.getName()	noCall	noCall	true	463
240.json	me.prettyprint.hom.EntityManagerImpl.createQuery(java.lang.String, java.lang.Class<T>)	noCall	noCall	true	344
1510.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.toString()	noCall	noCall	true	1093
13.json	me.prettyprint.hom.CFMappingDef.getDiscColumn()	55.json,13.json,178.json,94.json,63.json,57.json	me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.CFMappingDef.getDiscColumn(),me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T)	true	954
382.json	me.prettyprint.hector.api.factory.HFactory.createKeyspaceDefinition(java.lang.String, java.lang.String, int, java.util.List<me.prettyprint.hector.api.ddl.ColumnFamilyDefinition>)	1187.json	me.prettyprint.cassandra.locking.AbstractLockManager.checkCreateLockSchema()	true	973
1849.json	me.prettyprint.cassandra.model.HSlicePredicate.findBytes(N)	null	me.prettyprint.cassandra.model.HSlicePredicate.toThrift()	true	1054
1205.json	me.prettyprint.cassandra.locking.HLockManagerImpl.release(me.prettyprint.hector.api.locking.HLock)	noCall	noCall	true	379
1965.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableLoadBalancedConnectErrors()	1964.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableErrorCount()	true	1245
1907.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getCompressionOptions()	noCall	noCall	true	584
1889.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getReadRepairChance()	noCall	noCall	true	1014
1046.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.setColumnFamilyName(java.lang.String)	noCall	noCall	true	1084
1193.json	me.prettyprint.cassandra.locking.AbstractLockManager.getKeyspace()	noCall	noCall	true	379
1445.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.addLtExpression(N, V)	noCall	noCall	true	1029
1638.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.toString()	noCall	noCall	true	789
1920.json	me.prettyprint.cassandra.service.ClearCounterRow.setCount(int)	noCall	noCall	true	261
2051.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumn(N, V)	noCall	noCall	true	1056
1902.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getKeyValidationAlias()	noCall	noCall	true	319
248.json	me.prettyprint.hom.EntityManagerImpl.getDelegate()	noCall	noCall	true	344
1182.json	me.prettyprint.cassandra.locking.HLockImpl.setHeartbeat(java.util.concurrent.Future<java.lang.Void>)	1199.json	me.prettyprint.cassandra.locking.HLockManagerImpl.setAcquired(me.prettyprint.hector.api.locking.HLock, java.util.Map<java.lang.String, java.lang.String>)	true	264
937.json	me.prettyprint.cassandra.connection.RoundRobinBalancingPolicy.getPool(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	noCall	noCall	true	1020
1956.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumActive()	noCall	noCall	true	1259
2592.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getKeySerializer()	noCall	noCall	true	866
1448.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnNames(N...)	noCall	noCall	true	998
734.json	me.prettyprint.hector.api.exceptions.HInvalidRequestException.getWhy()	noCall	noCall	true	1140
1083.json	me.prettyprint.cassandra.serializers.BytesArraySerializer.get()	1171.json,2374.json,null,2573.json,2421.json,null,62.json,2479.json,47.json,2478.json,null,1169.json,48.json,null	me.prettyprint.cassandra.io.ChunkInputStream.fetchChunk(),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getByteArray(N),me.prettyprint.hom.HectorObjectMapper.addAnonymousProperties(T, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>>),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getByteArray(SN, N),me.prettyprint.cassandra.service.template.SuperCfUpdater.setByteArray(N, byte[]),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.hom.HectorObjectMapper.createHColumn(java.lang.String, byte[]),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[], int),me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[]),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.io.ChunkOutputStream.writeData(boolean),me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, T),me.prettyprint.hom.HectorObjectMapper.saveObjCollection(me.prettyprint.hector.api.Keyspace, java.util.Collection<?>)	true	993
1971.json	me.prettyprint.cassandra.service.CassandraClientMonitor.unsuspendCassandraHost(java.lang.String)	noCall	noCall	true	899
332.json	me.prettyprint.hector.api.factory.HFactory.shutdownCluster(me.prettyprint.hector.api.Cluster)	noCall	noCall	true	899
1684.json	me.prettyprint.cassandra.model.thrift.ThriftCountQuery.toString()	noCall	noCall	true	1078
930.json	me.prettyprint.cassandra.connection.security.KerberosHelper.authenticateClient(java.net.Socket, javax.security.auth.Subject, java.lang.String)	null	me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open()	true	649
1921.json	me.prettyprint.cassandra.service.ClearCounterRow.clear()	noCall	noCall	true	261
1465.json	me.prettyprint.cassandra.model.CounterRowsImpl.iterator()	noCall	noCall	true	789
1169.json	me.prettyprint.cassandra.io.ChunkOutputStream.writeData(boolean)	1167.json,1168.json	me.prettyprint.cassandra.io.ChunkOutputStream.close(),me.prettyprint.cassandra.io.ChunkOutputStream.flush()	true	901
1095.json	me.prettyprint.cassandra.serializers.CompositeSerializer.get()	2485.json,2484.json,null,null	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite, int),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object)	true	563
1336.json	me.prettyprint.cassandra.model.ColumnSliceImpl.getColumnByName(N)	noCall	noCall	true	1132
2724.json	me.prettyprint.cassandra.service.CassandraHost.setCassandraThriftSocketTimeout(int)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	1216
2572.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getBoolean(SN, N)	noCall	noCall	true	847
1761.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.addLtExpression(N, V)	noCall	noCall	true	419
2078.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.getReplicationFactor()	noCall	noCall	true	1056
1033.json	me.prettyprint.cassandra.connection.HConnectionManager.borrowClient()	noCall	noCall	true	1023
1135.json	me.prettyprint.cassandra.serializers.TypeInferringSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	1053
1950.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableTimedOutCount()	1964.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableErrorCount()	true	1259
1517.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_keyspace(java.lang.String)	noCall	noCall	true	918
2767.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getRetryDownedHostsDelayInSeconds()	noCall	noCall	true	1034
1461.json	me.prettyprint.cassandra.model.ExecutionResult.formatMessage(java.lang.String, java.lang.String)	1460.json,1425.json,1781.json	me.prettyprint.cassandra.model.ExecutionResult.toString(),me.prettyprint.cassandra.model.QueryResultImpl.toString(),me.prettyprint.cassandra.model.MutationResultImpl.toString()	true	1055
2704.json	me.prettyprint.cassandra.service.KeyspaceServiceFactory.create(java.lang.String, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.connection.HConnectionManager, me.prettyprint.cassandra.service.FailoverPolicy)	noCall	noCall	true	970
1545.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_snitch()	noCall	noCall	true	918
1808.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getSuperNameSerializer()	noCall	noCall	true	855
2675.json	me.prettyprint.cassandra.service.ThriftCfDef.getRowCacheKeysToSave()	noCall	noCall	true	584
1085.json	me.prettyprint.cassandra.serializers.BytesArraySerializer.fromByteBuffer(java.nio.ByteBuffer)	2374.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getByteArray(N)	true	993
2372.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDouble(N)	noCall	noCall	true	562
1474.json	me.prettyprint.cassandra.model.CqlQuery.execute()	noCall	noCall	true	797
2158.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.setException(me.prettyprint.hector.api.exceptions.HectorException)	noCall	noCall	true	917
163.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getPersistenceXMLSchemaVersion()	noCall	noCall	true	344
1601.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.set_keyspace(java.lang.String)	noCall	noCall	true	918
583.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.getNumberOfLockObserverThreads()	noCall	noCall	true	278
1224.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeFromUUID(java.util.UUID)	1223.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeFromUUID(byte[])	true	954
1596.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_system_drop_column_family(java.lang.String)	noCall	noCall	true	918
2456.json	me.prettyprint.cassandra.service.template.MappedSuperCfResultWrapper.getRow()	noCall	noCall	true	847
1874.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.addColumnDefinition(me.prettyprint.hector.api.ddl.ColumnDefinition)	noCall	noCall	true	1006
1157.json	me.prettyprint.cassandra.serializers.DateSerializer.toByteBuffer(java.util.Date)	noCall	noCall	true	1034
1800.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getColumns()	noCall	noCall	true	855
1335.json	me.prettyprint.cassandra.model.ColumnSliceImpl.getColumns()	noCall	noCall	true	1132
249.json	me.prettyprint.hom.EntityManagerImpl.close()	noCall	noCall	true	344
2658.json	me.prettyprint.cassandra.service.ThriftCfDef.setKeyCacheSavePeriodInSeconds(int)	noCall	noCall	true	789
1990.json	me.prettyprint.cassandra.service.JmxMonitor.getUniqueClassloaderIdentifier()	1989.json	me.prettyprint.cassandra.service.JmxMonitor.generateMonitorName(java.lang.String, java.lang.String)	true	1259
1897.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMemtableOperationsInMillions()	noCall	noCall	true	920
1105.json	me.prettyprint.cassandra.serializers.UUIDSerializer.getComparatorType()	noCall	noCall	true	850
32.json	me.prettyprint.hom.CFMappingDef.isPersistableDerivedEntity()	176.json,189.json,88.json,33.json,34.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.isNonPersistableDerivedEntity(),me.prettyprint.hom.CFMappingDef.isDerivedEntity()	true	923
2666.json	me.prettyprint.cassandra.service.ThriftCfDef.setCompactionStrategyOptions(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	584
2739.json	me.prettyprint.cassandra.service.clock.AbstractClockResolution.getSystemMilliseconds()	2741.json,2742.json,2743.json,2740.json	me.prettyprint.cassandra.service.clock.MicrosecondsClockResolution.createClock(),me.prettyprint.cassandra.service.clock.MillisecondsClockResolution.createClock(),me.prettyprint.cassandra.service.clock.SecondsClockResolution.createClock(),me.prettyprint.cassandra.service.clock.MicrosecondsSyncClockResolution.createClock()	true	955
468.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getSerializer()	noCall	noCall	true	860
1209.json	me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.util.Set<java.lang.String>)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
2465.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String, int)	noCall	noCall	true	306
1805.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.toThrift()	1385.json	me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>)	true	855
891.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.contains(me.prettyprint.cassandra.service.CassandraHost)	1015.json	me.prettyprint.cassandra.connection.HConnectionManager.removeCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	1021
1822.json	me.prettyprint.cassandra.model.HCounterColumnImpl.setName(N)	noCall	noCall	true	1173
2807.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getMaxLastSuccessTimeMillis()	noCall	noCall	true	137
507.json	me.prettyprint.hector.api.beans.AbstractComposite.addAll(java.util.Collection<? extends java.lang.Object>)	noCall	noCall	true	848
1786.json	me.prettyprint.cassandra.model.RowsImpl.getCount()	noCall	noCall	true	1108
1518.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_keyspaces()	noCall	noCall	true	918
17.json	me.prettyprint.hom.CFMappingDef.getDiscValue()	32.json,178.json,4.json,179.json,57.json	me.prettyprint.hom.CFMappingDef.isPersistableDerivedEntity(),me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.CFMappingDef.addDerivedClassMap(me.prettyprint.hom.CFMappingDef<? extends T>),me.prettyprint.hom.cache.InheritanceParserValidator.validateDerivedClassInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.createColumnMap(T)	true	954
2030.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.init()	noCall	noCall	true	1049
1778.json	me.prettyprint.cassandra.model.AbstractSliceQuery.setRange(N, N, boolean, int)	1639.json,1728.json,1754.json,1504.json,1616.json,1711.json,1770.json,1674.json,1695.json,1703.json,1624.json,1737.json,1449.json,1512.json,1488.json,1656.json,1681.json,1718.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setRange(SN, SN, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setRange(SN, SN, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.setRange(SN, SN, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.IndexedSlicesQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setRange(SN, SN, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setRange(SN, SN, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.setRange(N, N, boolean, int),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setRange(SN, SN, boolean, int)	true	1108
1294.json	me.prettyprint.cassandra.model.AbstractColumnQuery.toString()	noCall	noCall	true	1125
1163.json	me.prettyprint.cassandra.serializers.StringSerializer.toByteBuffer(java.lang.String)	1467.json,1631.json	me.prettyprint.cassandra.model.CqlQuery.setQuery(java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftFactory.createCounterColumn(java.lang.String, long)	false	1132
528.json	me.prettyprint.hector.api.beans.AbstractComposite.setEquality(me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	noCall	noCall	true	729
1743.json	me.prettyprint.cassandra.model.thrift.AbstractThriftCountQuery.Anonymous-df6b982f-218b-4851-919e-11fffaa121c1.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1078
952.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getNumBlockedThreads()	958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	true	1023
1089.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.get()	noCall	noCall	true	268
2475.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double, int)	noCall	noCall	true	851
2058.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	noCall	noCall	true	1059
2254.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getColumn(N)	noCall	noCall	true	892
1779.json	me.prettyprint.cassandra.model.AbstractSliceQuery.getPredicate()	1678.json,1653.json,1691.json,1613.json,1455.json,1456.json,1752.json,1700.json,1724.json,1707.json,1636.json,1725.json,1652.json,1766.json,1637.json,1670.json,1620.json,1501.json,1767.json,1621.json,1733.json,1486.json,1716.json,1751.json,1708.json,1485.json,1677.json,1508.json,1509.json,1715.json,1612.json,1500.json,1699.json,1671.json,1692.json,1734.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.Anonymous-956ffae1-7ffe-4c60-ad02-738cad71af0f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.execute(),me.prettyprint.cassandra.model.IndexedSlicesQuery.Anonymous-6f4f81a8-5d00-44db-a4c1-030f4fefe856.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.IndexedSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.Anonymous-68e7992b-916d-44d6-a744-1bff1dc8e077.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.Anonymous-efbfae1d-ccd2-4d7d-af44-4d606f36a75b.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.Anonymous-396e9f3c-3679-4a5b-ae10-92963bee8f6f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.Anonymous-98037d58-b22c-4d22-8247-5274ce11f0cc.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.Anonymous-d6102168-c30a-4cf5-9b50-dc61536b9dfe.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.Anonymous-0da7213b-7cf2-40b9-944e-bd65a507f546.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.Anonymous-c3904543-d246-492e-93f8-504f8c9c92d3.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.Anonymous-020ad220-188d-44a4-a2e8-6d5467042b1e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.Anonymous-5e260cce-0a7a-4a60-b94f-13312120039e.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.Anonymous-1b1e8dbb-0477-49a5-8f51-f012e5ac0fcd.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.Anonymous-1edd59d7-9847-48e6-bd4c-4315b88a31cd.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.Anonymous-845689d1-34e1-4b38-b801-868c2008620a.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.Anonymous-fe8046f6-e430-4731-9774-b9454f12ee69.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.Anonymous-16c1f080-fee2-4f4b-b1c5-561e56e37bba.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.Anonymous-5655547e-7d6a-47b0-8f02-804c880a76ee.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.Anonymous-33d01efa-4041-4580-b42a-1a4640cec4ee.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService),me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.execute(),me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.execute()	true	1107
2146.json	me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition, boolean)	2144.json	me.prettyprint.cassandra.service.ThriftCluster.updateColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	true	954
1176.json	me.prettyprint.cassandra.locking.HLockImpl.setLockId(java.lang.String)	noCall	noCall	true	379
1548.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_execute_cql_query()	noCall	noCall	true	730
247.json	me.prettyprint.hom.EntityManagerImpl.unwrap(java.lang.Class<T>)	noCall	noCall	true	344
1563.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_drop_column_family()	noCall	noCall	true	918
2466.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID)	noCall	noCall	true	866
199.json	me.prettyprint.hom.EntityManagerFactoryImpl.createEntityManager(java.util.Map)	noCall	noCall	true	344
241.json	me.prettyprint.hom.EntityManagerImpl.createNamedQuery(java.lang.String)	noCall	noCall	true	344
1098.json	me.prettyprint.cassandra.serializers.CompositeSerializer.getComparatorType()	noCall	noCall	true	850
1799.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getName()	1803.json,1804.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getNameBytes(),me.prettyprint.cassandra.model.HCounterSuperColumnImpl.getNameByteBuffer()	true	855
1414.json	me.prettyprint.cassandra.model.CqlRows.getAsCount()	noCall	noCall	true	797
1699.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.Anonymous-33d01efa-4041-4580-b42a-1a4640cec4ee.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	789
1788.json	me.prettyprint.cassandra.model.RowsImpl.toString()	noCall	noCall	true	1107
1232.json	me.prettyprint.cassandra.utils.StringUtils.bytes(java.lang.String)	noCall	noCall	true	1263
2534.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.countColumns(K, N, N, int)	2533.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.countColumns(K)	true	866
36.json	me.prettyprint.hom.CFMappingDef.setSliceColumnNameArr(java.lang.String[])	94.json	me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>)	true	912
2472.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float)	noCall	noCall	true	328
2789.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getHostTimeoutCounter()	noCall	noCall	true	891
472.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getBytes()	noCall	noCall	true	852
1495.json	me.prettyprint.cassandra.model.thrift.ThriftCounterColumnQuery.Anonymous-b9ae99bb-f6f2-4b55-9c88-bb5fff5ec690.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	853
34.json	me.prettyprint.hom.CFMappingDef.isDerivedEntity()	2.json,189.json,86.json	me.prettyprint.hom.CFMappingDef.isColumnSliceRequired(),me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	true	923
2614.json	me.prettyprint.cassandra.service.ThriftCfDef.getComparatorTypeAlias()	noCall	noCall	true	682
201.json	me.prettyprint.hom.EntityManagerFactoryImpl.getMetamodel()	noCall	noCall	true	344
2727.json	me.prettyprint.cassandra.service.CassandraHost.getMaxFrameSize()	noCall	noCall	false	254
580.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setKeyspaceName(java.lang.String)	noCall	noCall	true	379
1407.json	me.prettyprint.cassandra.model.BasicColumnDefinition.getValidationClass()	noCall	noCall	true	991
2446.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteColumn(K, SN)	noCall	noCall	true	845
1864.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setGcGraceSeconds(int)	noCall	noCall	true	1006
2804.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getClientFactoryClass()	915.json	me.prettyprint.cassandra.connection.factory.HClientFactoryProvider.createFactory(me.prettyprint.cassandra.service.CassandraHostConfigurator)	true	308
1245.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeLong(long)	noCall	noCall	true	860
1045.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.delete(java.lang.String, java.lang.String...)	noCall	noCall	true	1084
1001.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnAddHost(me.prettyprint.cassandra.service.CassandraHost, boolean, java.lang.String, java.lang.Exception)	1014.json	me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	466
1133.json	me.prettyprint.cassandra.serializers.TypeInferringSerializer.get()	2413.json,2064.json,2063.json,2062.json,1379.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperSliceQuery(),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSliceQuery(),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>),me.prettyprint.cassandra.model.MutatorImpl.incrementCounter(K, java.lang.String, N, long)	true	1053
990.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onAddHost(me.prettyprint.cassandra.service.CassandraHost, boolean, java.lang.String, java.lang.Exception)	noCall	noCall	true	466
1467.json	me.prettyprint.cassandra.model.CqlQuery.setQuery(java.lang.String)	noCall	noCall	true	797
909.json	me.prettyprint.cassandra.connection.NodeAutoDiscoverService.doAddNodes()	910.json	me.prettyprint.cassandra.connection.NodeAutoDiscoverService.QueryRing.run()	true	879
1428.json	me.prettyprint.cassandra.model.ExecutingKeyspace.toString()	1375.json	me.prettyprint.cassandra.model.MutatorImpl.toString()	true	1125
486.json	me.prettyprint.hector.api.beans.AbstractComposite.setSerializerByPosition(int, me.prettyprint.hector.api.Serializer<?>)	500.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	true	853
1657.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	834
2599.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setExceptionsTranslator(me.prettyprint.cassandra.service.ExceptionsTranslator)	noCall	noCall	true	866
505.json	me.prettyprint.hector.api.beans.AbstractComposite.mapIfNumber(java.lang.Object)	512.json,517.json	me.prettyprint.hector.api.beans.AbstractComposite.add(int, java.lang.Object),me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object)	true	850
1074.json	me.prettyprint.cassandra.serializers.FloatSerializer.fromByteBuffer(java.nio.ByteBuffer)	2371.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getFloat(N)	true	851
87.json	me.prettyprint.hom.ClassCacheMgr.getFieldPropertyDescriptorMap(java.lang.Class<?>)	169.json,88.json	me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>)	true	920
243.json	me.prettyprint.hom.EntityManagerImpl.createNativeQuery(java.lang.String)	noCall	noCall	true	344
2803.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setClientFactoryClass(java.lang.String)	noCall	noCall	true	308
2374.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getByteArray(N)	noCall	noCall	true	866
211.json	me.prettyprint.hom.EntityManagerImpl.save(T)	noCall	noCall	true	941
1747.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.getRowCount()	noCall	noCall	true	357
333.json	me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster)	1049.json,1050.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference),me.prettyprint.cassandra.examples.ExampleDaoV2.main(java.lang.String[])	true	1137
2368.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getString(N)	noCall	noCall	true	866
1716.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.execute()	noCall	noCall	true	1094
2271.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.extractColumnValue(N, me.prettyprint.hector.api.Serializer<V>)	2258.json,2257.json,2259.json,2266.json,2260.json,2261.json,2262.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getDouble(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getDate(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getInt(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getValue(N, me.prettyprint.hector.api.Serializer<V>),me.prettyprint.cassandra.service.HColumnFamilyImpl.getLong(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getString(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getUUID(N)	true	892
1509.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.execute()	noCall	noCall	true	1101
475.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.toString()	noCall	noCall	true	847
2413.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal()	2411.json,2445.json,2410.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.addSuperColumn(SN),me.prettyprint.cassandra.service.template.SuperCfTemplate.update(me.prettyprint.cassandra.service.template.SuperCfUpdater<K, SN, N>),me.prettyprint.cassandra.service.template.SuperCfUpdater.addKey(K)	true	851
2796.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setHostTimeoutUnsuspendCheckDelay(int)	noCall	noCall	true	891
534.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String)	noCall	noCall	true	137
1484.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setKeys(java.util.Collection<K>)	noCall	noCall	true	789
1721.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1046
1574.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_keyspaces()	noCall	noCall	true	918
2595.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.createMutator()	2446.json,2603.json,2605.json,2447.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteColumn(K, SN),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteRow(K),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteColumn(K, N),me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteRow(K)	true	866
1179.json	me.prettyprint.cassandra.locking.HLockImpl.setObserver(me.prettyprint.hector.api.locking.HLockObserver)	noCall	noCall	true	278
1641.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setColumnNames(N...)	noCall	noCall	true	789
1899.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.isReplicateOnWrite()	noCall	noCall	true	789
956.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getIsActive()	958.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.getStatusAsString()	true	962
1090.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.toBytes(java.math.BigDecimal)	noCall	noCall	true	268
1101.json	me.prettyprint.cassandra.serializers.ShortSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	878
2663.json	me.prettyprint.cassandra.service.ThriftCfDef.getCompactionStrategy()	noCall	noCall	true	584
1659.json	me.prettyprint.cassandra.model.thrift.ThriftSuperColumnQuery.execute()	noCall	noCall	true	1118
1451.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setStartKey(K)	1975.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.hasNext()	true	1078
223.json	me.prettyprint.hom.EntityManagerImpl.flush()	noCall	noCall	true	344
1818.json	me.prettyprint.cassandra.model.OrderedCounterSuperRowsImpl.getList()	noCall	noCall	true	789
586.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setMaxSelectSize(int)	noCall	noCall	true	263
1127.json	me.prettyprint.cassandra.serializers.AbstractSerializer.fromBytesMap(java.util.Map<java.nio.ByteBuffer, V>)	noCall	noCall	true	1073
2580.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getUUID(SN, N)	noCall	noCall	true	847
2080.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.getCluster()	noCall	noCall	true	1059
2264.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.hasNext()	2263.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.next()	true	879
193.json	me.prettyprint.hom.cache.TableParserValidator.validateDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	189.json	me.prettyprint.hom.cache.TableParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	true	923
2399.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.getColumnValue(N)	noCall	noCall	true	866
1435.json	me.prettyprint.cassandra.model.ExecutingKeyspace.getExceptionsTranslator()	1474.json	me.prettyprint.cassandra.model.CqlQuery.execute()	false	942
2602.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.cassandra.service.template.AbstractTemplateUpdater<K, N>)	2531.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.update(me.prettyprint.cassandra.service.template.ColumnFamilyUpdater<K, N>)	true	866
1446.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.addGtExpression(N, V)	noCall	noCall	true	1029
2653.json	me.prettyprint.cassandra.service.ThriftCfDef.getMemtableThroughputInMb()	noCall	noCall	true	920
2627.json	me.prettyprint.cassandra.service.ThriftCfDef.getKeyValidationAlias()	noCall	noCall	true	319
1898.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMemtableThroughputInMb()	noCall	noCall	true	920
2367.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getUUID(N)	noCall	noCall	true	866
2701.json	me.prettyprint.cassandra.service.AbstractCluster.onStartup()	noCall	noCall	true	566
2775.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setPort(int)	noCall	noCall	true	1083
76.json	me.prettyprint.hom.converters.DefaultConverter.convertObjTypeToCassType(java.lang.Object)	noCall	noCall	true	954
19.json	me.prettyprint.hom.CFMappingDef.getKeyDef()	52.json,19.json,169.json,66.json,67.json,90.json,53.json,68.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.CFMappingDef.getKeyDef(),me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.setIdIfCan(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.setSimpleId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.ClassCacheMgr.processIdCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Id, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, java.beans.PropertyDescriptor>),me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	false	954
2.json	me.prettyprint.hom.CFMappingDef.isColumnSliceRequired()	47.json,94.json	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I),me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>)	true	679
1292.json	me.prettyprint.cassandra.model.AbstractColumnQuery.setName(N)	noCall	noCall	true	1136
1977.json	me.prettyprint.cassandra.service.IndexedSlicesIterator.remove()	noCall	noCall	true	682
2787.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getLoadBalancingPolicy()	1014.json	me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	961
1219.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.getTimeUUID(me.prettyprint.hector.api.ClockResolution)	noCall	noCall	true	954
1613.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.execute()	noCall	noCall	true	789
1516.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_cluster_name()	noCall	noCall	true	918
1982.json	me.prettyprint.cassandra.service.ColumnSliceIterator.remove()	noCall	noCall	true	682
1758.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.addEqualsExpression(N, V)	noCall	noCall	true	419
1078.json	me.prettyprint.cassandra.serializers.AsciiSerializer.toByteBuffer(java.lang.String)	noCall	noCall	true	864
1458.json	me.prettyprint.cassandra.model.ExecutionResult.getExecutionTimeNano()	noCall	noCall	true	859
1405.json	me.prettyprint.cassandra.model.MultigetSubCountQuery.execute()	noCall	noCall	true	1054
2478.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setByteArray(N, byte[])	noCall	noCall	true	866
1134.json	me.prettyprint.cassandra.serializers.TypeInferringSerializer.toByteBuffer(T)	noCall	noCall	true	1053
1683.json	me.prettyprint.cassandra.model.thrift.ThriftCountQuery.execute()	noCall	noCall	true	1078
67.json	me.prettyprint.hom.HectorObjectMapper.setSimpleId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	66.json	me.prettyprint.hom.HectorObjectMapper.setIdIfCan(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	true	954
913.json	me.prettyprint.cassandra.connection.factory.HKerberosSaslThriftClientFactoryImpl.createClient(me.prettyprint.cassandra.service.CassandraHost)	noCall	noCall	true	255
1289.json	me.prettyprint.cassandra.model.RowImpl.getColumnSlice()	noCall	noCall	true	1132
1184.json	me.prettyprint.cassandra.locking.HLockImpl.equals(java.lang.Object)	noCall	noCall	true	379
2564.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getSuperColumns()	noCall	noCall	true	866
2645.json	me.prettyprint.cassandra.service.ThriftCfDef.setKeyValidationClass(java.lang.String)	noCall	noCall	true	790
1674.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1045
2447.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteRow(K)	noCall	noCall	true	845
1192.json	me.prettyprint.cassandra.locking.AbstractLockManager.setCluster(me.prettyprint.hector.api.Cluster)	noCall	noCall	true	379
2396.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultIterator.next()	noCall	noCall	true	159
1678.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.execute()	noCall	noCall	true	1108
1756.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setColumnNames(N...)	noCall	noCall	true	1045
10.json	me.prettyprint.hom.CFMappingDef.getEffectiveClass()	91.json,55.json,193.json,178.json,88.json,63.json,179.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>),me.prettyprint.hom.HectorObjectMapper.createObject(me.prettyprint.hom.CFMappingDef<T>, java.lang.Object, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.cache.TableParserValidator.validateDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.determineClassType(me.prettyprint.hom.CFMappingDef<T>, me.prettyprint.hector.api.beans.ColumnSlice<java.lang.String, byte[]>),me.prettyprint.hom.cache.InheritanceParserValidator.validateDerivedClassInheritance(me.prettyprint.hom.CFMappingDef<T>)	false	954
2248.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setCount(int)	noCall	noCall	true	892
1111.json	me.prettyprint.cassandra.serializers.IntegerSerializer.toByteBuffer(java.lang.Integer)	1073.json	me.prettyprint.cassandra.serializers.FloatSerializer.toByteBuffer(java.lang.Float)	true	1049
1562.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_system_add_keyspace()	noCall	noCall	true	918
159.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.excludeUnlistedClasses()	noCall	noCall	true	344
887.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.shutdown()	1039.json	me.prettyprint.cassandra.connection.HConnectionManager.shutdown()	true	992
929.json	me.prettyprint.cassandra.connection.security.KerberosHelper.Anonymous-a5fe0c34-3981-4242-abb5-7c16120fabb9.run()	noCall	noCall	true	649
135.json	me.prettyprint.hom.KeyDefinition.isComplexKey()	52.json,66.json,136.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.setIdIfCan(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.KeyDefinition.isSimpleIdPresent()	true	909
1951.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableUnavailableCount()	1964.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableErrorCount()	true	1259
133.json	me.prettyprint.hom.KeyDefinition.getIdPropertyMap()	52.json,169.json,67.json,53.json,68.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPkObj(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object),me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.setSimpleId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	true	910
1890.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getColumnMetadata()	noCall	noCall	true	1014
1906.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setCompactionStrategyOptions(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	584
2470.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setInteger(N, java.lang.Integer)	noCall	noCall	true	866
1575.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_partitioner()	noCall	noCall	true	918
2834.json	me.prettyprint.cassandra.service.RangeSlicesIterator.setFilter(me.prettyprint.cassandra.service.template.SliceFilter<me.prettyprint.hector.api.beans.Row<K, N, V>>)	noCall	noCall	true	146
469.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getValue(me.prettyprint.hector.api.Serializer<A>)	519.json,470.json	me.prettyprint.hector.api.beans.AbstractComposite.get(int, me.prettyprint.hector.api.Serializer<T>),me.prettyprint.hector.api.beans.AbstractComposite.Component.getValue()	true	852
1225.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.asByteArray(java.util.UUID)	1226.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.asByteBuffer(java.util.UUID)	true	954
160.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getSharedCacheMode()	noCall	noCall	true	344
980.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.setResetInterval(int)	noCall	noCall	true	880
1243.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeInt(int)	noCall	noCall	true	860
2266.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getValue(N, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	887
2417.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setUUID(N, java.util.UUID)	noCall	noCall	true	866
1729.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	789
1166.json	me.prettyprint.cassandra.io.ChunkOutputStream.write(int)	noCall	noCall	true	901
2537.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(K, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, T>)	noCall	noCall	true	866
2474.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDouble(N, java.lang.Double)	noCall	noCall	true	851
1300.json	me.prettyprint.cassandra.model.HColumnImpl.getName()	1313.json,1314.json,1312.json	me.prettyprint.cassandra.model.HColumnImpl.hashCode(),me.prettyprint.cassandra.model.HColumnImpl.equals(java.lang.Object),me.prettyprint.cassandra.model.HColumnImpl.toString()	true	1173
2193.json	me.prettyprint.cassandra.service.KeyIterator.findNext(boolean)	2194.json,2191.json	me.prettyprint.cassandra.service.KeyIterator.runQuery(K, K),me.prettyprint.cassandra.service.KeyIterator.Anonymous-1e44bbe1-5c3b-4e60-b971-d6217ec7eaf7.next()	true	872
1701.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesCounterQuery.toString()	noCall	noCall	true	789
1323.json	me.prettyprint.cassandra.model.CounterRowImpl.toString()	noCall	noCall	true	789
2839.json	me.prettyprint.cassandra.service.SliceCounterIterator.next()	2841.json,2838.json,1921.json	me.prettyprint.cassandra.service.SliceCounterIterator.refresh(),me.prettyprint.cassandra.service.SliceCounterIterator.hasNext(),me.prettyprint.cassandra.service.ClearCounterRow.clear()	true	339
2400.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.getColumn(N)	2399.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.getColumnValue(N)	true	866
1254.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.getStrategyClass()	noCall	noCall	true	1014
1947.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getReadFail()	noCall	noCall	true	1259
2428.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.getSubSerializer()	2415.json,2427.json,2413.json,null	me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N),me.prettyprint.cassandra.service.template.SuperCfUpdater.addToSubColumns(N, V, me.prettyprint.hector.api.Serializer<V>, int),me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.template.SuperCfUpdater.setFloat(N, java.lang.Float)	true	851
2257.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getDate(N)	noCall	noCall	true	892
1795.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.addSubCounterColumn(me.prettyprint.hector.api.beans.HCounterColumn<N>)	noCall	noCall	true	599
893.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.applyRetryDelay()	null	me.prettyprint.cassandra.connection.HConnectionManager.setCassandraHostRetryDelay(int)	true	1021
854.json	me.prettyprint.cassandra.connection.client.HThriftClient.isAlreadyAuthenticated(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	627
2674.json	me.prettyprint.cassandra.service.ThriftCfDef.setKeyAlias(java.nio.ByteBuffer)	noCall	noCall	true	584
2429.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.isColumnsExist(K)	noCall	noCall	true	866
2390.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.multigetSliceInternal(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>)	2381.json,2382.json	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteMultigetSlice(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>),me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.doExecuteMultigetSlice(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, V>)	true	866
110.json	me.prettyprint.hom.CollectionMapperHelper.createCollectionItemColName(java.lang.String, int)	60.json	me.prettyprint.hom.HectorObjectMapper.createColumnsFromCollectionProperty(T, me.prettyprint.hom.PropertyMappingDefinition)	true	679
2533.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.countColumns(K)	2532.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.isColumnsExist(K)	true	866
1923.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.setRowKey(K)	noCall	noCall	true	340
510.json	me.prettyprint.hector.api.beans.AbstractComposite.retainAll(java.util.Collection<?>)	noCall	noCall	true	848
1002.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.fireOnRemoveHost(me.prettyprint.cassandra.service.CassandraHost, boolean, java.lang.String)	1015.json	me.prettyprint.cassandra.connection.HConnectionManager.removeCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	466
2725.json	me.prettyprint.cassandra.service.CassandraHost.getUseThriftFramedTransport()	noCall	noCall	false	1204
839.json	me.prettyprint.cassandra.connection.client.HSaslThriftClient.Anonymous-ff289653-6fc9-4295-bb83-0531e8c030d1.run()	noCall	noCall	true	255
1487.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.toString()	noCall	noCall	true	789
1945.json	me.prettyprint.cassandra.service.CassandraClientMonitor.incCounter(me.prettyprint.cassandra.service.CassandraClientMonitor.Counter)	944.json,1021.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient(),me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	1260
1267.json	me.prettyprint.cassandra.model.HSuperColumnImpl.setName(SN)	noCall	noCall	true	1120
2763.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setRetryDownedHosts(boolean)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	1034
1628.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createColumnPath(java.lang.String)	noCall	noCall	true	1107
2667.json	me.prettyprint.cassandra.service.ThriftCfDef.getCompressionOptions()	noCall	noCall	true	584
876.json	me.prettyprint.cassandra.connection.MetricsOpTimer.stop(java.lang.Object, java.lang.String, boolean)	noCall	noCall	true	455
369.json	me.prettyprint.hector.api.factory.HFactory.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1137
532.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	noCall	noCall	true	137
1781.json	me.prettyprint.cassandra.model.MutationResultImpl.toString()	noCall	noCall	true	1125
1608.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.truncate(java.lang.String)	noCall	noCall	true	918
1041.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.insert(java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	1084
2776.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setUseThriftFramedTransport(boolean)	noCall	noCall	true	1054
1693.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.toString()	noCall	noCall	true	1093
1543.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_ring()	noCall	noCall	true	918
1058.json	me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.toByteBuffer(me.prettyprint.hector.api.beans.DynamicComposite)	noCall	noCall	true	860
1126.json	me.prettyprint.cassandra.serializers.AbstractSerializer.toBytesMap(java.util.Map<T, V>)	noCall	noCall	true	1073
1210.json	me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.lang.String)	1217.json,1209.json,1208.json	me.prettyprint.cassandra.locking.HLockManagerImpl.Heartbeat.call(),me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.util.Set<java.lang.String>),me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock)	true	265
523.json	me.prettyprint.hector.api.beans.AbstractComposite.deserialize(java.nio.ByteBuffer)	459.json,1097.json,529.json	me.prettyprint.hector.api.beans.Composite.fromByteBuffer(java.nio.ByteBuffer),me.prettyprint.cassandra.serializers.CompositeSerializer.fromByteBuffer(java.nio.ByteBuffer),me.prettyprint.hector.api.beans.DynamicComposite.fromByteBuffer(java.nio.ByteBuffer)	true	860
1146.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.fromBytesList(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	920
2716.json	me.prettyprint.cassandra.service.CassandraHost.hashCode()	noCall	noCall	true	1216
1632.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createCounterColumn(N, long, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	852
1238.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.reset()	1234.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.getBufferList()	true	860
2709.json	me.prettyprint.cassandra.service.CassandraHost.isPerformNameResolution()	noCall	noCall	true	1216
1449.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setRange(N, N, boolean, int)	noCall	noCall	true	998
1447.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setColumnNames(java.util.Collection<N>)	noCall	noCall	true	998
2416.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setString(N, java.lang.String)	noCall	noCall	true	866
1392.json	me.prettyprint.cassandra.model.OrderedCounterRowsImpl.getList()	noCall	noCall	true	789
1309.json	me.prettyprint.cassandra.model.HColumnImpl.clear()	noCall	noCall	true	887
492.json	me.prettyprint.hector.api.beans.AbstractComposite.comparatorForSerializer(me.prettyprint.hector.api.Serializer<?>)	517.json,500.json,514.json,501.json	me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality),me.prettyprint.hector.api.beans.AbstractComposite.setComponent(int, T, me.prettyprint.hector.api.Serializer<T>),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>)	true	860
1955.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getExhaustedPoolNames()	noCall	noCall	true	1259
2455.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.setTtl(int)	noCall	noCall	true	306
2585.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.hasResults()	noCall	noCall	true	846
1377.json	me.prettyprint.cassandra.model.MutatorImpl.getPendingMutations()	1376.json,1388.json,null,1386.json,1384.json,1390.json,1391.json,1361.json,1385.json,null,1369.json,1387.json	me.prettyprint.cassandra.model.MutatorImpl.getPendingMutationCount(),me.prettyprint.cassandra.model.MutatorImpl.addCounterSubDeletion(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>),me.prettyprint.cassandra.model.MutatorImpl.addInsertion(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>),me.prettyprint.cassandra.model.MutatorImpl.addCounterDeletion(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>),me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterColumn<N>),me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, long),me.prettyprint.cassandra.model.MutatorImpl.addSuperDelete(K, java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>),me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>, long),me.prettyprint.cassandra.model.MutatorImpl.addCounter(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>),me.prettyprint.cassandra.model.MutatorImpl.addInsertion(K, java.lang.String, me.prettyprint.hector.api.beans.HColumn<N, V>),me.prettyprint.cassandra.model.MutatorImpl.addDeletion(K, java.lang.String, N, me.prettyprint.hector.api.Serializer<N>, long),me.prettyprint.cassandra.model.MutatorImpl.addCounterDeletion(K, java.lang.String)	true	1121
330.json	me.prettyprint.hector.api.factory.HFactory.createCluster(java.lang.String, me.prettyprint.cassandra.service.CassandraHostConfigurator)	noCall	noCall	true	1135
1244.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeFloat(float)	noCall	noCall	true	860
1771.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	549
501.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>)	533.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>)	true	860
1249.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(java.nio.ByteBuffer)	522.json	me.prettyprint.hector.api.beans.AbstractComposite.serialize()	true	860
2393.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultIterator.hasNext()	noCall	noCall	true	159
2192.json	me.prettyprint.cassandra.service.KeyIterator.Anonymous-42d8553a-b666-4e93-b116-1691765799fa.remove()	noCall	noCall	true	872
1026.json	me.prettyprint.cassandra.connection.HConnectionManager.addListener(java.lang.String, me.prettyprint.cassandra.connection.ConnectionManagerListener)	noCall	noCall	true	466
2723.json	me.prettyprint.cassandra.service.CassandraHost.getCassandraThriftSocketTimeout()	null	me.prettyprint.cassandra.connection.client.HThriftClient.getTimeout(me.prettyprint.cassandra.service.CassandraHost)	true	1216
93.json	me.prettyprint.hom.ClassCacheMgr.checkForPojoPrimaryKey(me.prettyprint.hom.CFMappingDef<?>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	909
2769.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getOpTimer()	noCall	noCall	true	753
2103.json	me.prettyprint.cassandra.service.Operation.setException(me.prettyprint.hector.api.exceptions.HectorException)	2158.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.setException(me.prettyprint.hector.api.exceptions.HectorException)	true	1259
68.json	me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	66.json	me.prettyprint.hom.HectorObjectMapper.setIdIfCan(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	true	909
1712.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	549
1081.json	me.prettyprint.cassandra.serializers.FloatTypeSerializer.toByteBuffer(java.lang.Float)	noCall	noCall	true	286
508.json	me.prettyprint.hector.api.beans.AbstractComposite.containsAll(java.util.Collection<?>)	noCall	noCall	true	848
164.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getClassLoader()	noCall	noCall	true	344
2578.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDouble(SN, N)	noCall	noCall	true	562
981.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.getBadnessThreshold()	noCall	noCall	true	880
993.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.put(java.lang.String, me.prettyprint.cassandra.connection.ConnectionManagerListener)	1026.json	me.prettyprint.cassandra.connection.HConnectionManager.addListener(java.lang.String, me.prettyprint.cassandra.connection.ConnectionManagerListener)	true	463
2488.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>)	1926.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	true	851
484.json	me.prettyprint.hector.api.beans.AbstractComposite.setSerializersByPosition(java.util.List<me.prettyprint.hector.api.Serializer<?>>)	noCall	noCall	true	859
1579.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_splits(java.lang.String, java.lang.String, java.lang.String, int)	noCall	noCall	true	918
1265.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.isDurableWrites()	noCall	noCall	true	651
1531.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.getInputProtocol()	noCall	noCall	true	918
1253.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.getName()	noCall	noCall	true	1014
70.json	me.prettyprint.hom.HectorObjectMapper.determineSerializer(java.lang.Class<?>)	76.json,null	me.prettyprint.hom.converters.DefaultConverter.convertObjTypeToCassType(java.lang.Object),me.prettyprint.hom.converters.DefaultConverter.convertCassTypeToObjType(me.prettyprint.hom.PropertyMappingDefinition, byte[])	true	954
1034.json	me.prettyprint.cassandra.connection.HConnectionManager.markHostAsDown(me.prettyprint.cassandra.service.CassandraHost)	1021.json	me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	1021
94.json	me.prettyprint.hom.ClassCacheMgr.generateColumnSliceIfNeeded(me.prettyprint.hom.CFMappingDef<?>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	912
851.json	me.prettyprint.cassandra.connection.client.HThriftClient.toString()	844.json,852.json	me.prettyprint.cassandra.connection.client.HThriftClient.close(),me.prettyprint.cassandra.connection.client.HThriftClient.equals(java.lang.Object)	true	1023
470.json	me.prettyprint.hector.api.beans.AbstractComposite.Component.getValue()	517.json,475.json,513.json,518.json	me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object),me.prettyprint.hector.api.beans.AbstractComposite.Component.toString(),me.prettyprint.hector.api.beans.AbstractComposite.remove(int),me.prettyprint.hector.api.beans.AbstractComposite.get(int)	true	860
1885.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getComment()	noCall	noCall	true	1014
2544.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(java.lang.Iterable<K>, me.prettyprint.cassandra.model.HSlicePredicate<N>, me.prettyprint.cassandra.service.template.ColumnFamilyRowMapper<K, N, V>)	noCall	noCall	true	861
2733.json	me.prettyprint.cassandra.service.CassandraHost.getUseSocketKeepalive()	null,null,null	me.prettyprint.cassandra.connection.client.HThriftClient.open(),me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.connection.client.HSaslThriftClient.open()	true	825
1482.json	me.prettyprint.cassandra.model.HKeyRange.toString()	noCall	noCall	true	1089
890.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.remove(me.prettyprint.cassandra.service.CassandraHost)	1015.json	me.prettyprint.cassandra.connection.HConnectionManager.removeCassandraHost(me.prettyprint.cassandra.service.CassandraHost)	true	777
1086.json	me.prettyprint.cassandra.serializers.CharSerializer.get()	null,null	me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object)	true	851
1158.json	me.prettyprint.cassandra.serializers.DateSerializer.fromByteBuffer(java.nio.ByteBuffer)	2375.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDate(N)	true	1034
2053.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createClock()	2048.json,2051.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSuperColumn(SN, java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumn(N, V)	true	1059
1705.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setKey(K)	noCall	noCall	true	549
1162.json	me.prettyprint.cassandra.serializers.StringSerializer.get()	379.json,1213.json,null,null,1050.json,2464.json,null,1212.json,62.json,null,1467.json,2368.json,1215.json,2465.json,47.json,null,2579.json,2416.json,1211.json,null,1631.json,2261.json,1210.json	me.prettyprint.hector.api.factory.HFactory.createCounterColumn(java.lang.String, long),me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock, java.lang.String),me.prettyprint.hom.HectorObjectMapper.addAnonymousProperties(T, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.examples.ExampleDaoV2.main(java.lang.String[]),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftColumnFactory.createStringColumn(java.lang.String, java.lang.String),me.prettyprint.cassandra.locking.HLockManagerImpl.readExistingLocks(me.prettyprint.hector.api.locking.HLock),me.prettyprint.hom.HectorObjectMapper.createHColumn(java.lang.String, byte[]),me.prettyprint.hector.api.factory.HFactory.createStringColumnQuery(me.prettyprint.hector.api.Keyspace),me.prettyprint.cassandra.model.CqlQuery.setQuery(java.lang.String),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getString(N),me.prettyprint.cassandra.locking.HLockManagerImpl.createColumnForLock(java.lang.String, java.lang.String),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setString(N, java.lang.String, int),me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I),me.prettyprint.hector.api.factory.HFactory.createStringColumn(java.lang.String, java.lang.String),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getString(SN, N),me.prettyprint.cassandra.service.template.SuperCfUpdater.setString(N, java.lang.String),me.prettyprint.cassandra.locking.HLockManagerImpl.deleteLock(me.prettyprint.hector.api.locking.HLock),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.model.thrift.ThriftFactory.createCounterColumn(java.lang.String, long),me.prettyprint.cassandra.service.HColumnFamilyImpl.getString(N),me.prettyprint.cassandra.locking.HLockManagerImpl.writeLock(me.prettyprint.hector.api.locking.HLock, java.lang.String)	false	1131
2600.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setColumnFactory(me.prettyprint.hector.api.ColumnFactory)	noCall	noCall	true	857
140.json	me.prettyprint.hom.KeyConcatenationDelimiterStrategyImpl.getDelimiter()	noCall	noCall	true	909
1946.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getWriteSuccess()	noCall	noCall	true	1260
1811.json	me.prettyprint.cassandra.model.AbstractSubColumnQuery.setSuperColumn(SN)	noCall	noCall	true	1072
1328.json	me.prettyprint.cassandra.model.MultigetCountQuery.setColumnNames(N...)	noCall	noCall	true	1054
1727.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setColumnNames(N...)	noCall	noCall	true	789
2077.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.setReplicationStrategyClass(java.lang.String)	noCall	noCall	true	1056
2607.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setCount(int)	noCall	noCall	true	852
1142.json	me.prettyprint.cassandra.serializers.JaxbSerializer.toByteBuffer(java.lang.Object)	noCall	noCall	true	898
1964.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getRecoverableErrorCount()	noCall	noCall	true	1257
1237.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.append(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	860
111.json	me.prettyprint.hom.CollectionMapperHelper.parseCollectionItemColName(java.lang.String)	115.json	me.prettyprint.hom.CollectionMapperHelper.addColumnToCollection(me.prettyprint.hom.CFMappingDef<?>, java.lang.Object, java.lang.String, byte[])	true	679
2289.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	noCall	noCall	false	1260
1544.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_schema_versions()	noCall	noCall	true	918
2615.json	me.prettyprint.cassandra.service.ThriftCfDef.getSubComparatorTypeAlias()	noCall	noCall	true	682
1876.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyValidationClass(java.lang.String)	noCall	noCall	true	790
1749.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setTokens(K, java.lang.String, java.lang.String)	noCall	noCall	true	75
1042.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.get(java.lang.String, java.lang.String)	noCall	noCall	true	1084
1161.json	me.prettyprint.cassandra.serializers.BooleanSerializer.fromByteBuffer(java.nio.ByteBuffer)	2373.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getBoolean(N)	true	1049
2473.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, java.lang.Float, int)	noCall	noCall	true	328
1696.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1045
1188.json	me.prettyprint.cassandra.locking.AbstractLockManager.createColumnFamilyDefinition()	1187.json	me.prettyprint.cassandra.locking.AbstractLockManager.checkCreateLockSchema()	true	379
1116.json	me.prettyprint.cassandra.serializers.LongSerializer.fromByteBuffer(java.nio.ByteBuffer)	2369.json,1158.json,1132.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getLong(N),me.prettyprint.cassandra.serializers.DateSerializer.fromByteBuffer(java.nio.ByteBuffer),me.prettyprint.cassandra.serializers.DoubleSerializer.fromByteBuffer(java.nio.ByteBuffer)	true	1121
1909.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getMergeShardsChance()	noCall	noCall	true	584
977.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.getUpdateInterval()	noCall	noCall	true	880
1790.json	me.prettyprint.cassandra.model.AbstractSuperColumnQuery.setSuperName(SN)	noCall	noCall	true	1118
927.json	me.prettyprint.cassandra.connection.security.KerberosHelper.loginService(java.lang.String)	noCall	noCall	true	649
2190.json	me.prettyprint.cassandra.service.KeyIterator.Anonymous-4faa6b14-a46f-4e50-b07d-2578f90ccb26.hasNext()	noCall	noCall	true	872
2790.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setHostTimeoutCounter(int)	noCall	noCall	true	891
1231.json	me.prettyprint.cassandra.utils.Assert.isTrue(boolean, java.lang.String)	1817.json,null	me.prettyprint.cassandra.model.AbstractSubColumnQuery.execute(),me.prettyprint.cassandra.model.HSlicePredicate.toThrift()	true	1072
1809.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.toString()	noCall	noCall	true	855
1144.json	me.prettyprint.cassandra.serializers.PrefixedSerializer.toByteBuffer(S)	noCall	noCall	false	922
1862.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyCacheSize(double)	noCall	noCall	true	1006
1278.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getNameByteBuffer()	noCall	noCall	true	1120
898.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.verifyConnection(me.prettyprint.cassandra.service.CassandraHost)	896.json,null,889.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts(),me.prettyprint.cassandra.connection.CassandraHostRetryService.Anonymous-f1d61900-d660-44e6-aae7-6a883ee907a3.run(),me.prettyprint.cassandra.connection.CassandraHostRetryService.add(me.prettyprint.cassandra.service.CassandraHost)	true	1021
1177.json	me.prettyprint.cassandra.locking.HLockImpl.isAcquired()	noCall	noCall	true	379
1286.json	me.prettyprint.cassandra.model.SuperSliceImpl.getColumnByName(SN)	noCall	noCall	true	1101
1327.json	me.prettyprint.cassandra.model.MultigetCountQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1054
2810.json	me.prettyprint.cassandra.service.MultigetSliceIterator.runQuery()	2812.json	me.prettyprint.cassandra.service.MultigetSliceIterator.hasNext()	true	129
1726.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.toString()	noCall	noCall	true	789
1388.json	me.prettyprint.cassandra.model.MutatorImpl.addCounterSubDeletion(K, java.lang.String, me.prettyprint.hector.api.beans.HCounterSuperColumn<SN, N>)	1383.json	me.prettyprint.cassandra.model.MutatorImpl.subDeleteCounter(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	true	853
2528.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.createUpdater()	noCall	noCall	true	605
1308.json	me.prettyprint.cassandra.model.HColumnImpl.getValueBytes()	noCall	noCall	true	872
1276.json	me.prettyprint.cassandra.model.HSuperColumnImpl.getNameSerializer()	noCall	noCall	true	1120
2135.json	me.prettyprint.cassandra.service.ThriftCluster.describeRing(java.lang.String)	897.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	true	1118
2671.json	me.prettyprint.cassandra.service.ThriftCfDef.getRowCacheProvider()	noCall	noCall	true	584
1986.json	me.prettyprint.cassandra.service.JmxMonitor.getInstance()	noCall	noCall	true	1212
1129.json	me.prettyprint.cassandra.serializers.AbstractSerializer.getComparatorType()	noCall	noCall	true	850
146.json	me.prettyprint.hom.CassandraPersistenceProvider.createScanner(java.lang.String)	144.json	me.prettyprint.hom.CassandraPersistenceProvider.createEntityManagerFactory(java.lang.String, java.util.Map)	true	344
1203.json	me.prettyprint.cassandra.locking.HLockManagerImpl.hasThisLockSeenMe(java.lang.String, java.lang.String)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	379
2096.json	me.prettyprint.cassandra.service.ThriftKsDef.setDurableWrites(boolean)	noCall	noCall	true	651
1686.json	me.prettyprint.cassandra.model.thrift.ThriftCountQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1078
1521.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_schema_versions()	noCall	noCall	true	918
987.json	me.prettyprint.cassandra.connection.ConnectionManagerEmptyListener.onAllHostsDown()	noCall	noCall	true	466
1499.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.setSuperColumn(SN)	noCall	noCall	true	1093
1186.json	me.prettyprint.cassandra.locking.AbstractLockManager.init()	noCall	noCall	true	379
2063.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSliceQuery()	noCall	noCall	true	1049
2483.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setFloat(N, float)	noCall	noCall	true	550
2161.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.getCassandraHost()	noCall	noCall	true	917
1477.json	me.prettyprint.cassandra.model.HKeyRange.setTokens(K, java.lang.String, java.lang.String)	1634.json,1749.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setTokens(K, java.lang.String, java.lang.String),me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setTokens(K, java.lang.String, java.lang.String)	true	75
1112.json	me.prettyprint.cassandra.serializers.IntegerSerializer.fromByteBuffer(java.nio.ByteBuffer)	2370.json,1074.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getInteger(N),me.prettyprint.cassandra.serializers.FloatSerializer.fromByteBuffer(java.nio.ByteBuffer)	true	1049
2718.json	me.prettyprint.cassandra.service.CassandraHost.setMaxActive(int)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	1216
1887.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getRowCacheSavePeriodInSeconds()	noCall	noCall	true	991
172.json	me.prettyprint.hom.cache.InheritanceParserValidator.parse(me.prettyprint.hom.ClassCacheMgr, java.lang.annotation.Annotation, me.prettyprint.hom.CFMappingDef<T>)	91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	true	923
1520.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_ring(java.lang.String)	noCall	noCall	true	918
1091.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	268
963.json	me.prettyprint.cassandra.connection.HostTimeoutTracker.applyRetryDelay()	noCall	noCall	true	891
1665.json	me.prettyprint.cassandra.model.thrift.ThriftSuperCountQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1078
1691.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSuperSlicesQuery.Anonymous-956ffae1-7ffe-4c60-ad02-738cad71af0f.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1093
2060.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createMutator()	noCall	noCall	true	1059
2259.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getInt(N)	noCall	noCall	true	892
919.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.score()	null	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.updateScores()	true	880
1720.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceQuery.setColumnNames(java.util.Collection<SN>)	noCall	noCall	true	865
1555.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_login()	noCall	noCall	true	918
1314.json	me.prettyprint.cassandra.model.HColumnImpl.equals(java.lang.Object)	noCall	noCall	true	1108
1706.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceCounterQuery.setSuperColumn(SN)	noCall	noCall	true	549
1337.json	me.prettyprint.cassandra.model.ColumnSliceImpl.toString()	noCall	noCall	true	1107
1409.json	me.prettyprint.cassandra.model.BasicColumnDefinition.getIndexName()	noCall	noCall	true	991
1185.json	me.prettyprint.cassandra.locking.HLockImpl.toString()	noCall	noCall	true	271
1616.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	789
1226.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.asByteBuffer(java.util.UUID)	noCall	noCall	true	954
855.json	me.prettyprint.cassandra.connection.client.HThriftClient.clearAuthentication()	856.json	me.prettyprint.cassandra.connection.client.HThriftClient.setAuthenticated(java.util.Map<java.lang.String, java.lang.String>)	true	627
1867.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setMaxCompactionThreshold(int)	noCall	noCall	true	1006
502.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String)	534.json,501.json	me.prettyprint.hector.api.beans.DynamicComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>, java.lang.String),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(T, me.prettyprint.hector.api.Serializer<T>)	true	860
2770.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setOpTimer(me.prettyprint.cassandra.connection.HOpTimer)	noCall	noCall	true	753
1984.json	me.prettyprint.cassandra.service.ColumnSliceIterator.refresh()	1980.json	me.prettyprint.cassandra.service.ColumnSliceIterator.hasNext()	true	199
1391.json	me.prettyprint.cassandra.model.MutatorImpl.addSuperDelete(K, java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	noCall	noCall	true	845
1661.json	me.prettyprint.cassandra.model.thrift.ThriftColumnFactory.createColumn(N, V, long, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	857
2525.json	me.prettyprint.cassandra.service.template.IndexedSlicesPredicate.toThrift()	null	me.prettyprint.cassandra.service.template.ThriftColumnFamilyTemplate.indexedSlicesInternal(me.prettyprint.cassandra.service.template.IndexedSlicesPredicate<K, N, V>, me.prettyprint.cassandra.model.HSlicePredicate<N>)	false	645
2262.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getUUID(N)	noCall	noCall	true	892
1125.json	me.prettyprint.cassandra.serializers.AbstractSerializer.fromBytesList(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	977
1651.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setKey(K)	noCall	noCall	true	834
1884.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getSubComparatorTypeAlias()	noCall	noCall	true	682
1611.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setKey(K)	noCall	noCall	true	789
1334.json	me.prettyprint.cassandra.model.MultigetCountQuery.toString()	noCall	noCall	true	1053
1360.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>)	noCall	noCall	true	944
477.json	me.prettyprint.hector.api.beans.AbstractComposite.setComponents(java.util.List<me.prettyprint.hector.api.beans.AbstractComposite.Component<?>>)	noCall	noCall	true	860
1754.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1045
1248.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(byte[], int, int)	1248.json,1247.json,1249.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(byte[], int, int),me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(byte[]),me.prettyprint.cassandra.utils.ByteBufferOutputStream.write(java.nio.ByteBuffer)	true	860
859.json	me.prettyprint.cassandra.connection.client.HThriftClient.updateLastSuccessTime()	noCall	noCall	true	158
496.json	me.prettyprint.hector.api.beans.AbstractComposite.comparatorForPosition(int)	517.json,522.json,500.json,497.json	me.prettyprint.hector.api.beans.AbstractComposite.set(int, java.lang.Object),me.prettyprint.hector.api.beans.AbstractComposite.serialize(),me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality),me.prettyprint.hector.api.beans.AbstractComposite.getComparator(int, java.nio.ByteBuffer)	true	859
244.json	me.prettyprint.hom.EntityManagerImpl.createNativeQuery(java.lang.String, java.lang.Class)	noCall	noCall	true	344
729.json	me.prettyprint.hector.api.exceptions.HCassandraInternalException.getType()	noCall	noCall	true	969
995.json	me.prettyprint.cassandra.connection.ConnectionManagerListenersHandler.clear()	1028.json	me.prettyprint.cassandra.connection.HConnectionManager.removeAllListeners()	true	466
1070.json	me.prettyprint.cassandra.serializers.DoubleTypeSerializer.toByteBuffer(java.lang.Double)	noCall	noCall	true	286
2377.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getExecutionTimeNano()	noCall	noCall	true	866
2759.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setMaxWaitTimeWhenExhausted(long)	1049.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.configure(javax.naming.Reference)	true	1214
526.json	me.prettyprint.hector.api.beans.AbstractComposite.getWithShortLength(java.nio.ByteBuffer)	523.json	me.prettyprint.hector.api.beans.AbstractComposite.deserialize(java.nio.ByteBuffer)	true	860
1150.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	1122
2530.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.createUpdater(K, me.prettyprint.hector.api.mutation.Mutator<K>)	1926.json	me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	true	658
2406.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.hasNext()	2405.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.next()	true	866
1974.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumRenewedTooLongConnections()	noCall	noCall	true	127
886.json	me.prettyprint.cassandra.connection.SpeedForJOpTimer.stop(java.lang.Object, java.lang.String, boolean)	noCall	noCall	true	753
500.json	me.prettyprint.hector.api.beans.AbstractComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	512.json,532.json	me.prettyprint.hector.api.beans.AbstractComposite.add(int, java.lang.Object),me.prettyprint.hector.api.beans.DynamicComposite.addComponent(int, T, me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality)	true	682
1490.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setColumnNames(java.util.Collection<SN>)	noCall	noCall	true	789
1268.json	me.prettyprint.cassandra.model.HSuperColumnImpl.setSubcolumns(java.util.List<me.prettyprint.hector.api.beans.HColumn<N, V>>)	noCall	noCall	true	1120
90.json	me.prettyprint.hom.ClassCacheMgr.processIdCustomAnnotation(java.lang.reflect.Field, me.prettyprint.hom.annotations.Id, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, java.beans.PropertyDescriptor>)	88.json	me.prettyprint.hom.ClassCacheMgr.initializePropertiesMapDef(me.prettyprint.hom.CFMappingDef<T>)	true	921
1361.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>, long)	1360.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, me.prettyprint.hector.api.beans.HSuperColumn<SN, N, V>)	true	944
512.json	me.prettyprint.hector.api.beans.AbstractComposite.add(int, java.lang.Object)	noCall	noCall	true	860
1483.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setKeys(K...)	noCall	noCall	true	789
524.json	me.prettyprint.hector.api.beans.AbstractComposite.getShortLength(java.nio.ByteBuffer)	497.json,526.json	me.prettyprint.hector.api.beans.AbstractComposite.getComparator(int, java.nio.ByteBuffer),me.prettyprint.hector.api.beans.AbstractComposite.getWithShortLength(java.nio.ByteBuffer)	true	860
1511.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.setColumnNames(SN...)	noCall	noCall	true	1045
1274.json	me.prettyprint.cassandra.model.HSuperColumnImpl.get(int)	noCall	noCall	true	1131
1180.json	me.prettyprint.cassandra.locking.HLockImpl.getObserver()	noCall	noCall	true	278
2752.json	me.prettyprint.cassandra.service.BatchMutation.makeCopy()	1373.json	me.prettyprint.cassandra.model.MutatorImpl.execute()	true	1121
2811.json	me.prettyprint.cassandra.service.MultigetSliceIterator.runMultigetSliceQuery(java.util.List<K>)	2809.json,2810.json	me.prettyprint.cassandra.service.MultigetSliceIterator.Anonymous-ec90b09c-2a02-4b3f-9614-a9bc70632cdc.run(),me.prettyprint.cassandra.service.MultigetSliceIterator.runQuery()	true	129
1760.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.addGteExpression(N, V)	noCall	noCall	true	419
2246.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.addKeys(java.util.Collection<K>)	noCall	noCall	true	892
1900.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getKeyCacheSavePeriodInSeconds()	noCall	noCall	true	861
1246.json	me.prettyprint.cassandra.utils.ByteBufferOutputStream.writeDouble(double)	noCall	noCall	true	860
132.json	me.prettyprint.hom.KeyDefinition.getPkClazz()	169.json,135.json,68.json	me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.KeyDefinition.isComplexKey(),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object)	true	910
1367.json	me.prettyprint.cassandra.model.MutatorImpl.addDeletion(java.lang.Iterable<K>, java.lang.String)	noCall	noCall	true	701
1652.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.Anonymous-98037d58-b22c-4d22-8247-5274ce11f0cc.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	834
86.json	me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	91.json,208.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>),me.prettyprint.hom.EntityManagerImpl.initializeClasspath(me.prettyprint.hom.annotations.AnnotationScanner, java.lang.String)	true	954
168.json	me.prettyprint.hom.cache.IdClassParserValidator.parse(me.prettyprint.hom.ClassCacheMgr, java.lang.annotation.Annotation, me.prettyprint.hom.CFMappingDef<T>)	91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	true	920
2484.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setComposite(N, me.prettyprint.hector.api.beans.Composite)	noCall	noCall	true	550
2728.json	me.prettyprint.cassandra.service.CassandraHost.setMaxFrameSize(int)	2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	true	254
1624.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setRange(N, N, boolean, int)	noCall	noCall	true	1046
176.json	me.prettyprint.hom.cache.InheritanceParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>)	92.json	me.prettyprint.hom.ClassCacheMgr.checkMappingAndSetDefaults(me.prettyprint.hom.CFMappingDef<T>)	true	923
573.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.isRowsCacheEnabled()	1188.json	me.prettyprint.cassandra.locking.AbstractLockManager.createColumnFamilyDefinition()	true	379
2398.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.getColumnNames()	noCall	noCall	true	851
521.json	me.prettyprint.hector.api.beans.AbstractComposite.componentsIterator()	noCall	noCall	true	859
1671.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.execute()	noCall	noCall	true	1096
2261.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.getString(N)	noCall	noCall	true	892
2713.json	me.prettyprint.cassandra.service.CassandraHost.getPort()	null,null,null	me.prettyprint.cassandra.connection.client.HThriftClient.open(),me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.connection.client.HSaslThriftClient.open()	true	1216
2815.json	me.prettyprint.cassandra.service.MultigetSliceIterator.getTotalExecutionTimeMicro()	noCall	noCall	true	129
944.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient()	916.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.borrowClient()	true	1023
1604.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.system_drop_column_family(java.lang.String)	noCall	noCall	true	918
847.json	me.prettyprint.cassandra.connection.client.HThriftClient.isOpen()	null,844.json,842.json,null,null	me.prettyprint.cassandra.connection.client.HThriftClient.open(),me.prettyprint.cassandra.connection.client.HThriftClient.close(),me.prettyprint.cassandra.connection.client.HThriftClient.getCassandra(),me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.connection.client.HSaslThriftClient.open()	true	1023
2153.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.applyConnectionParams(java.lang.String, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.service.FailoverPolicy, java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	917
1619.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setKeys(java.lang.Iterable<K>)	noCall	noCall	true	986
2668.json	me.prettyprint.cassandra.service.ThriftCfDef.setCompressionOptions(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	584
1156.json	me.prettyprint.cassandra.serializers.DateSerializer.get()	2482.json,2423.json,2257.json,null,null,2375.json,2574.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDate(N, java.util.Date),me.prettyprint.cassandra.service.template.SuperCfUpdater.setDate(N, java.util.Date),me.prettyprint.cassandra.service.HColumnFamilyImpl.getDate(N),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getDate(N),me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getDate(SN, N)	true	1034
2587.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.addColumn(N, me.prettyprint.hector.api.Serializer<?>)	noCall	noCall	true	866
1044.json	me.prettyprint.cassandra.dao.SimpleCassandraDao.insertMulti(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	1084
942.json	me.prettyprint.cassandra.connection.NodeDiscovery.discoverNodes()	941.json	me.prettyprint.cassandra.connection.NodeDiscovery.doAddNodes()	true	990
1972.json	me.prettyprint.cassandra.service.CassandraClientMonitor.setCassandraHostRetryDelay(java.lang.String)	noCall	noCall	true	456
1389.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	845
2438.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(java.util.List<K>, java.util.List<SN>)	noCall	noCall	true	847
1914.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyAlias(java.nio.ByteBuffer)	noCall	noCall	true	584
1725.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.execute()	noCall	noCall	true	789
1554.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_insert()	noCall	noCall	true	918
1038.json	me.prettyprint.cassandra.connection.HConnectionManager.getClusterName()	942.json,1992.json,897.json	me.prettyprint.cassandra.connection.NodeDiscovery.discoverNodes(),me.prettyprint.cassandra.service.JmxMonitor.getCassandraMonitor(me.prettyprint.cassandra.connection.HConnectionManager),me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.buildRingInfo()	true	902
1617.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	789
489.json	me.prettyprint.hector.api.beans.AbstractComposite.setComparatorsByPosition(java.lang.String...)	noCall	noCall	true	859
56.json	me.prettyprint.hom.HectorObjectMapper.createColumnSet(java.lang.Object)	null	me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.mutation.Mutator<byte[]>, java.lang.Object)	true	954
1519.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.describe_partitioner()	noCall	noCall	true	918
1845.json	me.prettyprint.cassandra.model.HSlicePredicate.setReversed(boolean)	2250.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setReversed(boolean)	true	887
246.json	me.prettyprint.hom.EntityManagerImpl.joinTransaction()	noCall	noCall	true	344
1181.json	me.prettyprint.cassandra.locking.HLockImpl.getHeartbeat()	1211.json	me.prettyprint.cassandra.locking.HLockManagerImpl.deleteLock(me.prettyprint.hector.api.locking.HLock)	true	264
2046.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSubSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
972.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.filter(java.util.List<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	971.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.getPool(java.util.Collection<me.prettyprint.cassandra.connection.HClientPool>, java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	true	880
2286.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.batchMutate(me.prettyprint.cassandra.service.BatchMutation)	noCall	noCall	true	1197
1630.json	me.prettyprint.cassandra.model.thrift.ThriftFactory.createSuperColumnPath(java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	1359.json,null	me.prettyprint.cassandra.model.MutatorImpl.superDelete(K, java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>),me.prettyprint.cassandra.model.MutatorImpl.Anonymous-b81d9f0b-0ee4-4179-91e5-605e480f9a08.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	true	1119
47.json	me.prettyprint.hom.HectorObjectMapper.getObject(me.prettyprint.hector.api.Keyspace, java.lang.String, I)	null	me.prettyprint.hom.EntityManagerImpl.find(java.lang.Class<T>, java.lang.Object)	true	954
2440.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(K, java.util.List<SN>, me.prettyprint.cassandra.service.template.SuperCfRowMapper<K, SN, N, T>)	noCall	noCall	true	847
1379.json	me.prettyprint.cassandra.model.MutatorImpl.incrementCounter(K, java.lang.String, N, long)	1380.json	me.prettyprint.cassandra.model.MutatorImpl.decrementCounter(K, java.lang.String, N, long)	true	852
1759.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesQuery.addLteExpression(N, V)	noCall	noCall	true	419
1207.json	me.prettyprint.cassandra.locking.HLockManagerImpl.verifyPrecondition(me.prettyprint.hector.api.locking.HLock)	1198.json,1205.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long),me.prettyprint.cassandra.locking.HLockManagerImpl.release(me.prettyprint.hector.api.locking.HLock)	true	379
2773.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setLifo(boolean)	noCall	noCall	true	1145
1722.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceCounterQuery.setKeys(K...)	noCall	noCall	true	789
2032.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createMutator(me.prettyprint.hector.api.Serializer<K>)	noCall	noCall	true	1059
2033.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnQuery()	noCall	noCall	true	1059
2603.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.deleteRow(K)	noCall	noCall	true	866
1532.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.getOutputProtocol()	noCall	noCall	true	918
2831.json	me.prettyprint.cassandra.service.RangeSlicesIterator.hasNext()	noCall	noCall	true	357
1060.json	me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.getComparatorType()	noCall	noCall	true	850
1856.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setComparatorType(me.prettyprint.hector.api.ddl.ComparatorType)	noCall	noCall	true	1006
2751.json	me.prettyprint.cassandra.service.BatchMutation.getMutationMap()	2286.json,2166.json,1373.json	me.prettyprint.cassandra.service.KeyspaceServiceImpl.batchMutate(me.prettyprint.cassandra.service.BatchMutation),me.prettyprint.cassandra.service.VirtualKeyspaceServiceImpl.batchMutate(me.prettyprint.cassandra.service.BatchMutation),me.prettyprint.cassandra.model.MutatorImpl.execute()	false	1197
2689.json	me.prettyprint.cassandra.service.AbstractCluster.getClusterName()	noCall	noCall	true	1118
1217.json	me.prettyprint.cassandra.locking.HLockManagerImpl.Heartbeat.call()	noCall	noCall	true	278
2679.json	me.prettyprint.cassandra.service.AbstractCluster.addHost(me.prettyprint.cassandra.service.CassandraHost, boolean)	noCall	noCall	true	1125
1577.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.send_describe_schema_versions()	noCall	noCall	true	918
1508.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceQuery.Anonymous-845689d1-34e1-4b38-b801-868c2008620a.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1093
1094.json	me.prettyprint.cassandra.serializers.BigDecimalSerializer.getComparatorType()	noCall	noCall	true	268
171.json	me.prettyprint.hom.cache.IdClassParserValidator.verifyClassConformsToJpaSpec(java.lang.Class<?>)	noCall	noCall	false	920
1500.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSubSliceQuery.Anonymous-5655547e-7d6a-47b0-8f02-804c880a76ee.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1093
2492.json	me.prettyprint.cassandra.service.template.CassandraClusterFactory.getInstance(java.lang.String, java.lang.String, int)	noCall	noCall	true	866
202.json	me.prettyprint.hom.EntityManagerFactoryImpl.isOpen()	noCall	noCall	true	344
53.json	me.prettyprint.hom.HectorObjectMapper.generateColumnFamilyKeyFromPojo(java.lang.Object, me.prettyprint.hom.CFMappingDef<?>)	null	me.prettyprint.hom.HectorObjectMapper.saveObj(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.mutation.Mutator<byte[]>, java.lang.Object)	true	909
1468.json	me.prettyprint.cassandra.model.CqlQuery.setQuery(java.nio.ByteBuffer)	noCall	noCall	true	797
2097.json	me.prettyprint.cassandra.service.Operation.applyConnectionParams(java.lang.String, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.service.FailoverPolicy, java.util.Map<java.lang.String, java.lang.String>)	1434.json,2153.json,1342.json	me.prettyprint.cassandra.model.ExecutingKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>),me.prettyprint.cassandra.service.VirtualKeyspaceOperation.applyConnectionParams(java.lang.String, me.prettyprint.hector.api.ConsistencyLevelPolicy, me.prettyprint.cassandra.service.FailoverPolicy, java.util.Map<java.lang.String, java.lang.String>),me.prettyprint.cassandra.model.ExecutingVirtualKeyspace.doExecuteOperation(me.prettyprint.cassandra.service.Operation<T>)	true	943
2042.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createRangeSlicesQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1615.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.setColumnNames(SN...)	noCall	noCall	true	789
2777.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setMaxFrameSize(int)	noCall	noCall	true	254
1843.json	me.prettyprint.cassandra.model.HSlicePredicate.setEndOn(N)	2249.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setFinish(N)	true	887
2152.json	me.prettyprint.cassandra.service.ThriftCluster.toThriftImplementation(me.prettyprint.hector.api.ddl.KeyspaceDefinition)	null,null	me.prettyprint.cassandra.service.ThriftCluster.updateKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean),me.prettyprint.cassandra.service.ThriftCluster.addKeyspace(me.prettyprint.hector.api.ddl.KeyspaceDefinition, boolean)	false	678
217.json	me.prettyprint.hom.EntityManagerImpl.merge(T)	noCall	noCall	true	344
2805.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.getMaxConnectTimeMillis()	noCall	noCall	true	193
1844.json	me.prettyprint.cassandra.model.HSlicePredicate.setCount(int)	2248.json,2607.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.setCount(int),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.setCount(int)	true	887
841.json	me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.getAppConfigurationEntry(java.lang.String)	noCall	noCall	true	255
1383.json	me.prettyprint.cassandra.model.MutatorImpl.subDeleteCounter(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	853
367.json	me.prettyprint.hector.api.factory.HFactory.createSubSliceCounterQuery(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	549
2536.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.queryColumns(java.lang.Iterable<K>)	noCall	noCall	true	866
1633.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSlicesCounterQuery.setKeys(K, K)	noCall	noCall	true	789
587.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.toString()	1186.json	me.prettyprint.cassandra.locking.AbstractLockManager.init()	true	379
983.json	me.prettyprint.cassandra.connection.NullOpTimer.start(java.lang.String)	noCall	noCall	true	753
1891.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getGcGraceSeconds()	noCall	noCall	true	1014
1675.json	me.prettyprint.cassandra.model.thrift.ThriftSubSliceQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1045
334.json	me.prettyprint.hector.api.factory.HFactory.createKeyspace(java.lang.String, me.prettyprint.hector.api.Cluster, me.prettyprint.hector.api.ConsistencyLevelPolicy)	148.json,2031.json	me.prettyprint.hom.CassandraPersistenceProvider.keyspace(java.lang.String, java.lang.String, java.lang.String, java.lang.String),me.prettyprint.cassandra.service.spring.HectorTemplateImpl.initKeyspaceOperator()	true	1137
1886.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getRowCacheSize()	noCall	noCall	true	1014
2655.json	me.prettyprint.cassandra.service.ThriftCfDef.setMemtableOperationsInMillions(double)	noCall	noCall	true	789
2370.json	me.prettyprint.cassandra.service.template.AbstractResultWrapper.getInteger(N)	noCall	noCall	true	866
1255.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.getStrategyOptions()	noCall	noCall	true	1014
1654.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.toString()	noCall	noCall	true	834
1359.json	me.prettyprint.cassandra.model.MutatorImpl.superDelete(K, java.lang.String, SN, me.prettyprint.hector.api.Serializer<SN>)	noCall	noCall	true	846
2757.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setHosts(java.lang.String)	noCall	noCall	true	1196
1903.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.getCompactionStrategy()	noCall	noCall	true	584
1450.json	me.prettyprint.cassandra.model.IndexedSlicesQuery.setReturnKeysOnly()	noCall	noCall	true	998
1853.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyspaceName(java.lang.String)	noCall	noCall	true	1006
1610.json	me.prettyprint.cassandra.model.thrift.ThriftColumnQuery.execute()	noCall	noCall	true	1136
1644.json	me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.Anonymous-815b068e-7641-421c-a7cc-918f8b14bbc3.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1078
1542.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_partitioner()	noCall	noCall	true	918
1614.json	me.prettyprint.cassandra.model.thrift.ThriftSuperSliceCounterQuery.toString()	noCall	noCall	true	789
2591.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getColumnFamily()	2491.json,2415.json,2463.json,2490.json,2446.json,2413.json,2414.json,2447.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setColumn(me.prettyprint.hector.api.beans.HColumn<N, V>),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.deleteColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.addInsertion(N, V, me.prettyprint.hector.api.Serializer<V>, int),me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteColumn(K, SN),me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSuperColumn(),me.prettyprint.cassandra.service.template.SuperCfTemplate.deleteRow(K)	true	866
119.json	me.prettyprint.hom.CollectionMapperHelper.CollectionItemColName.getOrder()	noCall	noCall	true	679
1063.json	me.prettyprint.cassandra.serializers.ObjectSerializer.get()	null,null	me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object)	true	1053
1260.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.setReplicationFactor(int)	noCall	noCall	true	1014
72.json	me.prettyprint.hom.HectorObjectMapper.isImplementedBy(java.lang.Class<?>, java.lang.Class<?>)	71.json	me.prettyprint.hom.HectorObjectMapper.isSerializable(java.lang.Class<?>)	true	937
2638.json	me.prettyprint.cassandra.service.ThriftCfDef.setRowCacheSavePeriodInSeconds(int)	noCall	noCall	true	1001
2596.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getClock()	noCall	noCall	true	866
975.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.add(me.prettyprint.cassandra.connection.LatencyAwareHClientPool)	null	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.createConnection(me.prettyprint.cassandra.connection.factory.HClientFactory, me.prettyprint.cassandra.service.CassandraHost, me.prettyprint.cassandra.service.CassandraClientMonitor)	true	880
2761.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setCassandraThriftSocketTimeout(int)	noCall	noCall	true	1214
1064.json	me.prettyprint.cassandra.serializers.ObjectSerializer.CustomClassLoaderObjectInputStream.resolveClass(java.io.ObjectStreamClass)	noCall	noCall	true	710
1102.json	me.prettyprint.cassandra.serializers.UUIDSerializer.get()	2580.json,493.json,2466.json,2467.json,null,2417.json,null,2367.json,2262.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getUUID(SN, N),me.prettyprint.hector.api.beans.AbstractComposite.serializerForComparator(java.lang.String),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setUUID(N, java.util.UUID, int),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.service.template.SuperCfUpdater.setUUID(N, java.util.UUID),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object),me.prettyprint.cassandra.service.template.AbstractResultWrapper.getUUID(N),me.prettyprint.cassandra.service.HColumnFamilyImpl.getUUID(N)	true	1081
1059.json	me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.fromByteBuffer(java.nio.ByteBuffer)	noCall	noCall	true	860
2593.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.getTopSerializer()	2415.json,2463.json,2490.json,2413.json,2414.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSubColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.deleteColumn(N),me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.addInsertion(N, V, me.prettyprint.hector.api.Serializer<V>, int),me.prettyprint.cassandra.service.template.SuperCfUpdater.updateInternal(),me.prettyprint.cassandra.service.template.SuperCfUpdater.deleteSuperColumn()	true	866
2594.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeBatch(me.prettyprint.hector.api.mutation.Mutator<K>)	2602.json,2601.json	me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.cassandra.service.template.AbstractTemplateUpdater<K, N>),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.executeIfNotBatched(me.prettyprint.hector.api.mutation.Mutator<K>)	true	866
1877.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setKeyValidationAlias(java.lang.String)	noCall	noCall	true	319
467.json	me.prettyprint.hector.api.beans.AbstractComposite.ComponentEquality.fromByte(byte)	523.json	me.prettyprint.hector.api.beans.AbstractComposite.deserialize(java.nio.ByteBuffer)	true	851
1172.json	me.prettyprint.cassandra.io.ChunkInputStream.markSupported()	noCall	noCall	true	901
1257.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.getCfDefs()	noCall	noCall	true	1014
27.json	me.prettyprint.hom.CFMappingDef.getRealClass()	194.json,190.json,193.json,null,178.json,169.json,181.json,191.json,68.json,86.json	me.prettyprint.hom.cache.TableParserValidator.findAndSetBaseClassViaMappings(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.TableParserValidator.validatePersistableEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.TableParserValidator.validateDerivedEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.addAnonymousProperties(T, me.prettyprint.hom.CFMappingDef<T>, java.util.Map<java.lang.String, me.prettyprint.hector.api.beans.HColumn<java.lang.String, byte[]>>),me.prettyprint.hom.cache.InheritanceParserValidator.validateSingleTableInheritance(me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.IdClassParserValidator.validateAndSetDefaults(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.AnonymousParserValidator.parseInheritanceAnnotation(me.prettyprint.hom.annotations.AnonymousPropertyHandling, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.cache.TableParserValidator.validateBaseEntityClass(me.prettyprint.hom.ClassCacheMgr, me.prettyprint.hom.CFMappingDef<T>),me.prettyprint.hom.HectorObjectMapper.setComplexId(me.prettyprint.hom.CFMappingDef<T>, T, java.lang.Object),me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	true	954
23.json	me.prettyprint.hom.CFMappingDef.setColFamName(java.lang.String)	noCall	noCall	true	954
209.json	me.prettyprint.hom.EntityManagerImpl.load(java.lang.Class<T>, I)	noCall	noCall	true	941
1065.json	me.prettyprint.cassandra.serializers.TimeUUIDSerializer.get()	noCall	noCall	true	729
2074.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.getConfigurableConsistencyLevelPolicy()	noCall	noCall	true	1059
844.json	me.prettyprint.cassandra.connection.client.HThriftClient.close()	null,null	me.prettyprint.cassandra.connection.client.HKerberosThriftClient.open(),me.prettyprint.cassandra.connection.client.HSaslThriftClient.open()	true	1023
343.json	me.prettyprint.hector.api.factory.HFactory.createMutator(me.prettyprint.hector.api.Keyspace, me.prettyprint.hector.api.Serializer<K>, me.prettyprint.cassandra.service.BatchSizeHint)	1921.json,1926.json	me.prettyprint.cassandra.service.ClearCounterRow.clear(),me.prettyprint.cassandra.service.ColumnFamilyRowCopy.copy()	true	718
1425.json	me.prettyprint.cassandra.model.QueryResultImpl.toString()	noCall	noCall	true	1125
2404.json	me.prettyprint.cassandra.service.template.ColumnFamilyResultWrapper.getKey()	noCall	noCall	true	866
1117.json	me.prettyprint.cassandra.serializers.LongSerializer.getComparatorType()	noCall	noCall	true	850
1605.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.system_drop_keyspace(java.lang.String)	noCall	noCall	true	918
2737.json	me.prettyprint.cassandra.service.CassandraHost.getMaxLastSuccessTimeMillis()	944.json	me.prettyprint.cassandra.connection.ConcurrentHClientPool.borrowClient()	true	158
1421.json	me.prettyprint.cassandra.model.AbstractBasicQuery.setCqlVersion(java.lang.String)	noCall	noCall	true	268
1420.json	me.prettyprint.cassandra.model.AbstractBasicQuery.getCqlVersion()	noCall	noCall	true	268
1738.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1045
1048.json	me.prettyprint.cassandra.jndi.CassandraClientJndiResourceFactory.getObjectInstance(java.lang.Object, javax.naming.Name, javax.naming.Context, java.util.Hashtable<?, ?>)	noCall	noCall	true	1217
1197.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock)	noCall	noCall	true	379
2756.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.applyConfig(me.prettyprint.cassandra.service.CassandraHost)	2679.json,941.json,1014.json,2755.json	me.prettyprint.cassandra.service.AbstractCluster.addHost(me.prettyprint.cassandra.service.CassandraHost, boolean),me.prettyprint.cassandra.connection.NodeDiscovery.doAddNodes(),me.prettyprint.cassandra.connection.HConnectionManager.addCassandraHost(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.service.CassandraHostConfigurator.buildCassandraHosts()	true	1132
2436.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumns(K, me.prettyprint.cassandra.model.HSlicePredicate<SN>)	noCall	noCall	true	599
1609.json	me.prettyprint.cassandra.model.thrift.ThriftColumnQuery.Anonymous-0453ced7-df59-400c-a70d-7c96f01c9540.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1136
2045.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSliceQuery(me.prettyprint.hector.api.Serializer<K>, me.prettyprint.hector.api.Serializer<N>, me.prettyprint.hector.api.Serializer<V>)	2063.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createSliceQuery()	true	1059
2808.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setMaxLastSuccessTimeMillis(long)	noCall	noCall	true	137
1794.json	me.prettyprint.cassandra.model.QuorumAllConsistencyLevelPolicy.get(me.prettyprint.cassandra.service.OperationType, java.lang.String)	noCall	noCall	true	1129
984.json	me.prettyprint.cassandra.connection.NullOpTimer.stop(java.lang.Object, java.lang.String, boolean)	noCall	noCall	true	753
1031.json	me.prettyprint.cassandra.connection.HConnectionManager.getClientFromLBPolicy(java.util.Set<me.prettyprint.cassandra.service.CassandraHost>)	1033.json,1021.json	me.prettyprint.cassandra.connection.HConnectionManager.borrowClient(),me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	1016
2712.json	me.prettyprint.cassandra.service.CassandraHost.getIp()	912.json,2811.json	me.prettyprint.cassandra.connection.factory.HThriftClientFactoryImpl.createClient(me.prettyprint.cassandra.service.CassandraHost),me.prettyprint.cassandra.service.MultigetSliceIterator.runMultigetSliceQuery(java.util.List<K>)	true	1216
529.json	me.prettyprint.hector.api.beans.DynamicComposite.fromByteBuffer(java.nio.ByteBuffer)	1059.json	me.prettyprint.cassandra.serializers.DynamicCompositeSerializer.fromByteBuffer(java.nio.ByteBuffer)	true	853
1836.json	me.prettyprint.cassandra.model.HCounterColumnImpl.hashCode()	noCall	noCall	true	858
253.json	me.prettyprint.hom.EntityManagerImpl.getCriteriaBuilder()	noCall	noCall	true	344
2034.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnQuery(me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	1059
1199.json	me.prettyprint.cassandra.locking.HLockManagerImpl.setAcquired(me.prettyprint.hector.api.locking.HLock, java.util.Map<java.lang.String, java.lang.String>)	1198.json	me.prettyprint.cassandra.locking.HLockManagerImpl.acquire(me.prettyprint.hector.api.locking.HLock, long)	true	269
1623.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSliceQuery.setColumnNames(N...)	noCall	noCall	true	1046
961.json	me.prettyprint.cassandra.connection.HostTimeoutTracker.checkTimeout(me.prettyprint.cassandra.service.CassandraHost)	1029.json	me.prettyprint.cassandra.connection.HConnectionManager.doTimeoutCheck(me.prettyprint.cassandra.service.CassandraHost)	true	891
918.json	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.add(double)	null	me.prettyprint.cassandra.connection.LatencyAwareHClientPool.releaseClient(me.prettyprint.cassandra.connection.client.HClient)	true	880
2570.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.remove()	noCall	noCall	true	847
973.json	me.prettyprint.cassandra.connection.DynamicLoadBalancingPolicy.SortByScoreComparator.compare(me.prettyprint.cassandra.connection.HClientPool, me.prettyprint.cassandra.connection.HClientPool)	noCall	noCall	true	880
1099.json	me.prettyprint.cassandra.serializers.ShortSerializer.get()	null,null	me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Class<?>),me.prettyprint.cassandra.serializers.SerializerTypeInferer.getSerializer(java.lang.Object)	true	878
236.json	me.prettyprint.hom.EntityManagerImpl.setProperty(java.lang.String, java.lang.Object)	noCall	noCall	true	344
915.json	me.prettyprint.cassandra.connection.factory.HClientFactoryProvider.createFactory(me.prettyprint.cassandra.service.CassandraHostConfigurator)	noCall	noCall	true	649
2054.json	me.prettyprint.cassandra.service.spring.HectorTemplateImpl.createColumnPath(java.lang.String, N, me.prettyprint.hector.api.Serializer<N>)	noCall	noCall	true	1059
1153.json	me.prettyprint.cassandra.serializers.ByteBufferSerializer.fromBytesList(java.util.List<java.nio.ByteBuffer>)	noCall	noCall	true	977
1658.json	me.prettyprint.cassandra.model.thrift.ThriftSuperColumnQuery.Anonymous-eaf771a5-80bd-426e-bad5-a83716221bd8.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1118
1958.json	me.prettyprint.cassandra.service.CassandraClientMonitor.getNumExhaustedPools()	noCall	noCall	true	1259
2359.json	me.prettyprint.cassandra.service.StringKeyIterator.Builder.start(java.lang.String)	noCall	noCall	true	213
1190.json	me.prettyprint.cassandra.locking.AbstractLockManager.getConfigurator()	noCall	noCall	true	379
154.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getNonJtaDataSource()	noCall	noCall	true	344
235.json	me.prettyprint.hom.EntityManagerImpl.getLockMode(java.lang.Object)	noCall	noCall	true	344
2784.json	me.prettyprint.cassandra.service.CassandraHostConfigurator.setAutoDiscoveryDataCenter(java.lang.String)	noCall	noCall	true	642
2476.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setBoolean(N, java.lang.Boolean)	noCall	noCall	true	866
2450.json	me.prettyprint.cassandra.service.template.AbstractTemplateUpdater.addKey(K)	2530.json,2529.json,2410.json	me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.createUpdater(K, me.prettyprint.hector.api.mutation.Mutator<K>),me.prettyprint.cassandra.service.template.ColumnFamilyTemplate.createUpdater(K),me.prettyprint.cassandra.service.template.SuperCfUpdater.addKey(K)	true	861
2482.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.setDate(N, java.util.Date)	noCall	noCall	true	866
896.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.retryDownedHosts()	null	me.prettyprint.cassandra.connection.CassandraHostRetryService.RetryRunner.run()	true	515
152.json	me.prettyprint.hom.CassandraPersistenceProvider.LightPersistenceUnitInfo.getTransactionType()	noCall	noCall	true	344
206.json	me.prettyprint.hom.EntityManagerFactoryImpl.getPersistenceUnitUtil()	noCall	noCall	true	344
576.json	me.prettyprint.hector.api.locking.HLockManagerConfigurator.setLocksTTLInMillis(long)	noCall	noCall	true	379
2419.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setInteger(N, java.lang.Integer)	noCall	noCall	true	866
2426.json	me.prettyprint.cassandra.service.template.SuperCfUpdater.setValue(N, V, me.prettyprint.hector.api.Serializer<V>)	noCall	noCall	true	866
1258.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.setName(java.lang.String)	noCall	noCall	true	1014
1643.json	me.prettyprint.cassandra.model.thrift.ThriftSubCountQuery.setSuperColumn(SN)	noCall	noCall	true	1078
1440.json	me.prettyprint.cassandra.model.CounterSliceImpl.getColumnByName(N)	noCall	noCall	true	834
1080.json	me.prettyprint.cassandra.serializers.FloatTypeSerializer.get()	noCall	noCall	true	286
149.json	me.prettyprint.hom.CassandraPersistenceProvider.getProviderUtil()	noCall	noCall	true	344
856.json	me.prettyprint.cassandra.connection.client.HThriftClient.setAuthenticated(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	627
107.json	me.prettyprint.hom.EntityManagerConfigurator.getKeyspace()	noCall	noCall	true	937
2442.json	me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumn(K, SN)	noCall	noCall	true	851
1393.json	me.prettyprint.cassandra.model.OrderedCounterRowsImpl.peekLast()	noCall	noCall	true	789
1263.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.setStrategyOption(java.lang.String, java.lang.String)	noCall	noCall	true	1014
1488.json	me.prettyprint.cassandra.model.thrift.ThriftMultigetSuperSliceCounterQuery.setRange(SN, SN, boolean, int)	noCall	noCall	true	789
1261.json	me.prettyprint.cassandra.model.BasicKeyspaceDefinition.addColumnFamily(me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)	noCall	noCall	true	1014
1656.json	me.prettyprint.cassandra.model.thrift.ThriftSliceCounterQuery.setRange(N, N, boolean, int)	noCall	noCall	true	834
1784.json	me.prettyprint.cassandra.model.CounterSuperSliceImpl.toString()	noCall	noCall	true	789
1806.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.toThriftColumn()	1805.json	me.prettyprint.cassandra.model.HCounterSuperColumnImpl.toThrift()	true	855
2159.json	me.prettyprint.cassandra.service.VirtualKeyspaceOperation.hasException()	noCall	noCall	true	917
91.json	me.prettyprint.hom.ClassCacheMgr.initializeColumnFamilyMapDef(java.lang.Class<T>)	86.json	me.prettyprint.hom.ClassCacheMgr.initializeCacheForClass(java.lang.Class<T>)	true	954
1736.json	me.prettyprint.cassandra.model.thrift.ThriftRangeSubSlicesQuery.setColumnNames(N...)	noCall	noCall	true	1045
2463.json	me.prettyprint.cassandra.service.template.ColumnFamilyUpdater.deleteColumn(N)	noCall	noCall	true	866
1860.json	me.prettyprint.cassandra.model.BasicColumnFamilyDefinition.setComment(java.lang.String)	noCall	noCall	true	1006
1227.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.uuid(byte[], int)	1222.json	me.prettyprint.cassandra.utils.TimeUUIDUtils.toUUID(byte[])	true	954
1989.json	me.prettyprint.cassandra.service.JmxMonitor.generateMonitorName(java.lang.String, java.lang.String)	1987.json	me.prettyprint.cassandra.service.JmxMonitor.registerMonitor(java.lang.String, java.lang.String, java.lang.Object)	true	1260
889.json	me.prettyprint.cassandra.connection.CassandraHostRetryService.add(me.prettyprint.cassandra.service.CassandraHost)	1034.json	me.prettyprint.cassandra.connection.HConnectionManager.markHostAsDown(me.prettyprint.cassandra.service.CassandraHost)	true	1021
1814.json	me.prettyprint.cassandra.model.AbstractSubColumnQuery.setColumnFamily(java.lang.String)	noCall	noCall	true	1072
943.json	me.prettyprint.cassandra.connection.NodeDiscovery.DataCenterValidator.validate(java.lang.String)	noCall	noCall	true	642
1677.json	me.prettyprint.cassandra.model.thrift.ThriftSliceQuery.Anonymous-1edd59d7-9847-48e6-bd4c-4315b88a31cd.doInKeyspace(me.prettyprint.cassandra.service.KeyspaceService)	noCall	noCall	true	1107
1029.json	me.prettyprint.cassandra.connection.HConnectionManager.doTimeoutCheck(me.prettyprint.cassandra.service.CassandraHost)	1021.json	me.prettyprint.cassandra.connection.HConnectionManager.operateWithFailover(me.prettyprint.cassandra.service.Operation<?>)	true	888
842.json	me.prettyprint.cassandra.connection.client.HThriftClient.getCassandra()	843.json	me.prettyprint.cassandra.connection.client.HThriftClient.getCassandra(java.lang.String)	true	1023
1322.json	me.prettyprint.cassandra.model.CounterRowImpl.getColumnSlice()	noCall	noCall	true	789
1551.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_get_indexed_slices()	noCall	noCall	true	918
2567.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getColumn(N)	2565.json	me.prettyprint.cassandra.service.template.SuperCfResultWrapper.getColumnValue(N)	true	847
1540.json	me.prettyprint.cassandra.model.thrift.AbstractThriftClientWrapper.recv_describe_keyspace()	noCall	noCall	true	918
1390.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>, long)	1389.json	me.prettyprint.cassandra.model.MutatorImpl.addSubDelete(K, java.lang.String, SN, N, me.prettyprint.hector.api.Serializer<SN>, me.prettyprint.hector.api.Serializer<N>)	true	845
1824.json	me.prettyprint.cassandra.model.HCounterColumnImpl.setTtl(int)	noCall	noCall	true	858
1174.json	me.prettyprint.cassandra.locking.HLockImpl.setPath(java.lang.String)	noCall	noCall	true	379
1839.json	me.prettyprint.cassandra.model.HSlicePredicate.addColumnName(N)	2252.json,2442.json,2587.json	me.prettyprint.cassandra.service.HColumnFamilyImpl.addColumnName(N),me.prettyprint.cassandra.service.template.SuperCfTemplate.querySuperColumn(K, SN),me.prettyprint.cassandra.service.template.AbstractColumnFamilyTemplate.addColumn(N, me.prettyprint.hector.api.Serializer<?>)	true	887
1403.json	me.prettyprint.cassandra.model.MultigetSubCountQuery.setSuperColumn(SN)	noCall	noCall	true	1054
