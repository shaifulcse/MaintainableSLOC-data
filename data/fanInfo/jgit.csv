MethodJson	MethodSignature	FanInJsons	FanInSignatures	Accurate?	DiscardDays
5937.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.fastKeep(int, int)	5948.json,6006.json	org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, int)	true	3176
4886.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newTempFile()	4883.json,4884.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int)	true	2833
6972.json	org.eclipse.jgit.api.CherryPickResult.CherryPickStatus.toString()	noCall	noCall	true	2636
2419.json	org.eclipse.jgit.transport.PackParser.use(int)	2406.json,2457.json,2409.json,2400.json,2456.json,2407.json	org.eclipse.jgit.transport.PackParser.readPackHeader(),org.eclipse.jgit.transport.PackParser.InflaterStream.close(),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.transport.PackParser.InflaterStream.read(byte[], int, int),org.eclipse.jgit.transport.PackParser.readPackFooter()	true	3176
8628.json	org.eclipse.jgit.util.time.MonotonicSystemClock.Anonymous-9469b5e0-388b-4f34-b8e8-c0d52a2c7d52.blockUntil(java.time.Duration)	noCall	noCall	true	565
7088.json	org.eclipse.jgit.api.Git.submoduleDeinit()	noCall	noCall	true	164
2291.json	org.eclipse.jgit.transport.FetchHeadRecord.write(java.io.Writer)	1958.json	org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	true	3176
6463.json	org.eclipse.jgit.blame.BlameGenerator.getSourceEnd()	null,null	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete()	true	2567
3064.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initScan()	3063.json,3038.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.byObjectId(org.eclipse.jgit.lib.AnyObjectId)	true	297
6038.json	org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(boolean)	7266.json,null,7438.json,6812.json,7195.json,7471.json,7237.json,7020.json,7422.json,null,null,7385.json,null,7436.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHardAndCount(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHard(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2844
5060.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.add(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)	5055.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.partitionTasks()	true	1880
2597.json	org.eclipse.jgit.transport.BaseReceivePack.getClientShallowCommits()	2617.json	org.eclipse.jgit.transport.BaseReceivePack.needCheckConnectivity()	true	1383
5615.json	org.eclipse.jgit.revwalk.DepthWalk.RevWalk.toObjectWalkWithSameObjects()	noCall	noCall	true	674
8590.json	org.eclipse.jgit.util.SystemReader.Default.openSystemConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS)	noCall	noCall	true	2717
9478.json	org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode.toConfigValue()	null	org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseToConfigValue()	true	463
5349.json	org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	7399.json,9551.json,7428.json,2094.json,null,2621.json,280.json,7433.json,1852.json,6953.json,5691.json,2743.json,7385.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.pgm.Merge.isMergedInto(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.MergeCommand.call()	true	3176
2575.json	org.eclipse.jgit.transport.BaseReceivePack.setTimeout(int)	null	org.eclipse.jgit.transport.Daemon.Anonymous-5c6dde27-6f03-413e-abe5-3ff82e0f92a7.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
4358.json	org.eclipse.jgit.internal.storage.file.WindowCursor.pin(org.eclipse.jgit.internal.storage.file.PackFile, long)	4354.json,4351.json,4353.json,4122.json,4355.json	org.eclipse.jgit.internal.storage.file.WindowCursor.inflate(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], boolean),org.eclipse.jgit.internal.storage.file.WindowCursor.copy(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int, int),org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(org.eclipse.jgit.internal.storage.file.PackFile, long, org.eclipse.jgit.internal.storage.pack.PackOutputStream),org.eclipse.jgit.internal.storage.file.PackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.WindowCursor.quickCopy(org.eclipse.jgit.internal.storage.file.PackFile, long, long)	true	3176
541.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.String, java.lang.Object, java.lang.Object)	noCall	noCall	true	3070
8432.json	org.eclipse.jgit.util.FS.isSymLink(java.io.File)	7351.json,null	org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare()	true	1864
6244.json	org.eclipse.jgit.revplot.PlotCommitList.source(org.eclipse.jgit.revwalk.RevWalk)	null,null,null,null,null,null,null,null,null,null,null,null,128.json,null,null,null,null	org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1(),org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2(),org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf(),org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane(),org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927(),org.eclipse.jgit.pgm.Glog.walkLoop(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.createCommitList(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents(),org.eclipse.jgit.revplot.PlotCommitListTest.testMerged(),org.eclipse.jgit.revplot.PlotCommitListTest.testLinear()	true	3176
6795.json	org.eclipse.jgit.events.WorkingTreeModifiedEvent.dispatch(org.eclipse.jgit.events.WorkingTreeModifiedListener)	noCall	noCall	true	299
28.json	org.eclipse.jgit.awtui.AWTPlotRenderer.drawCommitDot(int, int, int, int)	noCall	noCall	true	3176
2408.json	org.eclipse.jgit.transport.PackParser.endInput()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
9525.json	org.eclipse.jgit.lib.RefUpdate.getExpectedOldObjectId()	4979.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean)	true	3176
5187.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.toString()	null	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize()	true	2893
6256.json	org.eclipse.jgit.revplot.PlotCommitList.getFreePosition(java.util.BitSet)	6255.json,6249.json	org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane(java.util.BitSet),org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	1480
2016.json	org.eclipse.jgit.transport.Transport.isRemoveDeletedRefs()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
6156.json	org.eclipse.jgit.storage.pack.PackConfig.isReuseObjects()	5148.json,5113.json,6209.json,6210.json,null,null	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()	true	3176
7096.json	org.eclipse.jgit.api.Git.apply()	null	org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean)	true	2288
6056.json	org.eclipse.jgit.dircache.DirCacheIterator.reset()	null	org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset()	true	2839
2556.json	org.eclipse.jgit.transport.BaseReceivePack.setCheckReceivedObjects(boolean)	null,null,null,null,null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository)	true	3176
5832.json	org.eclipse.jgit.ignore.internal.Strings.lookBehind(java.lang.StringBuilder)	null	org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String)	true	1322
7430.json	org.eclipse.jgit.api.RebaseCommand.getHeadName(org.eclipse.jgit.lib.Ref)	7433.json,7400.json,7428.json	org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	1648
238.json	org.eclipse.jgit.pgm.Diff.ignoreSpaceChange(boolean)	noCall	noCall	true	2899
2702.json	org.eclipse.jgit.transport.PushCertificateIdent.getUserId()	null,null,null	org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateIdentTest.exoticUserId()	true	1088
8344.json	org.eclipse.jgit.util.sha1.SHA1.finish()	null,8345.json,8347.json	org.eclipse.jgit.util.sha1.SHA1.toObjectId(),org.eclipse.jgit.util.sha1.SHA1.digest(),org.eclipse.jgit.util.sha1.SHA1.digest(org.eclipse.jgit.lib.MutableObjectId)	true	468
2629.json	org.eclipse.jgit.transport.BaseReceivePack.release()	2642.json	org.eclipse.jgit.transport.ReceivePack.receive(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	true	2218
9524.json	org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,7438.json,null,null,null,null,null,null,null,7421.json,9550.json,null,null,430.json,null,7434.json,6979.json,null,null,null,4565.json,null,null,null,7388.json,null,9333.json,null,3609.json,null,null,null,null,7471.json,null,null,null,null,null,null,null,7331.json,null,null,7224.json,null,null,null,7214.json,null,null,null,null,1853.json,null,null,null,null,null,6887.json,7385.json,7266.json,null,null,null,null,null,6309.json,167.json,null,null,7008.json,null,null,null,null,7300.json,435.json,null,null,null,null,7436.json	org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.junit.RepositoryTestCase.createBranch(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.updateRef(java.lang.String),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.RefUpdate.link(java.lang.String),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeReflog(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String),org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected(),org.eclipse.jgit.junit.TestRepository.update(java.lang.String, T),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.junit.TestRepository.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.lib.RefTest.testReadLooseRef(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.junit.TestRepository.reset(java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.merge.MergeMessageFormatterTest.setUp(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce(),org.eclipse.jgit.api.StashDropCommand.updateRef(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.pgm.BranchTest.testListDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.api.StashListCommandTest.newStashUpdate(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.lib.RefTest.writeNewRef(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	3176
9537.json	org.eclipse.jgit.lib.RefUpdate.getOldObjectId()	4565.json,4102.json,7008.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean),org.eclipse.jgit.api.ResetCommand.call()	true	3176
3638.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats)	3386.json,3604.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor)	true	286
5895.json	org.eclipse.jgit.dircache.DirCache.unlock()	7019.json,null,null,null,null,6025.json,5877.json,null,null,7040.json,5946.json,7018.json,7020.json,7422.json,null,6979.json,7193.json,7477.json,7530.json,974.json,null,7471.json,null,7243.json,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.lib.DirCacheCheckoutTest.checkout(),org.eclipse.jgit.dircache.DirCacheCheckout.checkout(),org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.dircache.DirCacheEditor.commit(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHardAndCount(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.merge.ResolveMerger.mergeImpl(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyUnlock_RealIndex(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.prescanTwoTrees(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_RealIndex(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode()	true	3176
5726.json	org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.forceToRaw(java.lang.String)	noCall	noCall	true	3176
5676.json	org.eclipse.jgit.revwalk.RewriteGenerator.rewrite(org.eclipse.jgit.revwalk.RevCommit)	5675.json	org.eclipse.jgit.revwalk.RewriteGenerator.next()	true	3176
7236.json	org.eclipse.jgit.api.StashApplyCommand.getStashId()	7237.json	org.eclipse.jgit.api.StashApplyCommand.call()	true	2280
5367.json	org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId)	5413.json,null,5530.json,null,null,280.json,null,null,null,null,null,null,7385.json,null,null,null,null,7428.json,null,7279.json,null,null,null,5414.json,null,7433.json,null,5527.json,null	org.eclipse.jgit.revwalk.RevWalk.assumeShallow(java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches(),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.pgm.Merge.isMergedInto(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane(),org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents(),org.eclipse.jgit.revplot.PlotCommitListTest.testMerged(),org.eclipse.jgit.revplot.PlotCommitListTest.testLinear(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2(),org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1(),org.eclipse.jgit.revwalk.RevWalk.initializeShallowCommits(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927(),org.eclipse.jgit.revwalk.RevCommit.parse(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot()	true	3176
93.json	org.eclipse.jgit.pgm.Status.printStatus(org.eclipse.jgit.api.Status)	92.json	org.eclipse.jgit.pgm.Status.run()	true	1648
4638.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.findPostion(long)	4048.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.findPosition(org.eclipse.jgit.lib.AnyObjectId)	true	1922
5856.json	org.eclipse.jgit.ignore.internal.AbstractMatcher.toString()	noCall	noCall	true	1322
9630.json	org.eclipse.jgit.lib.BranchTrackingStatus.getBehindCount()	null,null	org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase(),org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase()	true	2336
395.json	org.eclipse.jgit.pgm.Main.exit(int, java.lang.Exception)	393.json,391.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	885
119.json	org.eclipse.jgit.pgm.Blame.date(int)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2493
6133.json	org.eclipse.jgit.storage.pack.PackStatistics.getBitmapIndexMisses()	noCall	noCall	true	1094
6537.json	org.eclipse.jgit.diff.RawText.isBinary(java.io.InputStream)	7804.json,6624.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isBinary(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.diff.SimilarityIndex.hashLargeObject(org.eclipse.jgit.lib.ObjectLoader)	true	2903
6460.json	org.eclipse.jgit.blame.BlameGenerator.getSourcePath()	null,null,6427.json	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
2878.json	org.eclipse.jgit.internal.ketch.Proposal.setPushCertificate(org.eclipse.jgit.transport.PushCertificate)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
2251.json	org.eclipse.jgit.transport.TransportHttp.isGzipContent(org.eclipse.jgit.transport.http.HttpConnection)	2259.json,2243.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.TransportHttp.openInputStream(org.eclipse.jgit.transport.http.HttpConnection)	true	564
10116.json	org.eclipse.jgit.archive.TgzFormat.equals(java.lang.Object)	noCall	noCall	true	1521
7249.json	org.eclipse.jgit.api.DescribeCommand.setLong(boolean)	null,274.json	org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.pgm.Describe.run()	true	1189
3807.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId)	3806.json,3809.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	true	2410
6740.json	org.eclipse.jgit.diff.DiffConfig.isNoPrefix()	6548.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean)	true	2838
8294.json	org.eclipse.jgit.util.GitDateParser.Anonymous-bf01b117-105b-4fa9-84f1-fb50fd2db907.initialValue()	noCall	noCall	true	2112
5434.json	org.eclipse.jgit.revwalk.RevObject.hasAll(org.eclipse.jgit.revwalk.RevFlagSet)	null,null,7260.json	org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag(),org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAll.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.DescribeCommand.call()	true	3176
8033.json	org.eclipse.jgit.util.RefMap.SetIterator.remove()	noCall	noCall	true	3060
9027.json	org.eclipse.jgit.lib.EmptyProgressMonitor.endTask()	noCall	noCall	true	2093
283.json	org.eclipse.jgit.pgm.Fetch.notags(boolean)	noCall	noCall	true	1688
5508.json	org.eclipse.jgit.revwalk.DateRevQueue.next()	null,null,null,null,5575.json,5563.json,1375.json	org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO(),org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie(),org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneEmpty(),org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder(),org.eclipse.jgit.revwalk.PendingGenerator.next(),org.eclipse.jgit.revwalk.MergeBaseGenerator._next(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	true	3176
2058.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	noCall	noCall	true	3176
6297.json	org.eclipse.jgit.gitrepo.RepoCommand.setTargetURI(java.lang.String)	null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	424
294.json	org.eclipse.jgit.pgm.CommandRef.create()	393.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[])	false	3176
2876.json	org.eclipse.jgit.internal.ketch.Proposal.setMessage(java.lang.String)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
6152.json	org.eclipse.jgit.storage.pack.PackStatistics.getMessage()	null	org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	1094
379.json	org.eclipse.jgit.pgm.Log.addNoteMap(java.lang.String)	378.json	org.eclipse.jgit.pgm.Log.run()	true	2663
3953.json	org.eclipse.jgit.internal.storage.file.RefDirectory.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)	3951.json,3953.json	org.eclipse.jgit.internal.storage.file.RefDirectory.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectory.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectIdRef)	true	3059
3630.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setBlockSize(org.eclipse.jgit.internal.storage.pack.PackExt, int)	3638.json,3782.json,3510.json,3783.json,3646.json,3382.json,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	324
10028.json	org.eclipse.jgit.lfs.server.s3.SignerV4.addHostHeader(java.net.URL, java.util.Map<java.lang.String, java.lang.String>)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
7694.json	org.eclipse.jgit.treewalk.filter.PathFilter.matchFilter(org.eclipse.jgit.treewalk.TreeWalk)	7693.json	org.eclipse.jgit.treewalk.filter.PathFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
3387.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.getRepositoryName()	2757.json,1529.json,3389.json,3390.json,10400.json,3388.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.computeKey(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, long),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.equals(java.lang.Object),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.toString(),org.eclipse.jgit.http.server.ServletUtils.identify(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.hashCode()	true	2410
7968.json	org.eclipse.jgit.util.LfsFactory.isAvailable()	1111.json	org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	true	98
7555.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.hasId()	noCall	noCall	true	2838
9835.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean)	9834.json,null	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...)	true	599
2728.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.abort(java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	2723.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	872
9945.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(java.lang.Object)	noCall	noCall	true	856
9143.json	org.eclipse.jgit.lib.RefRename.getRefLogIdent()	4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	3176
8647.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[])	8646.json,8716.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset, java.nio.charset.Charset),org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(java.nio.charset.Charset[])	true	3176
5931.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	noCall	noCall	true	3176
8274.json	org.eclipse.jgit.util.LongMap.remove(long)	null,null,2403.json,null,null	org.eclipse.jgit.util.LongMapTest.testRemoveOne(),org.eclipse.jgit.util.LongMapTest.testRemoveCollision1(),org.eclipse.jgit.transport.PackParser.firstChildOf(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.util.LongMapTest.testRemoveCollision2(),org.eclipse.jgit.util.LongMapTest.testEmptyMap()	true	3176
2349.json	org.eclipse.jgit.transport.RefSpec.getDestination()	null,1998.json,null,null,null,2369.json,null,8834.json,2367.json,2354.json,null,null,null,null,null,null,null,null,null,null,2366.json,1966.json,null,1968.json,2355.json,null,1995.json,null,null,2033.json,null,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.Transport.findTrackingRefName(java.lang.String, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.sourceOnlywithWildcard(),org.eclipse.jgit.transport.RefSpec.toString(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(java.lang.String, java.lang.String),org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object),org.eclipse.jgit.transport.RefSpec.matchDestination(java.lang.String),org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.transport.RefSpecTest.onlyWildCard(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.RefSpec.hashCode(),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.RefSpec.matchDestination(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
3474.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.Out.read(long, java.nio.ByteBuffer)	noCall	noCall	true	2410
64.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.configure(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)	noCall	noCall	true	1572
2644.json	org.eclipse.jgit.transport.ReceivePack.service()	2642.json	org.eclipse.jgit.transport.ReceivePack.receive(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	true	3176
9438.json	org.eclipse.jgit.lib.CommitBuilder.setAuthor(org.eclipse.jgit.lib.PersonIdent)	null,7224.json,null,null,null,null,1034.json,7037.json,null,null,2850.json,null,6979.json,null,6309.json,null,2752.json,167.json,null,4931.json,null,null,2840.json,null,2851.json,null,null,213.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.junit.TestRepository.setAuthorAndCommitter(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.api.StashCreateCommand.createBuilder(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
3595.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getStreamRatio()	noCall	noCall	true	1144
6620.json	org.eclipse.jgit.diff.RawTextComparator.findReverseLine(org.eclipse.jgit.util.IntList, int, int)	6618.json	org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.Edit)	true	2820
2077.json	org.eclipse.jgit.transport.PacketLineIn.readACK(org.eclipse.jgit.lib.MutableObjectId)	null,null,null,null,null,null,null,null,1908.json,null,null	org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid3(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_NAK(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid4(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcontinue1(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ERR(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACK1(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid1(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid2(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKready1(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcommon1()	true	3176
6409.json	org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getChildCount()	null	org.eclipse.jgit.blame.Candidate.ReverseCandidate.getParentCount()	true	2567
3763.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getIoStats()	noCall	noCall	true	387
8870.json	org.eclipse.jgit.lib.Config.escapeValue(java.lang.String)	8912.json,null,null	org.eclipse.jgit.lib.Config.toText(),org.eclipse.jgit.lib.ConfigTest.assertValueRoundTrip(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testEscapeSpacesOnly()	true	3176
2262.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.invalidAdvertisement(java.lang.String)	2257.json,2260.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getPackNames(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.readAdvertisedImpl(java.io.BufferedReader)	true	3176
8882.json	org.eclipse.jgit.lib.Config.getStringList(java.lang.String, java.lang.String, java.lang.String)	null,89.json,null,9411.json,7188.json,null,null,1270.json,null,null,null,8882.json,null,null,null	org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig),org.eclipse.jgit.lib.ConfigTest.testSetStringListWithEmptyValue(),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getRefSpecs(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.lib.ConfigTest.testParsedEmptyString(),org.eclipse.jgit.lib.ConfigTest.testEmptyValueAtEof(),org.eclipse.jgit.transport.RemoteConfig.getReplacements(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.lib.Config.getStringList(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue(),org.eclipse.jgit.lib.ConfigTest.testExplicitlySetEmptyString(),org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList()	true	3176
2901.json	org.eclipse.jgit.internal.ketch.KetchLeader.initialize()	2900.json	org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal)	true	872
5156.json	org.eclipse.jgit.internal.storage.pack.PackWriter.State.toString()	noCall	noCall	true	2399
4143.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	noCall	noCall	true	2900
9539.json	org.eclipse.jgit.lib.RefUpdate.setPushCertificate(org.eclipse.jgit.transport.PushCertificate)	9333.json	org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand)	true	1088
3984.json	org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String)	3961.json,null,4565.json,4489.json,null,null,4500.json,3977.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.getLockFile(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	3176
5830.json	org.eclipse.jgit.ignore.internal.Strings.checkWildCards(java.lang.String)	5846.json	org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(java.lang.String, java.lang.Character, boolean, boolean)	true	1299
8893.json	org.eclipse.jgit.lib.Config.addChangeListener(org.eclipse.jgit.events.ConfigChangedListener)	noCall	noCall	true	2852
7076.json	org.eclipse.jgit.api.Git.notesAdd()	null,null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.NotesCommandTest.setUp()	true	2618
1984.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	3176
3798.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress(long, int, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3806.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	true	2410
8725.json	org.eclipse.jgit.patch.CombinedHunkHeader.getOldImage()	null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
1786.json	org.eclipse.jgit.transport.SideBandInputStream.beginTask(int)	1785.json	org.eclipse.jgit.transport.SideBandInputStream.doProgressLine(java.lang.String)	true	3011
8937.json	org.eclipse.jgit.lib.ObjectIdSerializer.write(java.io.OutputStream, org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.lib.ObjectIdSerializerTest.writeAndReadBackFromTempFile(org.eclipse.jgit.lib.ObjectId)	true	104
8790.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.clear()	null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear()	true	3176
10173.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.JschBugFixingConfig.getUser()	noCall	noCall	true	148
8158.json	org.eclipse.jgit.util.io.NullOutputStream.write(byte[], int, int)	noCall	noCall	true	2574
1800.json	org.eclipse.jgit.transport.DaemonService.handles(java.lang.String)	1941.json	org.eclipse.jgit.transport.Daemon.matchService(java.lang.String)	true	3176
8872.json	org.eclipse.jgit.lib.Config.getInt(java.lang.String, java.lang.String, int)	null,112.json,4847.json,null,1494.json,6209.json,7179.json,3156.json	org.eclipse.jgit.merge.ResolveMerger.getInCoreLimit(org.eclipse.jgit.lib.Config),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.internal.storage.file.GC.getLooseObjectLimit(),org.eclipse.jgit.internal.storage.file.GC.tooManyPacks(),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean),org.eclipse.jgit.internal.storage.reftable.ReftableConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
1993.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String)	1992.json,1985.json,1987.json,1989.json,1983.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	true	3176
2235.json	org.eclipse.jgit.transport.TransportHttp.constructSslTrustItems(java.lang.Throwable)	2234.json	org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	270
6443.json	org.eclipse.jgit.blame.BlameGenerator.newFlag(java.lang.String)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	1515
5712.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAll(org.eclipse.jgit.revwalk.RevFlagSet)	noCall	noCall	true	3176
5372.json	org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.AnyObjectId)	6567.json,null,1041.json,null,178.json,null,4971.json,925.json,null,4829.json,9257.json,6835.json,null,6981.json,7237.json,null,null,7370.json,null,2839.json,null	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.DiffCommandTest.getTreeIterator(java.lang.String),org.eclipse.jgit.merge.Merger.merge(boolean, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.Scanner.toTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.ThreeWayMerger.setBase(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.lib.BlobBasedConfig.asTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.ResetCommandTest.inHead(java.lang.String),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.merge.MergerTest.readBlob(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.junit.TestRepositoryTest.blobAsString(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	false	3176
8055.json	org.eclipse.jgit.util.FS_POSIX.canExecute(java.io.File)	noCall	noCall	true	1864
6178.json	org.eclipse.jgit.storage.pack.PackConfig.getDeltaCacheLimit()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	2893
896.json	org.eclipse.jgit.ant.tasks.GitAddTask.setSrc(java.io.File)	noCall	noCall	true	2575
3353.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setConvertToReftable(boolean)	null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	277
3686.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stack()	3607.json,null,3133.json,3605.json,3606.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toPruneTopOfStack(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.nextUpdateIndex(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.reader(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	235
9318.json	org.eclipse.jgit.lib.BatchRefUpdate.getCommands()	1973.json,null,1951.json,null,null,4927.json,3253.json,null	org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnNonEmptyRef(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.getPending(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnEmptyRef()	true	2210
7855.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String)	7824.json,7856.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String)	true	106
7358.json	org.eclipse.jgit.api.CleanCommand.setCleanDirectories(boolean)	null,null,null,null,null,437.json,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2031
194.json	org.eclipse.jgit.pgm.debug.LfsStore.checkOptions()	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	843
6247.json	org.eclipse.jgit.revplot.PlotCommitList.continueActiveLanes(org.eclipse.jgit.revplot.PlotCommit)	6246.json	org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	1480
3912.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList.getLastModified()	noCall	noCall	true	691
5977.json	org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode)	7019.json,null,null,null,4957.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6037.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6981.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7018.json,null,7481.json,null,null,null,7530.json,6034.json,null,null,7244.json,null,null,978.json,null,null,null,null,null,4959.json,null,null,null,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,null,null,977.json,null,null,null,null,null,6309.json,null,947.json,null,null,null,null,null,null,null,null,null,null,null,7243.json,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-2a6372ae-6059-4c97-ab82-b3cd539d6461.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-d2bcfbca-c807-42c8-b450-e4f516025a0c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-1557e85b-61a0-4e02-8454-90207a52e0ab.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.transport.PushCertificateStore.Anonymous-fe79e128-9083-4b81-b2f4-6c80451b78fc.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-443acfed-3b78-43b0-a8e7-2b618fd40d2e.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleSyncTest.Anonymous-94445b78-0b3a-4040-8587-0da1f1b7f104.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.junit.TestRepository.file(java.lang.String, org.eclipse.jgit.revwalk.RevBlob),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-d392b7d4-b35f-42c0-8fae-c1f11f55f96b.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.junit.RepositoryTestCase.createEntry(java.lang.String, org.eclipse.jgit.lib.FileMode, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-cc8252bb-2d91-42fd-82ba-33ba83b1f93a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.Anonymous-1b7b7ff5-db88-4a24-a818-a3cff5a5a41d.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CheckoutCommand.Anonymous-3bca28ea-811e-499e-a006-1212e97d737f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-f3734649-e37e-4aba-8ea2-e1beea84884f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-5f6e3364-e172-47c3-b620-a0f11100679e.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-066385ad-87a0-414e-a0c3-d529ce2dc736.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-f8a67438-7fdf-4222-81f8-bba3608db565.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-5d5ba15f-3722-424c-9b41-f433011c7499.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleInitTest.Anonymous-b441f1c0-872a-4919-8290-8c57038f9c56.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.Anonymous-e8f4e51a-a939-4cd4-b859-d922e2db00cc.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-d9954eb0-6932-4eee-8580-3b0ab6e2c4cf.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.merge.MergerTest.addSubmoduleToIndex(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-38969a75-790c-492d-94e0-4ea156d38f71.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-6f3b85b3-8750-4523-aa3e-104a4395e6da.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-9a386457-47b8-49fe-b594-d33b1bbb614a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.DirCacheCheckoutTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-88796950-43a3-4653-b09b-10b9738efc76.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.CommitBuilder.Anonymous-cba597cd-d9be-4c30-a634-c091776bcd6f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.diff.DiffEntryTest.Anonymous-e0e2f314-33c7-4613-be19-e2f98e6bbecd.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-b61394f9-d2eb-4051-bd55-b56f8e0eace4.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-a06be1ec-290a-4622-a628-9c3118079d72.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.Anonymous-b9b85d10-b9e7-45e5-a9d9-19f754156ab0.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCachePathEditTest.createEntry(java.lang.String, int),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-8a0fb3e5-2410-43f2-be72-ab99878a6f32.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-e7744f8b-b2bc-463c-82ef-d72e2aff38b9.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-75026e86-f81b-4f82-9d46-818e079bb14a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-4c4f9ba4-cc90-4a4d-a369-2d6b2701da8c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.Anonymous-679fdefb-f411-473f-b306-8c2d2a9e5d47.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.lib.IndexDiffTest.Anonymous-5add3e4d-870d-4e6e-b369-cee482373695.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.MergerTest.Anonymous-4885835b-7585-4757-8c4e-2b41ffbee534.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-c5482093-b369-4a07-8469-1a285532c323.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.submodule.SubmoduleSyncTest.Anonymous-48bebf9b-5cee-4c03-8acd-c232d2972cab.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-2d7490f1-90cc-4363-942b-5d9c5f105eac.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCachePathEditTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.CommitBuilder.add(java.lang.String, org.eclipse.jgit.revwalk.RevBlob),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-e7ae5613-b0f2-4232-a458-9a45ef900508.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(java.lang.String, java.io.File, org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCacheBuilder, int),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-1eff1177-0101-4588-af3d-718d1a4aaba7.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.Anonymous-ae871623-73f1-4147-b893-159858c7d8de.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-4cee167d-eb08-46eb-b180-6372dc876a2d.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-bdeb72d3-3fea-44bd-9cbf-ad441e5fcf71.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long),org.eclipse.jgit.api.CommitCommandTest.addUnmergedEntry(java.lang.String, org.eclipse.jgit.dircache.DirCacheBuilder),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-71bc2fad-08d5-4423-9bbc-74b13130c42f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.Anonymous-4560bf5f-aa19-4ff2-8eb2-daebcbdac2dd.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-3acfdc27-8e94-41d7-83c8-cfc147400505.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.junit.TestRepository.Anonymous-d04f31ac-4953-40d9-b01c-d1bfb4cff22f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-8e0b65d9-8af2-4c63-9eaf-f0e9d1afbfd0.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.lib.IndexDiffTest.add(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
10252.json	org.eclipse.jgit.http.server.glue.MetaServlet.getDelegateFilter()	noCall	noCall	true	2438
5423.json	org.eclipse.jgit.revwalk.RevCommitList.isPending()	noCall	noCall	true	3176
427.json	org.eclipse.jgit.pgm.Branch.deleteForce(java.util.List<java.lang.String>)	noCall	noCall	true	889
5634.json	org.eclipse.jgit.revwalk.FollowFilter.getRenameCallback()	5657.json	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig)	true	2420
497.json	org.eclipse.jgit.junit.time.MonotonicFakeClock.propose()	noCall	noCall	true	565
2900.json	org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
6153.json	org.eclipse.jgit.storage.pack.PackStatistics.getObjectTypes()	noCall	noCall	true	1094
6466.json	org.eclipse.jgit.blame.BlameGenerator.getRegionLength()	null,null,6423.json	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.blame.BlameResult.computeNext()	true	2567
4044.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.getSize()	noCall	noCall	true	221
4085.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long)	4140.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	3176
8297.json	org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar)	null,null,null	org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.util.GitDateParserTest.never()	true	2112
3827.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.elapsedMicros(long)	3789.json,3791.json,3825.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	387
4353.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(org.eclipse.jgit.internal.storage.file.PackFile, long, org.eclipse.jgit.internal.storage.pack.PackOutputStream)	4122.json	org.eclipse.jgit.internal.storage.file.PackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2683
2285.json	org.eclipse.jgit.transport.SshTransport.close()	noCall	noCall	true	3176
9899.json	org.eclipse.jgit.lfs.BuiltinLFS.register()	390.json,null,null,null,null	org.eclipse.jgit.pgm.Main.main(java.lang.String[]),org.eclipse.jgit.api.AddCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup()	true	98
1138.json	org.eclipse.jgit.notes.NoteMap.get(org.eclipse.jgit.lib.AnyObjectId)	null,null,1140.json,1141.json,null,382.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes(),org.eclipse.jgit.notes.NoteMap.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.NoteMap.getCachedBytes(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes(),org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut(),org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs(),org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs(),org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict(),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs()	true	2767
5316.json	org.eclipse.jgit.attributes.AttributesHandler.mergeGlobalAttributes(java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes)	5315.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes()	true	849
8660.json	org.eclipse.jgit.patch.FileHeader.parseOldName(int, int)	8659.json,8663.json,8717.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
475.json	org.eclipse.jgit.junit.MockSystemReader.getSimpleDateFormat(java.lang.String)	noCall	noCall	true	2296
6421.json	org.eclipse.jgit.blame.BlameResult.getSourceLine(int)	null,112.json,null,null,null,null,null	org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines()	true	2567
6546.json	org.eclipse.jgit.diff.DiffFormatter.setRepository(org.eclipse.jgit.lib.Repository)	null,null,7282.json,null,247.json,null,null,null,null,null,378.json,269.json,7425.json	org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffNullToNull(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.diff.DiffFormatterTest.setUp(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	true	2899
3508.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginObject(int, long)	3502.json,3503.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	true	2410
5907.json	org.eclipse.jgit.dircache.DirCache.writeTree(org.eclipse.jgit.lib.ObjectInserter)	4965.json,null,6309.json,null,null,null,7040.json,null,null,null,null,945.json,null,1005.json,null,6979.json	org.eclipse.jgit.internal.storage.reftree.RefTree.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.createTree(java.lang.String...),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.createTree(java.lang.String...),org.eclipse.jgit.api.CommitCommand.call()	true	3176
9018.json	org.eclipse.jgit.lib.Repository.readGitDirectoryFile(java.lang.String)	9013.json,9009.json,9008.json,9006.json	org.eclipse.jgit.lib.Repository.readOrigHead(),org.eclipse.jgit.lib.Repository.readRevertHead(),org.eclipse.jgit.lib.Repository.readCherryPickHead(),org.eclipse.jgit.lib.Repository.readMergeHeads()	true	2622
3297.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexRef(org.eclipse.jgit.lib.Ref, long)	3295.json,3293.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortAndWriteRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>)	true	297
6059.json	org.eclipse.jgit.dircache.DirCacheIterator.next(int)	null,5932.json,null,null	org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheBuildIterator.skip(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127()	true	3176
5437.json	org.eclipse.jgit.revwalk.RevObject.remove(org.eclipse.jgit.revwalk.RevFlag)	null,5417.json,331.json,null	org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlag(),org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag, int, int),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean),org.eclipse.jgit.blame.Candidate.remove(org.eclipse.jgit.revwalk.RevFlag)	true	3176
8694.json	org.eclipse.jgit.patch.HunkHeader.getBuffer()	6826.json,6829.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(org.eclipse.jgit.patch.FileHeader)	true	3176
6125.json	org.eclipse.jgit.storage.pack.PackStatistics.getInterestingObjects()	noCall	noCall	true	1094
4009.json	org.eclipse.jgit.internal.storage.file.PackInserter.endObject(org.eclipse.jgit.lib.ObjectId, long)	4007.json,4006.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, byte[], int, int)	true	221
5247.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[])	3806.json,209.json,4140.json,null,3811.json,2398.json,4145.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.pgm.debug.ShowPackDelta.run(),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	2900
6134.json	org.eclipse.jgit.storage.pack.PackStatistics.getTotalDeltas()	null,3636.json	org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics)	true	1094
10100.json	org.eclipse.jgit.lfs.server.LfsProtocolServlet.LfsRequest.getOperation()	noCall	noCall	true	684
2552.json	org.eclipse.jgit.transport.BaseReceivePack.setBiDirectionalPipe(boolean)	noCall	noCall	false	3070
8458.json	org.eclipse.jgit.util.FS.Attributes.isDirectory()	null,null,null	org.eclipse.jgit.treewalk.FileTreeIterator.NoGitlinksStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-0b68a76b-6218-4583-b1f3-1f133dc97b00.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIterator.DefaultFileModeStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes)	true	1579
2348.json	org.eclipse.jgit.transport.RefSpec.setSource(java.lang.String)	1965.json,null,null,null	org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RefSpecTest.testSetSource(),org.eclipse.jgit.transport.RefSpecTest.invalidSetSource(),org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull()	true	3176
9219.json	org.eclipse.jgit.lib.AbbreviatedObjectId.toString()	noCall	noCall	true	3176
4763.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.listPackDirectory()	4761.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
2862.json	org.eclipse.jgit.internal.ketch.LogIndex.toString()	noCall	noCall	true	872
8026.json	org.eclipse.jgit.util.RefMap.toRefName(java.lang.String)	8015.json,8016.json,8017.json	org.eclipse.jgit.util.RefMap.get(java.lang.Object),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefMap.remove(java.lang.Object)	true	3060
2067.json	org.eclipse.jgit.transport.BaseConnection.getRefs()	2308.json,1913.json,1518.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised(),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3721.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId)	3534.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.has(org.eclipse.jgit.lib.AnyObjectId)	true	2410
10181.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getStrictHostKeyChecking()	10157.json	org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host)	true	3176
3098.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef()	3058.json,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next()	true	297
3561.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config)	noCall	noCall	true	2410
1694.json	org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	1693.json,1699.json	org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.ListParser.list()	true	3176
10119.json	org.eclipse.jgit.archive.TarFormat.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	10118.json	org.eclipse.jgit.archive.TarFormat.createArchiveOutputStream(java.io.OutputStream)	true	2013
8680.json	org.eclipse.jgit.patch.Patch.parseTraditionalPatch(byte[], int, int)	8677.json	org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	true	3176
9527.json	org.eclipse.jgit.lib.RefUpdate.isForceUpdate()	null,null,9551.json,null	org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-d62086ab-3a80-4cd3-9426-bc33b4a10b34.isForceUpdate(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call()	true	3176
3312.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexPosition(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section)	3310.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter()	true	297
5911.json	org.eclipse.jgit.dircache.DirCacheTree.write(byte[], java.io.OutputStream)	5911.json,5892.json	org.eclipse.jgit.dircache.DirCacheTree.write(byte[], java.io.OutputStream),org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream)	true	3176
2323.json	org.eclipse.jgit.transport.InternalFetchConnection.Anonymous-514b2954-31df-43f2-8493-e88a63a26832.run()	noCall	noCall	true	3176
9136.json	org.eclipse.jgit.lib.UserConfig.isCommitterEmailImplicit()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	2643
1878.json	org.eclipse.jgit.transport.TransportGitSsh.openPush()	noCall	noCall	true	3176
3693.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.peel(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	235
3657.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onStoreStream(byte[], int, int)	noCall	noCall	true	2410
1288.json	org.eclipse.jgit.transport.RemoteConfig.getReceivePack()	null,1265.json,null,2022.json	org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testUnknown(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	true	3176
4004.json	org.eclipse.jgit.internal.storage.file.PackInserter.setCompressionLevel(int)	noCall	noCall	true	221
4216.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.notRacyClean(long)	4204.json,4218.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot),org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(long)	true	3176
8136.json	org.eclipse.jgit.util.StringUtils.toBooleanOrNull(java.lang.String)	6744.json,8135.json	org.eclipse.jgit.diff.DiffConfig.parseRenameDetectionType(java.lang.String),org.eclipse.jgit.util.StringUtils.toBoolean(java.lang.String)	true	2749
2420.json	org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source, int)	2406.json,2409.json,2453.json,2400.json,2418.json,2456.json,2407.json	org.eclipse.jgit.transport.PackParser.readPackHeader(),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.transport.PackParser.InflaterStream.open(org.eclipse.jgit.transport.PackParser.Source, long),org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source),org.eclipse.jgit.transport.PackParser.InflaterStream.read(byte[], int, int),org.eclipse.jgit.transport.PackParser.readPackFooter()	true	3176
7652.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.skip()	7867.json,7612.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntriesEqual(),org.eclipse.jgit.treewalk.TreeWalk.skipEntriesEqual()	true	3176
3586.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.get(java.lang.String)	noCall	noCall	true	2410
2508.json	org.eclipse.jgit.transport.TransportAmazonS3.openFetch()	noCall	noCall	true	3176
2239.json	org.eclipse.jgit.transport.TransportHttp.isValidRedirect(java.net.URL, java.lang.String, java.lang.String)	null	org.eclipse.jgit.transport.TransportHttp.redirect(java.lang.String, java.lang.String, int)	true	297
8829.json	org.eclipse.jgit.lib.BranchConfig.isRemoteLocal()	8827.json	org.eclipse.jgit.lib.BranchConfig.getTrackingBranch()	true	1408
923.json	org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S)	null,null	org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.MergeAlgorithmTest.merge(java.lang.String, java.lang.String, java.lang.String)	true	3076
1383.json	org.eclipse.jgit.transport.OperationResult.getAdvertisedRef(java.lang.String)	null,124.json,null,null,6889.json,null,null,7131.json,6887.json,null	org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.api.CloneCommand.findBranchToCheckout(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle(),org.eclipse.jgit.transport.PushProcessTest.testPushResult(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate)	true	3176
239.json	org.eclipse.jgit.pgm.Diff.ignoreAllSpace(boolean)	noCall	noCall	true	2899
1099.json	org.eclipse.jgit.hooks.PrePushHook.setRemoteName(java.lang.String)	1993.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String)	true	950
299.json	org.eclipse.jgit.pgm.Daemon.service(org.eclipse.jgit.transport.Daemon, java.lang.String)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
2450.json	org.eclipse.jgit.transport.PackParser.DeltaVisit.next()	2397.json,2398.json,2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	2718
4737.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
1100.json	org.eclipse.jgit.hooks.PrePushHook.getRemoteName()	9888.json	org.eclipse.jgit.lfs.LfsPrePushHook.remote()	true	102
3752.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, boolean)	3748.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean)	true	1893
4132.json	org.eclipse.jgit.internal.storage.file.PackFile.beginWindowCache()	4281.json	org.eclipse.jgit.internal.storage.file.WindowCache.load(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
1685.json	org.eclipse.jgit.transport.AmazonS3.list(java.lang.String, java.lang.String)	null,2521.json,2515.json,360.json	org.eclipse.jgit.transport.WalkEncryptionTest.Base.remoteDelete(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getPackNames(),org.eclipse.jgit.pgm.AmazonS3Client.run()	true	3176
5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	5103.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	3176
1825.json	org.eclipse.jgit.transport.TransportBundleFile.close()	noCall	noCall	true	3176
144.json	org.eclipse.jgit.pgm.debug.ShowDirCache.run()	noCall	noCall	true	3176
1964.json	org.eclipse.jgit.transport.FetchProcess.expandFetchTags()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
8649.json	org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[])	8647.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[])	true	3176
5157.json	org.eclipse.jgit.internal.storage.pack.PackExt.values()	3443.json,4729.json,3608.json,4808.json,4761.json,3444.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.newCounters(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.packOnlyContainsReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.file.GC.prunePack(java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getStat(java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicLong[]>, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	true	1927
4710.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	2692
6734.json	org.eclipse.jgit.diff.DiffEntry.toString()	noCall	noCall	true	2886
5970.json	org.eclipse.jgit.dircache.DirCacheEntry.setUpdateNeeded(boolean)	null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.lib.DirCacheCheckoutTest.Anonymous-ae871623-73f1-4147-b893-159858c7d8de.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead()	true	2893
7263.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.setFetch(boolean)	null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	263
5642.json	org.eclipse.jgit.revwalk.DepthGenerator.outputType()	noCall	noCall	true	2485
1980.json	org.eclipse.jgit.transport.Transport.unregister(org.eclipse.jgit.transport.TransportProtocol)	null,null,null,null,null	org.eclipse.jgit.transport.PushConnectionTest.tearDown(),org.eclipse.jgit.transport.AtomicPushTest.tearDown(),org.eclipse.jgit.transport.TestProtocolTest.tearDown(),org.eclipse.jgit.transport.PushOptionsTest.tearDown(),org.eclipse.jgit.transport.UploadPackTest.tearDown()	true	2645
4047.json	org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.load()	4046.json	org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.contains(org.eclipse.jgit.lib.AnyObjectId)	true	892
8088.json	org.eclipse.jgit.util.NB.encodeInt24(byte[], int, int)	null,3278.json	org.eclipse.jgit.util.NBTest.testEncodeInt24(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt24(int)	true	305
2581.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowQuiet()	noCall	noCall	true	1117
336.json	org.eclipse.jgit.pgm.opt.SubcommandHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
7443.json	org.eclipse.jgit.api.RebaseCommand.setOperation(org.eclipse.jgit.api.RebaseCommand.Operation)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7131.json,null	org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRepositoryStateChecks(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict()	true	2756
1793.json	org.eclipse.jgit.transport.SignedPushConfig.setNonceGenerator(org.eclipse.jgit.transport.NonceGenerator)	noCall	noCall	true	1088
7514.json	org.eclipse.jgit.api.NameRevCommand.simplify(java.lang.String)	7502.json	org.eclipse.jgit.api.NameRevCommand.call()	true	1917
6005.json	org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry)	7019.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7018.json,4966.json,null,null,null,7530.json,6034.json,null,null,null,null,978.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7040.json,null,null,6037.json,null,null,null,null,null,null,977.json,null,null,null,null,6309.json,null,947.json,null,null,null,6981.json,null,null,null,7243.json,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths(),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.verifyStageState(org.eclipse.jgit.lib.IndexDiff.StageState, int...),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage(),org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(java.lang.String, java.io.File, org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCacheBuilder, int),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.createTree(java.lang.String...),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long),org.eclipse.jgit.api.CommitCommandTest.addUnmergedEntry(java.lang.String, org.eclipse.jgit.dircache.DirCacheBuilder),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.createTree(java.lang.String...),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
8494.json	org.eclipse.jgit.util.FileUtils.lastModified(java.io.File)	8405.json	org.eclipse.jgit.util.FS.lastModified(java.io.File)	true	988
1665.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeTag()	noCall	noCall	true	629
5492.json	org.eclipse.jgit.revwalk.ObjectWalk.parseMode(byte[], int, int, org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit)	5490.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject()	true	2493
7339.json	org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(org.eclipse.jgit.revwalk.RevCommit)	null,7471.json,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit()	true	2800
6625.json	org.eclipse.jgit.diff.SimilarityIndex.hash(byte[], int, int)	6623.json,null	org.eclipse.jgit.diff.SimilarityIndex.hash(org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.diff.SimilarityIndexTest.hash(java.lang.String)	true	2899
6956.json	org.eclipse.jgit.api.Status.isClean()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7230.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.CheckoutCommandTest.assertRepositoryCondition(int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict()	true	2349
8591.json	org.eclipse.jgit.util.SystemReader.Default.openUserConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS)	noCall	noCall	true	3176
2270.json	org.eclipse.jgit.transport.TransportHttp.Service.openResponse()	null,null	org.eclipse.jgit.transport.TransportHttp.LongPollService.execute(),org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute()	true	2186
5166.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[])	null,5165.json,5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.insert(byte[]),org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(java.lang.String),org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2900
8037.json	org.eclipse.jgit.util.RefMap.Ent.hashCode()	noCall	noCall	true	3060
8324.json	org.eclipse.jgit.util.Base64.decode(java.lang.String)	1777.json,null,null,null	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.validate(java.net.HttpURLConnection, java.lang.String),org.eclipse.jgit.util.Base64Test.testDecode(),org.eclipse.jgit.util.Base64Test.testDecodeFail_NonBase64Character(),org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode()	true	3176
5362.json	org.eclipse.jgit.revwalk.RevWalk.setRetainBody(boolean)	4988.json,2842.json,2740.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.ketch.LagCheck.initRevWalk()	true	3176
5304.json	org.eclipse.jgit.attributes.Attribute.equals(java.lang.Object)	noCall	noCall	true	1249
2132.json	org.eclipse.jgit.transport.PushCertificate.getCommands()	null,null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithSomeMatchingRefs(),org.eclipse.jgit.transport.PushCertificateStore.buildMessage(org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
2861.json	org.eclipse.jgit.internal.ketch.LogIndex.describeForLog()	2774.json,2910.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.str(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	true	872
6702.json	org.eclipse.jgit.diff.RenameDetector.mode(org.eclipse.jgit.diff.DiffEntry)	6699.json	org.eclipse.jgit.diff.RenameDetector.bestPathMatch(org.eclipse.jgit.diff.DiffEntry, java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2886
5310.json	org.eclipse.jgit.attributes.FilterCommandRegistry.register(java.lang.String, org.eclipse.jgit.attributes.FilterCommandFactory)	null,9897.json,9894.json,null,null	org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.lfs.CleanFilter.register(),org.eclipse.jgit.lfs.SmudgeFilter.register(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter()	true	628
2160.json	org.eclipse.jgit.transport.PushCertificateParser.fromReader(java.io.Reader)	null,null,null,null,null,2161.json	org.eclipse.jgit.transport.PushCertificateStoreTest.newCert(java.lang.String...),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseMultipleFromStream(),org.eclipse.jgit.transport.PushCertificateStore.read(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.transport.PushCertificateParserTest.testParseString(),org.eclipse.jgit.transport.PushCertificateParser.fromString(java.lang.String)	true	1067
10319.json	org.eclipse.jgit.http.server.UploadPackServlet.Anonymous-e642b138-4a89-4fb1-ad8e-9c7bdcac97f2.flush()	noCall	noCall	true	2909
1039.json	org.eclipse.jgit.merge.Merger.setObjectInserter(org.eclipse.jgit.lib.ObjectInserter)	noCall	noCall	true	2187
7710.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.insert(byte[], int)	7711.json,7706.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.grow(),org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte[], int, int)	true	1965
1884.json	org.eclipse.jgit.transport.TransportGitSsh.ExtSession.createProcess(java.util.List<java.lang.String>)	1883.json	org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int)	true	202
1318.json	org.eclipse.jgit.transport.BundleFetchConnection.duplicateAdvertisement(java.lang.String)	1317.json	org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2()	true	3176
5415.json	org.eclipse.jgit.revwalk.RevCommitList.clear()	6243.json	org.eclipse.jgit.revplot.PlotCommitList.clear()	true	3176
8509.json	org.eclipse.jgit.util.FileUtils.normalize(java.lang.String)	8065.json	org.eclipse.jgit.util.FS_POSIX.normalize(java.lang.String)	true	988
5516.json	org.eclipse.jgit.revwalk.DateRevQueue.newEntry(org.eclipse.jgit.revwalk.RevCommit)	5507.json	org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	true	3176
7444.json	org.eclipse.jgit.api.RebaseCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7266.json,7131.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.PullCommand.call()	true	2756
4855.json	org.eclipse.jgit.internal.storage.file.FileRepository.getGitwebDescription()	4856.json	org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String)	true	572
3788.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader)	3781.json,3453.json,3770.json,3752.json,3375.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
3403.json	org.eclipse.jgit.internal.storage.dfs.ReftableStack.close()	3695.json,3400.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.clearCache(),org.eclipse.jgit.internal.storage.dfs.ReftableStack.open(org.eclipse.jgit.internal.storage.dfs.DfsReader, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReftable>)	true	286
8156.json	org.eclipse.jgit.util.io.NullOutputStream.write(int)	noCall	noCall	true	2574
7131.json	org.eclipse.jgit.api.PullCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.Anonymous-5a6e0e32-96a5-4f50-9fac-bdec7f11f8e5.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-3c208212-5e7c-48fe-a641-86b030460beb.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.PullCommandTest.Anonymous-7ca0dea0-8520-4ab7-9d92-af55548c2785.call(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.PullCommandTest.Anonymous-ffdc4223-e9f8-4e6a-895a-abdaee11a6b0.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-02bb4bdb-2184-42b3-a7c5-5ea70746737e.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-6f97b37a-d54c-4488-928d-41cde8c97e9c.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.PullCommandTest.Anonymous-e9930402-2c69-457e-9032-acb71fed2e24.call(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1(),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.PullCommandTest.Anonymous-ddb95b4f-f737-46a1-934b-9ab678dde88d.call(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.Anonymous-9a723ca1-6c79-46f4-8744-f32ad4d26897.call(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig()	true	2802
5847.json	org.eclipse.jgit.ignore.internal.PathMatcher.matches(java.lang.String, boolean, boolean)	noCall	noCall	true	1322
7120.json	org.eclipse.jgit.api.RebaseResult.failed(java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason>)	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	1653
7789.json	org.eclipse.jgit.treewalk.filter.TreeFilterMarker.getMarks(org.eclipse.jgit.treewalk.TreeWalk)	6714.json	org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[])	true	1964
3166.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.nextShouldBeRestart()	3165.json,3164.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, boolean),org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
2933.json	org.eclipse.jgit.internal.fsck.FsckPackParser.read(long, byte[], int, int)	2932.json	org.eclipse.jgit.internal.fsck.FsckPackParser.readDatabase(byte[], int, int)	true	319
7889.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String)	noCall	noCall	true	2313
6142.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeCounting()	noCall	noCall	true	1094
5230.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.doNotAttemptDelta()	5057.json,5007.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.getAdjustedWeight(org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2127
9242.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.doUpdates()	9240.json,9241.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.pollForUpdates(),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()	true	2783
5213.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDeltaRepresentation()	5245.json,5045.json,5237.json,5120.json,5148.json,5130.json,5119.json,5121.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.pack.ObjectToPack.getFormat(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsNeedingDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	3176
9613.json	org.eclipse.jgit.lib.AnyObjectId.toHexByteArray()	9610.json,9612.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(java.io.OutputStream),org.eclipse.jgit.lib.AnyObjectId.copyTo(java.nio.ByteBuffer)	true	3176
1903.json	org.eclipse.jgit.transport.BasePackFetchConnection.maxTimeWanted(java.util.Collection<org.eclipse.jgit.lib.Ref>)	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
8094.json	org.eclipse.jgit.util.TemporaryBuffer.copy(java.io.InputStream)	8358.json,null,211.json,null,8675.json	org.eclipse.jgit.util.IO.readWholeStream(java.io.InputStream, int),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnCopy(),org.eclipse.jgit.pgm.debug.ShowPackDelta.getDelta(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy(),org.eclipse.jgit.patch.Patch.readFully(java.io.InputStream)	true	3176
69.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getContentLength()	noCall	noCall	true	1572
1976.json	org.eclipse.jgit.transport.Transport.catalogs(java.lang.ClassLoader)	1975.json	org.eclipse.jgit.transport.Transport.registerByService()	true	2645
7445.json	org.eclipse.jgit.api.RebaseCommand.runInteractively(org.eclipse.jgit.api.RebaseCommand.InteractiveHandler)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash()	true	2028
339.json	org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
8290.json	org.eclipse.jgit.util.HttpSupport.DummyHostnameVerifier.verify(java.lang.String, javax.net.ssl.SSLSession)	noCall	noCall	true	1909
6679.json	org.eclipse.jgit.diff.RenameDetector.getRenameScore()	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
3545.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.ReadBackStream.read(byte[], int, int)	noCall	noCall	true	1397
907.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.setCreateBranch(boolean)	noCall	noCall	true	2596
71.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.writeTo(java.io.OutputStream)	noCall	noCall	true	1572
1123.json	org.eclipse.jgit.hooks.PostCommitHook.getHookName()	noCall	noCall	true	635
2417.json	org.eclipse.jgit.transport.PackParser.openDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	2398.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor)	true	2692
2743.json	org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand)	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
7271.json	org.eclipse.jgit.api.LogCommand.add(org.eclipse.jgit.lib.AnyObjectId)	7273.json,7274.json,7270.json	org.eclipse.jgit.api.LogCommand.addRange(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.LogCommand.all(),org.eclipse.jgit.api.LogCommand.call()	true	2953
29.json	org.eclipse.jgit.awtui.AWTPlotRenderer.drawBoundaryDot(int, int, int, int)	noCall	noCall	true	3176
9396.json	org.eclipse.jgit.lib.ObjectChecker.match(byte[], byte[])	9370.json,9372.json	org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	892
5906.json	org.eclipse.jgit.dircache.DirCache.getCacheTree(boolean)	133.json,null,null,5907.json,219.json,null,null,null,null,null	org.eclipse.jgit.pgm.debug.MakeCacheTree.run(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_NoCacheTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCache.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.ShowCacheTree.run(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_Clear_NoCacheTree()	true	3176
6824.json	org.eclipse.jgit.api.ApplyCommand.call()	null	org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean)	true	2288
7833.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader)	7831.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader)	true	2882
9541.json	org.eclipse.jgit.lib.RefUpdate.getResult()	4565.json,null,3609.json,null	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.junit.TestRepository.update(java.lang.String, T),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.junit.TestRepository.delete(java.lang.String)	true	3176
6022.json	org.eclipse.jgit.dircache.DirCacheCheckout.addTree(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.lib.ObjectId)	6021.json,6023.json	org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree()	true	2844
535.json	org.eclipse.jgit.junit.http.RecordingLogger.getWarnings()	noCall	noCall	true	3070
10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	10051.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	true	843
4582.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.addObject(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	1922
6305.json	org.eclipse.jgit.gitrepo.RepoCommand.setIgnoreRemoteFailures(boolean)	null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes()	true	820
5012.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2893
4276.json	org.eclipse.jgit.internal.storage.file.WindowCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long)	4358.json	org.eclipse.jgit.internal.storage.file.WindowCursor.pin(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
9927.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.getFirstByte()	null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testGetFirstByte()	true	856
127.json	org.eclipse.jgit.pgm.Glog.Anonymous-5b0dde41-a317-4005-8c04-12e97b0abaae.windowClosing(java.awt.event.WindowEvent)	noCall	noCall	true	3176
1201.json	org.eclipse.jgit.notes.FanoutBucket.cell(org.eclipse.jgit.lib.AnyObjectId)	null,1200.json,null,1208.json	org.eclipse.jgit.notes.FanoutBucket.getNote(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.append(org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.FanoutBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.load(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
1904.json	org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int)	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
7597.json	org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, int)	7040.json,1362.json,203.json,1377.json,178.json,6714.json,7370.json,6470.json	org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	true	3176
8251.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.read()	noCall	noCall	true	2108
2572.json	org.eclipse.jgit.transport.BaseReceivePack.setAdvertiseRefsHook(org.eclipse.jgit.transport.AdvertiseRefsHook)	null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-ede6ccfa-bcf5-4cc2-bd1e-a0589cf0fb28.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	2292
6732.json	org.eclipse.jgit.diff.DiffEntry.getTreeFilterMarks()	null	org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter()	true	1964
4118.json	org.eclipse.jgit.internal.storage.file.PackFile.findObjectForOffset(long)	4405.json,4795.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getDeltaBase(),org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getObjectId()	true	3176
7482.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	7479.json,null,null,7481.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.api.CheckoutCommand.Anonymous-3bca28ea-811e-499e-a006-1212e97d737f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CheckoutCommand.Anonymous-7c862c11-5d8d-481f-951f-1a2c538609f3.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit)	true	2031
3351.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	null,7182.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.api.GarbageCollectCommand.call()	true	2410
9936.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.getFirstByte()	null,null,10089.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testGetFirstByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testGetByte(),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	856
6635.json	org.eclipse.jgit.diff.SimilarityIndex.findIndex(int)	null	org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingSmallObject()	true	2899
6112.json	org.eclipse.jgit.storage.file.WindowCacheConfig.install()	null,null,null,null,null,null,null,null,null,297.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.resetWindowCacheConfig(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_512(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_4097(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.tearDown(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit(),org.eclipse.jgit.internal.storage.file.PackFileTest.setUp(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallObjectBeforeLargeObject(),org.eclipse.jgit.internal.storage.file.PackFileTest.tearDown(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackLargeFile(),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitLimit_0(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.whackCache(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.setUp(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_Limits1(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.setUp(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.tearDown(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_0(),org.eclipse.jgit.internal.storage.file.PackInserterTest.setWindowCacheConfig(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitOpenFiles_0()	true	1910
1706.json	org.eclipse.jgit.transport.URIish.escape(java.lang.String, boolean, boolean)	1728.json	org.eclipse.jgit.transport.URIish.format(boolean, boolean)	true	2381
8574.json	org.eclipse.jgit.util.BlockList.add(T)	null,4988.json,null,null,5144.json,4666.json,null,5139.json,2410.json,null,null,8575.json,null,null,8573.json,null,null,null,null	org.eclipse.jgit.util.BlockListTest.testRemoveFromEnd(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.util.BlockListTest.testAddRemoveAdd(),org.eclipse.jgit.util.BlockListTest.testSet(),org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.lib.AnyObjectId, int, int),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.findOrInsert(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.util.BlockListTest.testRemoveSlowPath(),org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList(),org.eclipse.jgit.util.BlockList.add(int, T),org.eclipse.jgit.util.BlockListTest.testAddToEnd(),org.eclipse.jgit.util.BlockListTest.testAddRejectsBadIndexes(),org.eclipse.jgit.util.BlockList.addAll(T[], int, int),org.eclipse.jgit.util.BlockListTest.testFastIterator(),org.eclipse.jgit.util.BlockListTest.testAddSlowPath(),org.eclipse.jgit.util.BlockListTest.testRemoveRejectsBadIndexes(),org.eclipse.jgit.util.BlockListTest.testGet()	false	2651
8640.json	org.eclipse.jgit.util.time.ProposedTimestamp.toString()	noCall	noCall	true	565
8598.json	org.eclipse.jgit.util.SystemReader.setInstance(org.eclipse.jgit.util.SystemReader)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(java.lang.String, java.lang.String),org.eclipse.jgit.util.GitDateFormatterTest.setUp(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.setUp(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.tearDown(),org.eclipse.jgit.util.GitDateFormatterTest.tearDown(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.tearDown(),org.eclipse.jgit.util.GitDateParserTest.tearDown(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.lib.ConfigTest.tearDown(),org.eclipse.jgit.lib.ValidRefNameTest.assertInvalidOnWindows(java.lang.String),org.eclipse.jgit.util.RelativeDateFormatterTest.setUp(),org.eclipse.jgit.util.GitDateParserTest.setUp(),org.eclipse.jgit.lib.ValidRefNameTest.setWindowsSystemReader(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.setUp(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tearDown(),org.eclipse.jgit.lib.ValidRefNameTest.setUnixSystemReader(),org.eclipse.jgit.util.RelativeDateFormatterTest.tearDown(),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig(),org.eclipse.jgit.lib.ValidRefNameTest.assertValid(boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
2031.json	org.eclipse.jgit.transport.Transport.getPushOptions()	noCall	noCall	true	688
6602.json	org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry)	6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2839
7565.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.needsStopWalk()	noCall	noCall	true	893
7815.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.back(int)	null	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength()	true	3176
1216.json	org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.FanoutBucket, int, org.eclipse.jgit.notes.NoteBucket)	1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
7047.json	org.eclipse.jgit.api.Git.open(java.io.File)	null,null,null,null,null,null,null,null	org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.pgm.CloneTest.testClone(),org.eclipse.jgit.pgm.CloneTest.testCloneEmpty(),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.api.GitConstructionTest.testOpen()	true	2626
1133.json	org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevCommit)	null,null,null,null,null,null,6969.json,379.json,null,null,null,null,null,null,7219.json,null,null,null,null,null,null,6830.json,null,null,null,null,7221.json,null,null	org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes(),org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.pgm.Log.addNoteMap(java.lang.String),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_2_36(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFullyFannedOut(),org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes(),org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes(),org.eclipse.jgit.notes.NoteMapMergerTest.setUp(),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFlatTree(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_38(),org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat()	true	2767
5104.json	org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3176
7192.json	org.eclipse.jgit.api.RmCommand.setCached(boolean)	null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile()	true	2014
9612.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(java.nio.ByteBuffer)	noCall	noCall	true	2851
526.json	org.eclipse.jgit.junit.http.AccessEvent.toString()	noCall	noCall	true	3070
8246.json	org.eclipse.jgit.util.io.InterruptTimer.AlarmState.run()	noCall	noCall	true	3176
2926.json	org.eclipse.jgit.internal.fsck.FsckPackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	noCall	noCall	true	319
3762.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.unpin()	3799.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1144
2804.json	org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand)	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
7619.json	org.eclipse.jgit.treewalk.TreeWalk.getFilterCommandDefinition(java.lang.String, java.lang.String)	7618.json	org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String)	true	925
7008.json	org.eclipse.jgit.api.ResetCommand.call()	null,null,null,7413.json,null,null,null,null,null,null,7040.json,342.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.api.EolRepositoryTest.gitResetHard(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.lib.RacyGitTests.testRacyGitDetection(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2669
2800.json	org.eclipse.jgit.internal.ketch.KetchReplica.WeakRetryPush.call()	noCall	noCall	true	872
4501.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
94.json	org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status)	93.json	org.eclipse.jgit.pgm.Status.printStatus(org.eclipse.jgit.api.Status)	true	1648
4016.json	org.eclipse.jgit.internal.storage.file.PackInserter.writePackIndex(java.io.File, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	null	org.eclipse.jgit.internal.storage.file.PackInserter.flush()	true	221
6431.json	org.eclipse.jgit.blame.BlameGenerator.setDiffAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm)	7350.json	org.eclipse.jgit.api.BlameCommand.call()	true	2567
8652.json	org.eclipse.jgit.patch.FileHeader.getHunks()	null,null,8682.json,null,null,6829.json,8649.json,null,null,null,8709.json,null,null,null,null,null,null,null,null,6585.json,null,8647.json,null,null,6826.json,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Empty(),org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[]),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.patch.GetTextTest.testGetText_Convert(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.CombinedFileHeader.getHunks(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.EditListTest.testHunkHeader(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline()	true	3176
1001.json	org.eclipse.jgit.merge.ResolveMerger.getFailingPaths()	7195.json,6812.json,7385.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2841
6276.json	org.eclipse.jgit.gitrepo.RepoProject.clearCopyFiles()	6324.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	true	900
6410.json	org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.getChild(int)	null	org.eclipse.jgit.blame.Candidate.ReverseCandidate.getParent(int)	true	2567
3376.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.anyPackHas(org.eclipse.jgit.lib.AnyObjectId)	3375.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
4904.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.refresh()	noCall	noCall	true	880
8272.json	org.eclipse.jgit.util.LongMap.containsKey(long)	null,null,null,null,null	org.eclipse.jgit.util.LongMapTest.testRemoveOne(),org.eclipse.jgit.util.LongMapTest.testRemoveCollision1(),org.eclipse.jgit.util.LongMapTest.testRemoveCollision2(),org.eclipse.jgit.util.LongMapTest.testEmptyMap(),org.eclipse.jgit.util.LongMapTest.testInsertMinValue()	true	3176
5657.json	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig)	5655.json	org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	true	2899
8904.json	org.eclipse.jgit.lib.Config.setString(java.lang.String, java.lang.String, java.lang.String, java.lang.String)	null,null,null,null,null,null,null,null,6890.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7227.json,null,null,null,null,null,null,null,8902.json,null,null,null,null,null,null,1266.json,null,null,null,167.json,null,null,null,null,null,null,null,null,null,null,8903.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8901.json,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7331.json,null,null,null,null,null,null,null,null,4849.json,null,7187.json,null,null,null,null,null,null,null,null,null,6309.json,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.lib.BranchTrackingStatusTest.setUp(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.merge.MergerTest.writeSubmodule(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary(),org.eclipse.jgit.api.CloneCommand.addMergeConfig(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.api.PullCommandTest.Anonymous-ffdc4223-e9f8-4e6a-895a-abdaee11a6b0.call(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.writeGlobalAttributeFile(java.lang.String, java.lang.String...),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ConfigTest.test004_PutGetSimple(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.AddCommandTest.testCleanFilter(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.lib.Config.setBoolean(java.lang.String, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.api.PullCommandTest.Anonymous-3c208212-5e7c-48fe-a641-86b030460beb.call(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput(),org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.lib.ConfigTest.test003_PutRemote(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.attributes.CGitAttributesTest.initRepo(),org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf(),org.eclipse.jgit.transport.PushCertificateParserTest.newEnabledConfig(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.Config.setEnum(java.lang.String, java.lang.String, java.lang.String, T),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfAppliedToUri(),org.eclipse.jgit.api.PullCommandTest.Anonymous-5a6e0e32-96a5-4f50-9fac-bdec7f11f8e5.call(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.ignore.CGitIgnoreTest.initRepo(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.lib.ConfigTest.testExplicitlySetEmptyString(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.PullCommandTest.Anonymous-6f97b37a-d54c-4488-928d-41cde8c97e9c.call(),org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave(),org.eclipse.jgit.lib.Config.setLong(java.lang.String, java.lang.String, java.lang.String, long),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2(),org.eclipse.jgit.api.AddCommandTest.testCommandInjection(),org.eclipse.jgit.attributes.AttributesHandlerTest.setupRepo(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNotAppliedToPushUri(),org.eclipse.jgit.api.PullCommandTest.Anonymous-9a723ca1-6c79-46f4-8744-f32ad4d26897.call(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setWorkTree(java.io.File, java.io.File),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNoPushUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.PullCommandTest.Anonymous-7ca0dea0-8520-4ab7-9d92-af55548c2785.call(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-02bb4bdb-2184-42b3-a7c5-5ea70746737e.call(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-ddb95b4f-f737-46a1-934b-9ab678dde88d.call(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2()	true	3176
3307.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.shouldHaveIndex(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder)	3337.json,3302.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.finishSectionMaybeWriteIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()	true	297
232.json	org.eclipse.jgit.pgm.Clone.cloningSubmodule(java.lang.String)	noCall	noCall	true	409
396.json	org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String)	394.json	org.eclipse.jgit.pgm.Main.init(org.eclipse.jgit.pgm.TextBuiltin)	true	2794
6381.json	org.eclipse.jgit.blame.Candidate.canMergeRegions(org.eclipse.jgit.blame.Candidate)	6451.json	org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate)	true	1515
9191.json	org.eclipse.jgit.lib.MutableObjectId.fromObjectId(org.eclipse.jgit.lib.AnyObjectId)	4660.json,1193.json,1192.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.cloneEntry(),org.eclipse.jgit.notes.FanoutBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.iterator(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2909
7858.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.concatPath(java.lang.String, java.lang.String)	7856.json,7855.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String)	true	106
1408.json	org.eclipse.jgit.transport.UploadPack.setRequestPolicy(org.eclipse.jgit.transport.UploadPack.RequestPolicy)	null,null,null,null,null,1421.json	org.eclipse.jgit.transport.UploadPackTest.Anonymous-9d19ac99-df2a-4ed0-97ef-a2bed4d6788f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.UploadPackTest.Anonymous-64130a86-a6b7-42aa-a765-16a10f1ee29a.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.UploadPackTest.generateReachableCommitUploadPackProtocol(),org.eclipse.jgit.transport.UploadPack.setTransferConfig(org.eclipse.jgit.transport.TransferConfig)	true	2461
3645.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.toString()	noCall	noCall	true	2410
2911.json	org.eclipse.jgit.internal.ketch.KetchLeader.notifySuccess(org.eclipse.jgit.internal.ketch.Round)	2910.json	org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	true	872
4755.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getFS()	4438.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getFS()	true	2692
9335.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage(org.eclipse.jgit.transport.ReceiveCommand)	4502.json,9333.json,3260.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	319
8444.json	org.eclipse.jgit.util.FS.relativize(java.lang.String, java.lang.String)	8448.json,8046.json,null	org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.util.FS_Win32_Cygwin.relativize(java.lang.String, java.lang.String),org.eclipse.jgit.util.FileUtils.relativizeNativePath(java.lang.String, java.lang.String)	true	1223
2131.json	org.eclipse.jgit.transport.PushCertificate.getNonceStatus()	null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
5814.json	org.eclipse.jgit.ignore.FastIgnoreRule.getNegation()	null,null	org.eclipse.jgit.ignore.FastIgnoreRuleTest.match(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.BasicRuleTest.test()	true	1322
9345.json	org.eclipse.jgit.lib.ObjectId.toString(org.eclipse.jgit.lib.ObjectId)	8072.json,null,null,9425.json,4103.json,null,null,8074.json,null,null,9094.json,7157.json	org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.util.ChangeIdUtilTest.testId(),org.eclipse.jgit.lib.ObjectIdRef.toString(),org.eclipse.jgit.internal.storage.file.ReflogWriter.encode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.ObjectIdTest.test010_toString(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.lib.ObjectIdTest.test009_toString(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve(),org.eclipse.jgit.lib.SymbolicRef.toString(),org.eclipse.jgit.api.MergeResult.toString()	true	3176
8471.json	org.eclipse.jgit.util.FS.normalize(java.lang.String)	null,7835.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.readContentAsNormalizedString(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	1578
3889.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPackList()	3727.json,3723.json,3887.json,3719.json,3888.json,3721.json,3744.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAll(java.lang.Iterable<T>),org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPacks(),org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getReftables(),org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	true	2410
1934.json	org.eclipse.jgit.transport.Daemon.start()	null,297.json,null	org.eclipse.jgit.transport.DaemonTest.testDaemonStop(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.transport.DaemonTest.testDaemonRestart()	true	3176
2764.json	org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	2762.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
3209.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekRef(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoEmptyTables(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneEmptyTable(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneTableSeek(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.noTables(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoTableSeek()	true	297
8874.json	org.eclipse.jgit.lib.Config.getLong(java.lang.String, java.lang.String, long)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2874
10147.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptPassphrase(java.lang.String)	noCall	noCall	true	2768
5750.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.clone()	noCall	noCall	true	3176
9414.json	org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag.getPeeledObjectId()	noCall	noCall	true	3059
5130.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5129.json,5131.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObject(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2627
1140.json	org.eclipse.jgit.notes.NoteMap.contains(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38(),org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes(),org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut(),org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38()	true	2767
2724.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate)	2723.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	872
2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	2916.json	org.eclipse.jgit.internal.ketch.KetchLeader.toString()	true	872
384.json	org.eclipse.jgit.pgm.DiffTree.tree_0(org.eclipse.jgit.treewalk.AbstractTreeIterator)	noCall	noCall	true	3176
7905.json	org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory()	null,null,7265.json,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules()	true	2355
5842.json	org.eclipse.jgit.ignore.internal.PathMatcher.isSimplePathWithSegments(java.lang.String)	noCall	noCall	true	1322
5927.json	org.eclipse.jgit.dircache.DirCacheTree.peq(byte[], byte[], int)	5900.json,5952.json,5924.json	org.eclipse.jgit.dircache.DirCache.nextEntry(byte[], int, int),org.eclipse.jgit.dircache.DirCacheEditor.inDir(org.eclipse.jgit.dircache.DirCacheEntry, byte[], int),org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
5939.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.replace()	6012.json,5947.json	org.eclipse.jgit.dircache.DirCacheBuilder.finish(),org.eclipse.jgit.dircache.DirCacheEditor.finish()	true	3176
9828.json	org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode, int)	1174.json,5920.json,1149.json,1199.json,9837.json	org.eclipse.jgit.notes.LeafBucket.treeSize(int),org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.notes.NonNoteEntry.treeEntrySize(),org.eclipse.jgit.notes.FanoutBucket.treeSize(),org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte[], int, int, org.eclipse.jgit.lib.FileMode)	true	2775
5188.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte[], int)	5183.json,5202.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int),org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.scan(byte[], int)	true	2893
8818.json	org.eclipse.jgit.lib.ConfigSnapshot.names()	8806.json,8805.json	org.eclipse.jgit.lib.ConfigSnapshot.getSubsections(java.lang.String),org.eclipse.jgit.lib.ConfigSnapshot.getSections()	true	2260
8704.json	org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.io.OutputStream[])	8649.json	org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[])	true	3176
7290.json	org.eclipse.jgit.api.DiffCommand.setSourcePrefix(java.lang.String)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes()	true	2343
9755.json	org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int)	9753.json,9752.json	org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean)	true	1683
8162.json	org.eclipse.jgit.util.io.AutoLFOutputStream.buffer(byte[], int, int)	8161.json,8160.json	org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte[], int, int),org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte[])	true	824
5488.json	org.eclipse.jgit.revwalk.ObjectWalk.next()	null,null,5493.json,null,null,5139.json,null,null,5640.json,4814.json,2619.json,null,9883.json,null,null,null	org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.countObjects(),org.eclipse.jgit.revwalk.ObjectWalk.checkConnectivity(),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.revwalk.ObjectWalkTest.testNoCommits(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob(),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob(),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.internal.storage.file.GC.removeReferenced(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>, org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.revwalk.ObjectWalkTest.testCull(),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2(),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1()	true	3176
8212.json	org.eclipse.jgit.util.io.MessageWriter.write(char[], int, int)	noCall	noCall	true	3176
2145.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-bef5b96a-f4fc-4b0e-9171-d061cff22a75.getDefaultPort()	noCall	noCall	true	2645
6440.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	null,112.json,null,7350.json,null	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk()	true	2567
9842.json	org.eclipse.jgit.lib.TreeFormatter.toString()	noCall	noCall	true	2745
9851.json	org.eclipse.jgit.lfs.errors.CorruptMediaFile.getExpectedSize()	noCall	noCall	true	628
7576.json	org.eclipse.jgit.treewalk.TreeWalk.isRecursive()	9911.json,6714.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[])	true	3176
3663.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	noCall	noCall	true	2410
2719.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.getRemoteConfig()	2722.json,2729.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
1381.json	org.eclipse.jgit.transport.OperationResult.getURI()	122.json,302.json	org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult)	true	3176
1700.json	org.eclipse.jgit.transport.AmazonS3.ListParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)	noCall	noCall	true	3176
2288.json	org.eclipse.jgit.transport.NetRC.getEntry(java.lang.String)	null,null,1641.json	org.eclipse.jgit.transport.NetRCTest.testNetRCFile(),org.eclipse.jgit.transport.NetRCTest.testNetRCDefault(),org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	1408
9201.json	org.eclipse.jgit.lib.AbbreviatedObjectId.isId(java.lang.String)	8967.json,null	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testIsId()	true	2848
7819.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified()	6024.json,7040.json,7530.json,6981.json,null,null,5910.json,7830.json,null,null	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorWithTimeControl.getEntryLastModified(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator)	true	3176
5017.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflateBound(int)	5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
2061.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readAdvertisedRefs()	2050.json,2049.json	org.eclipse.jgit.transport.TransportSftp.openPush(),org.eclipse.jgit.transport.TransportSftp.openFetch()	true	3176
7708.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.size()	noCall	noCall	true	1965
6763.json	org.eclipse.jgit.diff.Edit.isEmpty()	6478.json,null,null,null,null,null	org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.diff.EditTest.testType_Insert(),org.eclipse.jgit.diff.EditTest.testType_Replace(),org.eclipse.jgit.diff.EditTest.testType_Delete(),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.diff.EditTest.testType_Empty()	true	2837
9080.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.self()	9057.json,3862.json,9051.json,9055.json,9052.json,3869.json,9067.json,3860.json,9049.json,9064.json,9069.json,3868.json,9066.json,3866.json,9068.json,9059.json,9053.json,3865.json,9070.json,3863.json,9047.json,9061.json,9045.json,9065.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setMustExist(boolean),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setRepositoryDescription(org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription),org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectory(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare(),org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.util.Collection<java.io.File>),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setIndexFile(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.io.File[]),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setReaderOptions(org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions),org.eclipse.jgit.lib.BaseRepositoryBuilder.setObjectDirectory(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setWorkTree(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.util.Collection<java.io.File>),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setObjectDirectory(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setWorkTree(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.io.File[]),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setGitDir(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.setup(),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setGitDir(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.setIndexFile(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.setFS(org.eclipse.jgit.util.FS),org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectory(java.io.File)	true	2907
5039.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.checkForGarbageCollectedObjects()	5035.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.canCache(int, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
7213.json	org.eclipse.jgit.api.StashDropCommand.deleteRef(org.eclipse.jgit.lib.Ref)	7215.json	org.eclipse.jgit.api.StashDropCommand.call()	true	2272
5118.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	5117.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)	true	2627
3051.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long)	3039.json,3042.json,3063.json,3064.json,3035.json,3058.json,null,null,3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allLogs(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte, byte[], long, long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initScan(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.allRefs(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	true	297
8617.json	org.eclipse.jgit.util.SystemReader.getSimpleDateFormat(java.lang.String, java.util.Locale)	8296.json	org.eclipse.jgit.util.GitDateParser.getNewSimpleDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>)	true	1659
10037.json	org.eclipse.jgit.lfs.server.s3.SignerV4.sign(java.lang.String, byte[])	10041.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	843
4206.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(org.eclipse.jgit.internal.storage.file.FileSnapshot)	4207.json,null,4626.json,4761.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(java.lang.Object),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.internal.storage.file.LockFile.waitForStatChange(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	2733
2611.json	org.eclipse.jgit.transport.BaseReceivePack.isCapabilityEnabled(java.lang.String)	2644.json,2610.json,null	org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.ReceivePack.enableCapabilities(),org.eclipse.jgit.transport.BaseReceivePack.enableCapabilities()	true	2104
8066.json	org.eclipse.jgit.util.FS_POSIX.supportsAtomicCreateNewFile()	8067.json	org.eclipse.jgit.util.FS_POSIX.createNewFile(java.io.File)	true	199
4394.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset64()	4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	true	3176
8361.json	org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int)	null,4877.json,null,null,7835.json	org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckin(org.eclipse.jgit.lib.CoreConfig.EolStreamType, org.eclipse.jgit.lib.CoreConfig.EolStreamType, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean),org.eclipse.jgit.internal.storage.file.PackInserterTest.assertBlob(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId, byte[]),org.eclipse.jgit.api.BlameCommand.toByteArray(java.io.InputStream, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	2342
2344.json	org.eclipse.jgit.transport.RefSpec.isForceUpdate()	null,null,null,null,null,null,null,1968.json,2369.json,null,1995.json,null,null,null,2367.json,null,null	org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.RefSpec.toString(),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty(),org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object),org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate(),org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon()	true	3176
3684.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getLock()	noCall	noCall	true	235
7352.json	org.eclipse.jgit.api.CleanCommand.cleanPath(java.lang.String, java.util.Set<java.lang.String>)	7351.json	org.eclipse.jgit.api.CleanCommand.call()	true	675
5803.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.clone()	noCall	noCall	true	3176
9253.json	org.eclipse.jgit.lib.TextProgressMonitor.send(java.lang.StringBuilder)	9251.json,9250.json,9247.json,9248.json	org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int, int, int),org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int, int, int),org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int),org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int)	true	3176
5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	3748.json,null	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2906
6854.json	org.eclipse.jgit.api.FetchCommand.isThin()	noCall	noCall	true	2816
10281.json	org.eclipse.jgit.http.server.glue.ServletBinderImpl.getFilters()	10272.json,10248.json	org.eclipse.jgit.http.server.glue.RegexPipeline.Binder.create(),org.eclipse.jgit.http.server.glue.SuffixPipeline.Binder.create()	true	3070
3533.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int)	3532.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	1397
9056.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.isBare()	9074.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree()	true	2907
9955.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.formatHexByte(byte[], int, long)	9954.json,9952.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexByteArray(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(byte[], int)	true	856
3152.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.isAlignBlocks()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
2092.json	org.eclipse.jgit.transport.InsecureCipherFactory.create(java.lang.String)	1775.json,null,null,1777.json,null	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.encrypt(java.io.OutputStream),org.eclipse.jgit.transport.WalkEncryptionTest.Base.isAlgorithmPresent(java.util.Properties),org.eclipse.jgit.transport.WalkEncryption.JetS3tV2.decrypt(java.io.InputStream),org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.validate(java.net.HttpURLConnection, java.lang.String),org.eclipse.jgit.transport.WalkEncryption.JetS3tV2.encrypt(java.io.OutputStream)	true	573
9923.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toLongObjectId()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString()	true	856
5567.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoOne(org.eclipse.jgit.revwalk.RevCommit, int)	5566.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistoryInnerLoop(org.eclipse.jgit.revwalk.RevCommit, int)	true	3176
2357.json	org.eclipse.jgit.transport.RefSpec.expandFromSourceImp(java.lang.String)	2356.json	org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String)	true	3176
2540.json	org.eclipse.jgit.transport.BaseReceivePack.MessageOutputWrapper.write(int)	noCall	noCall	true	2292
2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	2867.json,2868.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setException(org.eclipse.jgit.lib.Repository, java.lang.Throwable),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.done(org.eclipse.jgit.lib.Repository)	true	872
4984.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doLink(java.lang.String)	noCall	noCall	true	880
2932.json	org.eclipse.jgit.internal.fsck.FsckPackParser.readDatabase(byte[], int, int)	noCall	noCall	true	319
3367.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.dayStartInMillis(long)	3366.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long)	true	487
5326.json	org.eclipse.jgit.revwalk.RevObjectList.get(int)	null,null,null,null,null,null,17.json,null,6249.json,null,6250.json	org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit(),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.commit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getValueAt(int, int),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.revplot.PlotCommitList.drawLaneToChild(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	3176
7578.json	org.eclipse.jgit.treewalk.TreeWalk.isPostOrderTraversal()	null,null,null,7764.json	org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testInitialize_TogglePostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testResetDoesNotAffectPostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testInitialize_NoPostOrder(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
9833.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId)	5919.json,1148.json,9832.json	org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.notes.NonNoteEntry.format(org.eclipse.jgit.lib.TreeFormatter),org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId)	true	2775
178.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository)	177.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.run()	true	2816
4280.json	org.eclipse.jgit.internal.storage.file.WindowCache.hash(int, long)	4297.json,4296.json	org.eclipse.jgit.internal.storage.file.WindowCache.lock(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.slot(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
6977.json	org.eclipse.jgit.api.CherryPickResult.getCherryPickedRefs()	noCall	noCall	true	2795
5457.json	org.eclipse.jgit.revwalk.FooterLine.getEmailAddress()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testShortKey(),org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers()	true	3176
8880.json	org.eclipse.jgit.lib.Config.getEnum(T[], java.lang.String, java.lang.String, java.lang.String, T)	null,7140.json,6834.json,1494.json,null,7141.json,null,8833.json,7917.json	org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.api.PullCommand.getRebaseMode(java.lang.String, org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.FetchCommand.getRecurseMode(java.lang.String),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues(),org.eclipse.jgit.api.PullCommand.getFastForwardMode(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.lib.BranchConfig.getRebaseMode(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore()	true	2833
2542.json	org.eclipse.jgit.transport.BaseReceivePack.MessageOutputWrapper.write(byte[])	2591.json,2593.json	org.eclipse.jgit.transport.BaseReceivePack.sendError(java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendMessage(java.lang.String)	true	2292
4454.json	org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry()	null	org.eclipse.jgit.internal.storage.file.GcLog.autoGcBlockedByOldLockFile(boolean)	true	370
6831.json	org.eclipse.jgit.api.ShowNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject)	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
1092.json	org.eclipse.jgit.errors.CompoundException.getAllCauses()	noCall	noCall	true	3176
6674.json	org.eclipse.jgit.diff.HashedSequencePair.getB()	6779.json	org.eclipse.jgit.diff.LowLevelDiffAlgorithm.diffNonCommon(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	2820
2095.json	org.eclipse.jgit.transport.PushProcess.rejectAll()	2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	920
5885.json	org.eclipse.jgit.dircache.DirCache.clear()	null,null,null,null,5883.json,null	org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.junit.TestRepository.CommitBuilder.noFiles(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.dircache.DirCache.read(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_Clear_NoCacheTree()	true	3176
5886.json	org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream)	5883.json	org.eclipse.jgit.dircache.DirCache.read()	true	3176
9849.json	org.eclipse.jgit.lfs.errors.InvalidLongObjectIdException.asAscii(byte[], int, int)	noCall	noCall	true	856
2904.json	org.eclipse.jgit.internal.ketch.KetchLeader.newProposalRound()	2903.json	org.eclipse.jgit.internal.ketch.KetchLeader.runLeader()	true	872
3727.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAll(java.lang.Iterable<T>)	3736.json,3743.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(java.lang.Iterable<T>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(java.lang.Iterable<T>, boolean)	true	2410
8938.json	org.eclipse.jgit.lib.ObjectIdSerializer.writeWithoutMarker(java.io.OutputStream, org.eclipse.jgit.lib.AnyObjectId)	null,8937.json	org.eclipse.jgit.lib.ObjectIdSerializerTest.writeAndReadBackFromTempFile(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.ObjectIdSerializer.write(java.io.OutputStream, org.eclipse.jgit.lib.AnyObjectId)	true	88
5912.json	org.eclipse.jgit.dircache.DirCacheTree.isValid()	5911.json,6062.json,null,6053.json,null,null,null,6054.json	org.eclipse.jgit.dircache.DirCacheTree.write(byte[], java.io.OutputStream),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheIterator.hasId(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree(),org.eclipse.jgit.dircache.DirCacheIterator.idBuffer()	true	3176
5234.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setExtendedFlag(int)	3405.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setFound()	true	2851
2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	2093.json	org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
10187.json	org.eclipse.jgit.transport.OpenSshConfig.Host.isBatchMode()	null,null,10157.json,null	org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode(),org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeDefault()	true	3176
8435.json	org.eclipse.jgit.util.FS.isFile(java.io.File)	7351.json,112.json,7350.json,null,8056.json	org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.util.FS_POSIX.setExecute(java.io.File, boolean)	true	1864
7725.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	3176
1065.json	org.eclipse.jgit.errors.RepositoryNotFoundException.message(java.lang.String)	noCall	noCall	true	3070
8157.json	org.eclipse.jgit.util.io.NullOutputStream.write(byte[])	noCall	noCall	true	2574
5950.json	org.eclipse.jgit.dircache.DirCacheEditor.findEntry(byte[], int)	5949.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int)	true	893
5138.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeChecksum(org.eclipse.jgit.internal.storage.pack.PackOutputStream)	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
7946.json	org.eclipse.jgit.util.RawParseUtils.tagger(byte[], int)	5666.json	org.eclipse.jgit.revwalk.RevTag.getTaggerIdent()	true	3176
8342.json	org.eclipse.jgit.util.sha1.SHA1.s4(int, int, int, int, int)	8337.json,8338.json	org.eclipse.jgit.util.sha1.SHA1.compress(),org.eclipse.jgit.util.sha1.SHA1.recompress(int)	true	466
3967.json	org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref)	null	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>)	true	2142
4243.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeFanOutTable()	4390.json,4330.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl()	true	3176
7720.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.length()	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk)	true	1965
42.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseMessage()	noCall	noCall	true	1572
8286.json	org.eclipse.jgit.util.HttpSupport.disableSslVerify(org.eclipse.jgit.transport.http.HttpConnection)	2241.json,10053.json,9866.json,9870.json	org.eclipse.jgit.transport.TransportHttp.httpOpen(java.lang.String, java.net.URL, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsContentConnection(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.Protocol.Action, java.lang.String)	true	2692
3813.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isCorrupt(long)	3752.json,3793.json,3794.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.hasObject(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.get(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	true	2410
6883.json	org.eclipse.jgit.api.CloneCommand.verifyDirectories(org.eclipse.jgit.transport.URIish)	6880.json,null,null	org.eclipse.jgit.api.CloneCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryDefaultDirectory()	true	394
2592.json	org.eclipse.jgit.transport.BaseReceivePack.fatalError(java.lang.String)	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	705
3484.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.blockSize()	noCall	noCall	true	2410
7872.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.getAutoCRLF()	7853.json,6045.json,8148.json,null,8150.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.BlameCommand.getRawText(java.io.File),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	2851
402.json	org.eclipse.jgit.pgm.TextBuiltin.setCommandName(java.lang.String)	294.json	org.eclipse.jgit.pgm.CommandRef.create()	true	3176
4928.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk)	4979.json,4927.json,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	880
7289.json	org.eclipse.jgit.api.DiffCommand.setContextLines(int)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount()	true	2343
8873.json	org.eclipse.jgit.lib.Config.getInt(java.lang.String, java.lang.String, java.lang.String, int)	3599.json,null,3561.json,1494.json,null,null,6111.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ConfigTest.testParsedEmptyString(),org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.ConfigTest.testExplicitlySetEmptyString(),org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
9530.json	org.eclipse.jgit.lib.RefUpdate.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)	null,4565.json,1853.json,9333.json,null,null,9144.json	org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.RefRename.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)	true	3176
8577.json	org.eclipse.jgit.util.BlockList.resetTailBlock()	8576.json	org.eclipse.jgit.util.BlockList.remove(int)	true	2651
946.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.nonTree(int)	945.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl()	true	3176
2731.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand.copyStatusToResult()	2722.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
4781.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.contains(int)	null,4578.json,null,null,null	org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsOne(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.contains(int),org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsEmpty(),org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains(),org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany()	true	1922
10029.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeHeaderNames(java.util.Map<java.lang.String, java.lang.String>)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
3160.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.padBetweenBlocks(byte)	3339.json,3159.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeIndex(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.padBetweenBlocks()	true	297
1719.json	org.eclipse.jgit.transport.URIish.setUser(java.lang.String)	noCall	noCall	true	3176
6700.json	org.eclipse.jgit.diff.RenameDetector.populateMap(java.util.List<org.eclipse.jgit.diff.DiffEntry>, org.eclipse.jgit.lib.ProgressMonitor)	6698.json	org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2886
4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	null,null,null,null,4741.json,null,null,null,null,null,null,null,null,4057.json,null,null,null	org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject(),org.eclipse.jgit.internal.storage.file.UnpackedObject.parse(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream()	true	2901
1972.json	org.eclipse.jgit.transport.FetchProcess.isTag(java.lang.String)	1971.json	org.eclipse.jgit.transport.FetchProcess.isTag(org.eclipse.jgit.lib.Ref)	true	3176
9929.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hashCode()	null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Short(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Full()	true	856
3576.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.close()	noCall	noCall	true	2410
426.json	org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>)	noCall	noCall	true	3176
2382.json	org.eclipse.jgit.transport.PackParser.getBaseObjectIds()	2619.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity()	true	3040
5388.json	org.eclipse.jgit.revwalk.RevWalk.newFlag(java.lang.String)	null,1323.json,null,null,null,null,null,null,null,5139.json,null,null,null,null,null,null,7260.json,6428.json,6443.json	org.eclipse.jgit.revwalk.RevFlagSetTest.testEquals(),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne(),org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag(),org.eclipse.jgit.revwalk.RevObjectTest.testHasAnyFlag(),org.eclipse.jgit.revwalk.RevFlagSetTest.testContainsAll(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo(),org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlag(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlagSet(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlag(),org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet(),org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryCustom_SlowClock(),org.eclipse.jgit.revwalk.RevFlagSetTest.testContains(),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean),org.eclipse.jgit.blame.BlameGenerator.newFlag(java.lang.String)	true	3176
495.json	org.eclipse.jgit.junit.time.MonotonicFakeClock.Anonymous-4e1d0191-8159-4cca-a0fa-910cc860eb34.read(java.util.concurrent.TimeUnit)	noCall	noCall	true	565
9382.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	9381.json,9375.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	1551
1024.json	org.eclipse.jgit.merge.MergeConfig.getFastForwardMode(org.eclipse.jgit.lib.Config, java.lang.String[])	noCall	noCall	true	1577
6312.json	org.eclipse.jgit.gitrepo.RepoCommand.relativize(java.net.URI, java.net.URI)	6309.json,null	org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRelative(java.lang.String, java.lang.String, java.lang.String)	true	424
2896.json	org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>)	2826.json	org.eclipse.jgit.internal.ketch.KetchSystem.createLeader(org.eclipse.jgit.lib.Repository)	true	872
1723.json	org.eclipse.jgit.transport.URIish.setPort(int)	null,557.json	org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.junit.http.SimpleHttpServer.start()	true	3176
1550.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRefLog(java.lang.String)	2310.json	org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
8284.json	org.eclipse.jgit.util.HttpSupport.responseHeader(org.eclipse.jgit.transport.http.HttpConnection, java.lang.String)	noCall	noCall	true	492
9909.json	org.eclipse.jgit.lfs.LfsBlobFilter.cleanLfsBlob(org.eclipse.jgit.lib.Repository, java.io.InputStream)	9902.json	org.eclipse.jgit.lfs.BuiltinLFS.applyCleanFilter(org.eclipse.jgit.lib.Repository, java.io.InputStream, long, org.eclipse.jgit.attributes.Attribute)	true	98
2119.json	org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status)	2311.json,1515.json,2096.json,2094.json,null,2095.json,2306.json,2310.json,1519.json	org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.PushProcess.modifyUpdatesForDryRun(),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.transport.PushProcessTest.MockPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.PushProcess.rejectAll(),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
6777.json	org.eclipse.jgit.diff.Edit.equals(java.lang.Object)	null,null,null,null,null	org.eclipse.jgit.diff.EditTest.testNotEquals3(),org.eclipse.jgit.diff.EditTest.testNotEquals4(),org.eclipse.jgit.diff.EditTest.testNotEquals1(),org.eclipse.jgit.diff.EditTest.testNotEquals2(),org.eclipse.jgit.diff.EditTest.testEquals1()	true	3176
5361.json	org.eclipse.jgit.revwalk.RevWalk.isRetainBody()	5664.json,5530.json	org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[])	true	3176
429.json	org.eclipse.jgit.pgm.Branch.moveRename(java.util.List<java.lang.String>)	noCall	noCall	true	889
7807.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7802.json,7806.json,7805.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(byte[], int, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	2851
4055.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getPackIndex()	4053.json,4054.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.equals(java.lang.Object),org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.hashCode()	true	1922
9057.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setMustExist(boolean)	null,null,7890.json,null,7048.json	org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String, org.eclipse.jgit.util.FS),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef(),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	2671
1601.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setInstanceFollowRedirects(boolean)	noCall	noCall	true	1572
7963.json	org.eclipse.jgit.util.RawParseUtils.endOfParagraph(byte[], int)	5549.json,5668.json	org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.revwalk.RevTag.getShortMessage()	true	3176
7673.json	org.eclipse.jgit.treewalk.FileTreeIterator.getDirectory()	7675.json	org.eclipse.jgit.treewalk.FileTreeIterator.idSubmodule(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	2890
3950.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanOne(java.lang.String)	3948.json,3949.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanTree(java.lang.String, java.io.File)	true	3059
2152.json	org.eclipse.jgit.transport.TransportGitAnon.service(java.lang.String, org.eclipse.jgit.transport.PacketLineOut)	noCall	noCall	true	3176
109.json	org.eclipse.jgit.pgm.Repo.run()	noCall	noCall	true	1509
7209.json	org.eclipse.jgit.api.StashDropCommand.setStashRef(int)	null,null,null,null	org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef()	true	2272
9932.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toString()	noCall	noCall	true	856
5915.json	org.eclipse.jgit.dircache.DirCacheTree.getChild(int)	6062.json,null,null,220.json,null,134.json	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree)	true	3176
6124.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeNegotiating()	noCall	noCall	true	117
139.json	org.eclipse.jgit.pgm.debug.WriteReftable.min(java.util.List<org.eclipse.jgit.pgm.debug.WriteReftable.LogEntry>)	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
1525.json	org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.checkError(java.io.IOException)	1523.json,1524.json	org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.write(byte[], int, int),org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.flush()	true	705
5997.json	org.eclipse.jgit.dircache.DirCacheEntry.decodeTS(int)	5981.json,5979.json	org.eclipse.jgit.dircache.DirCacheEntry.getLastModified(),org.eclipse.jgit.dircache.DirCacheEntry.getCreationTime()	true	3176
1237.json	org.eclipse.jgit.transport.TagOpt.fromOption(java.lang.String)	noCall	noCall	true	3176
6910.json	org.eclipse.jgit.api.CloneCommand.deleteChildren(java.io.File)	6909.json	org.eclipse.jgit.api.CloneCommand.cleanup()	true	394
6358.json	org.eclipse.jgit.fnmatch.AbstractHead.isStar()	6338.json,6353.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createHeadsStartValues(java.lang.String, java.lang.Character),org.eclipse.jgit.fnmatch.RestrictedWildCardHead.toString()	true	3176
2641.json	org.eclipse.jgit.transport.ReceivePack.setEchoCommandFailures(boolean)	noCall	noCall	false	2174
7548.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.back(int)	null,null,null,null,null,null,null	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName()	true	3176
1417.json	org.eclipse.jgit.transport.UploadPack.setPreUploadHook(org.eclipse.jgit.transport.PreUploadHook)	noCall	noCall	true	2627
4784.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.mask(int)	4782.json,4781.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.get(int),org.eclipse.jgit.internal.storage.file.InflatingBitSet.contains(int)	true	1922
9599.json	org.eclipse.jgit.lib.AnyObjectId.compareTo(byte[], int)	4478.json,7831.json,5964.json,7833.json,9375.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.findOffset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheEntry.isSmudged(),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	3176
1406.json	org.eclipse.jgit.transport.UploadPack.setBiDirectionalPipe(boolean)	noCall	noCall	false	3070
7007.json	org.eclipse.jgit.api.ListTagCommand.call()	null,null,363.json,null	org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoCommitsInRepository()	true	2485
3540.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.getType()	noCall	noCall	true	1397
4645.json	org.eclipse.jgit.internal.storage.file.PackIndex.contains(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1881
8537.json	org.eclipse.jgit.util.RefList.iterator()	null,null,null	org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.util.RefListTest.testEmptyBuilder(),org.eclipse.jgit.util.RefListTest.testIterable()	true	3060
3831.json	org.eclipse.jgit.internal.storage.dfs.DfsConfig.save()	noCall	noCall	true	2410
1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	1950.json	org.eclipse.jgit.transport.FetchProcess.execute(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
5898.json	org.eclipse.jgit.dircache.DirCache.findEntry(int, byte[], int)	5897.json,5948.json	org.eclipse.jgit.dircache.DirCache.findEntry(byte[], int),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits()	true	3176
1999.json	org.eclipse.jgit.transport.Transport.getURI()	1953.json,1951.json,1883.json,2094.json,2093.json,1966.json	org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec)	true	3176
6201.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapRecentCommitSpan()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
6023.json	org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree()	6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	true	2844
1343.json	org.eclipse.jgit.transport.PacketLineOut.end()	null,2644.json,null,1516.json,null,1908.json,2654.json,2341.json,null,null,null,null,null,2342.json,null,1515.json,null,null,null,1906.json,null	org.eclipse.jgit.transport.PushConnectionTest.invalidCommand(),org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.UploadPack.processShallow(java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectId>, boolean),org.eclipse.jgit.transport.BasePackPushConnection.transmitOptions(),org.eclipse.jgit.transport.UploadPack.serviceV2(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.end(),org.eclipse.jgit.transport.BasePackConnection.close(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.BasePackConnection.endOut(),org.eclipse.jgit.transport.BaseReceivePack.close(),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.PacketLineOutTest.testWriteEnd()	false	3176
9208.json	org.eclipse.jgit.lib.AbbreviatedObjectId.length()	9209.json,null,114.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.AbbreviatedObjectId.isComplete(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.pgm.Blame.uniqueAbbrevLen(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString()	true	3176
5940.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts()	5939.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.replace()	true	893
180.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.include(java.lang.String, java.util.List<java.lang.String>)	179.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.init()	true	2816
4720.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getDirectory()	null,null,null,null,null,null,null,4435.json,4011.json,null,null,4730.json,null,null,null,4850.json,null,null,4432.json,4771.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open(),org.eclipse.jgit.internal.storage.file.PackInserterTest.assertPacksOnly(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.PackWriterTest.setUp(),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getDirectory(),org.eclipse.jgit.internal.storage.file.PackInserter.beginPack(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.toString(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.internal.storage.file.PackInserterTest.assertNoObjects(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.FileRepository.getObjectsDirectory(),org.eclipse.jgit.internal.storage.file.AlternatesTest.setAlternate(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.scanLoose(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId)	false	3176
5823.json	org.eclipse.jgit.ignore.internal.Strings.stripTrailingWhitespace(java.lang.String)	null	org.eclipse.jgit.ignore.BasicRuleTest.testStripTrailingWhitespace()	true	1322
5660.json	org.eclipse.jgit.revwalk.RevTag.parse(byte[])	null	org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod()	true	2851
231.json	org.eclipse.jgit.pgm.Clone.initializedSubmodules(java.util.Collection<java.lang.String>)	noCall	noCall	true	409
7903.json	org.eclipse.jgit.submodule.SubmoduleWalk.setTree(org.eclipse.jgit.lib.AnyObjectId)	7885.json,6835.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult)	true	2355
4165.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeDouble(double)	noCall	noCall	true	1922
7934.json	org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)	9368.json,8681.json,8682.json,7952.json,7963.json,8742.json,9006.json,9367.json,5554.json,8705.json,9752.json,8728.json,null,null,8704.json,8701.json,8703.json,5664.json,8663.json,7947.json,9372.json,7451.json,7945.json,8729.json,8677.json,8737.json,8659.json,7948.json,9044.json,7946.json,8647.json,8717.json,7951.json,7962.json,8658.json,8730.json	org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.patch.Patch.skipFile(byte[], int),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int),org.eclipse.jgit.util.RawParseUtils.endOfParagraph(byte[], int),org.eclipse.jgit.patch.FormatError.getLineText(),org.eclipse.jgit.lib.Repository.readMergeHeads(),org.eclipse.jgit.lib.ObjectChecker.checkId(byte[]),org.eclipse.jgit.revwalk.RevCommit.getFooterLines(),org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[]),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean),org.eclipse.jgit.patch.CombinedHunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.patch.EGitPatchHistoryTest.NumStatReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.io.OutputStream[]),org.eclipse.jgit.patch.HunkHeader.toEditList(),org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int),org.eclipse.jgit.util.RawParseUtils.encoding(byte[], int),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.api.RebaseCommand.parseAuthor(byte[]),org.eclipse.jgit.util.RawParseUtils.committer(byte[], int),org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.io.OutputStream[]),org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int),org.eclipse.jgit.patch.BinaryHunk.parseHunk(int, int),org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.util.RawParseUtils.parseEncodingName(byte[]),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.util.RawParseUtils.tagger(byte[], int),org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.util.RawParseUtils.tagMessage(byte[], int),org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int),org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[])	true	3176
2623.json	org.eclipse.jgit.transport.BaseReceivePack.failPendingCommands()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	1310
10301.json	org.eclipse.jgit.http.server.IsLocalFilter.destroy()	noCall	noCall	true	3070
7760.json	org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	1971
1996.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	noCall	noCall	true	3176
5596.json	org.eclipse.jgit.revwalk.BlockObjQueue.Block.clear()	5590.json	org.eclipse.jgit.revwalk.BlockObjQueue.BlockFreeList.newBlock()	true	3176
9062.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getIndexFile()	9074.json,9064.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader)	true	2907
4950.json	org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	null,null,4929.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Anonymous-a366b8f8-3c7d-454d-bb03-91b0f06b8f82.apply(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Anonymous-1d51f7f3-e37b-4993-8c83-d81584a7f50f.apply(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.symref(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testEmptyTree(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testUpdateMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testTagIsPeeled(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyThenReadMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.update(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	884
3720.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.resolveImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>)	3719.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	true	696
2064.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.loose(org.eclipse.jgit.lib.Ref)	2063.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String)	true	3176
3176.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.sizeBytes()	3165.json,3164.json,3170.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, boolean),org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.BlockWriter.blockSizeTooSmall(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
4713.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.checkCRC(int)	noCall	noCall	true	2692
9389.json	org.eclipse.jgit.lib.ObjectChecker.isInvalidOnWindows(byte)	9376.json	org.eclipse.jgit.lib.ObjectChecker.scanPathSegment(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1551
3435.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T)	3432.json,3434.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsBlock),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.putRef(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, T)	true	2410
6014.json	org.eclipse.jgit.dircache.DirCacheBuilder.resort()	6012.json	org.eclipse.jgit.dircache.DirCacheBuilder.finish()	true	3176
6691.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	6690.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2838
2376.json	org.eclipse.jgit.transport.PackParser.setNeedBaseObjectIds(boolean)	2614.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack()	true	3040
7078.json	org.eclipse.jgit.api.Git.notesList()	null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.NotesCommandTest.testListNotes()	true	2618
7218.json	org.eclipse.jgit.api.RemoteRemoveCommand.call()	null,83.json	org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.pgm.Remote.run()	true	911
6731.json	org.eclipse.jgit.diff.DiffEntry.isMarked(int)	null	org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter()	true	1964
7014.json	org.eclipse.jgit.api.ResetCommand.disableRefLog(boolean)	null	org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled()	true	662
4036.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.getShallowCommits()	noCall	noCall	true	221
59.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setChunkedStreamingMode(int)	noCall	noCall	true	1572
511.json	org.eclipse.jgit.junit.http.AppServer.getRequests()	null,null,null,null	org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContent(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.junit.http.HttpTestCase.getRequests(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent()	true	3070
7268.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.setCallback(org.eclipse.jgit.api.CloneCommand.Callback)	6888.json	org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository)	true	409
7264.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.addPath(java.lang.String)	null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	2355
1294.json	org.eclipse.jgit.transport.RemoteConfig.setTimeout(int)	null	org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout()	true	3176
9581.json	org.eclipse.jgit.lib.IndexDiff.getUntracked()	6963.json,null	org.eclipse.jgit.api.Status.getUntracked(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked()	true	2867
5056.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.computeTopPaths()	5055.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.partitionTasks()	true	1880
7457.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.getPath(java.lang.String)	7399.json,7402.json,7427.json,7428.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.popSteps(int),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	1683
8071.json	org.eclipse.jgit.util.ChangeIdUtil.clean(java.lang.String)	8072.json,null	org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.util.ChangeIdUtilTest.testClean()	true	2928
1926.json	org.eclipse.jgit.transport.Daemon.setRepositoryResolver(org.eclipse.jgit.transport.resolver.RepositoryResolver<org.eclipse.jgit.transport.DaemonClient>)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	2672
331.json	org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean)	noCall	noCall	false	3176
236.json	org.eclipse.jgit.pgm.Diff.ignoreSpaceAtEol(boolean)	noCall	noCall	true	2899
9100.json	org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.RepositoryCache.Key)	9099.json,null	org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister()	true	1083
2421.json	org.eclipse.jgit.transport.PackParser.sync()	2407.json,2420.json	org.eclipse.jgit.transport.PackParser.readPackFooter(),org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source, int)	true	3176
2873.json	org.eclipse.jgit.internal.ketch.Proposal.getAuthor()	2845.json,2851.json,2850.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
3368.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getSourcePacks()	3381.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.estimateGcPackSize(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource...)	true	2410
5154.json	org.eclipse.jgit.internal.storage.pack.PackWriter.State.getPhase()	noCall	noCall	true	2399
3457.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.setConnectivityOnly(boolean)	noCall	noCall	true	211
3340.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeMultiLevelIndex(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	3339.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeIndex()	true	297
9248.json	org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int)	noCall	noCall	true	2658
10103.json	org.eclipse.jgit.lfs.server.LfsProtocolServlet.LfsRequest.isDownload()	noCall	noCall	true	512
7002.json	org.eclipse.jgit.api.CommitCommand.setHookOutputStream(java.lang.String, java.io.PrintStream)	7000.json	org.eclipse.jgit.api.CommitCommand.setHookOutputStream(java.io.PrintStream)	true	1223
3535.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.getShallowCommits()	noCall	noCall	true	1397
4043.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.getType()	noCall	noCall	true	221
7037.json	org.eclipse.jgit.api.StashCreateCommand.createBuilder()	7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	true	2293
7507.json	org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref)	7506.json,null	org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags(),org.eclipse.jgit.api.NameRevCommandTest.ref()	true	1915
3502.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, byte[], int, int)	3503.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	true	2410
1459.json	org.eclipse.jgit.transport.UploadPack.AnyRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	1803
1355.json	org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	3176
5298.json	org.eclipse.jgit.attributes.Attributes.isCustom(java.lang.String)	5300.json	org.eclipse.jgit.attributes.Attributes.canBeContentMerged()	true	925
8661.json	org.eclipse.jgit.patch.FileHeader.parseNewName(int, int)	8659.json,8663.json,8717.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
1796.json	org.eclipse.jgit.transport.DaemonService.setEnabled(boolean)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
9355.json	org.eclipse.jgit.lib.ObjectId.writeObject(java.io.ObjectOutputStream)	noCall	noCall	true	2916
110.json	org.eclipse.jgit.pgm.LsTree.run()	noCall	noCall	true	3176
101.json	org.eclipse.jgit.pgm.Status.getStageStateDescription(org.eclipse.jgit.lib.IndexDiff.StageState)	100.json	org.eclipse.jgit.pgm.Status.printUnmerged(java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>)	true	1878
7984.json	org.eclipse.jgit.util.FS_Win32.canExecute(java.io.File)	noCall	noCall	true	3176
5114.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getStatistics()	3772.json,1518.json,null,3382.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2684
5541.json	org.eclipse.jgit.revwalk.RevCommit.getParentCount()	null,null,null,203.json,7502.json,null,6812.json,null,null,null,null,null,null,6406.json,null,null,380.json,6253.json,120.json,7196.json,null,null,272.json,null,null,null,4988.json,null,null,7407.json,5139.json,6246.json,383.json,7237.json,null,null,null,7405.json,null,null,null,7429.json,null,null,null,339.json,null,6220.json,null,null,null,null,null	org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.blame.Candidate.getParentCount(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.blame.ReverseWalk.next(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revplot.PlotCommitList.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>),org.eclipse.jgit.pgm.Blame.abbreviate(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2(),org.eclipse.jgit.revwalk.filter.RevFilter.NoMergesFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.revwalk.filter.RevFilter.OnlyMergesFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting(),org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3(),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.parents(org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
8131.json	org.eclipse.jgit.util.StringUtils.capitalize(java.lang.String)	null	org.eclipse.jgit.api.ArchiveCommandTest.MockFormat.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	false	1206
967.json	org.eclipse.jgit.merge.StrategyRecursive.newMerger(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	1933
6970.json	org.eclipse.jgit.api.RemoveNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject)	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
2322.json	org.eclipse.jgit.transport.ProgressSpinner.write(java.lang.String)	2320.json,2321.json	org.eclipse.jgit.transport.ProgressSpinner.send(long),org.eclipse.jgit.transport.ProgressSpinner.endTask(java.lang.String)	true	906
3165.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, boolean)	3164.json,3163.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.BlockWriter.mustAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
8181.json	org.eclipse.jgit.util.io.TeeInputStream.read(byte[], int, int)	8179.json	org.eclipse.jgit.util.io.TeeInputStream.read()	true	2844
6323.json	org.eclipse.jgit.gitrepo.ManifestParser.removeOverlaps()	6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	true	1412
8720.json	org.eclipse.jgit.patch.CombinedFileHeader.newHunkHeader(int)	noCall	noCall	true	3176
8448.json	org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String)	8047.json,8060.json	org.eclipse.jgit.util.FS_Win32_Cygwin.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.util.FS_POSIX.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String)	true	1223
147.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan()	145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	true	297
10167.json	org.eclipse.jgit.transport.JschConfigSessionFactory.createDefaultJSch(org.eclipse.jgit.util.FS)	10166.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getJSch(org.eclipse.jgit.transport.OpenSshConfig.Host, org.eclipse.jgit.util.FS)	true	3176
472.json	org.eclipse.jgit.junit.MockSystemReader.getTimezone(long)	null	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tick()	true	3141
4880.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newReader()	noCall	noCall	true	1397
2447.json	org.eclipse.jgit.transport.PackParser.UnresolvedDelta.getOffset()	2931.json,4710.json,3662.json	org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	true	2692
5910.json	org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries()	5892.json	org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream)	true	2204
6454.json	org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit)	6452.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate)	true	1515
8049.json	org.eclipse.jgit.util.FS_POSIX.setUmask(int)	null	org.eclipse.jgit.util.FSTest.testExecutableAttributes()	true	1127
6246.json	org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	noCall	noCall	true	3176
1651.json	org.eclipse.jgit.transport.PreUploadHook.Anonymous-ee8b4e32-1cea-4592-8c1d-e618f7574d78.onSendPack(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	2627
7568.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...)	7567.json,7569.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...)	true	824
6348.json	org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()	null,2996.json,null,null,null,null	org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset(),org.eclipse.jgit.transport.OpenSshConfig.patternMatchesHost(java.lang.String, java.lang.String),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertFileNameMatch(java.lang.String, java.lang.String, char, boolean, boolean),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertMatch(java.lang.String, java.lang.String, boolean, boolean)	true	3176
5028.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.set(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5011.json,5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clear(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2893
4029.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.inflate(long, int)	4035.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int)	true	221
2797.json	org.eclipse.jgit.internal.ketch.KetchReplica.defer(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	2796.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushAsync(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
9310.json	org.eclipse.jgit.lib.BatchRefUpdate.disableRefLog()	4933.json,9309.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.lib.BatchRefUpdate.setRefLogMessage(java.lang.String, boolean)	true	2210
338.json	org.eclipse.jgit.pgm.opt.OptionWithValuesListHandler.getDefaultMetaVariable()	noCall	noCall	true	889
6706.json	org.eclipse.jgit.diff.RenameDetector.exactCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry)	6698.json	org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
3970.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()	3961.json,null,3942.json,null,3939.json,null,3955.json,3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.getRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3059
9074.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree()	9070.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()	true	2907
9247.json	org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int)	noCall	noCall	true	2658
8011.json	org.eclipse.jgit.util.LongList.sort()	noCall	noCall	true	2838
291.json	org.eclipse.jgit.pgm.CommandRef.isCommon()	104.json,162.json	org.eclipse.jgit.pgm.CommandCatalog.common(),org.eclipse.jgit.pgm.debug.ShowCommands.run()	true	3176
1741.json	org.eclipse.jgit.transport.TransferConfig.isAllowTipSha1InWant()	1421.json	org.eclipse.jgit.transport.UploadPack.setTransferConfig(org.eclipse.jgit.transport.TransferConfig)	true	1803
2884.json	org.eclipse.jgit.internal.ketch.Proposal.getState()	2892.json,2893.json,2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	872
6241.json	org.eclipse.jgit.revplot.PlotCommit.reset()	noCall	noCall	true	3176
2111.json	org.eclipse.jgit.transport.RemoteRefUpdate.getTrackingRefUpdate()	null,2093.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
5392.json	org.eclipse.jgit.revwalk.RevWalk.retainOnReset(org.eclipse.jgit.revwalk.RevFlag)	5393.json	org.eclipse.jgit.revwalk.RevWalk.retainOnReset(java.util.Collection<org.eclipse.jgit.revwalk.RevFlag>)	true	1330
1144.json	org.eclipse.jgit.notes.NoteMap.remove(org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty()	true	2766
7464.json	org.eclipse.jgit.api.RemoteAddCommand.call()	null,83.json,null	org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()	true	911
3776.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getSourcePacks()	noCall	noCall	true	2410
3850.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.size()	3658.json,null,3428.json,3432.json,null,3672.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.buffer(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsBlock),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	2410
9199.json	org.eclipse.jgit.lib.MutableObjectId.fromHexString(byte[], int)	9197.json,9198.json	org.eclipse.jgit.lib.MutableObjectId.fromString(byte[], int),org.eclipse.jgit.lib.MutableObjectId.fromString(java.lang.String)	true	3176
9106.json	org.eclipse.jgit.lib.RepositoryCache.configureEviction(org.eclipse.jgit.lib.RepositoryCacheConfig)	9105.json	org.eclipse.jgit.lib.RepositoryCache.reconfigure(org.eclipse.jgit.lib.RepositoryCacheConfig)	true	698
1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2709
197.json	org.eclipse.jgit.pgm.debug.LfsStore.getProtocolUrl(java.net.URI)	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	856
8079.json	org.eclipse.jgit.util.NB.compareUInt32(int, int)	null,9599.json,9600.json,9213.json,9211.json,9212.json,9598.json	org.eclipse.jgit.util.NBTest.testCompareUInt32(),org.eclipse.jgit.lib.AnyObjectId.compareTo(byte[], int),org.eclipse.jgit.lib.AnyObjectId.compareTo(int[], int),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int[], int),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(byte[], int),org.eclipse.jgit.lib.AnyObjectId.compareTo(org.eclipse.jgit.lib.AnyObjectId)	true	3176
8139.json	org.eclipse.jgit.util.StringUtils.isEmptyOrNull(java.lang.String)	1510.json,9479.json,1726.json,1495.json,8427.json,null,1944.json,8042.json,7991.json,7382.json,8052.json,87.json,1947.json	org.eclipse.jgit.transport.PushConfig.PushRecurseSubmodulesMode.matchConfigValue(java.lang.String),org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode.matchConfigValue(java.lang.String),org.eclipse.jgit.transport.URIish.eq(java.lang.String, java.lang.String),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.util.FS.discoverGitSystemConfig(),org.eclipse.jgit.util.FS_POSIX.determineAtomicFileCreationSupport(),org.eclipse.jgit.transport.UserAgent.computeVersion(),org.eclipse.jgit.util.FS_Win32_Cygwin.resolve(java.io.File, java.lang.String),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.api.MergeCommand.FastForwardMode.matchConfigValue(java.lang.String),org.eclipse.jgit.util.FS_POSIX.discoverGitExe(),org.eclipse.jgit.pgm.Config.list(),org.eclipse.jgit.transport.UserAgent.set(java.lang.String)	true	2579
4086.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int)	4140.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	3176
6545.json	org.eclipse.jgit.diff.DiffFormatter.getOutputStream()	noCall	noCall	true	2899
6235.json	org.eclipse.jgit.revplot.PlotCommit.getChildCount()	6220.json,6246.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int),org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	3176
2570.json	org.eclipse.jgit.transport.BaseReceivePack.getAdvertiseRefsHook()	noCall	noCall	true	2292
10036.json	org.eclipse.jgit.lfs.server.s3.SignerV4.hash(java.lang.String)	10038.json	org.eclipse.jgit.lfs.server.s3.SignerV4.stringToSign(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	843
7033.json	org.eclipse.jgit.api.StashCreateCommand.setPerson(org.eclipse.jgit.lib.PersonIdent)	null	org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage()	true	2293
8305.json	org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()	8301.json	org.eclipse.jgit.util.GSSManagerFactory.detect()	true	1481
1154.json	org.eclipse.jgit.notes.NoteParser.parseLeafTree()	1153.json	org.eclipse.jgit.notes.NoteParser.parseTree()	true	2767
6150.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeTotal()	noCall	noCall	true	1094
3488.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getFormat()	null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
9753.json	org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int)	9752.json	org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean)	true	1683
5675.json	org.eclipse.jgit.revwalk.RewriteGenerator.next()	noCall	noCall	true	3176
9123.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.equals(java.lang.Object)	noCall	noCall	true	3176
7081.json	org.eclipse.jgit.api.Git.clean()	null,null,null,null,null,null,null,null,null,437.json,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.api.CleanCommandTest.testClean(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2574
4778.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.newCachedFileObjectDatabase()	4777.json,4440.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.newCachedDatabase(),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.myAlternates()	true	3061
5873.json	org.eclipse.jgit.dircache.DirCache.newInCore()	null,null,null,null,4948.json,null,null,null,null,null,null,null,null,7040.json,null,null,4966.json,null,null,null,null,null,5874.json,null,null,null,null,6309.json,null,null,null,6981.json,null,null,null,null,null	org.eclipse.jgit.dircache.DirCacheBasicTest.testFindOnEmpty(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.internal.storage.reftree.RefTree.newEmptyTree(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testEmpty(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_WithTreeWalk(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode(),org.eclipse.jgit.transport.PushCertificateStore.newDirCache(),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage()	true	3176
7279.json	org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId)	7272.json,7271.json	org.eclipse.jgit.api.LogCommand.not(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.LogCommand.add(org.eclipse.jgit.lib.AnyObjectId)	true	2953
1908.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor)	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
7990.json	org.eclipse.jgit.util.FS_Win32.list(java.io.File, org.eclipse.jgit.treewalk.FileTreeIterator.FileModeStrategy)	noCall	noCall	true	77
2236.json	org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean)	2237.json,2234.json	org.eclipse.jgit.transport.TransportHttp.updateSslVerifyUser(boolean),org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	270
918.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictStart(org.eclipse.jgit.merge.MergeChunk)	916.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(org.eclipse.jgit.merge.MergeChunk)	true	1171
8561.json	org.eclipse.jgit.util.RefList.Builder.toRefList()	null,null,148.json,null,3940.json,3689.json,3945.json,4501.json,null,null,4967.json,null,null,null,null,3972.json,3566.json	org.eclipse.jgit.util.RefList.Builder.toString(),org.eclipse.jgit.util.RefListTest.toList(org.eclipse.jgit.lib.Ref...),org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote(),org.eclipse.jgit.util.RefListTest.testBuilder_Set(),org.eclipse.jgit.internal.storage.file.RefDirectory.getLooseRefs(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.util.RefMapTest.toList(org.eclipse.jgit.lib.Ref...),org.eclipse.jgit.util.RefListTest.testBuilder_AddThenSort(),org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean),org.eclipse.jgit.util.RefListTest.testCopyLeadingPrefix(),org.eclipse.jgit.util.RefListTest.testEmptyBuilder(),org.eclipse.jgit.util.RefListTest.testBuilder_AddAll(),org.eclipse.jgit.util.RefListTest.testCopyConstructorReusesArray(),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String)	true	3060
2625.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	3176
2659.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseCapability(java.lang.String, java.lang.String)	2660.json,null,2604.json	org.eclipse.jgit.transport.RefAdvertiser.addSymref(java.lang.String, java.lang.String),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	1137
6593.json	org.eclipse.jgit.diff.DiffFormatter.writeLine(char, org.eclipse.jgit.diff.RawText, int)	6589.json,6590.json,6587.json	org.eclipse.jgit.diff.DiffFormatter.writeAddedLine(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.DiffFormatter.writeRemovedLine(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.DiffFormatter.writeContextLine(org.eclipse.jgit.diff.RawText, int)	true	3176
6006.json	org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, int)	5932.json,5933.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.skip(),org.eclipse.jgit.dircache.DirCacheBuildIterator.stopWalk()	true	3176
1521.json	org.eclipse.jgit.transport.BasePackPushConnection.getPushOptions()	noCall	noCall	true	688
3047.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.initObjIndex()	3038.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.byObjectId(org.eclipse.jgit.lib.AnyObjectId)	true	297
1609.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)	noCall	noCall	true	1572
2380.json	org.eclipse.jgit.transport.PackParser.setExpectDataAfterPackFooter(boolean)	2614.json,null,null,null,null	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()	true	2186
5454.json	org.eclipse.jgit.revwalk.FooterLine.matches(org.eclipse.jgit.revwalk.FooterKey)	5556.json,null	org.eclipse.jgit.revwalk.RevCommit.getFooterLines(org.eclipse.jgit.revwalk.FooterKey),org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId()	true	3176
3534.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.has(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	214
7175.json	org.eclipse.jgit.api.MergeResult.getFailingPaths()	null,7405.json,278.json,null,null,null	org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.checkMergeFailedResult(org.eclipse.jgit.api.MergeResult, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason, java.lang.String, java.io.File)	true	2638
4097.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeFooter()	4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	true	1922
5835.json	org.eclipse.jgit.ignore.internal.Strings.reset(char[])	null	org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String)	true	1322
3845.json	org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getType()	noCall	noCall	true	2410
6990.json	org.eclipse.jgit.api.CommitCommand.getCommitter()	noCall	noCall	true	2953
5078.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isThin()	noCall	noCall	true	3176
4153.json	org.eclipse.jgit.internal.storage.file.PackFile.hasExt(org.eclipse.jgit.internal.storage.pack.PackExt)	4148.json	org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex()	true	1922
2799.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
8813.json	org.eclipse.jgit.lib.ConfigSnapshot.end(java.util.List<org.eclipse.jgit.lib.ConfigLine>, int, java.lang.String, java.lang.String, java.lang.String)	8810.json	org.eclipse.jgit.lib.ConfigSnapshot.get(java.lang.String, java.lang.String, java.lang.String)	true	2266
10124.json	org.eclipse.jgit.archive.Tbz2Format.createArchiveOutputStream(java.io.OutputStream)	noCall	noCall	true	1831
1120.json	org.eclipse.jgit.hooks.GitHook.doRun()	1095.json,1124.json,1122.json,1103.json	org.eclipse.jgit.hooks.PrePushHook.call(),org.eclipse.jgit.hooks.CommitMsgHook.call(),org.eclipse.jgit.hooks.PostCommitHook.call(),org.eclipse.jgit.hooks.PreCommitHook.call()	true	1195
5081.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setUseCachedPacks(boolean)	1518.json,null	org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2683
6159.json	org.eclipse.jgit.storage.pack.PackConfig.setPreserveOldPacks(boolean)	7180.json,null	org.eclipse.jgit.api.GarbageCollectCommand.setPreserveOldPacks(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks()	true	506
8737.json	org.eclipse.jgit.patch.BinaryHunk.parseHunk(int, int)	8683.json	org.eclipse.jgit.patch.Patch.parseGitBinary(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
1187.json	org.eclipse.jgit.notes.FanoutBucket.getBucket(int)	1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
2255.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.openAlternate(java.lang.String)	noCall	noCall	true	3176
4618.json	org.eclipse.jgit.internal.storage.file.LockFile.Anonymous-7b1c714b-bfb2-4a34-b316-f8cff0d4109e.write(byte[])	noCall	noCall	true	3176
5691.json	org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>)	null,6866.json	org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.assertContains(org.eclipse.jgit.revwalk.RevCommit, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>)	true	2120
2936.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onStoreStream(byte[], int, int)	noCall	noCall	true	319
3791.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader)	3718.json,3717.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getCachedPacksAndUpdate(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder),org.eclipse.jgit.internal.storage.dfs.DfsReader.getBitmapIndex()	true	1922
8337.json	org.eclipse.jgit.util.sha1.SHA1.compress()	8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	true	466
433.json	org.eclipse.jgit.pgm.Branch.addRef(java.lang.String, org.eclipse.jgit.lib.Ref)	432.json,431.json	org.eclipse.jgit.pgm.Branch.addRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>, java.lang.String),org.eclipse.jgit.pgm.Branch.list()	true	3176
8174.json	org.eclipse.jgit.util.io.CountingOutputStream.getCount()	3274.json,4021.json,3783.json,3283.json,3382.json,3513.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.size(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.getOffset(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushFileHeader(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2410
4789.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.getBitmap()	4574.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.combine()	true	1922
8475.json	org.eclipse.jgit.util.FileUtils.delete(java.io.File)	null,null,null,null,7399.json,null,8401.json,null,null,null,null,null,null,null,7040.json,9898.json,null,4849.json,null,null,4719.json,1379.json,null,null,null,4193.json,null,null,null,4565.json,8485.json,6045.json,null,null,null,null,null,null,null,null,8411.json,null,null,null,1368.json,7409.json,null	org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.junit.TestRepository.prunePacked(org.eclipse.jgit.internal.storage.file.ObjectDirectory),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.delete(java.io.File[]),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.util.FS_Win32.detectSymlinkSupport(),org.eclipse.jgit.internal.storage.file.PackInserter.close(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.openIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.junit.RepositoryTestCase.fsTick(java.io.File),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.internal.storage.file.PackLock.unlock(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.util.FileUtilsTest.testDeleteFile(),org.eclipse.jgit.util.FileUtilsTest.testCreateNewFile(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.util.FileUtils.createSymLink(java.io.File, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.junit.JGitTestUtil.deleteTrashFile(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.api.AddCommandTest.testReplaceFileByPartOfDirectory(),org.eclipse.jgit.api.AddCommandTest.testReplaceFileWithDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.util.FS.delete(java.io.File),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashOnlyMatchesDirectory(),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit()	true	2741
7357.json	org.eclipse.jgit.api.CleanCommand.setForce(boolean)	null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository()	true	675
1902.json	org.eclipse.jgit.transport.BasePackFetchConnection.getFetchConfig()	null,null	org.eclipse.jgit.transport.TestProtocol.TransportInternal.openFetch(),org.eclipse.jgit.transport.TestProtocol.TransportInternal.Anonymous-5ca82a4a-b86e-4866-9558-5ea186165d46.getFetchConfig()	true	117
6307.json	org.eclipse.jgit.gitrepo.RepoCommand.setRemoteReader(org.eclipse.jgit.gitrepo.RepoCommand.RemoteReader)	null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	1495
3362.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getAllRefs()	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	876
3238.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setMinUpdateIndex(long)	noCall	noCall	true	297
6967.json	org.eclipse.jgit.api.Status.getIgnoredNotInIndex()	null,7351.json,null	org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore()	true	2031
9958.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char[], java.lang.StringBuilder)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToStringBuilder()	true	856
4296.json	org.eclipse.jgit.internal.storage.file.WindowCache.slot(org.eclipse.jgit.internal.storage.file.PackFile, long)	4326.json,4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.gc(),org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
440.json	org.eclipse.jgit.console.ConsoleAuthenticator.formatRealm()	439.json	org.eclipse.jgit.console.ConsoleAuthenticator.promptPasswordAuthentication()	true	3141
9526.json	org.eclipse.jgit.lib.RefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.AnyObjectId)	4565.json,7224.json,7388.json,6309.json,9333.json,7438.json,167.json,null,null,3609.json,7212.json,null,null,null,1853.json,null,null,null,7434.json,null,6979.json,7385.json,null	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.api.StashDropCommand.createRefUpdate(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1()	true	3176
9519.json	org.eclipse.jgit.lib.RefUpdate.getName()	4919.json,null,4565.json,4984.json,4981.json,9551.json,4979.json,167.json,null,7008.json,null,4568.json,9550.json,9151.json,4566.json,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.asNew(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate.Result, boolean, boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate),org.eclipse.jgit.lib.RefUpdate.link(java.lang.String),org.eclipse.jgit.lib.RefRename.needToUpdateHEAD(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	3176
8639.json	org.eclipse.jgit.util.time.ProposedTimestamp.close()	noCall	noCall	true	565
9203.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromObjectId(org.eclipse.jgit.lib.AnyObjectId)	6716.json,7399.json,6598.json,null,null,null,null,null,null,null,6715.json,null,6714.json,null	org.eclipse.jgit.diff.DiffEntry.delete(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetectorTest.assertAdd(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateOnEmptyRepository(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.DiffEntry.add(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.lib.ObjectReader.abbreviate(org.eclipse.jgit.lib.AnyObjectId, int)	true	2901
314.json	org.eclipse.jgit.pgm.opt.AbstractTreeIteratorHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
2037.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>)	null,6911.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.api.PushCommand.call()	true	486
3173.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.compare(byte[], int, int, byte[], int, int)	3117.json,3118.json,3095.json,3174.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte[]),org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte[], int, int, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.match(byte[], boolean),org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.compare(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
4108.json	org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()	null,4110.json,4140.json,null,null,4762.json,null,null,4805.json,4834.json,null,4757.json,null,null,4139.json,null,4124.json,4697.json,4145.json	org.eclipse.jgit.internal.storage.file.PackInserterTest.overwriteExistingPack(),org.eclipse.jgit.internal.storage.file.PackFile.getPackName(),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.reuseMap(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.internal.storage.file.GC.getStatistics(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertPack(org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.ObjectDirectory.closeAllPackHandles(java.io.File),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackSize(),org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	false	3176
9604.json	org.eclipse.jgit.lib.AnyObjectId.equals(java.lang.Object)	null	org.eclipse.jgit.revwalk.RevObjectTest.testEquals()	true	3176
168.json	org.eclipse.jgit.pgm.debug.RebuildRefTree.rebuild(org.eclipse.jgit.lib.RefDatabase)	167.json	org.eclipse.jgit.pgm.debug.RebuildRefTree.run()	true	884
7341.json	org.eclipse.jgit.api.ReflogCommand.setRef(java.lang.String)	7380.json,386.json,null	org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.pgm.Reflog.run(),org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog()	true	2545
9301.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.computeGrowAt(int)	9299.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.grow()	true	2645
9263.json	org.eclipse.jgit.lib.Constants.encodedTypeString(int)	null,4885.json,4007.json,null,2398.json,null,3503.json,2410.json,null	org.eclipse.jgit.junit.TestRepository.assertHash(org.eclipse.jgit.revwalk.RevObject, byte[]),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.writeHeader(java.io.OutputStream, int, long),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.util.sha1.SHA1Test.blob(byte[], org.eclipse.jgit.util.sha1.SHA1)	true	3176
23.json	org.eclipse.jgit.awtui.CommitGraphPane.stroke(int)	27.json	org.eclipse.jgit.awtui.AWTPlotRenderer.drawLine(java.awt.Color, int, int, int, int, int)	true	3176
2849.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertProposals(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp)	2848.json	org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	872
2414.json	org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	2398.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor)	true	367
7622.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.growPath(int)	7549.json,null	org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testGrowPath()	true	3176
7894.json	org.eclipse.jgit.submodule.SubmoduleWalk.setRootTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7886.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String)	true	2186
929.json	org.eclipse.jgit.merge.MergeStrategy.register(org.eclipse.jgit.merge.MergeStrategy)	noCall	noCall	true	3176
4989.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.isRecentCommit(org.eclipse.jgit.revwalk.RevCommit)	4988.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	963
5207.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBaseId()	5245.json,5045.json,5134.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.pack.PackWriter.delta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
7344.json	org.eclipse.jgit.api.BlameCommand.setDiffAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm)	noCall	noCall	true	2567
4912.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	4912.json,4911.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.peel(org.eclipse.jgit.lib.Ref)	true	880
4024.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.encodeTypeSize(int, long)	4023.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.beginObject(int, long)	true	221
136.json	org.eclipse.jgit.pgm.debug.WriteReftable.printf(java.lang.String, java.lang.Object...)	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
5880.json	org.eclipse.jgit.dircache.DirCache.builder()	null,7019.json,null,null,null,null,null,null,null,null,null,6023.json,null,null,null,null,7018.json,4966.json,6021.json,null,null,945.json,null,null,1005.json,7530.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,null,null,null,7193.json,5874.json,null,null,null,6309.json,null,null,null,null,6981.json,null,null,null,7243.json,null,null,null	org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths(),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.parent(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.verifyStageState(org.eclipse.jgit.lib.IndexDiff.StageState, int...),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.createTree(java.lang.String...),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.createTree(java.lang.String...),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
6849.json	org.eclipse.jgit.api.FetchCommand.setRefSpecs(java.lang.String...)	null,null,null,null,null,null,null,null	org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects()	true	276
9425.json	org.eclipse.jgit.lib.ObjectIdRef.toString()	null	org.eclipse.jgit.lib.ObjectIdRefTest.testToString()	true	3176
8166.json	org.eclipse.jgit.util.io.LimitedInputStream.available()	noCall	noCall	true	1565
9463.json	org.eclipse.jgit.lib.TagBuilder.setTag(java.lang.String)	null,7299.json,null,null,null,null	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag()	true	3176
6739.json	org.eclipse.jgit.diff.HashedSequenceComparator.hash(org.eclipse.jgit.diff.HashedSequence<S>, int)	6666.json	org.eclipse.jgit.diff.HistogramDiffIndex.hash(org.eclipse.jgit.diff.HashedSequence<S>, int)	true	2820
4463.json	org.eclipse.jgit.internal.storage.file.CheckoutEntryImpl.getFromBranch()	noCall	noCall	true	2470
5200.json	org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getDeltaBase()	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2906
6913.json	org.eclipse.jgit.api.PushCommand.getRemote()	6911.json	org.eclipse.jgit.api.PushCommand.call()	true	2805
5085.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(boolean)	1536.json,1518.json,null	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	1887
3677.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.close()	noCall	noCall	true	286
9985.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte[], int)	null,9984.json,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToOutputStream(),org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte[]),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToByteBuffer()	true	856
9209.json	org.eclipse.jgit.lib.AbbreviatedObjectId.isComplete()	null,6598.json,null,null,null,null,null,null,9210.json,null,null,null,null,null,6583.json,null,null,null,3719.json,null,null,null,4342.json	org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectId.toObjectId(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString(),org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.internal.storage.file.WindowCursor.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	true	3176
1915.json	org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.transport.PacketLineIn.AckNackResult)	1908.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
2097.json	org.eclipse.jgit.transport.PushProcess.updateTrackingRefs()	2093.json	org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3986.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(java.io.File, int)	3961.json,4502.json,4566.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate)	true	3176
242.json	org.eclipse.jgit.pgm.Diff.abbrev(boolean)	noCall	noCall	true	2899
4336.json	org.eclipse.jgit.internal.storage.file.ByteWindow.setInput(long, java.util.zip.Inflater)	4354.json	org.eclipse.jgit.internal.storage.file.WindowCursor.inflate(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], boolean)	true	3176
5509.json	org.eclipse.jgit.revwalk.DateRevQueue.buildIndex()	5507.json	org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	true	1930
6216.json	org.eclipse.jgit.revplot.PlotWalk.getRefs(org.eclipse.jgit.lib.AnyObjectId)	6215.json	org.eclipse.jgit.revplot.PlotWalk.next()	true	3176
9352.json	org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,2260.json,null,null,null,null,null,null,null,null,null,145.json,null,null,null,null,null,null,2522.json,null,null,4810.json,null,null,null,148.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,141.json,null,null,2063.json,null,null,null,2646.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2608.json,null,null,1556.json,null,null,1961.json,137.json,null,null,4809.json,null,null,4432.json,2333.json,null,8967.json,null,null,null,null,null,null,null,null,null,null,null,null,null,213.json,null,null,null,null,7407.json,null,null,null,null,null,null,null,null,2041.json,null,null,null,null,null,null,null,null,null,null,null,6309.json,null,null,null,1317.json,null,null,null,218.json,null,2222.json,4756.json,null,3972.json,null,null	org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACK1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.lib.ObjectIdTest.test002_toString(),org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.readAdvertisedImpl(java.io.BufferedReader),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFile(),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.updateToMissingObject(),org.eclipse.jgit.lib.RepositoryResolveTest.id(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.run(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.setUp(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevTagParseTest.id(java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.lib.ObjectIdTest.test003_equals(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testNotIgnoreNonExistingObjects(),org.eclipse.jgit.lib.ObjectIdTest.test001_toString(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.addMissingObject(),org.eclipse.jgit.lib.ObjectIdTest.test011_toString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack4(boolean),org.eclipse.jgit.transport.PackParserTest.test1(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.id(java.lang.String),org.eclipse.jgit.lib.ObjectIdTest.testFromString_nonHex(),org.eclipse.jgit.lib.ObjectIdTest.testFromString_shortNonHex(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.pgm.debug.WriteReftable.parseId(java.lang.String),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.transport.BaseReceivePack.parseCommand(java.lang.String),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcontinue1(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testIsId(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKready1(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_ACKcommon1(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack1(),org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject(),org.eclipse.jgit.internal.storage.file.PackIndexV1Test.testCRC32(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.transport.BaseReceivePack.parseShallow(java.lang.String),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce(),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefsImpl(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.io.BufferedReader),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete(),org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.debug.WriteReftable.readRefs(java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PackParserTest.test2(),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.scanLoose(),org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredStoredInGitBlob(),org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String),org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote(),org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(java.lang.String, java.lang.String, org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.transport.PushProcessTest.testPushResult(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_CreateBadTree(),org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward(),org.eclipse.jgit.revwalk.RevCommitParseTest.id(java.lang.String),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lib.ObjectIdTest.testFromString_short(),org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads(),org.eclipse.jgit.lib.ObjectIdTest.test009_toString(),org.eclipse.jgit.transport.UploadPack.recvWants(),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_NAK(),org.eclipse.jgit.internal.storage.file.PackIndexV2Test.testCRC32(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects(),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertAlternateObjects(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(java.lang.String),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri(),org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection()	true	3176
8263.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[])	noCall	noCall	true	3176
6412.json	org.eclipse.jgit.blame.BlameResult.getResultPath()	6426.json	org.eclipse.jgit.blame.BlameResult.toString()	true	2567
5182.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[])	null,5134.json	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest(),org.eclipse.jgit.internal.storage.pack.PackWriter.delta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
5320.json	org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	5319.json,5320.json	org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(org.eclipse.jgit.attributes.AttributesNode, java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	849
507.json	org.eclipse.jgit.junit.http.AppServer.tearDown()	558.json,null,null	org.eclipse.jgit.junit.http.SimpleHttpServer.stop(),org.eclipse.jgit.junit.http.HttpTestCase.tearDown(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.tearDown()	true	3070
2787.json	org.eclipse.jgit.internal.ketch.KetchReplica.equals(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.internal.ketch.LogIndex)	2788.json,2795.json,2786.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest(),org.eclipse.jgit.internal.ketch.KetchReplica.hasAccepted(org.eclipse.jgit.internal.ketch.LogIndex)	true	872
4130.json	org.eclipse.jgit.internal.storage.file.PackFile.beginCopyAsIs(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	4123.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
479.json	org.eclipse.jgit.junit.MockSystemReader.setUnix()	null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix(),org.eclipse.jgit.lib.ValidRefNameTest.setUnixSystemReader(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	2376
9013.json	org.eclipse.jgit.lib.Repository.readOrigHead()	null,null,null,null,null,7436.json	org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2201
8170.json	org.eclipse.jgit.util.io.LimitedInputStream.reset()	noCall	noCall	true	1565
5179.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(int[])	5177.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()	true	2893
7310.json	org.eclipse.jgit.api.TagCommand.getObjectId()	noCall	noCall	true	2844
9108.json	org.eclipse.jgit.lib.RepositoryCache.registerRepository(org.eclipse.jgit.lib.RepositoryCache.Key, org.eclipse.jgit.lib.Repository)	9097.json	org.eclipse.jgit.lib.RepositoryCache.register(org.eclipse.jgit.lib.Repository)	true	3176
1947.json	org.eclipse.jgit.transport.UserAgent.set(java.lang.String)	noCall	noCall	true	1137
10392.json	org.eclipse.jgit.http.server.ServletUtils.consumeRequestBody(java.io.InputStream)	noCall	noCall	true	2382
1677.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.build()	2392.json	org.eclipse.jgit.transport.PackParser.getReceivedPackStatistics()	true	629
7525.json	org.eclipse.jgit.api.TransportCommand.self()	7527.json,7524.json,7523.json,7526.json,7522.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.api.TransportCommand),org.eclipse.jgit.api.TransportCommand.setTransportConfigCallback(org.eclipse.jgit.api.TransportConfigCallback),org.eclipse.jgit.api.TransportCommand.setTimeout(int),org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.transport.Transport),org.eclipse.jgit.api.TransportCommand.setCredentialsProvider(org.eclipse.jgit.transport.CredentialsProvider)	true	2403
2199.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.newMD5()	2198.json,2197.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.KD(java.lang.String, java.lang.String),org.eclipse.jgit.transport.HttpAuthMethod.Digest.H(java.lang.String)	true	2813
3236.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setConfig(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	null,null,3606.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
4122.json	org.eclipse.jgit.internal.storage.file.PackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor)	4892.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2683
76.json	org.eclipse.jgit.pgm.LsRemote.requiresRepository()	noCall	noCall	true	1373
1056.json	org.eclipse.jgit.nls.NLS.useJVMDefaultLocale()	null	org.eclipse.jgit.nls.NLSTest.testJVMDefaultLocale()	true	3012
5812.json	org.eclipse.jgit.ignore.FastIgnoreRule.getNameOnly()	noCall	noCall	true	1322
8370.json	org.eclipse.jgit.util.RawSubStringPattern.pattern()	5751.json,8371.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.toString(),org.eclipse.jgit.util.RawSubStringPattern.toString()	true	3176
4072.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream()	noCall	noCall	true	2901
4858.json	org.eclipse.jgit.internal.storage.file.FileRepository.getAdditionalHaves()	noCall	noCall	true	2907
9142.json	org.eclipse.jgit.lib.UserConfig.system()	9137.json,9141.json,9138.json,9139.json	org.eclipse.jgit.lib.UserConfig.getNameInternal(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.lib.UserConfig.getDefaultEmail(),org.eclipse.jgit.lib.UserConfig.getDefaultUserName(),org.eclipse.jgit.lib.UserConfig.getEmailInternal(org.eclipse.jgit.lib.Config, java.lang.String)	true	3176
3907.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.packMap(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	null	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	true	286
6535.json	org.eclipse.jgit.diff.RawText.getEnd(int)	6532.json,6542.json,6529.json	org.eclipse.jgit.diff.RawText.getString(int, int, boolean),org.eclipse.jgit.diff.RawText.getLineDelimiter(),org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int)	true	2797
3642.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.hashCode()	noCall	noCall	true	2410
9641.json	org.eclipse.jgit.lib.RefDatabase.getConflictingNames(java.lang.String)	null,null,4913.json	org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.assertConflictingNames(java.lang.String, java.lang.String...),org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.assertNoConflictingNames(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.isNameConflicting(java.lang.String)	true	1950
1382.json	org.eclipse.jgit.transport.OperationResult.getAdvertisedRefs()	6889.json,null	org.eclipse.jgit.api.CloneCommand.findBranchToCheckout(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushProcessTest.testPushResult()	true	3176
2533.json	org.eclipse.jgit.transport.SshSessionFactory.setInstance(org.eclipse.jgit.transport.SshSessionFactory)	noCall	noCall	true	3176
1826.json	org.eclipse.jgit.transport.ReceiveCommand.filter(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.transport.ReceiveCommand.Result)	1827.json,2892.json	org.eclipse.jgit.transport.ReceiveCommand.filter(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	3176
9961.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.formatHexChar(char[], int, long)	9931.json,9960.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.name(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray(char[])	true	856
4754.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getConfig()	4437.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getConfig()	true	2793
6720.json	org.eclipse.jgit.diff.DiffEntry.getOldPath()	null,null,null,null,null,5657.json,6824.json,null,6600.json,null,null,6602.json,null,null,null,null,6452.json,null,6456.json,null,null,null,248.json,null,null,null,null,null,6575.json,null,null,null,null,null,null,null,6722.json,6718.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.assertRenames(java.lang.String...),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix(),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.getPath(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FailFooBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
6899.json	org.eclipse.jgit.api.CloneCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7298.json,7265.json,230.json	org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.pgm.Clone.run()	true	2686
6001.json	org.eclipse.jgit.dircache.DirCacheEntry.getExtendedFlags()	5973.json,5972.json	org.eclipse.jgit.dircache.DirCacheEntry.isIntentToAdd(),org.eclipse.jgit.dircache.DirCacheEntry.isSkipWorkTree()	true	2840
7992.json	org.eclipse.jgit.util.FS_Win32.userHomeImpl()	8043.json	org.eclipse.jgit.util.FS_Win32_Cygwin.userHomeImpl()	true	2705
82.json	org.eclipse.jgit.pgm.ShowRef.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	80.json	org.eclipse.jgit.pgm.ShowRef.run()	true	3176
7655.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getNameLength()	1157.json,6050.json,1158.json,null,1153.json	org.eclipse.jgit.notes.NoteParser.parseFanoutCell(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.notes.NoteParser.storeNonNote(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryPath(),org.eclipse.jgit.notes.NoteParser.parseTree()	true	3176
9126.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.isValidHead(java.io.File)	9125.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.isGitRepository(java.io.File, org.eclipse.jgit.util.FS)	true	3176
2277.json	org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.overflow()	noCall	noCall	true	3070
1819.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-87c21793-77e5-4154-bc5c-c8cf9811eb38.getSchemes()	noCall	noCall	true	2645
1275.json	org.eclipse.jgit.transport.RemoteConfig.removeURI(org.eclipse.jgit.transport.URIish)	null,null,null,null,null,null,6875.json	org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI(),org.eclipse.jgit.api.RemoteSetUrlCommand.call()	true	3176
9059.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setWorkTree(java.io.File)	null,9074.json,null,null,null,7025.json,null,9055.json,null,9064.json,null,null,null,7890.json,null,null	org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.createNestedRepo(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String, org.eclipse.jgit.util.FS),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef()	true	2907
1130.json	org.eclipse.jgit.notes.DefaultNoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter)	null,null,null,null,null,null	org.eclipse.jgit.notes.DefaultNoteMergerTest.testDeleteDelete(),org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditDelete(),org.eclipse.jgit.notes.DefaultNoteMergerTest.testIdenticalAdd(),org.eclipse.jgit.notes.DefaultNoteMergerTest.testIdenticalEdit(),org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit(),org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd()	true	2709
4161.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeBoolean(boolean)	noCall	noCall	true	1922
3321.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.logCount()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
4370.json	org.eclipse.jgit.internal.storage.file.PackInputStream.close()	noCall	noCall	true	2901
9036.json	org.eclipse.jgit.lib.PersonIdent.getTimeZoneOffset()	null,null,null,null,null,null,null,8318.json	org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine(),org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber(),org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent)	true	3176
1180.json	org.eclipse.jgit.notes.NotesMergeConflictException.noteOn(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	noCall	noCall	true	2709
3231.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.getReflogEntry()	noCall	noCall	true	297
4458.json	org.eclipse.jgit.internal.storage.file.GcLog.commit()	4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	true	370
523.json	org.eclipse.jgit.junit.http.AccessEvent.getParameters()	noCall	noCall	true	3070
9084.json	org.eclipse.jgit.lib.InflaterCache.releaseImpl(java.util.zip.Inflater)	9083.json	org.eclipse.jgit.lib.InflaterCache.release(java.util.zip.Inflater)	true	3176
1949.json	org.eclipse.jgit.transport.UserAgent.hasAgent(java.util.Set<java.lang.String>)	2337.json	org.eclipse.jgit.transport.BasePackConnection.addUserAgentCapability(java.lang.StringBuilder)	true	1137
7434.json	org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	7433.json	org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit)	true	2689
8229.json	org.eclipse.jgit.util.io.DisabledOutputStream.write(int)	noCall	noCall	true	3070
2078.json	org.eclipse.jgit.transport.PacketLineIn.readString()	null,null,null,null,null,null,2252.json,null,null,null,2333.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1519.json,null,null,null,null,null,null,null,2609.json,2606.json,1520.json,2077.json,null,2041.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.UploadPackTest.testV2FetchClientStopsNegotiation(),org.eclipse.jgit.transport.PacketLineInTest.testReadString2(),org.eclipse.jgit.transport.PacketLineInTest.testReadString4(),org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_LenHELO(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsPeel(),org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl(),org.eclipse.jgit.transport.PushCertificateParser.PacketLineReader.read(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0002(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchOfsDelta(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0004(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchThinPack(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefix(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchIncludeTag(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenAndDone(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_Delim(),org.eclipse.jgit.transport.UploadPackTest.testV2CapabilitiesAllowFilter(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.PacketLineInTest.testReadString5(),org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchNoProgress(),org.eclipse.jgit.transport.PacketLineInTest.testReadString1(),org.eclipse.jgit.transport.UploadPack.serveOneCommandV2(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.ReceivePack.readPostCommands(org.eclipse.jgit.transport.PacketLineIn),org.eclipse.jgit.transport.BaseReceivePack.recvCommands(),org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout(),org.eclipse.jgit.transport.PacketLineIn.readACK(org.eclipse.jgit.lib.MutableObjectId),org.eclipse.jgit.transport.UploadPackTest.testV2FetchShallow(),org.eclipse.jgit.transport.UploadPack.recvWants(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsMultipleCommands(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerDoesNotStopNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsSymrefs(),org.eclipse.jgit.transport.UploadPackTest.testV2Capabilities(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0003(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefs(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenWithoutDone(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerStopsNegotiation(),org.eclipse.jgit.transport.PacketLineInTest.testReadString_End(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.PushCertificateParserTest.concatPacketLines(java.lang.String, int, int),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefixNoSlash(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter()	false	3176
8719.json	org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int)	8717.json	org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
8364.json	org.eclipse.jgit.util.IO.readLine(java.io.Reader, int)	null,null	org.eclipse.jgit.transport.PushCertificateParser.StreamReader.read(),org.eclipse.jgit.util.IOReadLineTest.readLine(java.io.Reader)	true	1068
9117.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.exact(java.io.File, org.eclipse.jgit.util.FS)	null,null,null,null,1617.json,4770.json,null,9099.json,null,null,9097.json,null,9098.json	org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered(),org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.io.File),org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey(),org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.lib.RepositoryCache.register(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister(),org.eclipse.jgit.lib.RepositoryCache.close(org.eclipse.jgit.lib.Repository)	true	3176
558.json	org.eclipse.jgit.junit.http.SimpleHttpServer.stop()	noCall	noCall	true	2740
6233.json	org.eclipse.jgit.revplot.PlotCommit.addLane(org.eclipse.jgit.revplot.PlotLane, org.eclipse.jgit.revplot.PlotLane[])	6232.json,6231.json,6230.json	org.eclipse.jgit.revplot.PlotCommit.addMergingLane(org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.PlotCommit.addPassingLane(org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(org.eclipse.jgit.revplot.PlotLane)	true	3176
1116.json	org.eclipse.jgit.hooks.GitHook.getParameters()	1120.json	org.eclipse.jgit.hooks.GitHook.doRun()	true	1195
5222.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.markWantWrite()	5130.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
7196.json	org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk)	7195.json	org.eclipse.jgit.api.CherryPickCommand.call()	true	1485
5904.json	org.eclipse.jgit.dircache.DirCache.getEntriesWithin(java.lang.String)	null	org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin()	true	3176
2185.json	org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection, java.util.Collection<org.eclipse.jgit.transport.HttpAuthMethod.Type>)	null,2229.json,2269.json	org.eclipse.jgit.transport.HttpAuthTest.checkResponse(java.lang.String[], java.lang.String),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	2813
8998.json	org.eclipse.jgit.lib.Repository.getRemoteName(java.lang.String)	null,7331.json	org.eclipse.jgit.lib.RefTest.testRemoteNames(),org.eclipse.jgit.api.CreateBranchCommand.call()	true	1505
6413.json	org.eclipse.jgit.blame.BlameResult.getResultContents()	null,112.json,null,116.json,null,null,null,null,null,115.json,null,null,null,null	org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.Blame.findLine(int, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.pgm.Blame.parseLineRangeOption(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines()	true	2567
8698.json	org.eclipse.jgit.patch.HunkHeader.getNewStartLine()	null,null,null,6826.json,8708.json,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.patch.HunkHeader.toString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
5683.json	org.eclipse.jgit.revwalk.FIFORevQueue.anybodyHasFlag(int)	noCall	noCall	true	3176
8869.json	org.eclipse.jgit.lib.Config.setTypedConfigGetter(org.eclipse.jgit.lib.TypedConfigGetter)	noCall	noCall	true	288
3058.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next()	noCall	noCall	true	297
1978.json	org.eclipse.jgit.transport.Transport.load(java.lang.ClassLoader, java.lang.String)	1977.json	org.eclipse.jgit.transport.Transport.scan(java.lang.ClassLoader, java.net.URL)	true	2645
7632.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7019.json,5910.json,null,9570.json,null,6024.json,7040.json,6981.json,7598.json,7243.json,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, int),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex()	true	3176
1776.json	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.request(java.net.HttpURLConnection, java.lang.String)	noCall	noCall	true	966
4978.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.getRepository()	4979.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean)	true	880
9233.json	org.eclipse.jgit.lib.FileMode.toString()	7839.json,385.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.toString(),org.eclipse.jgit.pgm.DiffTree.run()	true	3176
3083.json	org.eclipse.jgit.internal.storage.reftable.Reftable.hasId(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	297
6130.json	org.eclipse.jgit.storage.pack.PackStatistics.getDeltaSearchNonEdgeObjects()	noCall	noCall	true	1094
7711.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.grow()	7706.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte[], int, int)	true	1965
6953.json	org.eclipse.jgit.api.DeleteBranchCommand.call()	null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.api.BranchCommandTest.testDelete(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch()	true	2800
6673.json	org.eclipse.jgit.diff.HashedSequencePair.getA()	6779.json	org.eclipse.jgit.diff.LowLevelDiffAlgorithm.diffNonCommon(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	2820
7535.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.resetRoot(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
7509.json	org.eclipse.jgit.api.NameRevCommand.addPrefixes(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	7502.json	org.eclipse.jgit.api.NameRevCommand.call()	true	1917
3103.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.Anonymous-cc56f5a5-23df-48da-ae49-8b44a82d6a84.getWho()	noCall	noCall	true	297
1347.json	org.eclipse.jgit.transport.CredentialsProvider.getDefault()	noCall	noCall	true	2768
7087.json	org.eclipse.jgit.api.Git.submoduleInit()	noCall	noCall	true	2350
4728.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPacks()	null,null,null,null,null,4895.json,null,4452.json,4834.json,null,null,null,4809.json,null,null,4817.json,null	org.eclipse.jgit.junit.TestRepository.prunePacked(org.eclipse.jgit.internal.storage.file.ObjectDirectory),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFile(java.lang.String),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getPacks(),org.eclipse.jgit.internal.storage.file.GC.getStatistics(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated(boolean),org.eclipse.jgit.internal.storage.file.ObjectDirectory.closeAllPackHandles(java.io.File),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.internal.storage.file.GC.tooManyPacks(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.getSinglePack(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(org.eclipse.jgit.internal.storage.file.FileRepository)	false	3078
3106.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogEntry()	null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
9874.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.getId()	9898.json	org.eclipse.jgit.lfs.CleanFilter.run()	true	592
3624.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setMinUpdateIndex(long)	3638.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats)	true	286
1891.json	org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.getAdvertisedHaves(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.revwalk.RevWalk)	1889.json	org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack)	true	2292
3556.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setDeltaBaseCacheLimit(int)	3561.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config)	true	2410
2763.json	org.eclipse.jgit.internal.ketch.LocalReplica.checkFailed(java.util.List<java.lang.String>, org.eclipse.jgit.transport.ReceiveCommand)	2762.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
45.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setRequestProperty(java.lang.String, java.lang.String)	noCall	noCall	true	1572
7079.json	org.eclipse.jgit.api.Git.notesShow()	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
5375.json	org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader)	5374.json,null,5384.json	org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.Anonymous-5cb19d3f-31cb-4673-ab61-f1f79a3183b6.next(),org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean)	true	2851
7987.json	org.eclipse.jgit.util.FS_Win32.retryFailedLockFileCommit()	noCall	noCall	true	2881
6769.json	org.eclipse.jgit.diff.Edit.getLengthB()	6516.json,null,null,null,6479.json,6378.json,null	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.EditTest.testType_Insert(),org.eclipse.jgit.diff.EditTest.testType_Replace(),org.eclipse.jgit.diff.EditTest.testType_Delete(),org.eclipse.jgit.diff.HistogramDiff.State.diff(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.EditTest.testType_Empty()	true	2837
4061.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])	4059.json,4072.json,4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2901
3279.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeId(org.eclipse.jgit.lib.ObjectId)	null,3188.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
5631.json	org.eclipse.jgit.revwalk.FollowFilter.shouldBeRecursive()	noCall	noCall	true	2899
10151.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.showMessage(java.lang.String)	noCall	noCall	true	2768
10424.json	org.eclipse.jgit.http.server.ReceivePackServlet.Anonymous-20e0c0b7-6626-43cf-a3ad-6ee50393bfc6.flush()	noCall	noCall	true	2671
8965.json	org.eclipse.jgit.lib.Repository.isAllHex(java.lang.String, int)	8967.json	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String)	true	2655
249.json	org.eclipse.jgit.pgm.MergeBase.commit_0(org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
8702.json	org.eclipse.jgit.patch.HunkHeader.parseHeader()	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
8924.json	org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader)	null	org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int)	true	3176
4221.json	org.eclipse.jgit.internal.storage.file.FileObjectDatabase.newReader()	null	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.newReader()	true	2907
3505.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()	null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	2410
1388.json	org.eclipse.jgit.transport.OperationResult.getMessages()	302.json,123.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult)	true	3011
7706.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte[], int, int)	noCall	noCall	true	1965
5074.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isReuseDeltaCommits()	noCall	noCall	true	2657
1782.json	org.eclipse.jgit.transport.SideBandInputStream.read(byte[], int, int)	noCall	noCall	true	3176
6921.json	org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(java.util.List<org.eclipse.jgit.transport.RefLeaseSpec>)	6920.json	org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(org.eclipse.jgit.transport.RefLeaseSpec...)	true	486
6684.json	org.eclipse.jgit.diff.RenameDetector.setRenameLimit(int)	247.json,378.json,269.json,null	org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit()	true	2899
2030.json	org.eclipse.jgit.transport.Transport.getCredentialsProvider()	2284.json,2229.json,2269.json,2234.json	org.eclipse.jgit.transport.SshTransport.getSession(),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	2768
6296.json	org.eclipse.jgit.gitrepo.RepoCommand.setURI(java.lang.String)	null,null,null,null,null,null,null,null,null,109.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile(),org.eclipse.jgit.gitrepo.RepoCommandTest.testDefaultRemoteRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.pgm.Repo.run(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	1509
5713.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAny(org.eclipse.jgit.revwalk.RevFlag...)	noCall	noCall	true	3176
4633.json	org.eclipse.jgit.internal.storage.file.LockFile.createCommitSnapshot()	5892.json	org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream)	true	2211
5417.json	org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag, int, int)	5416.json,5419.json	org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.RevCommitList.clearFlag(org.eclipse.jgit.revwalk.RevFlag, int, int)	true	3176
7601.json	org.eclipse.jgit.treewalk.TreeWalk.getRawPath()	null,7019.json,7040.json,7530.json,7018.json,7244.json,null,7243.json,947.json,null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes)	true	3176
1937.json	org.eclipse.jgit.transport.Daemon.stop()	1938.json	org.eclipse.jgit.transport.Daemon.stopAndWait()	true	3176
2609.json	org.eclipse.jgit.transport.ReceivePack.readPostCommands(org.eclipse.jgit.transport.PacketLineIn)	noCall	noCall	true	688
6592.json	org.eclipse.jgit.diff.DiffFormatter.writeRange(char, int, int)	6591.json	org.eclipse.jgit.diff.DiffFormatter.writeHunkHeader(int, int, int, int)	true	3176
2895.json	org.eclipse.jgit.internal.ketch.KetchLeader.getSystem()	2855.json,2775.json,2810.json,2851.json,2752.json,2850.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.KetchReplica.getSystem(),org.eclipse.jgit.internal.ketch.Round.getSystem(),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
8909.json	org.eclipse.jgit.lib.Config.replaceStringList(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	8908.json	org.eclipse.jgit.lib.Config.setStringList(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	3176
3951.json	org.eclipse.jgit.internal.storage.file.RefDirectory.peel(org.eclipse.jgit.lib.Ref)	null,null,3967.json	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag(),org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref)	true	3176
2035.json	org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic(),org.eclipse.jgit.transport.PushConnectionTest.commandOrder(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()	true	3176
6317.json	org.eclipse.jgit.gitrepo.ManifestParser.endElement(java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	1509
4705.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onInflatedObjectData(org.eclipse.jgit.transport.PackedObjectInfo, int, byte[])	noCall	noCall	true	2593
9178.json	org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TreeFormatter)	1171.json,null,null,null,null,2752.json,5919.json,null,null,null,null,null	org.eclipse.jgit.notes.LeafBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.notes.FanoutBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertTree(org.eclipse.jgit.lib.TreeFormatter),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.IndexDiffTest.insertTree(org.eclipse.jgit.lib.TreeFormatter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified()	true	2745
2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	2395.json	org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2692
2853.json	org.eclipse.jgit.internal.ketch.ProposalRound.abort()	2848.json	org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	872
9407.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getLong(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long)	noCall	noCall	true	288
6042.json	org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)	6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2844
1.json	org.eclipse.jgit.awtui.SwingCommitList.repackColors()	2.json	org.eclipse.jgit.awtui.SwingCommitList.createLane()	true	3176
3790.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isGarbage()	3729.json,3791.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.skipGarbagePack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1919
6764.json	org.eclipse.jgit.diff.Edit.getBeginA()	null,6586.json,null,null,923.json,6604.json,null,null,null,null,6378.json,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.EditTest.testSwap(),org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S),org.eclipse.jgit.diff.DiffFormatter.combineA(java.util.List<org.eclipse.jgit.diff.Edit>, int),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.EditTest.testCreate(),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify()	true	3176
9992.json	org.eclipse.jgit.lfs.lib.LongObjectId.writeObject(java.io.ObjectOutputStream)	noCall	noCall	true	856
3885.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newReader()	3452.json,3715.json,3771.json,null,3361.json,3849.json,null,null,3686.json,null,null,null,3539.json,3894.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsReader.newReader(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.newReader(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isObjectInPack(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.has(org.eclipse.jgit.lib.AnyObjectId, boolean)	true	2410
246.json	org.eclipse.jgit.pgm.Diff.init(org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2033
39.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setBuffer(org.eclipse.jgit.util.TemporaryBuffer)	noCall	noCall	true	1572
1069.json	org.eclipse.jgit.errors.TranslationBundleException.getLocale()	null,null	org.eclipse.jgit.nls.TranslationBundleTest.testMissingPropertiesFile(),org.eclipse.jgit.nls.TranslationBundleTest.testMissingString()	true	3012
8014.json	org.eclipse.jgit.util.RefMap.containsKey(java.lang.Object)	null,null,null,null,null	org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix1(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix2(),org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster(),org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose()	true	3060
514.json	org.eclipse.jgit.junit.http.AppServer.assertNotYetSetUp()	499.json	org.eclipse.jgit.junit.http.AppServer.addContext(java.lang.String)	false	3070
3379.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.objectsBefore()	3375.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
8320.json	org.eclipse.jgit.util.Base64.encodeBytes(byte[])	1775.json,null,null,1687.json,1690.json,null,null,1695.json	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.encrypt(java.io.OutputStream),org.eclipse.jgit.transport.HttpAuthMethod.Negotiate.configureRequest(org.eclipse.jgit.transport.http.HttpConnection),org.eclipse.jgit.util.Base64Test.testEncode(),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.HttpAuthMethod.Basic.configureRequest(org.eclipse.jgit.transport.http.HttpConnection),org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode(),org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	true	3176
7467.json	org.eclipse.jgit.api.StatusCommand.getPaths()	noCall	noCall	true	1785
371.json	org.eclipse.jgit.pgm.Log.unified(int)	noCall	noCall	true	2899
2776.json	org.eclipse.jgit.internal.ketch.KetchReplica.getLeader()	2775.json,null,2721.json,null,2760.json	org.eclipse.jgit.internal.ketch.KetchReplica.getSystem(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.Anonymous-cf7dcb13-a265-4d33-bc49-d2ae661afcbd.run(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
5014.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.selectDeltaBase(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, java.io.OutputStream)	5013.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	1885
9903.json	org.eclipse.jgit.lfs.BuiltinLFS.getPrePushHook(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	noCall	noCall	true	98
7292.json	org.eclipse.jgit.api.DiffCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	2343
6319.json	org.eclipse.jgit.gitrepo.ManifestParser.normalizeEmptyPath(java.net.URI)	6318.json,null	org.eclipse.jgit.gitrepo.ManifestParser.endDocument(),org.eclipse.jgit.gitrepo.ManifestParserTest.testNormalize(java.lang.String, java.lang.String)	true	426
3153.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setAlignBlocks(boolean)	3784.json,null,3068.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.configureReftable(org.eclipse.jgit.internal.storage.reftable.ReftableConfig, org.eclipse.jgit.internal.storage.dfs.DfsOutputStream),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.getReftableConfig(),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>)	true	297
9260.json	org.eclipse.jgit.lib.internal.WorkQueue.getExecutor()	9282.json,9285.json,null,9106.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.delay(long, java.util.concurrent.TimeUnit),org.eclipse.jgit.lib.BatchingProgressMonitor.Task.restartTimer(),org.eclipse.jgit.internal.storage.file.GC.executor(),org.eclipse.jgit.lib.RepositoryCache.configureEviction(org.eclipse.jgit.lib.RepositoryCacheConfig)	true	732
5577.json	org.eclipse.jgit.revwalk.DelayRevQueue.next()	noCall	noCall	true	3176
6598.json	org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2899
8193.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(int)	null,null,null	org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Success2(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Success1(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Timeout()	true	3176
3269.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(int)	noCall	noCall	true	297
7952.json	org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int)	noCall	noCall	true	3176
7811.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.reset()	6758.json,null	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength()	true	2839
6617.json	org.eclipse.jgit.diff.RawTextComparator.hash(org.eclipse.jgit.diff.RawText, int)	null,183.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.testOne(org.eclipse.jgit.pgm.debug.TextHashFunctions.Function, org.eclipse.jgit.diff.RawText, int[], int),org.eclipse.jgit.pgm.debug.TextHashFunctions.Line.hashCode()	true	2834
3371.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.toPrune()	3361.json,3368.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getSourcePacks()	true	2410
7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	7403.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(org.eclipse.jgit.revwalk.RevCommit)	true	1426
9600.json	org.eclipse.jgit.lib.AnyObjectId.compareTo(int[], int)	4522.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.binarySearchLevelTwo(org.eclipse.jgit.lib.AnyObjectId, int)	true	3176
7927.json	org.eclipse.jgit.util.RawParseUtils.parseHexInt16(byte[], int)	2086.json,null	org.eclipse.jgit.transport.PacketLineIn.readLength(),org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse16(java.lang.String)	true	3176
9977.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(java.lang.String)	null	org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromString()	true	856
372.json	org.eclipse.jgit.pgm.Log.abbrev(int)	noCall	noCall	true	2899
1486.json	org.eclipse.jgit.transport.HttpConfig.HttpRedirectMode.matchConfigValue(java.lang.String)	noCall	noCall	true	297
7419.json	org.eclipse.jgit.api.RebaseCommand.initializeSquashFixupFile(java.lang.String, java.lang.String)	7412.json	org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File)	true	1677
2333.json	org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl()	2332.json	org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefs()	true	3176
8570.json	org.eclipse.jgit.util.BlockList.get(int)	4682.json,null,null,null,5119.json,4605.json,null,null,4673.json,null,8575.json,null,null,8576.json,null	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7c01fee1-3c2d-4791-ae44-c0f415eb6d04.iterator(),org.eclipse.jgit.util.BlockListTest.testAddRemoveAdd(),org.eclipse.jgit.util.BlockListTest.testSet(),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.getObject(int),org.eclipse.jgit.util.BlockListTest.testRemoveSlowPath(),org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObject(int),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-f5f5e630-ec34-42cd-9111-dc3539965e81.next(),org.eclipse.jgit.util.BlockList.add(int, T),org.eclipse.jgit.util.BlockListTest.testAddToEnd(),org.eclipse.jgit.util.BlockListTest.testAddSlowPath(),org.eclipse.jgit.util.BlockList.remove(int),org.eclipse.jgit.util.BlockListTest.testGet()	true	2651
519.json	org.eclipse.jgit.junit.http.AccessEvent.getMethod()	noCall	noCall	true	3070
3050.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlockLen(long)	3049.json,3051.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readIndex(long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long)	true	297
7397.json	org.eclipse.jgit.api.MergeCommand.setInsertChangeId(boolean)	null,null	org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId()	true	53
2634.json	org.eclipse.jgit.transport.ReceivePack.setPushOptions(java.util.List<java.lang.String>)	noCall	noCall	true	650
3519.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.write(byte[], int, int)	3510.json,3516.json,3518.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.beginObject(int, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.write(int)	true	2410
6483.json	org.eclipse.jgit.diff.MyersDiff.calculateEdits(int, int, int, int)	6482.json,6483.json	org.eclipse.jgit.diff.MyersDiff.calculateEdits(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.diff.MyersDiff.calculateEdits(int, int, int, int)	true	3169
8955.json	org.eclipse.jgit.lib.Repository.hasObject(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,1951.json,null,null,null,null,null,1963.json,null,6835.json,null,null,null,1518.json,null,null,null,null,null,null,null,2619.json,null,null,null,null,null	org.eclipse.jgit.transport.UploadPackTest.testV2FetchClientStopsNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.UploadPackTest.testFetchUnreachableBlobWithBitmap(),org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithoutBitmap(),org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedNonExpiredObject_notPruned(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchShallow(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithBitmap(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerStopsNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchIncludeTag(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenAndDone(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned()	true	3176
4689.json	org.eclipse.jgit.internal.storage.file.BitSet.clear(int)	4580.json,4579.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.set(int),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.remove(int)	true	1922
3239.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setMaxUpdateIndex(long)	noCall	noCall	true	297
8803.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.initTable(int)	8802.json,8790.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.grow(),org.eclipse.jgit.lib.ObjectIdSubclassMap.clear()	true	2649
5857.json	org.eclipse.jgit.ignore.internal.AbstractMatcher.hashCode()	noCall	noCall	true	1322
9856.json	org.eclipse.jgit.lfs.Lfs.getLfsTmpDir()	9859.json	org.eclipse.jgit.lfs.Lfs.createTmpFile()	true	628
3622.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setLastModified(long)	3382.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	2410
8974.json	org.eclipse.jgit.lib.Repository.toString()	null,8972.json,131.json	org.eclipse.jgit.gitrepo.RepoCommandTest.IndexedRepos.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Repository.close(),org.eclipse.jgit.pgm.Glog.repoName()	true	3176
1729.json	org.eclipse.jgit.transport.URIish.toASCIIString()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfAppliedToUri(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf(),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNotAppliedToPushUri(),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode(),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNoPushUrl(),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf()	true	2381
9179.json	org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.CommitBuilder)	null,7224.json,6309.json,null,2752.json,null,167.json,null,4931.json,null,7040.json,null,null,2840.json,null,null,null,2851.json,2850.json,null,6979.json,213.json	org.eclipse.jgit.notes.NoteMapTest.commitNoteMap(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertCommit(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	2848
7224.json	org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String)	6969.json,7221.json	org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.api.AddNoteCommand.call()	true	2618
6848.json	org.eclipse.jgit.api.FetchCommand.getRefSpecs()	noCall	noCall	true	2823
5368.json	org.eclipse.jgit.revwalk.RevWalk.lookupTag(org.eclipse.jgit.lib.AnyObjectId)	5661.json	org.eclipse.jgit.revwalk.RevTag.parse(org.eclipse.jgit.revwalk.RevWalk, byte[])	true	2895
2388.json	org.eclipse.jgit.transport.PackParser.getObjectCount()	4717.json,2938.json,4719.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack(),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String)	true	2692
5224.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setReuseAsIs()	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2906
3615.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.addFileExt(org.eclipse.jgit.internal.storage.pack.PackExt)	3783.json,3604.json,3505.json,null,null,null,3382.json,null,3782.json,null,3386.json,null,3646.json,null,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	1922
6563.json	org.eclipse.jgit.diff.DiffFormatter.setPathFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	null,null,7282.json,247.json,null,378.json,null,null,269.json	org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.Show.run()	true	2838
915.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge()	1015.json	org.eclipse.jgit.merge.MergeFormatter.formatMerge(java.io.OutputStream, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, java.util.List<java.lang.String>, java.lang.String)	true	1171
6802.json	org.eclipse.jgit.events.ListenerList.add(org.eclipse.jgit.events.ListenerHandle)	6800.json	org.eclipse.jgit.events.ListenerList.addListener(java.lang.Class<T>, T)	true	2907
6269.json	org.eclipse.jgit.gitrepo.RepoProject.getRemote()	6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	true	1111
5330.json	org.eclipse.jgit.revwalk.BlockRevQueue.BlockFreeList.newBlock()	5441.json,5678.json,5679.json	org.eclipse.jgit.revwalk.LIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
6745.json	org.eclipse.jgit.diff.ContentSource.create(org.eclipse.jgit.lib.ObjectReader)	6548.json,6572.json,6690.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.diff.DiffFormatter.source(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2838
8723.json	org.eclipse.jgit.patch.CombinedHunkHeader.Anonymous-cddfe0db-6237-42c9-9cbd-b62873dc6aad.getId()	noCall	noCall	true	3176
273.json	org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit)	272.json	org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	true	2154
5176.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.getSourceSize()	5184.json,5019.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.newEncoder(java.io.OutputStream, long, int),org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
1362.json	org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject)	1360.json	org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId)	true	3176
9118.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.lenient(java.io.File, org.eclipse.jgit.util.FS)	null,null,91.json,425.json,null,7048.json	org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.pgm.ReceivePack.run(),org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey(),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	3176
4332.json	org.eclipse.jgit.internal.storage.file.ByteWindow.contains(org.eclipse.jgit.internal.storage.file.PackFile, long)	4358.json,4355.json	org.eclipse.jgit.internal.storage.file.WindowCursor.pin(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCursor.quickCopy(org.eclipse.jgit.internal.storage.file.PackFile, long, long)	true	3176
5153.json	org.eclipse.jgit.internal.storage.pack.PackWriter.State.getConfig()	noCall	noCall	true	2399
6629.json	org.eclipse.jgit.diff.SimilarityIndex.common(org.eclipse.jgit.diff.SimilarityIndex)	null,6628.json,null,null,null,null,null	org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles(),org.eclipse.jgit.diff.SimilarityIndex.score(org.eclipse.jgit.diff.SimilarityIndex, int),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles_CR_canonicalization(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScoreLargeObject_SameFiles_CR_canonicalization(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SimiliarBy75(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_EmptyFiles(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_TotallyDifferentFiles()	true	2899
6049.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser)	6024.json,6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2239
8988.json	org.eclipse.jgit.lib.Repository.getRepositoryState()	null,null,null,null,null,null,null,null,null,null,null,null,null,6979.json,null,null,null,null,null,null,null,null,null,null,null,null,7131.json,null,null,null,null,null,null,null,null,null,7237.json,null,null,7435.json,null,7299.json,null,7008.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.MergeCommandTest.checkMergeFailedResult(org.eclipse.jgit.api.MergeResult, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason, java.lang.String, java.io.File),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RebaseCommand.checkParameters(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree()	true	3176
5088.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	1536.json,null,3372.json,null	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2668
6842.json	org.eclipse.jgit.api.FetchCommand.isCheckFetchedObjects()	noCall	noCall	true	2823
2866.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getException()	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
7186.json	org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(org.eclipse.jgit.lib.Repository)	7187.json	org.eclipse.jgit.api.SubmoduleSyncCommand.call()	true	2355
423.json	org.eclipse.jgit.pgm.TextBuiltin.containsHelp(java.lang.String[])	408.json,319.json	org.eclipse.jgit.pgm.TextBuiltin.parseArguments(java.lang.String[]),org.eclipse.jgit.pgm.opt.CmdLineParser.containsHelp(java.lang.String...)	true	893
9911.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	516
8685.json	org.eclipse.jgit.patch.Patch.error(byte[], int, java.lang.String)	8703.json,8683.json,8728.json,8677.json	org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.patch.Patch.parseGitBinary(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.patch.CombinedHunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	true	3176
6587.json	org.eclipse.jgit.diff.DiffFormatter.writeContextLine(org.eclipse.jgit.diff.RawText, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	2920
6781.json	org.eclipse.jgit.events.RepositoryEvent.setRepository(org.eclipse.jgit.lib.Repository)	null	org.eclipse.jgit.lib.Repository.fireEvent(org.eclipse.jgit.events.RepositoryEvent<?>)	true	2907
1316.json	org.eclipse.jgit.transport.BundleFetchConnection.readSignature()	noCall	noCall	true	3176
7475.json	org.eclipse.jgit.api.CheckoutCommand.addPaths(java.util.List<java.lang.String>)	388.json	org.eclipse.jgit.pgm.Checkout.run()	true	597
2742.json	org.eclipse.jgit.internal.ketch.LagCheck.getRemoteId()	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
4831.json	org.eclipse.jgit.internal.storage.file.GC.nameFor(java.lang.String, java.lang.String)	null,4808.json	org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.GC.prunePack(java.lang.String)	true	2142
4060.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[])	4063.json,4064.json,4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.Anonymous-64a8ac4c-f7fa-4006-b259-d03d12a94c23.close(),org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, long, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2896
6450.json	org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate.BlobCandidate)	6440.json,6436.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.diff.RawText)	true	2567
164.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef)	162.json	org.eclipse.jgit.pgm.debug.ShowCommands.run()	true	3176
2390.json	org.eclipse.jgit.transport.PackParser.getSortedObjectList(java.util.Comparator<org.eclipse.jgit.transport.PackedObjectInfo>)	3669.json,4718.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.writePackIndex(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx()	true	2692
7327.json	org.eclipse.jgit.api.GitCommand.getRepository()	7410.json,7195.json,7274.json,7351.json,6825.json,6826.json,null,6812.json,7385.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.LogCommand.all(),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.api.ApplyCommand.getFile(java.lang.String, boolean),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.api.BlameCommand.getRawText(java.io.File),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2953
1402.json	org.eclipse.jgit.transport.UploadPack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	1429.json,1888.json	org.eclipse.jgit.transport.UploadPack.getAdvertisedOrDefaultRefs(),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.UploadPack)	true	2461
1239.json	org.eclipse.jgit.transport.TrackingRefUpdate.getLocalName()	304.json,302.json,null,1387.json,null,null	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.OperationResult.add(org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled()	true	3176
7861.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	7860.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin()	true	3176
6040.json	org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts()	6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	true	2844
4236.json	org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load()	4867.json	org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.getGlobalAttributesNode()	true	935
9837.json	org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte[], int, int, org.eclipse.jgit.lib.FileMode)	9836.json,9835.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, byte[], int),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean)	true	2775
9910.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.getPointer()	null	org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check()	true	516
1948.json	org.eclipse.jgit.transport.UserAgent.getAgent(java.util.Set<java.lang.String>, java.lang.String)	2338.json,1949.json,2588.json,1451.json	org.eclipse.jgit.transport.BasePackConnection.getPeerUserAgent(),org.eclipse.jgit.transport.UserAgent.hasAgent(java.util.Set<java.lang.String>),org.eclipse.jgit.transport.BaseReceivePack.getPeerUserAgent(),org.eclipse.jgit.transport.UploadPack.getPeerUserAgent()	true	1137
1933.json	org.eclipse.jgit.transport.Daemon.Acceptor.shutDown()	1937.json,1931.json	org.eclipse.jgit.transport.Daemon.stop(),org.eclipse.jgit.transport.Daemon.Acceptor.terminate()	true	279
5499.json	org.eclipse.jgit.revwalk.ObjectWalk.updatePathBuf(org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit)	5498.json,5497.json,5499.json,5494.json,5496.json	org.eclipse.jgit.revwalk.ObjectWalk.getPathLength(),org.eclipse.jgit.revwalk.ObjectWalk.getPathBuffer(),org.eclipse.jgit.revwalk.ObjectWalk.updatePathBuf(org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit),org.eclipse.jgit.revwalk.ObjectWalk.getPathString(),org.eclipse.jgit.revwalk.ObjectWalk.getPathHashCode()	true	2493
2069.json	org.eclipse.jgit.transport.BaseConnection.getMessages()	noCall	noCall	true	3011
3253.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.getPending()	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
8042.json	org.eclipse.jgit.util.FS_Win32_Cygwin.resolve(java.io.File, java.lang.String)	8043.json	org.eclipse.jgit.util.FS_Win32_Cygwin.userHomeImpl()	true	3176
1641.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1408
6161.json	org.eclipse.jgit.storage.pack.PackConfig.setPrunePreserved(boolean)	null,7181.json	org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveAndPruneOldPacks(),org.eclipse.jgit.api.GarbageCollectCommand.setPrunePreserved(boolean)	true	506
6401.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.has(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	1515
8505.json	org.eclipse.jgit.util.FileUtils.canExecute(java.io.File)	8055.json	org.eclipse.jgit.util.FS_POSIX.canExecute(java.io.File)	true	988
1844.json	org.eclipse.jgit.transport.ReceiveCommand.setForceRefLog(boolean)	null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInCommand()	true	253
2286.json	org.eclipse.jgit.transport.NetRC.NetRCEntry.complete()	2290.json	org.eclipse.jgit.transport.NetRC.parse()	true	1408
2010.json	org.eclipse.jgit.transport.Transport.getOptionReceivePack()	1813.json	org.eclipse.jgit.transport.TransportLocal.openPush()	true	3176
2073.json	org.eclipse.jgit.transport.BaseConnection.available(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	1317.json,2509.json,2050.json,2508.json,2049.json,2222.json,2333.json	org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2(),org.eclipse.jgit.transport.TransportAmazonS3.openPush(),org.eclipse.jgit.transport.TransportSftp.openPush(),org.eclipse.jgit.transport.TransportAmazonS3.openFetch(),org.eclipse.jgit.transport.TransportSftp.openFetch(),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream),org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl()	true	3176
7864.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7859.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()	true	3176
6756.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-b73e3ea2-6113-4438-81d3-f7f06ad1f1b2.getCachedBytes()	noCall	noCall	true	2838
9205.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromHexString(byte[], int, int)	9204.json,9202.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(byte[], int, int)	true	3176
3094.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.name()	null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
4163.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeChar(int)	noCall	noCall	true	1922
7065.json	org.eclipse.jgit.api.Git.tag()	null,null,null,null,null,null,null,null,null,null,null,null,363.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.DescribeCommandTest.tag(java.lang.String),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.TagTest.testTagDelete(),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMultiMatch(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMatch2()	true	2844
3627.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setFileSize(org.eclipse.jgit.internal.storage.pack.PackExt, long)	3638.json,3783.json,3505.json,3636.json,3646.json,3382.json,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2410
9907.json	org.eclipse.jgit.lfs.BuiltinLFS.getInstallCommand()	noCall	noCall	true	94
4890.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.SHA1OutputStream.write(byte[], int, int)	4883.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream)	true	468
2773.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)	2772.json,2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot),org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
10193.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getValue(java.lang.String)	10190.json,null,null	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getHostname(),org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getUser(),org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getPort()	true	289
9338.json	org.eclipse.jgit.lib.BatchRefUpdate.toString()	noCall	noCall	true	1229
6924.json	org.eclipse.jgit.api.PushCommand.setRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
9070.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()	9071.json,6113.json,3863.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.build(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.build(),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	true	2907
5883.json	org.eclipse.jgit.dircache.DirCache.read()	208.json,null,null,null,null,5876.json,null,5877.json,null,null	org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedRequiredExtension(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testCorruptChecksumAtFooter(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3(),org.eclipse.jgit.dircache.DirCache.read(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedOptionalExtension(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles()	true	3176
9933.json	org.eclipse.jgit.lfs.lib.Constants.newMessageDigest()	10036.json,null	org.eclipse.jgit.lfs.server.s3.SignerV4.hash(java.lang.String),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(java.nio.file.Path)	true	856
8939.json	org.eclipse.jgit.lib.ObjectIdSerializer.read(java.io.InputStream)	null	org.eclipse.jgit.lib.ObjectIdSerializerTest.writeAndReadBackFromTempFile(org.eclipse.jgit.lib.ObjectId)	true	104
9554.json	org.eclipse.jgit.lib.RefUpdate.safeParseOld(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId)	9551.json	org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store)	true	3176
6429.json	org.eclipse.jgit.blame.BlameGenerator.getRepository()	6440.json,6452.json,6456.json,6454.json,6433.json,6442.json,6428.json,6436.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.setFollowFileRenames(boolean),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.diff.RawText)	true	2567
4297.json	org.eclipse.jgit.internal.storage.file.WindowCache.lock(org.eclipse.jgit.internal.storage.file.PackFile, long)	4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
3553.json	org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.getListenerType()	noCall	noCall	true	2046
9216.json	org.eclipse.jgit.lib.AbbreviatedObjectId.hashCode()	null,null,null	org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short4(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Full(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short8()	true	3176
8927.json	org.eclipse.jgit.lib.Config.StringReader.read()	8922.json,8921.json,null,8924.json,8923.json	org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int),org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.lib.Config.readSubsectionName(org.eclipse.jgit.lib.Config.StringReader)	true	3176
2657.json	org.eclipse.jgit.transport.RefAdvertiser.setDerefTags(boolean)	null,null	org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String)	false	3176
1920.json	org.eclipse.jgit.transport.Daemon.getAddress()	null,297.json,null	org.eclipse.jgit.transport.DaemonTest.testDaemonStop(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.transport.DaemonTest.testDaemonRestart()	true	3176
9477.json	org.eclipse.jgit.lib.StoredConfig.clear()	6090.json,3830.json	org.eclipse.jgit.storage.file.FileBasedConfig.clear(),org.eclipse.jgit.internal.storage.dfs.DfsConfig.load()	true	2181
4729.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File)	null,null,null,4860.json,4450.json	org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.FileRepository.openPack(java.io.File),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openPack(java.io.File)	true	3176
6497.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.newSnake(int, int)	6501.json,6490.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int)	true	3169
5067.json	org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-56378d80-0df4-4f8d-add4-e336813d372d.next()	noCall	noCall	true	2399
362.json	org.eclipse.jgit.pgm.Archive.run()	noCall	noCall	true	2031
7353.json	org.eclipse.jgit.api.CleanCommand.filterIgnorePaths(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, boolean)	7351.json	org.eclipse.jgit.api.CleanCommand.call()	true	2031
7586.json	org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId...)	5657.json,7568.json,203.json,5655.json,6472.json,null	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified()	true	3176
8885.json	org.eclipse.jgit.lib.Config.getSubsections(java.lang.String)	null,1270.json,2827.json,9022.json,1494.json,89.json,1264.json,7897.json	org.eclipse.jgit.lib.ConfigTest.parseEscapedSubsection(java.lang.String),org.eclipse.jgit.transport.RemoteConfig.getReplacements(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.Repository.getRemoteNames(),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig),org.eclipse.jgit.transport.RemoteConfig.getAllRemoteConfigs(org.eclipse.jgit.lib.Config),org.eclipse.jgit.submodule.SubmoduleWalk.loadPathNames()	true	3176
4907.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.prefixOf(java.lang.String)	4906.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String)	true	880
3393.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, byte[])	3806.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.put(int, int)	true	2410
5131.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5130.json,5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
3034.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.maxUpdateIndex()	null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.adjustUpdateIndexes(org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.nextUpdateIndex(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
3759.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.inflater()	3803.json,3849.json,3539.json,3525.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.inflate(org.eclipse.jgit.internal.storage.dfs.DfsReader, long, int)	true	2410
5575.json	org.eclipse.jgit.revwalk.PendingGenerator.next()	noCall	noCall	true	3176
949.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.getResultTreeId()	noCall	noCall	true	3176
6339.json	org.eclipse.jgit.fnmatch.FileNameMatcher.findGroupEnd(int, java.lang.String)	6340.json	org.eclipse.jgit.fnmatch.FileNameMatcher.parseHeads(java.lang.String, java.lang.Character)	true	3176
3145.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setRefBlockSize(int)	null,3784.json,null,135.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.configureReftable(org.eclipse.jgit.internal.storage.reftable.ReftableConfig, org.eclipse.jgit.internal.storage.dfs.DfsOutputStream),org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite(),org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
9065.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectory(java.io.File)	9064.json,9066.json,9067.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.util.Collection<java.io.File>),org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.io.File[])	true	2907
3575.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.refresh()	noCall	noCall	true	885
17.json	org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getValueAt(int, int)	noCall	noCall	true	3176
1399.json	org.eclipse.jgit.transport.UploadPack.getRepository()	null,1888.json,null	org.eclipse.jgit.transport.UploadPack.TipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.UploadPack),org.eclipse.jgit.transport.UploadPack.ReachableCommitTipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>)	false	3176
340.json	org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject)	noCall	noCall	true	3176
4503.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand)	4502.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	319
1979.json	org.eclipse.jgit.transport.Transport.register(org.eclipse.jgit.transport.TransportProtocol)	null,1978.json,null	org.eclipse.jgit.transport.WalkEncryptionTest.Base.initialize(),org.eclipse.jgit.transport.Transport.load(java.lang.ClassLoader, java.lang.String),org.eclipse.jgit.transport.TestProtocolTest.registerProto(org.eclipse.jgit.transport.resolver.UploadPackFactory<org.eclipse.jgit.transport.TestProtocolTest.User>, org.eclipse.jgit.transport.resolver.ReceivePackFactory<org.eclipse.jgit.transport.TestProtocolTest.User>)	true	2645
4797.json	org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmaps()	4178.json,null,4679.json,4177.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.clearBitmaps(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBitmapCount(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.iterator()	false	1922
4947.json	org.eclipse.jgit.internal.storage.reftree.Command.symref(java.lang.String)	4946.json,null,4959.json	org.eclipse.jgit.internal.storage.reftree.Command.check(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-4c4f9ba4-cc90-4a4d-a369-2d6b2701da8c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command)	true	884
3623.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getMinUpdateIndex()	noCall	noCall	true	286
9829.json	org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	2775
9333.json	org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand)	9326.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	2210
7179.json	org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean)	436.json	org.eclipse.jgit.pgm.Gc.run()	true	1360
6722.json	org.eclipse.jgit.diff.DiffEntry.getPath(org.eclipse.jgit.diff.DiffEntry.Side)	noCall	noCall	true	2838
7873.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.getEOL()	8150.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	824
9436.json	org.eclipse.jgit.lib.CommitBuilder.setTreeId(org.eclipse.jgit.lib.AnyObjectId)	null,7224.json,null,null,null,7040.json,1034.json,null,null,null,2850.json,null,6979.json,null,null,6309.json,null,2752.json,167.json,null,4931.json,null,null,2840.json,null,2851.json,null,null,213.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.notes.NoteMapTest.commitNoteMap(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
8600.json	org.eclipse.jgit.util.SystemReader.setPlatformChecker()	8599.json,478.json,479.json	org.eclipse.jgit.util.SystemReader.init(),org.eclipse.jgit.junit.MockSystemReader.setWindows(),org.eclipse.jgit.junit.MockSystemReader.setUnix()	true	1265
4399.json	org.eclipse.jgit.internal.storage.file.ByteArrayWindow.check(java.util.zip.Inflater, byte[], long, int)	4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
7070.json	org.eclipse.jgit.api.Git.rebase()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRepositoryStateChecks(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange()	true	2756
86.json	org.eclipse.jgit.pgm.Config.run()	noCall	noCall	true	2209
3244.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeRefs(org.eclipse.jgit.internal.storage.reftable.MergedReftable)	3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
8572.json	org.eclipse.jgit.util.BlockList.addAll(org.eclipse.jgit.util.BlockList<T>)	null,5117.json	org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)	true	2641
6361.json	org.eclipse.jgit.blame.Region.splitFirst(int, int)	6378.json	org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
3426.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getBlockSize()	3823.json,3822.json,3648.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.blockSize(org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.alignToBlock(long),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackHeader(long)	true	2410
8793.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.add(Q)	null,null,2451.json,null,null,null,3298.json,2404.json,null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.transport.PackParser.addObjectAndTrack(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testIterator(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexId(org.eclipse.jgit.lib.ObjectId, long),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent()	true	3176
2561.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowDeletes(boolean)	noCall	noCall	true	3176
3276.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarint(long)	3281.json,null,3175.json,null,null,3188.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(byte[]),org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.writeKey(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
8227.json	org.eclipse.jgit.util.io.StreamCopyThread.halt()	8317.json,null,null	org.eclipse.jgit.util.SshSupport.runSshCommand(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, int),org.eclipse.jgit.transport.TransportGitSsh.SshPushConnection.close(),org.eclipse.jgit.transport.TransportGitSsh.SshFetchConnection.close()	true	2944
488.json	org.eclipse.jgit.junit.RepeatRule.RepeatStatement.evaluate()	noCall	noCall	true	654
5050.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.endObject()	5130.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2904
4510.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset64Count()	noCall	noCall	true	3176
9107.json	org.eclipse.jgit.lib.RepositoryCache.openRepository(org.eclipse.jgit.lib.RepositoryCache.Key, boolean)	9096.json	org.eclipse.jgit.lib.RepositoryCache.open(org.eclipse.jgit.lib.RepositoryCache.Key, boolean)	true	3176
9408.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getTimeUnit(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long, java.util.concurrent.TimeUnit)	noCall	noCall	true	288
7334.json	org.eclipse.jgit.api.CreateBranchCommand.processOptions()	7331.json	org.eclipse.jgit.api.CreateBranchCommand.call()	true	2800
6286.json	org.eclipse.jgit.gitrepo.internal.RepoText.get()	6315.json,6318.json,6316.json,6309.json	org.eclipse.jgit.gitrepo.ManifestParser.read(java.io.InputStream),org.eclipse.jgit.gitrepo.ManifestParser.endDocument(),org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes),org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1509
1193.json	org.eclipse.jgit.notes.FanoutBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	1195.json	org.eclipse.jgit.notes.FanoutBucket.contractIfTooSmall(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2766
91.json	org.eclipse.jgit.pgm.UploadPack.run()	noCall	noCall	true	3176
1096.json	org.eclipse.jgit.hooks.PrePushHook.canRun()	1095.json	org.eclipse.jgit.hooks.PrePushHook.call()	true	950
5103.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	5099.json,null,null	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2490
1221.json	org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
9962.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.toString()	noCall	noCall	true	856
1777.json	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.validate(java.net.HttpURLConnection, java.lang.String)	noCall	noCall	true	966
9583.json	org.eclipse.jgit.lib.IndexDiff.getConflictingStageStates()	null,6966.json,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.Status.getConflictingStageState(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.verifyStageState(org.eclipse.jgit.lib.IndexDiff.StageState, int...)	true	2609
5914.json	org.eclipse.jgit.dircache.DirCacheTree.getChildCount()	6062.json,null,null,220.json,null,134.json,null,null	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree()	true	3176
3314.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.refBlockSize()	3638.json,135.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
9406.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getInt(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, int)	noCall	noCall	true	288
1657.json	org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.isInteractive()	noCall	noCall	true	2768
6929.json	org.eclipse.jgit.api.PushCommand.isDryRun()	noCall	noCall	true	2805
3544.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.ReadBackStream.read()	noCall	noCall	true	1397
9928.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.mask(long, long)	9924.json,9925.json,9926.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(byte[], int),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(long[], int)	true	856
471.json	org.eclipse.jgit.junit.MockSystemReader.tick(int)	null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.gcWithTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.run(org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithShortTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithLongTtl(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tick(),org.eclipse.jgit.junit.TestRepository.tick(int)	true	964
8074.json	org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean)	null,8073.json	org.eclipse.jgit.util.ChangeIdUtilTest.call(java.lang.String, boolean),org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	2928
1342.json	org.eclipse.jgit.transport.PacketLineOut.writeDelim()	null,null,null	org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.PacketLineOutTest.testWriteDelim(),org.eclipse.jgit.transport.UploadPack.fetchV2()	true	51
2391.json	org.eclipse.jgit.transport.PackParser.getPackSize()	2614.json,4697.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackSize()	true	1561
3289.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setConfig(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	null,3068.json,null,3236.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setConfig(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	true	297
9376.json	org.eclipse.jgit.lib.ObjectChecker.scanPathSegment(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	9381.json,9375.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	1551
7850.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.IteratorState.initializeReadBuffer()	7800.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	3176
1600.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getContentLength()	noCall	noCall	true	1572
9255.json	org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	9256.json,9254.json	org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId)	true	2851
350.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCommitterRevFilter(java.lang.String)	noCall	noCall	true	3176
2654.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.end()	null,null	org.eclipse.jgit.transport.RefAdvertiserTest.advertiser(),org.eclipse.jgit.transport.UploadPack.lsRefsV2()	true	3070
9378.json	org.eclipse.jgit.lib.ObjectChecker.report(org.eclipse.jgit.lib.ObjectChecker.ErrorType, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	9368.json,9370.json,9372.json,9388.json,9376.json,9382.json,9366.json,9375.json,9386.json	org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.scanPathSegment(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	892
9616.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(char[], java.io.Writer)	339.json,9779.json,1536.json,272.json,340.json,380.json,9778.json	org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.RefWriter.writePackedRefs(),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.RefWriter.writeInfoRefs()	true	3176
2342.json	org.eclipse.jgit.transport.BasePackConnection.endOut()	null,null	org.eclipse.jgit.transport.TransportGitSsh.SshPushConnection.close(),org.eclipse.jgit.transport.TransportGitSsh.SshFetchConnection.close()	true	3004
9897.json	org.eclipse.jgit.lfs.CleanFilter.register()	noCall	noCall	true	628
1889.json	org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack)	null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-927ee934-d631-4ad2-b01a-49c4e722782b.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	2292
9031.json	org.eclipse.jgit.lib.PersonIdent.appendSanitized(java.lang.StringBuilder, java.lang.String)	null,9039.json	org.eclipse.jgit.lib.T0001_PersonIdentTest.testAppendSanitized(),org.eclipse.jgit.lib.PersonIdent.toExternalString()	true	772
6895.json	org.eclipse.jgit.api.CloneCommand.setBare(boolean)	null,null,null,null,null,null,230.json,null,null,null,null,914.json	org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.ant.tasks.GitCloneTask.execute()	true	2686
102.json	org.eclipse.jgit.pgm.CommandCatalog.get(java.lang.String)	393.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[])	false	3176
4668.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.BitmapIndex.Bitmap, int)	noCall	noCall	true	1922
2765.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.getReplicas()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
9531.json	org.eclipse.jgit.lib.RefUpdate.getRefLogMessage()	4565.json,4985.json,4491.json,4494.json,9145.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.lib.RefRename.getRefLogMessage()	true	3176
1309.json	org.eclipse.jgit.transport.PreReceiveHookChain.newChain(java.util.List<? extends org.eclipse.jgit.transport.PreReceiveHook>)	noCall	noCall	true	2374
3311.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.firstBlockPosition(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section)	3310.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter()	true	297
7994.json	org.eclipse.jgit.util.FS_Win32.getAttributes(java.io.File)	noCall	noCall	true	1579
7897.json	org.eclipse.jgit.submodule.SubmoduleWalk.loadPathNames()	7896.json,7893.json	org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.submodule.SubmoduleWalk.setModulesConfig(org.eclipse.jgit.lib.Config)	true	279
8363.json	org.eclipse.jgit.util.IO.readLines(java.lang.String)	null,null,null,null,null,null,null,null	org.eclipse.jgit.util.ReadLinesTest.testReadLines_endLF(),org.eclipse.jgit.pgm.CLIGitCommand.Result.outLines(),org.eclipse.jgit.util.ReadLinesTest.testReadLines_singleLine(),org.eclipse.jgit.util.ReadLinesTest.testReadLines_LF(),org.eclipse.jgit.pgm.CLIGitCommand.Result.errLines(),org.eclipse.jgit.util.ReadLinesTest.testReadLines_CRLF(),org.eclipse.jgit.util.ReadLinesTest.testReadLines_endCRLF(),org.eclipse.jgit.util.ReadLinesTest.testReadLines_mixed()	true	2244
1928.json	org.eclipse.jgit.transport.Daemon.getReceivePackFactory()	300.json	org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon)	true	872
4674.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCommits()	4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	false	1922
551.json	org.eclipse.jgit.junit.http.RecordingLogger.info(java.lang.Throwable)	noCall	noCall	true	3070
6830.json	org.eclipse.jgit.api.ShowNoteCommand.call()	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
6759.json	org.eclipse.jgit.diff.ContentSource.Pair.size(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	6655.json	org.eclipse.jgit.diff.SimilarityRenameDetector.size(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	true	2838
559.json	org.eclipse.jgit.junit.http.SimpleHttpServer.getUri()	noCall	noCall	true	2740
7420.json	org.eclipse.jgit.api.RebaseCommand.getOurCommitName()	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	2123
3785.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackDescription()	3871.json,null,3452.json,null,null,null,3773.json,null,3768.json,null,null,3371.json,null,null,null,null,null,3750.json,null,null,3912.json,null,3453.json,null,3491.json,3363.json,3779.json,null,null,null,null,null,null,3749.json,3379.json,3776.json,null,3375.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getPackDescription(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-cda10879-e0a4-4db4-8b33-7a8202285458.compare(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.estimatePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.toPrune(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateCompactPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateUnreachableGarbagePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.countPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource),org.eclipse.jgit.internal.storage.dfs.DfsReader.garbagePacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.Anonymous-51f9e2cf-21f4-47ea-ad55-b98729a40f57.compare(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList.getLastModified(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndGarbagePacksPurged(),org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.wasDeltaAttempted(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toPrune(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizesWithGcAndGcRestPacks(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsReader.sortPacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.objectsBefore(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getSourcePacks(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithNoGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndGarbagePacksPurged()	true	2410
6261.json	org.eclipse.jgit.gitrepo.RepoProject.setGroups(java.lang.String)	noCall	noCall	true	740
2864.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getRefs()	2804.json,2805.json	org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand)	true	872
5894.json	org.eclipse.jgit.dircache.DirCache.requireLocked(org.eclipse.jgit.internal.storage.file.LockFile)	5891.json,5893.json	org.eclipse.jgit.dircache.DirCache.write(),org.eclipse.jgit.dircache.DirCache.commit()	true	3176
6525.json	org.eclipse.jgit.diff.EditList.singleton(org.eclipse.jgit.diff.Edit)	6516.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	2819
531.json	org.eclipse.jgit.junit.http.MockServletConfig.getInitParameterNames()	noCall	noCall	true	3070
3974.json	org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[])	noCall	noCall	true	3059
3713.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getOptions()	null,3675.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.adviseSequentialRead(long, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
5124.json	org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	5123.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	1880
7566.json	org.eclipse.jgit.treewalk.TreeWalk.setOperationType(org.eclipse.jgit.treewalk.TreeWalk.OperationType)	null,7530.json,6981.json,5910.json,9570.json	org.eclipse.jgit.attributes.TreeWalkAttributeTest.beginWalk(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	935
1320.json	org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	3176
4164.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeFloat(float)	noCall	noCall	true	1922
3339.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeIndex()	3337.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.finishSectionMaybeWriteIndex()	true	297
1704.json	org.eclipse.jgit.transport.URIish.parseHexByte(byte, byte)	1705.json	org.eclipse.jgit.transport.URIish.unescape(java.lang.String)	true	1390
3261.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand)	3260.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
9236.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.beginTask(java.lang.String, int)	null,null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testFailsMethodsOnBackgroundThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b21ae44e-1ca9-452d-abbd-ba4b124efb4a.run()	true	2893
1679.json	org.eclipse.jgit.transport.AmazonS3.toCleanString(java.util.List<java.lang.String>)	1695.json	org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	true	3176
8822.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.Anonymous-4e18c2c6-78b9-4abd-96b7-a11694c9cb67.remove()	noCall	noCall	true	2260
6898.json	org.eclipse.jgit.api.CloneCommand.setBranch(java.lang.String)	null,null,230.json,null,null,914.json	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute()	true	2686
6272.json	org.eclipse.jgit.gitrepo.RepoProject.getRecommendShallow()	6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	true	740
7470.json	org.eclipse.jgit.api.StatusCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	1778
7259.json	org.eclipse.jgit.api.DescribeCommand.Candidate.describe(org.eclipse.jgit.lib.ObjectId)	7260.json	org.eclipse.jgit.api.DescribeCommand.call()	true	1717
447.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.InformationalMessage)	444.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
6468.json	org.eclipse.jgit.blame.BlameGenerator.getResultContents()	null,null,6411.json,null	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.blame.BlameResult.create(org.eclipse.jgit.blame.BlameGenerator),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk()	true	2567
9022.json	org.eclipse.jgit.lib.Repository.getRemoteNames()	8997.json,8998.json,9867.json,null	org.eclipse.jgit.lib.Repository.shortenRemoteBranchName(java.lang.String),org.eclipse.jgit.lib.Repository.getRemoteName(java.lang.String),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.lib.RefTest.testRemoteNames()	true	1505
1373.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	1355.json	org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
7068.json	org.eclipse.jgit.api.Git.cherryPick()	7405.json,null,null,null,7404.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2795
1279.json	org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs()	null,null,null,null,8834.json,null,1265.json,null,null,2022.json,null,null	org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.fetchRefSpec(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RemoteConfigTest.testUnknown(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()	true	3176
6108.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setStreamFileThreshold(int)	null,null,null,6111.json,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallObjectBeforeLargeObject(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackLargeFile(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.setUp(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.file.PackFileTest.setUp()	true	2838
263.json	org.eclipse.jgit.pgm.Show.abbrev(int)	noCall	noCall	true	2154
10248.json	org.eclipse.jgit.http.server.glue.SuffixPipeline.Binder.create()	noCall	noCall	true	3070
6054.json	org.eclipse.jgit.dircache.DirCacheIterator.idBuffer()	7796.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()	true	3176
7372.json	org.eclipse.jgit.api.ArchiveCommand.setTree(org.eclipse.jgit.lib.ObjectId)	null,null,362.json,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1871
3350.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getPackConfig()	null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testSinglePackForAllRefs()	true	2410
2387.json	org.eclipse.jgit.transport.PackParser.setMaxObjectSizeLimit(long)	2614.json,null,null,null	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob()	true	2391
1147.json	org.eclipse.jgit.notes.NoteMap.load(org.eclipse.jgit.lib.ObjectId)	1135.json	org.eclipse.jgit.notes.NoteMap.readTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId)	true	2767
3273.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.paddingUsed()	noCall	noCall	true	297
3283.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushFileHeader()	3301.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginLog()	true	297
2126.json	org.eclipse.jgit.transport.PushCertificate.getVersion()	null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
3268.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.setBlockSize(int)	3301.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginLog()	true	297
8745.json	org.eclipse.jgit.lib.RepositoryCacheConfig.setExpireAfter(long)	null,8748.json,null,null	org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelayShouldBeMax10minutes(),org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelay()	true	698
4040.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.Anonymous-2cf66a9e-3ce7-4cf1-a32a-fb3cfc377736.read(byte[], int, int)	noCall	noCall	true	171
4723.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.exists()	6113.json	org.eclipse.jgit.storage.file.FileRepositoryBuilder.build()	true	3176
1876.json	org.eclipse.jgit.transport.TransportGitSsh.initSshSessionFactory()	noCall	noCall	true	1463
3299.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeLog(java.lang.String, long, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String)	null,135.json,null,null,3245.json,3260.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(org.eclipse.jgit.internal.storage.reftable.MergedReftable),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	297
7389.json	org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null,7131.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7266.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2939
3842.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.EmptyAttributesNodeProvider.getInfoAttributesNode()	noCall	noCall	true	935
536.json	org.eclipse.jgit.junit.http.RecordingLogger.getLogger(java.lang.String)	noCall	noCall	true	3070
6821.json	org.eclipse.jgit.api.RevertCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	noCall	noCall	true	1496
4073.json	org.eclipse.jgit.internal.storage.file.LocalObjectToPack.clearReuseAsIs()	noCall	noCall	true	2893
2044.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-da7982e8-1064-47f9-b51f-34c8a17e1e46.getSchemes()	noCall	noCall	true	2645
4375.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte[], int, int)	4374.json,4371.json,4373.json,4372.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte[]),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readInt(),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedInt(),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLong()	true	1922
7910.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModuleName()	7916.json,7912.json,7913.json,7914.json,7227.json,7228.json,7915.json,7917.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath(),org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUrl(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore()	true	164
420.json	org.eclipse.jgit.pgm.TextBuiltin.die(boolean)	410.json	org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	true	1531
78.json	org.eclipse.jgit.pgm.Die.isAborted()	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	1531
5536.json	org.eclipse.jgit.revwalk.RevCommit.slowCarryFlags(org.eclipse.jgit.revwalk.FIFORevQueue, int)	5532.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags(org.eclipse.jgit.revwalk.RevCommit, int)	true	1550
1672.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.setNumBytesRead(long)	2408.json	org.eclipse.jgit.transport.PackParser.endInput()	true	629
509.json	org.eclipse.jgit.junit.http.AppServer.getPort()	508.json	org.eclipse.jgit.junit.http.AppServer.getURI()	true	3070
1522.json	org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.write(int)	noCall	noCall	true	705
10347.json	org.eclipse.jgit.http.server.AsIsFileFilter.destroy()	noCall	noCall	true	3070
9960.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray(char[])	9957.json,9959.json,9958.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char[], java.io.Writer),org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char[], java.lang.StringBuilder)	true	856
6582.json	org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId)	6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2894
2780.json	org.eclipse.jgit.internal.ketch.KetchReplica.getCommitMethod()	2762.json,2723.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	872
6515.json	org.eclipse.jgit.diff.DiffAlgorithm.getAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm.SupportedAlgorithm)	6548.json,235.json,null	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.pgm.Diff.setAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm.SupportedAlgorithm),org.eclipse.jgit.merge.ResolveMerger.getMergeAlgorithm(org.eclipse.jgit.lib.Config)	true	2753
1111.json	org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	1993.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String)	true	950
7888.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(org.eclipse.jgit.lib.Repository, java.lang.String)	7918.json	org.eclipse.jgit.submodule.SubmoduleWalk.getRepository()	true	2355
1623.json	org.eclipse.jgit.transport.resolver.FileResolver.nameWithDotGit(java.lang.String)	1620.json,1617.json	org.eclipse.jgit.transport.resolver.FileResolver.exportRepository(java.lang.String, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String)	true	2672
9134.json	org.eclipse.jgit.lib.UserConfig.isAuthorEmailImplicit()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	2643
6791.json	org.eclipse.jgit.events.WorkingTreeModifiedEvent.isEmpty()	7477.json,6025.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.dircache.DirCacheCheckout.checkout()	true	299
8159.json	org.eclipse.jgit.util.io.AutoLFOutputStream.write(int)	noCall	noCall	true	824
1869.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-0e84ee6d-27c3-485f-9b01-7775a8e0a76a.getOptionalFields()	noCall	noCall	true	2645
1923.json	org.eclipse.jgit.transport.Daemon.setTimeout(int)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
5470.json	org.eclipse.jgit.revwalk.AbstractRevQueue.describe(java.lang.StringBuilder, org.eclipse.jgit.revwalk.RevCommit)	5685.json,5446.json,5515.json	org.eclipse.jgit.revwalk.FIFORevQueue.toString(),org.eclipse.jgit.revwalk.LIFORevQueue.toString(),org.eclipse.jgit.revwalk.DateRevQueue.toString()	true	3176
8160.json	org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte[])	noCall	noCall	true	824
4355.json	org.eclipse.jgit.internal.storage.file.WindowCursor.quickCopy(org.eclipse.jgit.internal.storage.file.PackFile, long, long)	4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
6265.json	org.eclipse.jgit.gitrepo.RepoProject.getRevision()	6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1115
6716.json	org.eclipse.jgit.diff.DiffEntry.delete(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes(),org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_UnstagedFile(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile()	true	2899
10297.json	org.eclipse.jgit.http.server.glue.MetaFilter.getPipelines()	noCall	noCall	false	3070
4963.json	org.eclipse.jgit.internal.storage.reftree.RefTree.refPath(java.lang.String)	4951.json,4964.json,4959.json,4969.json	org.eclipse.jgit.internal.storage.reftree.RefTree.readRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.peeledPath(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	884
7791.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.setDirCacheIterator(org.eclipse.jgit.treewalk.TreeWalk, int)	7040.json,7530.json,6981.json,6021.json,null,6041.json,5910.json,6023.json,1005.json,9570.json,null	org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()	true	2683
1082.json	org.eclipse.jgit.errors.AmbiguousObjectException.getAbbreviatedObjectId()	null	org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique()	true	2846
8676.json	org.eclipse.jgit.patch.Patch.parse(byte[], int, int)	null,8674.json	org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.Patch.parse(java.io.InputStream)	true	3176
2352.json	org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)	null,null,null,null,null,1998.json,null,8834.json,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.api.CloneCommand.calculateRefSpecs(java.lang.String),org.eclipse.jgit.transport.RefSpecTest.onlyWildCard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.Transport.findTrackingRefName(java.lang.String, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.destinationWithWildcard(),org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(java.lang.String, java.lang.String),org.eclipse.jgit.transport.RefSpecTest.sourceOnlywithWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
393.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[])	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	3176
5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	noCall	noCall	true	3176
4719.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String)	4698.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3854.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.copy(int, byte[], int, int)	3853.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.copy(long, byte[], int, int)	true	2410
5405.json	org.eclipse.jgit.revwalk.RevWalk.Anonymous-ce9a651a-7f9b-4115-9fd4-faf8738f8a97.remove()	noCall	noCall	true	3176
10134.json	org.eclipse.jgit.archive.ZipFormat.equals(java.lang.Object)	noCall	noCall	true	1521
206.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.included(java.lang.String, java.util.List<java.lang.String>)	205.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.init()	true	2799
5899.json	org.eclipse.jgit.dircache.DirCache.nextEntry(int)	5948.json	org.eclipse.jgit.dircache.DirCacheEditor.applyEdits()	true	3176
3940.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getLooseRefs()	3939.json	org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(java.lang.String)	true	3059
9037.json	org.eclipse.jgit.lib.PersonIdent.hashCode()	noCall	noCall	true	3176
5617.json	org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markUnshallow(org.eclipse.jgit.revwalk.RevObject)	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2485
4066.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream)	4059.json,4072.json,4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2901
7408.json	org.eclipse.jgit.api.RebaseCommand.writeCurrentCommit(org.eclipse.jgit.revwalk.RevCommit)	7405.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit)	true	1426
8188.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.decideMode()	8189.json,8187.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.flush(),org.eclipse.jgit.util.io.AutoCRLFOutputStream.buffer(byte[], int, int)	true	2342
218.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs()	217.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs()	true	3176
9366.json	org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	null,null,null,9365.json,2411.json,1371.json,null	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListRejects(java.lang.String, int, byte[]),org.eclipse.jgit.lib.ObjectChecker.check(int, byte[]),org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListAccepts(int, byte[])	true	3176
5918.json	org.eclipse.jgit.dircache.DirCacheTree.getPathString()	null,null,220.json,null,134.json,null	org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree()	true	3176
3656.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onObjectData(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	2410
512.json	org.eclipse.jgit.junit.http.AppServer.getRequests(org.eclipse.jgit.transport.URIish, java.lang.String)	null	org.eclipse.jgit.junit.http.HttpTestCase.getRequests(org.eclipse.jgit.transport.URIish, java.lang.String)	true	3070
8151.json	org.eclipse.jgit.util.io.AutoLFInputStream.read()	noCall	noCall	true	2851
7929.json	org.eclipse.jgit.util.RawParseUtils.parseHexInt64(byte[], int)	9990.json,9919.json,9978.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromHexString(byte[], int),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hexUInt64(byte[], int, int),org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromHexString(byte[], int)	true	856
230.json	org.eclipse.jgit.pgm.Clone.run()	noCall	noCall	true	3176
4445.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2907
7866.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.popEntriesEqual()	7868.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()	true	3176
5913.json	org.eclipse.jgit.dircache.DirCacheTree.getEntrySpan()	5932.json,null,null,220.json,null,6060.json,134.json,null,6059.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.skip(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheIterator.back(int),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree(),org.eclipse.jgit.dircache.DirCacheIterator.next(int)	true	3176
1983.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	1982.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
5633.json	org.eclipse.jgit.revwalk.FollowFilter.toString()	noCall	noCall	true	2899
81.json	org.eclipse.jgit.pgm.ShowRef.getSortedRefs()	80.json	org.eclipse.jgit.pgm.ShowRef.run()	true	3059
5751.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.toString()	noCall	noCall	true	3176
3115.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.setupEmptyFileBlock()	3112.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	true	297
1594.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setReadTimeout(int)	noCall	noCall	true	1572
6416.json	org.eclipse.jgit.blame.BlameResult.hasSourceData(int, int)	6425.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int)	true	2567
9415.json	org.eclipse.jgit.lib.ObjectIdRef.PeeledNonTag.isPeeled()	noCall	noCall	true	3176
1277.json	org.eclipse.jgit.transport.RemoteConfig.addPushURI(org.eclipse.jgit.transport.URIish)	6875.json	org.eclipse.jgit.api.RemoteSetUrlCommand.call()	true	3176
3099.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()	3063.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek()	true	297
3655.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	2410
6343.json	org.eclipse.jgit.fnmatch.FileNameMatcher.extendStringToMatchByOneCharacter(char)	6345.json	org.eclipse.jgit.fnmatch.FileNameMatcher.append(java.lang.String)	true	3176
4131.json	org.eclipse.jgit.internal.storage.file.PackFile.endCopyAsIs()	4123.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
2173.json	org.eclipse.jgit.transport.PushCertificateParser.addCommand(org.eclipse.jgit.transport.ReceiveCommand)	null,2606.json	org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1095
5825.json	org.eclipse.jgit.ignore.internal.Strings.count(java.lang.String, char, boolean)	null,5826.json,5842.json	org.eclipse.jgit.ignore.internal.StringsTest.testString(java.lang.String, int, int),org.eclipse.jgit.ignore.internal.Strings.split(java.lang.String, char),org.eclipse.jgit.ignore.internal.PathMatcher.isSimplePathWithSegments(java.lang.String)	true	1322
6123.json	org.eclipse.jgit.storage.pack.PackStatistics.getHaves()	null,null	org.eclipse.jgit.transport.TestProtocolTest.DefaultUpload.create(org.eclipse.jgit.transport.TestProtocolTest.User, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.TestProtocolTest.DefaultUpload.Anonymous-0e939578-e263-447a-a28b-38c7b3daceb9.onPostUpload(org.eclipse.jgit.storage.pack.PackStatistics)	true	117
9259.json	org.eclipse.jgit.lib.internal.WorkQueue.Anonymous-68d3392f-cdf8-47c0-bcfa-2f2bdc82eb1f.finalize()	noCall	noCall	true	2658
3774.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader)	3771.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor)	true	278
8540.json	org.eclipse.jgit.util.RefList.isEmpty()	null,8016.json,null	org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefListTest.testAddToEmptyList()	true	3060
1378.json	org.eclipse.jgit.transport.WalkFetchConnection.recordError(org.eclipse.jgit.lib.AnyObjectId, java.lang.Throwable)	1372.json,1368.json,1370.json,1366.json	org.eclipse.jgit.transport.WalkFetchConnection.expandOneAlternate(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase),org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
9839.json	org.eclipse.jgit.lib.TreeFormatter.insertTo(org.eclipse.jgit.lib.ObjectInserter)	9178.json	org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TreeFormatter)	true	2775
243.json	org.eclipse.jgit.pgm.Diff.sourcePrefix(java.lang.String)	noCall	noCall	true	2838
7085.json	org.eclipse.jgit.api.Git.tagDelete()	null,null,null,null,null,363.json	org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run()	true	2485
9213.json	org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int[], int)	4520.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	true	2848
7174.json	org.eclipse.jgit.api.MergeResult.getConflicts()	null,null,null,null,null,null,278.json,null,null,null,null,null,null,null	org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.api.MergeCommandTest.checkMergeFailedResult(org.eclipse.jgit.api.MergeResult, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason, java.lang.String, java.io.File),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit()	true	2852
7126.json	org.eclipse.jgit.api.RebaseResult.getConflicts()	noCall	noCall	true	1975
7412.json	org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File)	7402.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean)	true	1677
351.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCMessageRevFilter(java.lang.String)	noCall	noCall	true	3176
2600.json	org.eclipse.jgit.transport.BaseReceivePack.init(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	2642.json	org.eclipse.jgit.transport.ReceivePack.receive(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	true	2218
4796.json	org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmap(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
8832.json	org.eclipse.jgit.lib.BranchConfig.isRebase()	null	org.eclipse.jgit.lib.BranchConfigTest.isRebase()	true	1407
6157.json	org.eclipse.jgit.storage.pack.PackConfig.setReuseObjects(boolean)	3772.json,null,null,3375.json,6209.json,7179.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.configureGc(org.eclipse.jgit.internal.storage.file.GC, boolean)	true	3176
6916.json	org.eclipse.jgit.api.PushCommand.getTimeout()	noCall	noCall	true	2805
920.json	org.eclipse.jgit.merge.MergeFormatterPass.writeln(java.lang.String)	919.json,918.json,917.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictChange(org.eclipse.jgit.merge.MergeChunk),org.eclipse.jgit.merge.MergeFormatterPass.writeConflictStart(org.eclipse.jgit.merge.MergeChunk),org.eclipse.jgit.merge.MergeFormatterPass.writeConflictEnd()	true	1171
9297.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.Anonymous-f1960772-62d1-4069-ac60-3c5ceface0e0.remove()	noCall	noCall	true	2645
2801.json	org.eclipse.jgit.internal.ketch.KetchReplica.doRetryPush()	2800.json	org.eclipse.jgit.internal.ketch.KetchReplica.WeakRetryPush.call()	true	872
6677.json	org.eclipse.jgit.diff.RenameDetector.Anonymous-d42236bc-ce68-4cc4-9b91-4f1dfca83ed6.nameOf(org.eclipse.jgit.diff.DiffEntry)	noCall	noCall	true	2899
3644.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.isGC(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource)	null,null	org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-cda10879-e0a4-4db4-8b33-7a8202285458.compare(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	true	486
311.json	org.eclipse.jgit.pgm.opt.PathTreeFilterHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
2003.json	org.eclipse.jgit.transport.Transport.setTagOpt(org.eclipse.jgit.transport.TagOpt)	6836.json,2022.json	org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	true	3176
3541.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.getSize()	noCall	noCall	true	1397
7951.json	org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int)	5666.json,7950.json,5546.json,5547.json	org.eclipse.jgit.revwalk.RevTag.getTaggerIdent(),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(java.lang.String),org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent(),org.eclipse.jgit.revwalk.RevCommit.getCommitterIdent()	true	3176
8804.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.createArray(int)	8803.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.initTable(int)	true	3176
4852.json	org.eclipse.jgit.internal.storage.file.FileRepository.getRefDatabase()	4816.json,null,null,null,null,4828.json,null,null,null,4861.json,null,4834.json,null,null,null,null,4817.json,null,null,null	org.eclipse.jgit.internal.storage.file.GC.packRefs(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.GC.getAllRefs(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.api.TagCommandTest.getTags(),org.eclipse.jgit.lib.RefTest.testGetShortExactRef(),org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call(),org.eclipse.jgit.internal.storage.file.GC.getStatistics(),org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs(),org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage(),org.eclipse.jgit.lib.RefTest.testRefsUnderRefs(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.lib.RefTest.testGetRefsByPrefix(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow()	true	3059
3213.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekLog(java.lang.String, long)	noCall	noCall	true	297
8739.json	org.eclipse.jgit.patch.FormatError.getMessage()	null,null,8743.json,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.FormatError.toString(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew()	true	3176
6180.json	org.eclipse.jgit.storage.pack.PackConfig.getBigFileThreshold()	5120.json,6209.json,6210.json,5136.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.storage.pack.PackConfig, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	2893
4497.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
4473.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset64Count()	noCall	noCall	true	3176
9328.json	org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(java.time.Duration)	3251.json,null,9326.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	565
4814.json	org.eclipse.jgit.internal.storage.file.GC.removeReferenced(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>, org.eclipse.jgit.revwalk.ObjectWalk)	4810.json	org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2142
1143.json	org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.lib.ObjectInserter)	6969.json,7221.json,null	org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty()	true	2766
8250.json	org.eclipse.jgit.util.io.InterruptTimer.AlarmState.now()	8246.json,null	org.eclipse.jgit.util.io.InterruptTimer.AlarmState.run(),org.eclipse.jgit.util.io.InterruptTimer.AlarmState.begin(int)	true	3176
38.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getSSLContext()	35.json,64.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getClient(),org.eclipse.jgit.transport.http.apache.HttpClientConnection.configure(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)	true	1572
8597.json	org.eclipse.jgit.util.SystemReader.getInstance()	null,230.json,2237.json,null,4811.json,null,8056.json,null,4454.json,8296.json,null,null,null,87.json,null,null,3363.json,null,7025.json,null,null,8509.json,null,null,null,null,null,null,9142.json,null,null,6002.json,null,null,2534.json,null,null,null,null,null,null,2799.json,null,null,9063.json,null,8989.json,7992.json,null,null,null,null,null,null,null,1883.json,null,null,4813.json,7991.json,8486.json,8053.json,null,8485.json,null,8300.json,null,null,null,null,null,8508.json,null,null,null,null,null,3361.json,null,null,1484.json,null,8523.json,4849.json,null,null,8052.json,null,null,null,3367.json,null,6049.json,null,null,null,null,9044.json,null,1882.json,8318.json,null	org.eclipse.jgit.util.GitDateParserTest.local(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.transport.TransportHttp.updateSslVerifyUser(boolean),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix(),org.eclipse.jgit.internal.storage.file.GC.getExpireDate(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix(),org.eclipse.jgit.util.FS_POSIX.setExecute(java.io.File, boolean),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1(),org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry(),org.eclipse.jgit.util.GitDateParser.getNewSimpleDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>),org.eclipse.jgit.util.GitDateParserTest.never(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix(),org.eclipse.jgit.pgm.Config.list(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore(),org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.setUp(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case(),org.eclipse.jgit.util.FileUtils.normalize(java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3(),org.eclipse.jgit.util.GitDateParserTest.weeksAgo(),org.eclipse.jgit.util.io.ThrowingPrintWriter.Anonymous-eddf9a10-671b-4619-bc8d-205a0f67d4fe.run(),org.eclipse.jgit.util.FS.FSFactory.detect(java.lang.Boolean),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr(),org.eclipse.jgit.lib.UserConfig.system(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix(),org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.dircache.DirCacheEntry.checkPath(byte[]),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.transport.OpenSshConfig.userName(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix(),org.eclipse.jgit.util.GitDateParserTest.shortWithDots(),org.eclipse.jgit.util.FileUtils.pathToString(java.io.File),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix(),org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.pgm.ConfigTest.testListConfig(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows(),org.eclipse.jgit.lib.Repository.isValidRefName(java.lang.String),org.eclipse.jgit.util.FS_Win32.userHomeImpl(),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.util.GitDateParserTest.defaultFmt(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix(),org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon(),org.eclipse.jgit.util.GitDateParserTest.rfc(),org.eclipse.jgit.transport.OpenSshConfig.Anonymous-40baabff-ff79-4f90-80bd-24830a6c8efa.run(),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix(),org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate(),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.util.FileUtils.readSymLink(java.io.File),org.eclipse.jgit.util.FS_POSIX.isCaseSensitive(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon(),org.eclipse.jgit.util.FileUtils.createSymLink(java.io.File, java.lang.String),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithoutRef(),org.eclipse.jgit.util.GitDateParser.parse_relative(java.lang.String, java.util.Calendar),org.eclipse.jgit.util.GitDateParserTest.shortFmt(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef(),org.eclipse.jgit.util.FS_POSIX.determineAtomicFileCreationSupport(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows(),org.eclipse.jgit.util.FileUtils.normalize(java.io.File),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.loadUserConfig(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1(),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.util.GitDateParserTest.shortWithSlash(),org.eclipse.jgit.ignore.IgnoreNodeTest.testTrailingSpaces(),org.eclipse.jgit.transport.HttpConfig.Anonymous-76f57d4a-cc8d-45f8-8078-651167dc50e2.get(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2(),org.eclipse.jgit.util.RelativeDateFormatter.format(java.util.Date),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.util.GitDateParserTest.iso(),org.eclipse.jgit.util.FileUtilsTest.testRelativize_mixedCase(),org.eclipse.jgit.util.FS_POSIX.discoverGitExe(),org.eclipse.jgit.transport.OpenSshConfigTest.testLocalhostFQDNReplacement(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows(),org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.dayStartInMillis(long),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.util.RelativeDateFormatterTest.assertFormat(long, long, java.lang.String),org.eclipse.jgit.lib.ValidRefNameTest.assertInvalidOnWindows(java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2(),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.util.GitDateParserTest.yesterday(),org.eclipse.jgit.transport.TransportGitSsh.useExtSession(),org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.lib.ValidRefNameTest.assertValid(boolean, java.lang.String)	true	3176
2068.json	org.eclipse.jgit.transport.BaseConnection.getRef(java.lang.String)	1515.json	org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
2134.json	org.eclipse.jgit.transport.PushCertificate.toText()	null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1095
1169.json	org.eclipse.jgit.notes.LeafBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	noCall	noCall	true	2766
5743.json	org.eclipse.jgit.revwalk.filter.SkipRevFilter.create(int)	null,null,7270.json,null,null	org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0(),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilterNegative(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter(),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter()	true	2350
5936.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.fastAdd(org.eclipse.jgit.dircache.DirCacheEntry)	6007.json,5948.json,6005.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
4275.json	org.eclipse.jgit.internal.storage.file.WindowCache.getInstance()	null,null,6066.json,6067.json	org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.checkLimits(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults(),org.eclipse.jgit.storage.file.WindowCacheStats.getOpenFiles(),org.eclipse.jgit.storage.file.WindowCacheStats.getOpenBytes()	true	3176
9868.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.discoverLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	9867.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	true	102
5458.json	org.eclipse.jgit.revwalk.FooterLine.toString()	noCall	noCall	true	3176
8083.json	org.eclipse.jgit.util.NB.decodeInt32(byte[], int)	4642.json,null,3050.json,9193.json,5997.json,5985.json,9599.json,8336.json,4371.json,null,3112.json,5886.json,9212.json,3045.json,9348.json,5975.json	org.eclipse.jgit.internal.storage.file.PackIndex.read(java.io.InputStream),org.eclipse.jgit.util.NBTest.testDecodeInt32(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlockLen(long),org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte[], int),org.eclipse.jgit.dircache.DirCacheEntry.decodeTS(int),org.eclipse.jgit.dircache.DirCacheEntry.getLength(),org.eclipse.jgit.lib.AnyObjectId.compareTo(byte[], int),org.eclipse.jgit.util.sha1.SHA1.initBlock(byte[], int),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readInt(),org.eclipse.jgit.dircache.DirCacheEntry.mightBeRacilyClean(int, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(byte[], int),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long, int),org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int),org.eclipse.jgit.dircache.DirCacheEntry.getRawMode()	true	3176
7011.json	org.eclipse.jgit.api.ResetCommand.setRef(java.lang.String)	null,null,7413.json,null,null,null,null,null,null,null,342.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2669
6590.json	org.eclipse.jgit.diff.DiffFormatter.writeRemovedLine(org.eclipse.jgit.diff.RawText, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	2920
3482.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.position(long)	noCall	noCall	true	2410
6566.json	org.eclipse.jgit.diff.DiffFormatter.close()	6548.json,247.json,378.json,269.json,null	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.diff.DiffFormatterTest.tearDown()	true	2838
1315.json	org.eclipse.jgit.transport.InternalHttpServerGlue.setPeerUserAgent(org.eclipse.jgit.transport.ReceivePack, java.lang.String)	noCall	noCall	true	1137
5238.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight()	5031.json,5035.json,5057.json,5120.json,5148.json,5007.json,null,5008.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.size(),org.eclipse.jgit.internal.storage.pack.DeltaCache.canCache(int, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.DeltaTask.getAdjustedWeight(org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search(),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-f5042ec6-97f3-474f-8ab9-e0d394a07672.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateSize(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2906
7774.json	org.eclipse.jgit.treewalk.filter.PathSuffixFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	3176
7504.json	org.eclipse.jgit.api.NameRevCommand.add(java.lang.Iterable<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	1917
9913.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.clone()	noCall	noCall	true	516
8060.json	org.eclipse.jgit.util.FS_POSIX.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String)	noCall	noCall	true	1223
4642.json	org.eclipse.jgit.internal.storage.file.PackIndex.read(java.io.InputStream)	4641.json,3789.json,3513.json	org.eclipse.jgit.internal.storage.file.PackIndex.open(java.io.File),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2509
6775.json	org.eclipse.jgit.diff.Edit.swap()	null	org.eclipse.jgit.diff.EditTest.testSwap()	true	3176
3256.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
7628.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(byte[])	7551.json,7627.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(java.lang.String)	true	923
4942.json	org.eclipse.jgit.internal.storage.reftree.Command.getNewRef()	2855.json,4959.json,2890.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.ketch.Proposal.toString()	true	884
5953.json	org.eclipse.jgit.dircache.DirCacheEditor.pdir(byte[], int)	5949.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int)	true	893
3114.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int)	3112.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	true	297
41.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getURL()	noCall	noCall	true	1572
1203.json	org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.iterator(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	noCall	noCall	true	2766
1191.json	org.eclipse.jgit.notes.FanoutBucket.Anonymous-c89c6f61-c936-4f70-93c7-87c5ec22fbf0.remove()	noCall	noCall	true	2766
2544.json	org.eclipse.jgit.transport.BaseReceivePack.getRepository()	null,1853.json,2645.json,1889.json,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-927ee934-d631-4ad2-b01a-49c4e722782b.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePack.autoGc(),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	false	3176
4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	noCall	noCall	true	3176
8219.json	org.eclipse.jgit.util.io.UnionInputStream.pop()	8223.json,null,8225.json	org.eclipse.jgit.util.io.UnionInputStream.read(byte[], int, int),org.eclipse.jgit.util.io.UnionInputStream.read(),org.eclipse.jgit.util.io.UnionInputStream.skip(long)	true	3078
2011.json	org.eclipse.jgit.transport.Transport.setOptionReceivePack(java.lang.String)	2022.json,6911.json	org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.api.PushCommand.call()	true	3176
3863.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	noCall	noCall	true	2410
1072.json	org.eclipse.jgit.errors.LargeObjectException.getObjectName()	null,null,null,null	org.eclipse.jgit.errors.LargeObjectException.ExceedsLimit.getMessage(),org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.getMessage(),org.eclipse.jgit.errors.LargeObjectException.getMessage(),org.eclipse.jgit.errors.LargeObjectException.OutOfMemory.getMessage()	true	2841
7272.json	org.eclipse.jgit.api.LogCommand.not(org.eclipse.jgit.lib.AnyObjectId)	7273.json	org.eclipse.jgit.api.LogCommand.addRange(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2953
9523.json	org.eclipse.jgit.lib.RefUpdate.isDetachingSymbolicRef()	3961.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate)	true	328
8279.json	org.eclipse.jgit.util.LongMap.createArray(int)	8277.json	org.eclipse.jgit.util.LongMap.grow()	true	3176
3905.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	3727.json,3904.json,3723.json,3889.json,3719.json,3721.json,3903.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAll(java.lang.Iterable<T>),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Set<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>),org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPackList(),org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	true	2410
2789.json	org.eclipse.jgit.internal.ketch.KetchReplica.copy(org.eclipse.jgit.transport.ReceiveCommand)	2788.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round)	true	872
561.json	org.eclipse.jgit.junit.http.SimpleHttpServer.smart(java.lang.String)	557.json	org.eclipse.jgit.junit.http.SimpleHttpServer.start()	true	2740
5517.json	org.eclipse.jgit.revwalk.DateRevQueue.freeEntry(org.eclipse.jgit.revwalk.DateRevQueue.Entry)	5508.json	org.eclipse.jgit.revwalk.DateRevQueue.next()	true	3176
7394.json	org.eclipse.jgit.api.MergeCommand.setFastForward(org.eclipse.jgit.api.MergeCommand.FastForwardMode)	null,7405.json,278.json,null,null,null,null,null,null,7131.json	org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.revplot.AbstractPlotRendererTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.api.PullCommand.call()	true	2031
5630.json	org.eclipse.jgit.revwalk.FollowFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	2899
6553.json	org.eclipse.jgit.diff.DiffFormatter.setBinaryFileThreshold(int)	noCall	noCall	true	2839
8817.json	org.eclipse.jgit.lib.ConfigSnapshot.LineComparator.compare(org.eclipse.jgit.lib.ConfigLine, org.eclipse.jgit.lib.ConfigLine)	noCall	noCall	true	2266
1514.json	org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	1512.json,2267.json	org.eclipse.jgit.transport.BasePackPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
1529.json	org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, long)	null,null,1530.json,null,null,null	org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKeyWithSlop(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKey(),org.eclipse.jgit.transport.HMACSHA1NonceGenerator.verify(java.lang.String, java.lang.String, org.eclipse.jgit.lib.Repository, boolean, int),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.slop(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.ok(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.invalidFormat()	true	1202
9584.json	org.eclipse.jgit.lib.IndexDiff.getIgnoredNotInIndex()	null,6967.json	org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.Status.getIgnoredNotInIndex()	true	2440
2307.json	org.eclipse.jgit.transport.WalkPushConnection.close()	noCall	noCall	true	3176
3495.json	org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.toString()	noCall	noCall	true	328
7964.json	org.eclipse.jgit.util.RawParseUtils.lastIndexOfTrim(byte[], char, int)	2700.json,7951.json	org.eclipse.jgit.transport.PushCertificateIdent.parse(java.lang.String),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int)	true	2845
4973.json	org.eclipse.jgit.internal.storage.reftree.Scanner.peel(org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.treewalk.CanonicalTreeParser)	4968.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	880
5149.json	org.eclipse.jgit.internal.storage.pack.PackWriter.have(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.lib.AnyObjectId)	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	1922
9210.json	org.eclipse.jgit.lib.AbbreviatedObjectId.toObjectId()	null,null,null,null,null,6582.json,null,null,null,6452.json,null,null,null,6583.json,6456.json,null,6760.json,null,null,3719.json,null,6759.json,null,4342.json	org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString(),org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString(),org.eclipse.jgit.diff.ContentSource.Pair.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString(),org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString(),org.eclipse.jgit.diff.ContentSource.Pair.size(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString(),org.eclipse.jgit.internal.storage.file.WindowCursor.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	true	3176
7839.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.toString()	noCall	noCall	true	3176
1538.json	org.eclipse.jgit.transport.BundleWriter.setObjectCountCallback(org.eclipse.jgit.transport.ObjectCountCallback)	null	org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(java.lang.String, java.lang.String, org.eclipse.jgit.revwalk.RevCommit, boolean)	true	1097
3395.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.removeFromTable(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry)	3394.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.releaseMemory()	true	2410
5802.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.requiresCommitBody()	noCall	noCall	true	2673
292.json	org.eclipse.jgit.pgm.CommandRef.getImplementationClassName()	164.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef)	true	3176
2815.json	org.eclipse.jgit.internal.ketch.KetchSystem.getExecutor()	2799.json,2721.json,2902.json,2760.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchLeader.scheduleLeader(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
3740.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-2d19070d-8bd5-4ce7-b043-793c67ad4463.getSize()	noCall	noCall	true	2410
4522.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.binarySearchLevelTwo(org.eclipse.jgit.lib.AnyObjectId, int)	4515.json,4517.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.findOffset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(org.eclipse.jgit.lib.AnyObjectId)	true	3176
5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	null,5013.json,null,null,null,5182.json,null	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length12InsertFails(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130InsertFails(),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails(),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails(),org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[]),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk()	true	2893
6092.json	org.eclipse.jgit.storage.file.FileBasedConfig.toString()	noCall	noCall	true	3176
3736.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(java.lang.Iterable<T>, boolean)	noCall	noCall	true	2410
1149.json	org.eclipse.jgit.notes.NonNoteEntry.treeEntrySize()	1174.json,1199.json	org.eclipse.jgit.notes.LeafBucket.treeSize(int),org.eclipse.jgit.notes.FanoutBucket.treeSize()	true	2766
4035.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int)	4034.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	221
6530.json	org.eclipse.jgit.diff.RawText.isMissingNewlineAtEnd()	6826.json,915.json,null,6588.json,null	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.diff.RawTextTest.testLineDelimiter2(),org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextTest.testLineDelimiter()	true	3176
1496.json	org.eclipse.jgit.transport.HttpConfig.compare(java.lang.String, java.lang.String)	1495.json	org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish)	true	273
562.json	org.eclipse.jgit.junit.http.SimpleHttpServer.nameOf(org.eclipse.jgit.lib.Repository)	561.json	org.eclipse.jgit.junit.http.SimpleHttpServer.smart(java.lang.String)	false	2740
5532.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags(org.eclipse.jgit.revwalk.RevCommit, int)	5538.json,5412.json	org.eclipse.jgit.revwalk.RevCommit.carry(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.RevWalk.carryFlagsImpl(org.eclipse.jgit.revwalk.RevCommit)	true	3176
8356.json	org.eclipse.jgit.util.IO.readSome(java.io.File, int)	3977.json	org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	2627
2316.json	org.eclipse.jgit.transport.ServiceMayNotContinueException.setOutput()	null,2604.json,1434.json,null	org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser),org.eclipse.jgit.transport.UploadPack.service(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2627
276.json	org.eclipse.jgit.pgm.Merge.noff(boolean)	noCall	noCall	true	2031
2721.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	noCall	noCall	true	872
2494.json	org.eclipse.jgit.transport.CredentialItem.YesNoType.getValue()	10150.json,2234.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptYesNo(java.lang.String),org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	2768
4611.json	org.eclipse.jgit.internal.storage.file.LockFile.getLockFile(java.io.File)	null,null,4610.json	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.getLockFile(java.lang.String),org.eclipse.jgit.internal.storage.file.LockFile.unlock(java.io.File)	true	2343
9363.json	org.eclipse.jgit.lib.ObjectChecker.setSafeForWindows(boolean)	8600.json,null,null,null,6049.json,null,1739.json,null	org.eclipse.jgit.util.SystemReader.setPlatformChecker(),org.eclipse.jgit.lib.ObjectCheckerTest.testRejectInvalidWindowsCharacters(),org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDotAtEndOnWindows(),org.eclipse.jgit.lib.ObjectCheckerTest.testRejectSpaceAtEndOnWindows(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5(),org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean),org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows()	true	1551
8187.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.buffer(byte[], int, int)	8186.json,8185.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[], int, int),org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[])	true	2342
6362.json	org.eclipse.jgit.blame.Region.slideAndShrink(int)	6378.json	org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
3649.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginWholeObject(long, int, long)	noCall	noCall	true	2410
7659.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.isWorkTree()	7609.json	org.eclipse.jgit.treewalk.TreeWalk.enterSubtree()	true	796
3346.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.update(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	2410
9030.json	org.eclipse.jgit.lib.PersonIdent.appendTimezone(java.lang.StringBuilder, int)	9029.json,9039.json	org.eclipse.jgit.lib.PersonIdent.getTimeZone(int),org.eclipse.jgit.lib.PersonIdent.toExternalString()	true	3176
6963.json	org.eclipse.jgit.api.Status.getUntracked()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,94.json,7351.json,96.json,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.CleanCommandTest.testClean(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2636
9149.json	org.eclipse.jgit.lib.RefRename.rename()	null,null,null,null,null,null,null,430.json,7188.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.api.RenameBranchCommand.call()	true	3176
287.json	org.eclipse.jgit.pgm.Fetch.fetchingSubmodule(java.lang.String)	noCall	noCall	true	364
5694.json	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.create(java.lang.String)	350.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCommitterRevFilter(java.lang.String)	true	3176
7446.json	org.eclipse.jgit.api.RebaseCommand.runInteractively(org.eclipse.jgit.api.RebaseCommand.InteractiveHandler, boolean)	7445.json	org.eclipse.jgit.api.RebaseCommand.runInteractively(org.eclipse.jgit.api.RebaseCommand.InteractiveHandler)	true	2028
5185.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.fwdmatch(byte[], int, byte[], int)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
5935.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.getDirCache()	noCall	noCall	true	3176
4740.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	null,4446.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	3176
4111.json	org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId)	4809.json,4734.json,null,null	org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedObject(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PackParserTest.test1(),org.eclipse.jgit.transport.PackParserTest.test2()	true	3176
3861.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.getRepositoryDescription()	3863.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	true	2410
943.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(org.eclipse.jgit.lib.Repository, boolean)	noCall	noCall	true	2816
5348.json	org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevCommit)	null,null,2842.json,7279.json,5690.json,6442.json,5482.json,null,352.json	org.eclipse.jgit.revwalk.RevWalkTestCase.markUninteresting(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits(),org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalkUtils.find(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
4838.json	org.eclipse.jgit.internal.storage.file.GC.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	4870.json,7182.json,null	org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.GarbageCollectCommand.call(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.configureGc(org.eclipse.jgit.internal.storage.file.GC, boolean)	true	1360
6846.json	org.eclipse.jgit.api.FetchCommand.getProgressMonitor()	noCall	noCall	true	2823
5666.json	org.eclipse.jgit.revwalk.RevTag.getTaggerIdent()	null,null,null,null,null,null,null,null,270.json,6218.json,null,null,null,null,null	org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.timeof(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields()	true	3176
6766.json	org.eclipse.jgit.diff.Edit.getBeginB()	null,6586.json,6605.json,null,null,923.json,null,null,null,null,6378.json,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.DiffFormatter.combineB(java.util.List<org.eclipse.jgit.diff.Edit>, int),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.EditTest.testSwap(),org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.EditTest.testCreate(),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify()	true	3176
8671.json	org.eclipse.jgit.patch.Patch.getFiles()	null,null,6824.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.GetTextTest.testGetText_Convert(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.EditListTest.testFileHeader(),org.eclipse.jgit.patch.PatchTest.testEmpty(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.EditListTest.testHunkHeader(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.diff.DiffFormatterReflowTest.init(java.lang.String),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.EditListTest.testTypes()	true	3176
3404.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.isFound()	3748.json,3752.json,3751.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsReader.checkGarbagePacks(java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	1893
7714.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.chainlength(byte[])	null	org.eclipse.jgit.treewalk.filter.ByteArraySet.toString()	true	1965
7256.json	org.eclipse.jgit.api.DescribeCommand.getBestMatch(java.util.List<org.eclipse.jgit.lib.Ref>)	7260.json	org.eclipse.jgit.api.DescribeCommand.call()	true	354
9167.json	org.eclipse.jgit.lib.ObjectInserter.Filter.Anonymous-cd89abdf-6299-4ec4-b2ba-845fd36efac0.delegate()	noCall	noCall	true	775
3052.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.blocksIn(long, long)	3042.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte, byte[], long, long)	true	297
1372.json	org.eclipse.jgit.transport.WalkFetchConnection.expandOneAlternate(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ProgressMonitor)	1366.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
2752.json	org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	2749.json	org.eclipse.jgit.internal.ketch.ElectionRound.start()	true	872
8044.json	org.eclipse.jgit.util.FS_Win32_Cygwin.runInShell(java.lang.String, java.lang.String[])	noCall	noCall	true	2681
5747.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
4146.json	org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2906
7093.json	org.eclipse.jgit.api.Git.stashCreate()	null,null,null,null,null,null,null,null,null,null,null,null,7400.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2293
2071.json	org.eclipse.jgit.transport.BaseConnection.setPeerUserAgent(java.lang.String)	2220.json,2225.json	org.eclipse.jgit.transport.TransportHttp.getConnection(org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream, java.lang.String),org.eclipse.jgit.transport.TransportHttp.smartPush(java.lang.String, org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream)	true	1137
1879.json	org.eclipse.jgit.transport.TransportGitSsh.commandFor(java.lang.String)	1880.json	org.eclipse.jgit.transport.TransportGitSsh.checkExecFailure(int, java.lang.String, java.lang.String)	true	3059
6711.json	org.eclipse.jgit.diff.SequenceComparator.reduceCommonStartEnd(S, S, org.eclipse.jgit.diff.Edit)	6516.json,6618.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.Edit)	true	2820
4518.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.hasCRC32Support()	noCall	noCall	true	3176
5593.json	org.eclipse.jgit.revwalk.BlockObjQueue.Block.isEmpty()	5589.json	org.eclipse.jgit.revwalk.BlockObjQueue.next()	true	3176
8182.json	org.eclipse.jgit.util.io.TeeInputStream.close()	noCall	noCall	true	2844
7129.json	org.eclipse.jgit.api.PullCommand.setRebase(boolean)	null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead()	true	2031
4126.json	org.eclipse.jgit.internal.storage.file.PackFile.setInvalid()	noCall	noCall	true	2656
6204.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapDistantCommitSpan(int)	6209.json,null	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.newPeparer(int, int, int)	true	963
2808.json	org.eclipse.jgit.internal.ketch.KetchReplica.canDelete(org.eclipse.jgit.lib.Ref)	2807.json	org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	true	872
5110.json	org.eclipse.jgit.internal.storage.pack.PackWriter.sortByName()	5106.json,5150.json,5108.json	org.eclipse.jgit.internal.storage.pack.PackWriter.computeName(),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream)	true	3176
9890.json	org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>)	9882.json	org.eclipse.jgit.lfs.LfsPrePushHook.call()	true	102
8046.json	org.eclipse.jgit.util.FS_Win32_Cygwin.relativize(java.lang.String, java.lang.String)	noCall	noCall	true	1223
5748.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.requiresCommitBody()	noCall	noCall	true	2673
4882.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.close()	noCall	noCall	true	2907
1146.json	org.eclipse.jgit.notes.NoteMap.getRoot()	null,null,1210.json	org.eclipse.jgit.notes.NoteMapMergerTest.countNonNotes(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge(),org.eclipse.jgit.notes.NoteMapMerger.merge(org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap)	true	2709
2991.json	org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream)	2990.json	org.eclipse.jgit.transport.OpenSshConfig.refresh()	true	3176
6776.json	org.eclipse.jgit.diff.Edit.hashCode()	null	org.eclipse.jgit.diff.EditTest.testEquals1()	true	3176
1870.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-df2d4b0d-c620-41b6-8d2e-4292cc37ad6a.getDefaultPort()	noCall	noCall	true	2645
1148.json	org.eclipse.jgit.notes.NonNoteEntry.format(org.eclipse.jgit.lib.TreeFormatter)	1173.json,1198.json	org.eclipse.jgit.notes.LeafBucket.build(),org.eclipse.jgit.notes.FanoutBucket.build(boolean, org.eclipse.jgit.lib.ObjectInserter)	true	2767
3096.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readPositionFromIndex()	3063.json,3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	true	297
462.json	org.eclipse.jgit.junit.MockSystemReader.openSystemConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS)	noCall	noCall	true	2717
5932.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.skip()	noCall	noCall	true	3176
3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	noCall	noCall	true	235
7349.json	org.eclipse.jgit.api.BlameCommand.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<org.eclipse.jgit.lib.ObjectId>)	7348.json	org.eclipse.jgit.api.BlameCommand.reverse(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2567
4992.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.NotInBitmapFilter.requiresCommitBody()	noCall	noCall	true	947
10071.json	org.eclipse.jgit.lfs.server.internal.LfsServerText.get()	10055.json,10037.json,10040.json,10063.json,null,10057.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.SignerV4.sign(java.lang.String, byte[]),org.eclipse.jgit.lfs.server.s3.SignerV4.urlEncode(java.lang.String, boolean),org.eclipse.jgit.lfs.server.TransferHandler.forOperation(java.lang.String, org.eclipse.jgit.lfs.server.LargeFileRepository, java.util.List<org.eclipse.jgit.lfs.server.LfsObject>),org.eclipse.jgit.lfs.server.TransferHandler.Download.addObjectInfo(org.eclipse.jgit.lfs.server.Response.Body, org.eclipse.jgit.lfs.server.LfsObject),org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	false	856
1185.json	org.eclipse.jgit.notes.FanoutBucket.setBucket(int, org.eclipse.jgit.notes.InMemoryNoteBucket)	1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2767
555.json	org.eclipse.jgit.junit.http.RecordingLogger.ignore(java.lang.Throwable)	noCall	noCall	true	2658
3120.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.skipString()	3119.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.skipValue()	true	297
8907.json	org.eclipse.jgit.lib.Config.unsetSection(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String)	8906.json	org.eclipse.jgit.lib.Config.unsetSection(java.lang.String, java.lang.String)	true	3054
6989.json	org.eclipse.jgit.api.CommitCommand.setCommitter(java.lang.String, java.lang.String)	noCall	noCall	true	2953
7488.json	org.eclipse.jgit.api.CheckoutCommand.setCreateBranch(boolean)	null,388.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,909.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.pgm.StatusTest.checkoutTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2756
522.json	org.eclipse.jgit.junit.http.AccessEvent.getParameter(java.lang.String)	noCall	noCall	true	3070
6352.json	org.eclipse.jgit.fnmatch.RestrictedWildCardHead.matches(char)	noCall	noCall	true	3176
8334.json	org.eclipse.jgit.util.sha1.SHA1.update(byte[], int, int)	8333.json,4027.json,4890.json,4007.json,4017.json,null,7837.json,null,3503.json,2410.json	org.eclipse.jgit.util.sha1.SHA1.update(byte[]),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.SHA1OutputStream.write(byte[], int, int),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	468
10322.json	org.eclipse.jgit.http.server.UploadPackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable)	noCall	noCall	false	1131
3797.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectCount(org.eclipse.jgit.internal.storage.dfs.DfsReader)	noCall	noCall	true	2410
2817.json	org.eclipse.jgit.internal.ketch.KetchSystem.getMaxWaitForMonotonicClock()	2754.json,2856.json	org.eclipse.jgit.internal.ketch.ElectionRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp)	true	565
3452.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError)	3451.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.check(org.eclipse.jgit.lib.ProgressMonitor)	true	284
8322.json	org.eclipse.jgit.util.Base64.decode4to3(byte[], int, byte[], int)	8323.json	org.eclipse.jgit.util.Base64.decode(byte[], int, int)	true	3176
9038.json	org.eclipse.jgit.lib.PersonIdent.equals(java.lang.Object)	noCall	noCall	true	3176
3499.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.setCompressionLevel(int)	null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	1397
9988.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromString(byte[], int)	null,null,null,null,null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriter(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToOutputStream(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByteBuffer(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriterWithBuf()	true	856
9860.json	org.eclipse.jgit.lfs.LfsPointer.getOid()	null,9872.json,9889.json,9908.json,9865.json,9890.json,9895.json	org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.toRequest(java.lang.String, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.LfsBlobFilter.smudgeLfsBlob(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.lfs.LfsPointer.compareTo(org.eclipse.jgit.lfs.LfsPointer),org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	628
4075.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndex.open(java.io.File, org.eclipse.jgit.internal.storage.file.PackIndex, org.eclipse.jgit.internal.storage.file.PackReverseIndex)	4148.json	org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex()	true	1922
6814.json	org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()	true	2715
6426.json	org.eclipse.jgit.blame.BlameResult.toString()	noCall	noCall	true	2567
8866.json	org.eclipse.jgit.lib.NullProgressMonitor.endTask()	noCall	noCall	true	3176
5744.json	org.eclipse.jgit.revwalk.filter.SkipRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	2350
4294.json	org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(org.eclipse.jgit.internal.storage.file.PackFile)	4277.json	org.eclipse.jgit.internal.storage.file.WindowCache.purge(org.eclipse.jgit.internal.storage.file.PackFile)	true	3176
8057.json	org.eclipse.jgit.util.FS_POSIX.apply(java.util.Set<java.nio.file.attribute.PosixFilePermission>, int, java.nio.file.attribute.PosixFilePermission, int)	8056.json	org.eclipse.jgit.util.FS_POSIX.setExecute(java.io.File, boolean)	true	1127
7350.json	org.eclipse.jgit.api.BlameCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1()	true	2567
992.json	org.eclipse.jgit.merge.ResolveMerger.nonTree(int)	null,984.json,985.json	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.isIndexDirty(),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry)	true	2841
4659.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.toObjectId()	null,3781.json,null,null,null,null,2938.json,3375.json,null,4805.json	org.eclipse.jgit.internal.storage.file.GC.loosen(org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.file.PackFile, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.junit.TestRepository.prunePacked(org.eclipse.jgit.internal.storage.file.ObjectDirectory),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject(),org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyObjectsOrder(org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testCompareEntriesOffsetsWithFindOffsets(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	3176
6353.json	org.eclipse.jgit.fnmatch.RestrictedWildCardHead.toString()	noCall	noCall	true	1411
6925.json	org.eclipse.jgit.api.PushCommand.setPushAll()	122.json	org.eclipse.jgit.pgm.Push.run()	true	2644
5892.json	org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream)	null,5891.json	org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3(),org.eclipse.jgit.dircache.DirCache.write()	true	3176
3789.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader)	3797.json,3810.json,3792.json,3803.json,3788.json,3791.json,3793.json,3794.json,3796.json,3807.json,3795.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectCount(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.hasObject(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.get(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.resolve(org.eclipse.jgit.internal.storage.dfs.DfsReader, java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findOffset(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	true	2410
8830.json	org.eclipse.jgit.lib.BranchConfig.getRemote()	8829.json,8835.json	org.eclipse.jgit.lib.BranchConfig.isRemoteLocal(),org.eclipse.jgit.lib.BranchConfig.getRemoteOrDefault()	true	2336
4793.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes()	noCall	noCall	true	2901
2562.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowBranchDeletes()	2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	1288
3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,4497.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertRefs(java.lang.Object...),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1()	true	3059
6915.json	org.eclipse.jgit.api.PushCommand.getReceivePack()	noCall	noCall	true	2805
7423.json	org.eclipse.jgit.api.RebaseCommand.continueRebase()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	2739
8061.json	org.eclipse.jgit.util.FS_POSIX.retryFailedLockFileCommit()	noCall	noCall	true	2881
8794.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.addIfAbsent(Q)	null,null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent()	true	2689
1642.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.isInteractive()	noCall	noCall	true	1408
3614.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getRepositoryDescription()	3618.json,3643.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getStreamKey(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.equals(java.lang.Object)	true	2410
9556.json	org.eclipse.jgit.lib.IndexDiff.StageState.getStageMask()	9575.json	org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int)	true	1878
914.json	org.eclipse.jgit.ant.tasks.GitCloneTask.execute()	null,null,null,null,null,null	org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnEmptyUrl(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnNoUrl(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadUrl(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadSourceURL(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCloneAValidGitRepository()	true	2596
5833.json	org.eclipse.jgit.ignore.internal.Strings.lookAhead(java.lang.String, int)	null	org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String)	true	1322
3672.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	noCall	noCall	true	286
1361.json	org.eclipse.jgit.transport.WalkFetchConnection.processBlob(org.eclipse.jgit.revwalk.RevObject)	1360.json	org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId)	true	3176
9880.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.abort()	9898.json,9879.json,10077.json	org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash(),org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onError(java.lang.Throwable)	true	856
7073.json	org.eclipse.jgit.api.Git.reset()	null,null,null,7413.json,null,null,null,null,null,null,342.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.api.EolRepositoryTest.gitResetHard(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.lib.RacyGitTests.testRacyGitDetection(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2669
7761.json	org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.shouldBeRecursive()	noCall	noCall	true	1971
6558.json	org.eclipse.jgit.diff.DiffFormatter.isDetectRenames()	247.json,378.json,269.json	org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run()	true	2838
4969.json	org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	4968.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	880
8916.json	org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int)	null	org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int)	true	751
6238.json	org.eclipse.jgit.revplot.PlotCommit.getRefCount()	noCall	noCall	true	2691
3592.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockSize(int)	3599.json,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.resetCache(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.tooSmallBlockSizeIsConvertedToDefault(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.blockSizeNotPowerOfTwoExpectsException(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.validBlockSize(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.negativeBlockSizeIsConvertedToDefault()	true	2410
9510.json	org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.lib.Ref, java.lang.String)	3950.json,8541.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanOne(java.lang.String),org.eclipse.jgit.util.RefList.find(java.lang.String)	true	3060
5029.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.depth()	5015.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.deltaSizeLimit(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
1682.json	org.eclipse.jgit.transport.AmazonS3.newMD5()	1687.json,1689.json	org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.beginPut(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	true	3176
5727.json	org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.pattern()	5724.json,5697.json,5755.json	org.eclipse.jgit.revwalk.filter.AuthorRevFilter.PatternSearch.clone(),org.eclipse.jgit.revwalk.filter.CommitterRevFilter.PatternSearch.clone(),org.eclipse.jgit.revwalk.filter.MessageRevFilter.PatternSearch.clone()	true	3176
7477.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPaths()	7471.json	org.eclipse.jgit.api.CheckoutCommand.call()	true	2595
7067.json	org.eclipse.jgit.api.Git.push()	null,null,null,null,null,null,null,null,null,null,null,null,122.json,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions()	true	2805
4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	true	1922
7703.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.get(byte[], int, int)	7705.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.contains(byte[], int, int)	true	1965
5794.json	org.eclipse.jgit.revwalk.filter.RevFilter.negate()	null	org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL()	true	3176
556.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.String, long)	noCall	noCall	true	1127
9139.json	org.eclipse.jgit.lib.UserConfig.getEmailInternal(org.eclipse.jgit.lib.Config, java.lang.String)	noCall	noCall	true	3176
6984.json	org.eclipse.jgit.api.CommitCommand.isMergeDuringRebase(org.eclipse.jgit.lib.RepositoryState)	6983.json,6979.json	org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.CommitCommand.call()	true	1426
4583.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.remove(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
9028.json	org.eclipse.jgit.lib.EmptyProgressMonitor.isCancelled()	noCall	noCall	true	2093
8200.json	org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut()	8193.json,8196.json,8195.json,8197.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(int),org.eclipse.jgit.util.io.TimeoutOutputStream.flush(),org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[], int, int),org.eclipse.jgit.util.io.TimeoutOutputStream.close()	true	3176
4142.json	org.eclipse.jgit.internal.storage.file.PackFile.getDeltaHeader(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	4145.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	2900
7598.json	org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, int)	null,385.json,945.json,7764.json,5655.json,984.json,null,985.json,7760.json	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.ResolveMerger.isIndexDirty(),org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
6197.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapContiguousCommitCount()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
3421.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getTotalRequestCount()	noCall	noCall	true	2410
5009.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5019.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	1990
3504.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insertBuffer(long)	3503.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	true	1398
5281.json	org.eclipse.jgit.attributes.AttributesRule.isMatch(java.lang.String, boolean)	null,5319.json	org.eclipse.jgit.attributes.AttributesMatcherTest.match(java.lang.String, java.lang.String),org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(org.eclipse.jgit.attributes.AttributesNode, java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes)	true	1249
2527.json	org.eclipse.jgit.transport.PackedObjectInfo.getCRC()	2397.json,2938.json,4392.json,5238.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeCRCs(),org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight()	true	3176
5838.json	org.eclipse.jgit.ignore.internal.WildMatcher.matches(java.lang.String, boolean, boolean)	noCall	noCall	true	1322
5557.json	org.eclipse.jgit.revwalk.RevCommit.reset()	5400.json,6241.json	org.eclipse.jgit.revwalk.RevWalk.reset(int),org.eclipse.jgit.revplot.PlotCommit.reset()	true	3176
8500.json	org.eclipse.jgit.util.FileUtils.isHidden(java.io.File)	8436.json	org.eclipse.jgit.util.FS.isHidden(java.io.File)	true	988
2617.json	org.eclipse.jgit.transport.BaseReceivePack.needCheckConnectivity()	2602.json	org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()	true	2977
6140.json	org.eclipse.jgit.storage.pack.PackStatistics.isShallow()	noCall	noCall	true	1094
5395.json	org.eclipse.jgit.revwalk.RevWalk.freeFlag(int)	5394.json,5560.json	org.eclipse.jgit.revwalk.RevWalk.disposeFlag(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.MergeBaseGenerator.init(org.eclipse.jgit.revwalk.AbstractRevQueue)	true	3176
1287.json	org.eclipse.jgit.transport.RemoteConfig.getUploadPack()	null,1265.json,null,2022.json	org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testUnknown(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	true	3176
5069.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getInstances()	noCall	noCall	true	2399
5106.json	org.eclipse.jgit.internal.storage.pack.PackWriter.computeName()	null,null,2308.json,null,null,null,null,null,null,null	org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack4(boolean),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.pack(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack1()	true	3176
1747.json	org.eclipse.jgit.transport.TransferConfig.Anonymous-997862f6-b2b0-4605-b521-42476742a8cc.filter(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	noCall	noCall	true	1803
255.json	org.eclipse.jgit.pgm.internal.CLIText.formatLine(java.lang.String)	98.json,96.json,97.json,100.json,99.json	org.eclipse.jgit.pgm.Status.printList(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.Status.printSectionHeader(java.lang.String, java.lang.Object...),org.eclipse.jgit.pgm.Status.printUnmerged(java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>),org.eclipse.jgit.pgm.Status.printList(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>)	true	2100
100.json	org.eclipse.jgit.pgm.Status.printUnmerged(java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>)	96.json	org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	true	1878
3370.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getNewPackStatistics()	noCall	noCall	true	2410
9386.json	org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.lib.ObjectChecker.isMacHFSGit(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1269
6633.json	org.eclipse.jgit.diff.SimilarityIndex.key(int)	null,6635.json	org.eclipse.jgit.diff.SimilarityIndexTest.keyFor(java.lang.String),org.eclipse.jgit.diff.SimilarityIndex.findIndex(int)	true	2899
7971.json	org.eclipse.jgit.util.LfsFactory.getPrePushHook(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	1111.json	org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	true	98
8459.json	org.eclipse.jgit.util.FS.Attributes.isExecutable()	null,null,null	org.eclipse.jgit.treewalk.FileTreeIterator.NoGitlinksStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-0b68a76b-6218-4583-b1f3-1f133dc97b00.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIterator.DefaultFileModeStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes)	true	1579
2602.json	org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	2218
7199.json	org.eclipse.jgit.api.CherryPickCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	7198.json	org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.AnyObjectId)	true	2795
9500.json	org.eclipse.jgit.lib.RebaseTodoLine.getComment()	9756.json,null,null	org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment()	true	2028
5481.json	org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.RevObject)	5640.json,2619.json,null,null,1959.json,5616.json,5139.json,5617.json,4810.json	org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.transport.FetchProcess.askForIsComplete(),org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markRoot(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markUnshallow(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
5164.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.getSize()	noCall	noCall	true	2900
5589.json	org.eclipse.jgit.revwalk.BlockObjQueue.next()	5490.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject()	true	3176
8903.json	org.eclipse.jgit.lib.Config.setEnum(java.lang.String, java.lang.String, java.lang.String, T)	null,null,null,null,null,null,null,null,null,null,null,6890.json,null,null	org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenSubmoduleConfigurationSetToNo(boolean),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.lib.ConfigTest.testSetEnum(),org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMerge(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues(),org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMergeoptions(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenSubmoduleConfigurationSetToYes(boolean),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.CloneCommand.addMergeConfig(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenFetchConfigurationSetToNo(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenFetchConfigurationSetToYes(boolean)	true	2833
8878.json	org.eclipse.jgit.lib.Config.getEnum(java.lang.String, java.lang.String, java.lang.String, T)	6548.json,null,4849.json,2738.json,null,null,null,null,1024.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.lib.ConfigTest.testGetEnum(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.ketch.ReplicaConfig.fromConfig(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge(),org.eclipse.jgit.merge.ResolveMerger.getMergeAlgorithm(org.eclipse.jgit.lib.Config),org.eclipse.jgit.merge.MergeConfig.getFastForwardMode(org.eclipse.jgit.lib.Config, java.lang.String[])	true	2833
5409.json	org.eclipse.jgit.revwalk.RevWalk.isNotStarted()	5407.json,5395.json	org.eclipse.jgit.revwalk.RevWalk.assertNotStarted(),org.eclipse.jgit.revwalk.RevWalk.freeFlag(int)	true	3176
2363.json	org.eclipse.jgit.transport.RefSpec.expandWildcard(java.lang.String, java.lang.String, java.lang.String)	2357.json,2360.json	org.eclipse.jgit.transport.RefSpec.expandFromSourceImp(java.lang.String),org.eclipse.jgit.transport.RefSpec.expandFromDstImp(java.lang.String)	true	1839
3332.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortById(org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList>)	3305.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks()	true	297
7804.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isBinary(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	7802.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	2851
4924.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	880
8536.json	org.eclipse.jgit.util.RefList.Anonymous-90e8457d-6c75-48f7-8792-2a0bac76fa97.remove()	noCall	noCall	true	3060
6837.json	org.eclipse.jgit.api.FetchCommand.applyOptions(java.util.List<org.eclipse.jgit.transport.RefSpec>)	6835.json,6836.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.FetchCommand.call()	true	90
8354.json	org.eclipse.jgit.util.Holder.set(T)	noCall	noCall	true	824
8123.json	org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.nextBlock()	8122.json,8121.json	org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.read(byte[], int, int),org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.skip(long)	true	2844
3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	null,null,null,null,null,null,null,null,null,3606.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.compaction(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.noTables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
13.json	org.eclipse.jgit.awtui.CommitGraphPane.createDefaultDataModel()	noCall	noCall	true	3176
9094.json	org.eclipse.jgit.lib.SymbolicRef.toString()	null	org.eclipse.jgit.lib.SymbolicRefTest.testToString()	true	3059
8208.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.print(long)	144.json	org.eclipse.jgit.pgm.debug.ShowDirCache.run()	true	2093
3935.json	org.eclipse.jgit.internal.storage.file.RefDirectory.create()	noCall	noCall	true	3176
6045.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	7245.json,6026.json,null,7482.json	org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.api.CheckoutCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	925
380.json	org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
10190.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getHostname()	noCall	noCall	true	289
7029.json	org.eclipse.jgit.api.InitCommand.setBare(boolean)	null,null,null,null,null,null,null,null,null,904.json,6884.json,358.json	org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.InitCommandTest.testInitBareRepository(),org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.ant.tasks.GitInitTask.execute(),org.eclipse.jgit.api.CloneCommand.init(),org.eclipse.jgit.pgm.Init.run()	true	2743
7269.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.setFetchCallback(org.eclipse.jgit.api.FetchCommand.Callback)	noCall	noCall	true	263
4053.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.equals(java.lang.Object)	noCall	noCall	true	1922
4878.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insertOneObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	4877.json,4875.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int, boolean)	true	2543
5652.json	org.eclipse.jgit.revwalk.RevFlagSet.iterator()	null,null	org.eclipse.jgit.revwalk.RevFlagSetTest.testEmpty(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne()	true	3176
4475.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getLevelTwo(long, int)	4477.json,4476.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset(long),org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long)	true	1808
4681.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectCount()	noCall	noCall	true	1922
2785.json	org.eclipse.jgit.internal.ketch.KetchReplica.getTxnAccepted()	2901.json	org.eclipse.jgit.internal.ketch.KetchLeader.initialize()	true	872
3316.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.restartInterval()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
5758.json	org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	2360
8062.json	org.eclipse.jgit.util.FS_POSIX.setHidden(java.io.File, boolean)	noCall	noCall	true	1864
2822.json	org.eclipse.jgit.internal.ketch.KetchSystem.getTxnStage()	2855.json,2803.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
1678.json	org.eclipse.jgit.transport.AmazonS3.isSignedHeader(java.lang.String)	1695.json	org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	true	3176
3347.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	2410
9949.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(java.io.OutputStream)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToOutputStream()	true	856
5226.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isDoNotDelta()	5245.json,5120.json,null,5121.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-f5042ec6-97f3-474f-8ab9-e0d394a07672.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsNeedingDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	2893
3833.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.getDescription()	2757.json,1529.json,null,10400.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.computeKey(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, long),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.newPack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource),org.eclipse.jgit.http.server.ServletUtils.identify(org.eclipse.jgit.lib.Repository)	true	2410
1089.json	org.eclipse.jgit.errors.InvalidObjectIdException.msg(byte[], int, int)	noCall	noCall	true	1070
7348.json	org.eclipse.jgit.api.BlameCommand.reverse(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2567
10264.json	org.eclipse.jgit.http.server.glue.WrappedRequest.getPathInfo()	10263.json	org.eclipse.jgit.http.server.glue.WrappedRequest.getPathTranslated()	true	3070
8326.json	org.eclipse.jgit.util.RawCharSequence.length()	8328.json	org.eclipse.jgit.util.RawCharSequence.toString()	true	3176
5394.json	org.eclipse.jgit.revwalk.RevWalk.disposeFlag(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	3176
7935.json	org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, char)	9368.json,8667.json,8702.json,5530.json,8721.json,7952.json,5457.json,8722.json,5695.json,7951.json,8658.json,5722.json,8718.json,8727.json	org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.patch.FileHeader.parseIndexLine(int, int),org.eclipse.jgit.patch.HunkHeader.parseHeader(),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine(int, int),org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int),org.eclipse.jgit.revwalk.FooterLine.getEmailAddress(),org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode(int, int),org.eclipse.jgit.revwalk.filter.CommitterRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine(int, int),org.eclipse.jgit.patch.CombinedHunkHeader.parseHeader()	true	3176
7136.json	org.eclipse.jgit.api.PullCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	noCall	noCall	true	1496
4021.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.getOffset()	4008.json	org.eclipse.jgit.internal.storage.file.PackInserter.beginObject(int, long)	true	221
117.json	org.eclipse.jgit.pgm.Blame.path(int)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2493
7983.json	org.eclipse.jgit.util.FS_Win32.supportsExecute()	noCall	noCall	true	3176
3982.json	org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()	3961.json,3942.json,null,3954.json,null,3960.json,3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.getRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3059
7095.json	org.eclipse.jgit.api.Git.stashDrop()	null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef(),org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits()	true	2272
6308.json	org.eclipse.jgit.gitrepo.RepoCommand.setIncludedFileReader(org.eclipse.jgit.gitrepo.ManifestParser.IncludedFileReader)	noCall	noCall	true	1397
8374.json	org.eclipse.jgit.util.FS.ExecutionResult.getStderr()	null,null,null,null,null,null,null,7807.json	org.eclipse.jgit.util.RunExternalScriptTest.testStdErrExecute(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdInExecute(),org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBinExecute(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked(),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	935
9497.json	org.eclipse.jgit.lib.RebaseTodoLine.getCommit()	7402.json,9756.json,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand(),org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile()	true	2028
7906.json	org.eclipse.jgit.submodule.SubmoduleWalk.next()	null,null,null,null,null,null,null,null,null,9570.json,null,null,6835.json,7187.json,null,null,7297.json,null,7231.json,null,7266.json,null,null,null,null,7886.json,null,null,null,null,null,7885.json,null,null,null,7230.json,6888.json,null,null,null,null,null,7227.json,7228.json,null,6861.json	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.SubmoduleDeinitCommand.submoduleExists(java.lang.String),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.assertSubmoduleIsInitialized(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.SubmoduleStatusCommand.call()	true	2355
2304.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	noCall	noCall	true	3176
2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	3176
5360.json	org.eclipse.jgit.revwalk.RevWalk.getRewriteParents()	5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	true	1497
2398.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor)	2397.json,2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
9875.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(int)	noCall	noCall	true	856
10189.json	org.eclipse.jgit.transport.OpenSshConfig.Host.complete(java.lang.String, java.io.File)	noCall	noCall	true	289
1658.json	org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.supports(org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	2768
5323.json	org.eclipse.jgit.attributes.AttributesHandler.rootOf(T)	noCall	noCall	true	849
4887.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.compress(java.io.OutputStream)	4883.json,4884.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int)	true	2907
4076.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndex.read(java.io.InputStream, org.eclipse.jgit.internal.storage.file.PackIndex, org.eclipse.jgit.internal.storage.file.PackReverseIndex)	3791.json,4075.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.PackBitmapIndex.open(java.io.File, org.eclipse.jgit.internal.storage.file.PackIndex, org.eclipse.jgit.internal.storage.file.PackReverseIndex)	true	1922
2996.json	org.eclipse.jgit.transport.OpenSshConfig.patternMatchesHost(java.lang.String, java.lang.String)	2995.json	org.eclipse.jgit.transport.OpenSshConfig.isHostMatch(java.lang.String, java.lang.String)	true	289
8073.json	org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId)	null,6980.json	org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.api.CommitCommand.insertChangeId(org.eclipse.jgit.lib.ObjectId)	true	2928
2860.json	org.eclipse.jgit.internal.ketch.LogIndex.isBefore(org.eclipse.jgit.internal.ketch.LogIndex)	2793.json	org.eclipse.jgit.internal.ketch.KetchReplica.removeStaged(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	true	872
1245.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.canForceUpdate()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	2210
8.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1145
7718.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.getHash()	noCall	noCall	true	1965
8897.json	org.eclipse.jgit.lib.Config.getRawStringList(java.lang.String, java.lang.String, java.lang.String)	8896.json,8882.json	org.eclipse.jgit.lib.Config.getRawString(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.getStringList(java.lang.String, java.lang.String, java.lang.String)	true	3176
3528.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.toBlockStart(long)	3527.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getOrLoadBlock(long)	true	1397
5040.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(int)	noCall	noCall	true	3176
8164.json	org.eclipse.jgit.util.io.AutoLFOutputStream.flush()	8165.json	org.eclipse.jgit.util.io.AutoLFOutputStream.close()	true	824
4071.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.getCachedBytes()	noCall	noCall	true	2901
7924.json	org.eclipse.jgit.util.RawParseUtils.formatBase10(byte[], int, int)	5911.json,null	org.eclipse.jgit.dircache.DirCacheTree.write(byte[], java.io.OutputStream),org.eclipse.jgit.util.RawParseUtils_FormatTest.testFormatBase10()	true	3176
9104.json	org.eclipse.jgit.lib.RepositoryCache.clearExpired()	null,null	org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired()	true	698
5255.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.add(org.eclipse.jgit.lib.AnyObjectId, int, int)	5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	2874
9573.json	org.eclipse.jgit.lib.IndexDiff.recordFileMode(java.lang.String, org.eclipse.jgit.lib.FileMode)	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	300
2074.json	org.eclipse.jgit.transport.BaseConnection.markStartedOperation()	1306.json,1896.json,1512.json,2306.json	org.eclipse.jgit.transport.BaseFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.BasePackFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.BasePackPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
8399.json	org.eclipse.jgit.util.FS.supportsAtomicCreateNewFile()	noCall	noCall	true	199
9250.json	org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int, int, int)	noCall	noCall	true	2658
9215.json	org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, int)	9213.json,9211.json,9212.json	org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(int[], int),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(byte[], int)	true	3176
4167.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeChars(java.lang.String)	noCall	noCall	true	1922
9950.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.writeRawLong(java.io.OutputStream, long)	9949.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(java.io.OutputStream)	true	856
9888.json	org.eclipse.jgit.lfs.LfsPrePushHook.remote()	9887.json	org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk)	true	102
2321.json	org.eclipse.jgit.transport.ProgressSpinner.endTask(java.lang.String)	2893.json,2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	906
7384.json	org.eclipse.jgit.api.MergeCommand.FastForwardMode.valueOf(org.eclipse.jgit.api.MergeCommand.FastForwardMode.Merge)	7141.json,1024.json	org.eclipse.jgit.api.PullCommand.getFastForwardMode(),org.eclipse.jgit.merge.MergeConfig.getFastForwardMode(org.eclipse.jgit.lib.Config, java.lang.String[])	true	1968
6597.json	org.eclipse.jgit.diff.DiffFormatter.assertHaveReader()	6567.json,6559.json,6568.json,6570.json,6595.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.diff.DiffFormatter.setDetectRenames(boolean),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2838
8502.json	org.eclipse.jgit.util.FileUtils.getLength(java.io.File)	8410.json	org.eclipse.jgit.util.FS.length(java.io.File)	true	988
4034.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	221
6948.json	org.eclipse.jgit.api.errors.AbortedByHookException.getHookName()	noCall	noCall	true	1195
1520.json	org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()	1519.json	org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
7928.json	org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte[], int)	9353.json,9199.json,null,9206.json	org.eclipse.jgit.lib.ObjectId.fromHexString(byte[], int),org.eclipse.jgit.lib.MutableObjectId.fromHexString(byte[], int),org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse32(java.lang.String),org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte[], int, int)	true	3176
3922.json	org.eclipse.jgit.internal.storage.io.BlockSource.from(byte[])	3068.json,null,null,null,3606.json	org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.read(byte[]),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.read(byte[]),org.eclipse.jgit.internal.storage.reftable.ReftableTest.read(byte[]),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
445.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.StringType)	444.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
1524.json	org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.flush()	noCall	noCall	true	705
290.json	org.eclipse.jgit.pgm.CommandRef.getUsage()	164.json,393.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef),org.eclipse.jgit.pgm.Main.execute(java.lang.String[])	true	3176
360.json	org.eclipse.jgit.pgm.AmazonS3Client.run()	noCall	noCall	true	3170
9938.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.getByte(int)	null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testGetByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte()	true	856
3567.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	null,3564.json,3566.json,3567.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	true	2410
5013.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5012.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	2893
3746.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.newObjectToPack(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	2410
7428.json	org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	2756
1941.json	org.eclipse.jgit.transport.Daemon.matchService(java.lang.String)	1648.json	org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket)	true	3176
4437.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getConfig()	noCall	noCall	true	2907
7359.json	org.eclipse.jgit.api.CleanCommand.setIgnore(boolean)	null,null,null	org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore()	true	2031
2782.json	org.eclipse.jgit.internal.ketch.KetchReplica.shutdown()	2915.json	org.eclipse.jgit.internal.ketch.KetchLeader.shutdown()	true	872
5983.json	org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(long)	7019.json,null,7530.json,null,5910.json,null,6045.json,978.json,6027.json,null,6024.json,null,7040.json,6981.json,7243.json,null,null,null,977.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutGitlink(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(java.lang.String, java.io.File, org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCacheBuilder, int),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long)	true	3176
8421.json	org.eclipse.jgit.util.FS.readPipe(java.io.File, java.lang.String[], java.lang.String)	null,8427.json,8042.json,null,7991.json,8052.json	org.eclipse.jgit.util.FSTest.testReadPipeCommandStartFailure(),org.eclipse.jgit.util.FS.discoverGitSystemConfig(),org.eclipse.jgit.util.FS_Win32_Cygwin.resolve(java.io.File, java.lang.String),org.eclipse.jgit.util.FSTest.testReadPipePosixCommandFailure(),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.util.FS_POSIX.discoverGitExe()	true	2718
3382.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	3374.json,3375.json,3372.json,3373.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
5552.json	org.eclipse.jgit.revwalk.RevCommit.getEncoding()	null,null,null,null,null,null,null,null,5553.json	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incorrectUtf8Name(),org.eclipse.jgit.revwalk.RevCommit.guessEncoding()	true	3176
4482.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	noCall	noCall	true	2848
5135.json	org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.lib.AnyObjectId)	5134.json	org.eclipse.jgit.internal.storage.pack.PackWriter.delta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
2139.json	org.eclipse.jgit.transport.PushCertificate.commandsEqual(org.eclipse.jgit.transport.PushCertificate, org.eclipse.jgit.transport.PushCertificate)	2138.json	org.eclipse.jgit.transport.PushCertificate.equals(java.lang.Object)	true	1067
6964.json	org.eclipse.jgit.api.Status.getUntrackedFolders()	7351.json,null,null	org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates()	true	2031
2920.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onObjectData(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	319
2584.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowPushOptions(boolean)	null,null	org.eclipse.jgit.transport.PushOptionsTest.Anonymous-d5dd560d-a618-4544-b058-ed12bf22629f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.PushOptionsTest.setUp()	true	688
1551.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeRef(java.lang.String, org.eclipse.jgit.lib.ObjectId)	2311.json	org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
3492.json	org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.of(org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt)	3618.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getStreamKey(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.setUp()	true	328
2399.json	org.eclipse.jgit.transport.PackParser.checkIfTooLarge(int, long)	2409.json,2398.json	org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor)	true	2391
9286.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.end(org.eclipse.jgit.lib.BatchingProgressMonitor)	9276.json	org.eclipse.jgit.lib.BatchingProgressMonitor.endTask()	true	3176
4977.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.getRefDatabase()	noCall	noCall	true	880
6736.json	org.eclipse.jgit.diff.PatchIdDiffFormatter.writeHunkHeader(int, int, int, int)	noCall	noCall	true	2574
5668.json	org.eclipse.jgit.revwalk.RevTag.getShortMessage()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_NoMessage(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_OnlyLFMessage(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage()	true	3176
1403.json	org.eclipse.jgit.transport.UploadPack.getTimeout()	noCall	noCall	true	3176
2137.json	org.eclipse.jgit.transport.PushCertificate.hashCode()	noCall	noCall	true	1067
2377.json	org.eclipse.jgit.transport.PackParser.isCheckEofAfterPackFooter()	2407.json	org.eclipse.jgit.transport.PackParser.readPackFooter()	true	2567
2080.json	org.eclipse.jgit.transport.PacketLineIn.readStringRaw()	null,null,1648.json,null,null,null,null	org.eclipse.jgit.transport.RefAdvertiserTest.advertiser(),org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw_End(),org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket),org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw1(),org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw2(),org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw3(),org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw4()	true	3176
4498.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
2116.json	org.eclipse.jgit.transport.RemoteRefUpdate.isFastForward()	null,124.json,null	org.eclipse.jgit.transport.PushProcessTest.testOneUpdateStatus(org.eclipse.jgit.transport.RemoteRefUpdate, org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RemoteRefUpdate.Status, java.lang.Boolean),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases()	true	3176
1708.json	org.eclipse.jgit.transport.URIish.cleanLeadingSlashes(java.lang.String, java.lang.String)	noCall	noCall	true	2802
9542.json	org.eclipse.jgit.lib.RefUpdate.requireCanDoUpdate()	9546.json	org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk)	true	3176
9823.json	org.eclipse.jgit.lib.ObjectReader.Filter.getObjectSize(java.lang.Iterable<T>, boolean)	noCall	noCall	true	2851
3855.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.setInput(long, java.util.zip.Inflater)	3757.json,3526.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.inflate(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, byte[], boolean),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.setInput(long, java.util.zip.Inflater)	true	1740
7080.json	org.eclipse.jgit.api.Git.lsRemote()	null,null,null	org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads()	true	2579
8499.json	org.eclipse.jgit.util.FileUtils.exists(java.io.File)	8433.json	org.eclipse.jgit.util.FS.exists(java.io.File)	true	988
3429.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reserveSpace(int, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	3435.json,3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
6688.json	org.eclipse.jgit.diff.RenameDetector.compute()	null,null,null,null,5657.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6472.json,null	org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes(),org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile1(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_UnstagedFile(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair(),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile()	true	2899
6934.json	org.eclipse.jgit.api.PushCommand.setAtomic(boolean)	122.json	org.eclipse.jgit.pgm.Push.run()	true	920
5391.json	org.eclipse.jgit.revwalk.RevWalk.carry(java.util.Collection<org.eclipse.jgit.revwalk.RevFlag>)	noCall	noCall	true	3176
6742.json	org.eclipse.jgit.diff.DiffConfig.getRenameDetectionType()	noCall	noCall	true	2749
4608.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.BitmapObjectImpl.getType()	noCall	noCall	true	1922
6245.json	org.eclipse.jgit.revplot.PlotCommitList.findPassingThrough(org.eclipse.jgit.revplot.PlotCommit<L>, java.util.Collection<L>)	noCall	noCall	true	3176
2026.json	org.eclipse.jgit.transport.Transport.setTimeout(int)	7526.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.transport.Transport)	true	3176
8129.json	org.eclipse.jgit.util.StringUtils.toLowerCase(char)	8133.json,null,9357.json,8130.json,8369.json,8132.json,9407.json	org.eclipse.jgit.util.StringUtils.compareIgnoreCase(java.lang.String, java.lang.String),org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseChar(),org.eclipse.jgit.lib.ObjectChecker.ErrorType.getMessageId(),org.eclipse.jgit.util.StringUtils.toLowerCase(java.lang.String),org.eclipse.jgit.util.RawSubStringPattern.lc(byte),org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(java.lang.String, java.lang.String),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getLong(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long)	true	3176
5616.json	org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markRoot(org.eclipse.jgit.revwalk.RevObject)	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2485
5485.json	org.eclipse.jgit.revwalk.ObjectWalk.getObjectFilter()	null	org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testDefaultFilter()	true	1123
5420.json	org.eclipse.jgit.revwalk.RevCommitList.indexOf(org.eclipse.jgit.revwalk.RevFlag, int)	noCall	noCall	true	3176
1087.json	org.eclipse.jgit.errors.NoMergeBaseException.getReason()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState)	true	1933
4382.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readChar()	noCall	noCall	true	1922
6816.json	org.eclipse.jgit.api.RevertCommand.setOurCommitName(java.lang.String)	null	org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName()	true	1989
2129.json	org.eclipse.jgit.transport.PushCertificate.getPushee()	null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
10025.json	org.eclipse.jgit.lfs.server.s3.SignerV4.appendQuery(java.lang.StringBuilder, java.lang.String, java.lang.String)	10024.json	org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationQuery(java.util.Map<java.lang.String, java.lang.String>)	true	843
7288.json	org.eclipse.jgit.api.DiffCommand.setOutputStream(java.io.OutputStream)	null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2360
3396.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.moveToHead(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry)	3392.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
6259.json	org.eclipse.jgit.gitrepo.RepoProject.CopyFile.copy()	6310.json	org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git)	true	1509
8837.json	org.eclipse.jgit.lib.CoreConfig.getPackIndexVersion()	noCall	noCall	true	3176
4666.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	noCall	noCall	true	1922
2747.json	org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getRefs()	2744.json	org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String)	true	872
3689.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String)	noCall	noCall	true	235
4990.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.NotInBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	947
1499.json	org.eclipse.jgit.transport.HttpConfig.normalize(java.lang.String)	null,null,1495.json,null,null,null,null,null,1498.json	org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDot(),org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationEmptyPaths(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalization(),org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDotDot(),org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDoubleSlash(),org.eclipse.jgit.transport.HttpConfigUriPathTest.testNormalizationWithDotDotFailing(),org.eclipse.jgit.transport.HttpConfigUriPathTest.assertSuccess(java.lang.String, java.lang.String),org.eclipse.jgit.transport.HttpConfig.segmentCompare(java.lang.String, java.lang.String)	true	273
480.json	org.eclipse.jgit.junit.MockSystemReader.resetOsNames()	478.json,477.json,479.json	org.eclipse.jgit.junit.MockSystemReader.setWindows(),org.eclipse.jgit.junit.MockSystemReader.setCurrentPlatform(),org.eclipse.jgit.junit.MockSystemReader.setUnix()	true	988
8713.json	org.eclipse.jgit.patch.CombinedFileHeader.getOldId()	null,null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
7049.json	org.eclipse.jgit.api.Git.wrap(org.eclipse.jgit.lib.Repository)	null,7413.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,436.json,null,null,null,null,null,null,null,null,null,null,null,7400.json,null,null,null,null,null,null,null,null,null,null,null,null,7230.json,null,null,null,null,null,7399.json,null,null,null,null,7265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.StashListCommandTest.noStashRef(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.EolRepositoryTest.test_switchToBranchWithTextAttributes(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.pgm.Gc.run(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.RemoteListCommandTest.testList(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce(),org.eclipse.jgit.api.GitConstructionTest.testWrap(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.EolRepositoryTest.test_switchToBranchWithBinaryAttributes(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleDeinitTest.alreadyClosedSubmodule(),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	2626
7884.json	org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository)	null,null,null,null,null,null,null,null,9570.json,null,null,7187.json,null,null,7297.json,null,7231.json,null,7266.json,null,null,null,null,null,null,null,null,null,null,7230.json,6888.json,null,null,null,null,null,7227.json,7228.json,null,6861.json	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.SubmoduleDeinitCommand.submoduleExists(java.lang.String),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.assertSubmoduleIsInitialized(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.SubmoduleStatusCommand.call()	true	2355
5484.json	org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean)	2619.json,5139.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2493
3618.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getStreamKey(org.eclipse.jgit.internal.storage.pack.PackExt)	3510.json,3787.json,3789.json,3792.json,3791.json,3648.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setPackIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackHeader(long)	true	328
10383.json	org.eclipse.jgit.http.server.GitSmartHttpTools.stripServiceSuffix(java.lang.String)	noCall	noCall	true	2391
7187.json	org.eclipse.jgit.api.SubmoduleSyncCommand.call()	null,null,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	2355
2367.json	org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object)	noCall	noCall	true	3176
8975.json	org.eclipse.jgit.lib.Repository.getFullBranch()	null,null,null,null,null,8976.json,null,7188.json,214.json,null,null,null,6953.json,null,null,null,7131.json,null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.lib.Repository.getBranch(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckout(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict()	true	3176
3460.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getRefDatabase()	null,null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnNonEmptyRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnEmptyRef()	true	2410
9266.json	org.eclipse.jgit.lib.Constants.encodeASCII(java.lang.String)	null,9352.json,null,null,6600.json,null,null,null,null,6595.json,null,null,null,9204.json,null,null,null,null,null,null,null,null,null,null,null,null,6601.json,null,null,null,null,null,null,null,null,null,null,null,null,9198.json,null,null,null,9265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1552.json,null,null,null,null,null,null,null,null,9977.json,null,null,null,null,null,9989.json,null,null,null,null,null,null,null,null,null,6582.json,null,null,null,null,null,null,null,9454.json,6599.json,null,null,null,1706.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9917.json,null,null,null,null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty(),org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree1(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead(),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.FileHeaderTest.data(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero(),org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_NotEqual(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree5(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode1(),org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3(),org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithWhitespace(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting1(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptAuthor(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTagHasNoTaggerHeader(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5(),org.eclipse.jgit.transport.PacketLineInTest.init(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInObjectId(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3(),org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2(),org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithWhitespace(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.diff.RawTextTest.testLineDelimiter(),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Prefix(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree4(),org.eclipse.jgit.lib.MutableObjectId.fromString(java.lang.String),org.eclipse.jgit.diff.RawTextTest.testWriteLine1(),org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithWhitespace(),org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.lib.Constants.encodeASCII(long),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor3(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting2(),org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor7(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomething(),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_badEncoding(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.compressStandardFormat(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsDotGitDotDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime(),org.eclipse.jgit.diff.RawTextTest.testEquals(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingSpaceSomething(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace(),org.eclipse.jgit.diff.RawTextTest.testBinary(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot(),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_TooSmall(),org.eclipse.jgit.diff.RawTextTest.testLineDelimiter2(),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(java.util.Collection<java.lang.String>),org.eclipse.jgit.lib.ObjectCheckerTest.assertCorrupt(java.lang.String, int, java.lang.StringBuilder),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor(),org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_FailOnNonASCII(),org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.lib.ObjectCheckerTest.testNullSha1InTreeEntry(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInName(),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_ISO8859_1_encoding(),org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree3(),org.eclipse.jgit.diff.RawTextTest.testWriteLine2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_SimpleASCII(),org.eclipse.jgit.lfs.lib.LongObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_Tree(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptCommitter(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor4(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_File(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2(),org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse16(java.lang.String),org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobNotCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDotDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4(),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.diff.DiffFormatter.formatGitDiffFirstHeaderLine(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry.ChangeType, java.lang.String, java.lang.String),org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest.testEqualsWithWhitespace(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag(),org.eclipse.jgit.lib.ObjectCheckerTest.checkOneName(java.lang.String),org.eclipse.jgit.transport.URIish.escape(java.lang.String, boolean, boolean),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree2(),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_Accept_Latin_One_AsISO8859_1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerNotCorrupt(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent5(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsGitTilde11(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2(),org.eclipse.jgit.lib.ObjectCheckerTest.testRejectNulInPathSegment(),org.eclipse.jgit.diff.RawTextTest.testWriteLine3(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor1(),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Equal(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor5(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting4(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3(),org.eclipse.jgit.util.RawParseUtils_HexParseTest.parse32(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoAuthor()	true	3176
2583.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowPushOptions()	2633.json	org.eclipse.jgit.transport.ReceivePack.getPushOptions()	true	688
8751.json	org.eclipse.jgit.lib.Ref.Storage.isPacked()	9779.json,3967.json,2310.json	org.eclipse.jgit.lib.RefWriter.writePackedRefs(),org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
268.json	org.eclipse.jgit.pgm.Show.init(org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	751
5351.json	org.eclipse.jgit.revwalk.RevWalk.getRevSort()	noCall	noCall	true	3176
2335.json	org.eclipse.jgit.transport.BasePackConnection.isCapableOf(java.lang.String)	2336.json	org.eclipse.jgit.transport.BasePackConnection.wantCapability(java.lang.StringBuilder, java.lang.String)	true	3176
398.json	org.eclipse.jgit.pgm.Main.install(java.lang.String)	397.json	org.eclipse.jgit.pgm.Main.installConsole()	true	1145
4435.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getDirectory()	noCall	noCall	true	2907
9917.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_SameLength(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_15(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_16(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Full(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_33(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_DiffLength(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEquals_Short(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromStringWrongLength()	true	856
7063.json	org.eclipse.jgit.api.Git.branchRename()	null,null,null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues()	true	2800
2167.json	org.eclipse.jgit.transport.PushCertificateParser.parseHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, java.lang.String)	2170.json	org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean)	true	1202
72.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.isStreaming()	noCall	noCall	true	1572
3810.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	3745.json,3744.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSizeImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	true	2410
8084.json	org.eclipse.jgit.util.NB.decodeInt64(byte[], int)	9925.json,9973.json,9940.json,3044.json,4372.json,9985.json,3045.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(byte[], int),org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte[], int),org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(byte[], int),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter(),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLong(),org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte[], int),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long, int)	true	1922
5032.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.empty()	5010.json,5012.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clearWindowOnTypeSwitch(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	2893
3972.json	org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader)	3971.json	org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()	true	3059
6419.json	org.eclipse.jgit.blame.BlameResult.getSourceCommitter(int)	noCall	noCall	true	2567
7634.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId()	1158.json,null,null,4973.json,6051.json,7833.json,null,6043.json,7551.json,null,6033.json,7018.json,1154.json,6032.json,null,null,null,977.json,7530.json,6034.json,null,null,7596.json,null,null,null,1156.json,null,null,6024.json,6981.json,null,5931.json,null,null,9842.json,4974.json,null	org.eclipse.jgit.notes.NoteParser.storeNonNote(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.internal.storage.reftree.Scanner.peel(org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.dircache.DirCacheIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.dircache.DirCacheCheckout.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.notes.NoteParser.parseLeafTree(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2(),org.eclipse.jgit.treewalk.TreeWalk.getObjectId(int),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.notes.NoteParser.parseFanoutTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName(),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.dircache.DirCacheBuildIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(org.eclipse.jgit.lib.ObjectReader, int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo()	true	3176
8733.json	org.eclipse.jgit.patch.BinaryHunk.getStartOffset()	noCall	noCall	true	3176
6675.json	org.eclipse.jgit.diff.HashedSequencePair.wrap(S)	6673.json,6674.json	org.eclipse.jgit.diff.HashedSequencePair.getA(),org.eclipse.jgit.diff.HashedSequencePair.getB()	true	2820
7032.json	org.eclipse.jgit.api.StashCreateCommand.setWorkingDirectoryMessage(java.lang.String)	7400.json	org.eclipse.jgit.api.RebaseCommand.autoStash()	true	2293
2931.json	org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	319
8619.json	org.eclipse.jgit.util.SystemReader.isWindows()	null,8600.json,9044.json,8485.json,6049.json,null,null,null,null,8486.json	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.util.SystemReader.setPlatformChecker(),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.util.FileUtils.createSymLink(java.io.File, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.util.FS.FSFactory.detect(java.lang.Boolean),org.eclipse.jgit.util.FileUtils.pathToString(java.io.File),org.eclipse.jgit.util.FileUtilsTest.testRelativize_mixedCase(),org.eclipse.jgit.ignore.IgnoreNodeTest.testTrailingSpaces(),org.eclipse.jgit.util.FileUtils.readSymLink(java.io.File)	true	3176
10027.json	org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationHeader(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, byte[])	10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
8433.json	org.eclipse.jgit.util.FS.exists(java.io.File)	null,null,null,6026.json,4723.json,7422.json,null,null,8476.json,7848.json,null	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.exists(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.internal.storage.file.FileSnapshot.Anonymous-14791367-23b2-4c86-bc30-7ea56a1df452.isModified(java.io.File),org.eclipse.jgit.util.FileUtils.delete(java.io.File, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.loadRulesFromFile(org.eclipse.jgit.ignore.IgnoreNode, java.io.File),org.eclipse.jgit.junit.RepositoryTestCase.fsTick(java.io.File)	true	1864
458.json	org.eclipse.jgit.junit.MockSystemReader.setProperty(java.lang.String, java.lang.String)	null,null,null,null,null,456.json,null,478.json,null,477.json,479.json	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.ceilTestDirectories(java.util.List<java.io.File>),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.transport.OpenSshConfigTest.setUp(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.junit.MockSystemReader.init(java.lang.String),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig(),org.eclipse.jgit.junit.MockSystemReader.setWindows(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.junit.MockSystemReader.setCurrentPlatform(),org.eclipse.jgit.junit.MockSystemReader.setUnix()	true	3141
1091.json	org.eclipse.jgit.errors.CompoundException.format(java.util.Collection<java.lang.Throwable>)	noCall	noCall	true	3176
315.json	org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(java.lang.String...)	408.json,393.json,null	org.eclipse.jgit.pgm.TextBuiltin.parseArguments(java.lang.String[]),org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...)	true	3176
1716.json	org.eclipse.jgit.transport.URIish.setPath(java.lang.String)	null,2052.json,2512.json,9869.json	org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getURI(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getURI(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish)	true	3176
2946.json	org.eclipse.jgit.internal.fsck.FsckError.getMissingObjects()	null,null,3452.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testHealthyRepo(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError)	true	319
8656.json	org.eclipse.jgit.patch.FileHeader.getReverseBinaryHunk()	null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
4189.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries()	noCall	noCall	true	3176
3344.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.tryLock(boolean)	noCall	noCall	true	2410
2329.json	org.eclipse.jgit.transport.SideBandOutputStream.write(int)	null,null,null	org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks1(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks3(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Small()	true	3176
9543.json	org.eclipse.jgit.lib.RefUpdate.forceUpdate()	7266.json,null,null,null,null,7438.json,7008.json,null,null,null,null,7471.json,7421.json,null,null,null,null,null,6979.json,6887.json,7331.json,7436.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepository.update(java.lang.String, T),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.junit.TestRepository.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepository.reset(java.lang.String),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	3176
9102.json	org.eclipse.jgit.lib.RepositoryCache.isCached(org.eclipse.jgit.lib.Repository)	null,null,null,null,8972.json	org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired(),org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure(),org.eclipse.jgit.lib.Repository.close()	true	698
3237.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setIncludeDeletes(boolean)	3774.json,3384.json,null,null,3606.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
6024.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	6023.json	org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree()	true	2844
3164.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	3334.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
3532.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	1397
4171.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getObject(int)	noCall	noCall	true	1922
5178.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(byte[])	5177.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()	true	2893
9896.json	org.eclipse.jgit.lfs.SmudgeFilter.run()	noCall	noCall	true	628
6646.json	org.eclipse.jgit.diff.SimilarityRenameDetector.getMatches()	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
3673.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.notInCache(long)	3672.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	286
9141.json	org.eclipse.jgit.lib.UserConfig.getDefaultEmail()	noCall	noCall	true	2643
1752.json	org.eclipse.jgit.transport.TransferConfig.FsckKeyNameHolder.keyNameFor(java.lang.String)	noCall	noCall	true	892
5092.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectCount()	5113.json,2308.json,3374.json,null,3772.json,null,5150.json,null,null,3375.json,null,3372.json,3373.json,null,null,null,null	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack4(boolean),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack1(),org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.List<org.eclipse.jgit.revwalk.RevObject>)	true	3176
6873.json	org.eclipse.jgit.api.RemoteSetUrlCommand.setPush(boolean)	null,83.json	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.pgm.Remote.run()	true	911
7540.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	6010.json,4968.json	org.eclipse.jgit.dircache.DirCacheBuilder.enterTree(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	3176
2224.json	org.eclipse.jgit.transport.TransportHttp.openPush()	noCall	noCall	true	3176
3378.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.isTag(org.eclipse.jgit.lib.Ref)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	522
5079.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(boolean)	null,1536.json,1518.json,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3176
2519.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, byte[])	noCall	noCall	true	3176
3290.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setMinUpdateIndex(long)	null,null,null,null,3259.json,null,null,null,null,135.json,null,null,null,3386.json,null,null,3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>, long),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
5695.json	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	null,null	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.PatternSearch.text(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.filter.CommitterRevFilter.SubStringSearch.text(org.eclipse.jgit.revwalk.RevCommit)	true	3176
7745.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.PathFilter>)	7270.json	org.eclipse.jgit.api.LogCommand.call()	false	3176
6452.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate)	6445.json	org.eclipse.jgit.blame.BlameGenerator.next()	true	2567
8715.json	org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(java.nio.charset.Charset, java.nio.charset.Charset)	noCall	noCall	true	3176
7975.json	org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String)	7976.json	org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit)	true	98
269.json	org.eclipse.jgit.pgm.Show.run()	noCall	noCall	true	2154
7374.json	org.eclipse.jgit.api.ArchiveCommand.setFilename(java.lang.String)	362.json	org.eclipse.jgit.pgm.Archive.run()	true	1830
3509.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.endObject(org.eclipse.jgit.lib.ObjectId, long)	3502.json,3503.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	true	2410
2412.json	org.eclipse.jgit.transport.PackParser.checkObjectCollision()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	367
3666.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.checkCRC(int)	noCall	noCall	true	2410
7091.json	org.eclipse.jgit.api.Git.submoduleUpdate()	noCall	noCall	true	2350
6473.json	org.eclipse.jgit.blame.BlameGenerator.isRename(org.eclipse.jgit.diff.DiffEntry)	6472.json	org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	true	2567
190.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.assertNotRunning()	186.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.addContext(java.lang.String)	true	856
2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	noCall	noCall	true	872
3698.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.scanAllRefs()	noCall	noCall	true	235
8810.json	org.eclipse.jgit.lib.ConfigSnapshot.get(java.lang.String, java.lang.String, java.lang.String)	8897.json	org.eclipse.jgit.lib.Config.getRawStringList(java.lang.String, java.lang.String, java.lang.String)	true	2266
223.json	org.eclipse.jgit.pgm.Version.run()	noCall	noCall	true	3176
6.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.isInteractive()	noCall	noCall	true	1145
8881.json	org.eclipse.jgit.lib.Config.getString(java.lang.String, java.lang.String, java.lang.String)	null,null,null,1026.json,null,null,6890.json,4454.json,null,null,4813.json,null,8831.json,9867.json,null,null,null,7915.json,null,null,7892.json,null,null,7914.json,9139.json,7897.json,null,7916.json,null,null,null,null,9078.json,null,null,null,null,9137.json,null,null,null,null,7131.json,7331.json,3599.json,195.json,2739.json,null,406.json,null,9408.json,null,null,null,7187.json,4812.json,7913.json,null,null,null,null,2829.json,9407.json,null,null,2828.json,null,9405.json,null,8830.json,7619.json,null,null,null,null,7912.json,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.merge.MergeConfig.getMergeOptions(java.lang.String, org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.api.CloneCommand.addMergeConfig(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM(),org.eclipse.jgit.lib.BranchConfig.getMerge(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.lib.ConfigTest.testExplicitlySetEmptyString(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive(),org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUrl(),org.eclipse.jgit.lib.UserConfig.getEmailInternal(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.loadPathNames(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2(),org.eclipse.jgit.lib.ConfigTest.testParsedEmptyString(),org.eclipse.jgit.lib.ConfigTest.testEmptyValueAtEof(),org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathNotFound(),org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.lib.ConfigTest.test004_PutGetSimple(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.lib.UserConfig.getNameInternal(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeWithTilde(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.pgm.debug.LfsStore.readAWSKeys(),org.eclipse.jgit.internal.ketch.ReplicaConfig.getMillis(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, long),org.eclipse.jgit.lib.ConfigTest.parseEscapedValue(java.lang.String),org.eclipse.jgit.pgm.TextBuiltin.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey(),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getTimeUnit(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long, java.util.concurrent.TimeUnit),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.internal.storage.file.GC.getPruneExpireStr(),org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeRelativeDotDotNotFound(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeRelativeDot(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeRelativeDotDot(),org.eclipse.jgit.internal.ketch.KetchSystem.getLocalName(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getLong(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long),org.eclipse.jgit.util.FS_POSIX.getAtomicFileCreationSupportOption(org.eclipse.jgit.storage.file.FileBasedConfig),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.internal.ketch.KetchSystem.hasParticipation(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig(),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(org.eclipse.jgit.lib.Config, T[], java.lang.String, java.lang.String, java.lang.String, T),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.lib.BranchConfig.getRemote(),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommandDefinition(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeAbsolute(),org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathWithTilde(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1(),org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathRelative(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	3176
9445.json	org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents()	true	3176
3626.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setMaxUpdateIndex(long)	3638.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats)	true	286
8050.json	org.eclipse.jgit.util.FS_POSIX.umask()	8056.json	org.eclipse.jgit.util.FS_POSIX.setExecute(java.io.File, boolean)	true	1127
6448.json	org.eclipse.jgit.blame.BlameGenerator.reverseResult(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	6455.json	org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
1411.json	org.eclipse.jgit.transport.UploadPack.getRefFilter()	noCall	noCall	true	3041
4702.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginOfsDelta(long, long, long)	noCall	noCall	true	2692
3783.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter)	3772.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
7031.json	org.eclipse.jgit.api.StashCreateCommand.setIndexMessage(java.lang.String)	null	org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash()	true	2293
1371.json	org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[])	1370.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase)	true	3176
439.json	org.eclipse.jgit.console.ConsoleAuthenticator.promptPasswordAuthentication()	noCall	noCall	true	3141
10102.json	org.eclipse.jgit.lfs.server.LfsProtocolServlet.LfsRequest.isUpload()	noCall	noCall	true	512
6236.json	org.eclipse.jgit.revplot.PlotCommit.getChild(int)	noCall	noCall	true	3176
5010.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clearWindowOnTypeSwitch()	5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	486
9064.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader)	9063.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment()	true	2907
4065.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater)	4059.json,4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2901
6969.json	org.eclipse.jgit.api.RemoveNoteCommand.call()	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
5544.json	org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()	1536.json,null,5695.json,8985.json,5722.json,null,5753.json	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits(),org.eclipse.jgit.revwalk.filter.CommitterRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.Repository.parseCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkResetTest.Anonymous-4e39b596-3542-43e7-9e62-d865da3ef7d0.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.filter.MessageRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	true	3176
4640.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObjectByPosition(int)	4049.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getObject(int)	true	1922
8268.json	org.eclipse.jgit.util.io.TimeoutInputStream.readTimedOut()	8262.json,8265.json,8264.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(),org.eclipse.jgit.util.io.TimeoutInputStream.skip(long),org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[], int, int)	true	3176
4565.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()	noCall	noCall	true	3059
2594.json	org.eclipse.jgit.transport.BaseReceivePack.getMessageOutputStream()	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	2292
6975.json	org.eclipse.jgit.api.CherryPickResult.getStatus()	7405.json,null,null,null,7404.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2636
6797.json	org.eclipse.jgit.events.ListenerList.addIndexChangedListener(org.eclipse.jgit.events.IndexChangedListener)	null	org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent()	true	2907
7777.json	org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[])	null,null,null,null,null,null,null	org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreeMixSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopOrMultiPathDual(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreePath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoSubPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPathNegate()	true	3176
425.json	org.eclipse.jgit.pgm.ReceivePack.run()	noCall	noCall	true	3176
2886.json	org.eclipse.jgit.internal.ketch.Proposal.await()	noCall	noCall	true	872
4042.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.openStream()	noCall	noCall	true	221
3427.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.tableSize(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig)	noCall	noCall	true	2410
6528.json	org.eclipse.jgit.diff.RawText.size()	6425.json,null,null,203.json,178.json,null,null,6588.json,6442.json,6829.json,null,null,null,null,null,6542.json,null,null,382.json,null,null,null,115.json,null,null,null,null,116.json,null,null,null,null,null,null,6586.json,null,null,112.json,null,null,null,null,null,null,6436.json,null,null,6440.json,null,6826.json,null,null	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.api.ApplyCommandTest.testAddA2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM3(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd(),org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.diff.RawTextTest.testEmpty(),org.eclipse.jgit.diff.RawTextIgnoreLeadingWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.diff.RawTextIgnoreTrailingWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.diff.RawText.getLineDelimiter(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.api.ApplyCommandTest.testAddM1(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.ApplyCommandTest.testModifyX(),org.eclipse.jgit.pgm.Blame.parseLineRangeOption(),org.eclipse.jgit.api.ApplyCommandTest.testModifyZ(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.api.ApplyCommandTest.testAddA1(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM2(),org.eclipse.jgit.pgm.Blame.findLine(int, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.pgm.debug.DiffAlgorithms.testOne(org.eclipse.jgit.pgm.debug.DiffAlgorithms.Test, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.api.ApplyCommandTest.testModifyE(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.diff.RawTextIgnoreWhitespaceChangeTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.diff.RawTextIgnoreAllWhitespaceTest.testEqualsWithoutWhitespace(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII2(),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.api.ApplyCommandTest.testModifyW(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.diff.RawTextTest.testEquals(),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.diff.RawTextTest.testBinary(),org.eclipse.jgit.api.ApplyCommandTest.testModifyY()	true	3176
8734.json	org.eclipse.jgit.patch.BinaryHunk.getEndOffset()	noCall	noCall	true	3176
5094.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectSet()	3382.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	1968
8350.json	org.eclipse.jgit.util.sha1.SHA1.State.init()	8349.json	org.eclipse.jgit.util.sha1.SHA1.reset()	true	468
9538.json	org.eclipse.jgit.lib.RefUpdate.setOldObjectId(org.eclipse.jgit.lib.ObjectId)	3344.json,4489.json,4979.json,9550.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean),org.eclipse.jgit.lib.RefUpdate.link(java.lang.String)	true	3059
3084.json	org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(org.eclipse.jgit.lib.Ref)	null,3688.json,null,3689.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.failDeepChainOfSymbolicRef(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.reftable.ReftableTest.resolveSymbolicRef(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String)	true	297
5511.json	org.eclipse.jgit.revwalk.DateRevQueue.clear()	5575.json	org.eclipse.jgit.revwalk.PendingGenerator.next()	true	3176
6599.json	org.eclipse.jgit.diff.DiffFormatter.formatGitDiffFirstHeaderLine(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry.ChangeType, java.lang.String, java.lang.String)	6600.json	org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry)	true	1956
5282.json	org.eclipse.jgit.attributes.AttributesRule.toString()	noCall	noCall	true	925
8214.json	org.eclipse.jgit.util.io.MessageWriter.close()	noCall	noCall	true	3011
1173.json	org.eclipse.jgit.notes.LeafBucket.build()	1171.json,1172.json	org.eclipse.jgit.notes.LeafBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.notes.LeafBucket.getTreeId()	true	2766
3295.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(org.eclipse.jgit.lib.Ref, long)	3244.json,3294.json,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeRefs(org.eclipse.jgit.internal.storage.reftable.MergedReftable),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
2442.json	org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source, long)	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	2886
6862.json	org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk)	6861.json	org.eclipse.jgit.api.SubmoduleStatusCommand.call()	true	2355
6190.json	org.eclipse.jgit.storage.pack.PackConfig.setThreads(int)	null,6209.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
2746.json	org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getWantObjects()	2730.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(org.eclipse.jgit.transport.Transport, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
2324.json	org.eclipse.jgit.transport.InternalFetchConnection.close()	noCall	noCall	true	1198
2814.json	org.eclipse.jgit.internal.ketch.KetchSystem.defaultExecutor()	noCall	noCall	true	872
3360.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setGarbageTtl(long, java.util.concurrent.TimeUnit)	null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.gcNoTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.gcWithTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithShortTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageCoalescenceWithLongTtl(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testSinglePackForAllRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageNoCoalescence()	true	713
461.json	org.eclipse.jgit.junit.MockSystemReader.openUserConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS)	null,null	org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped(),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3141
7520.json	org.eclipse.jgit.api.LsRemoteCommand.callAsMap()	6292.json	org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.sha1(java.lang.String, java.lang.String)	true	1478
1812.json	org.eclipse.jgit.transport.TransportLocal.openFetch()	noCall	noCall	true	3176
6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	6021.json	org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees()	true	2844
7923.json	org.eclipse.jgit.util.RawParseUtils.match(byte[], int, byte[])	8703.json,8663.json,8681.json,8686.json,7947.json,9396.json,null,8682.json,7945.json,null,8677.json,null,8737.json,7944.json,8659.json,7946.json,4139.json,6062.json,8717.json,4975.json,null	org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int),org.eclipse.jgit.patch.Patch.skipFile(byte[], int),org.eclipse.jgit.patch.Patch.matchAny(byte[], int, byte[][]),org.eclipse.jgit.util.RawParseUtils.encoding(byte[], int),org.eclipse.jgit.lib.ObjectChecker.match(byte[], byte[]),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Prefix(),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.util.RawParseUtils.committer(byte[], int),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_TooSmall(),org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_Equal(),org.eclipse.jgit.patch.BinaryHunk.parseHunk(int, int),org.eclipse.jgit.util.RawParseUtils.author(byte[], int),org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.util.RawParseUtils.tagger(byte[], int),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int),org.eclipse.jgit.internal.storage.reftree.Scanner.refName(org.eclipse.jgit.treewalk.CanonicalTreeParser, boolean),org.eclipse.jgit.util.RawParseUtils_MatchTest.testMatch_NotEqual()	true	3176
2055.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getPackNames()	noCall	noCall	true	3176
1533.json	org.eclipse.jgit.transport.BundleWriter.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	null,1534.json,null	org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(java.lang.String, java.lang.String, org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.transport.BundleWriter.include(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader()	true	3176
11.json	org.eclipse.jgit.awtui.CommitGraphPane.getCommitList()	128.json	org.eclipse.jgit.pgm.Glog.walkLoop()	true	3176
2705.json	org.eclipse.jgit.transport.PushCertificateIdent.getWhen()	null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1088
8019.json	org.eclipse.jgit.util.RefMap.Anonymous-ea750efe-e4d8-4c3d-b3c9-aeb8ee37238e.iterator()	noCall	noCall	true	3060
3764.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.close()	3361.json,3849.json,null,3695.json,3603.json,null,3539.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.close(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.clearCache(),org.eclipse.jgit.internal.storage.dfs.PackInputStream.close(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.Anonymous-42c86be6-2bd7-49a1-8ab6-133482c4478d.close(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream()	true	2410
1405.json	org.eclipse.jgit.transport.UploadPack.isBiDirectionalPipe()	null,null	org.eclipse.jgit.transport.UploadPack.AdvertisedRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.TipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3070
5956.json	org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.toString()	noCall	noCall	true	893
2550.json	org.eclipse.jgit.transport.BaseReceivePack.setCheckReferencedObjectsAreReachable(boolean)	null,null,null,null,null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository)	true	2977
2163.json	org.eclipse.jgit.transport.PushCertificateParser.build()	null,null,null,null,null,null,null,2162.json,2606.json	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.PushCertificateParserTest.disabledParserStillRequiresCorrectSyntax(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.PushCertificateParser.parse(java.io.Reader),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1095
8282.json	org.eclipse.jgit.util.HttpSupport.response(org.eclipse.jgit.transport.http.HttpConnection)	2270.json,2259.json,2229.json,2269.json,2222.json	org.eclipse.jgit.transport.TransportHttp.Service.openResponse(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	true	3176
4954.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	null,null,168.json,null,null,null,2900.json,null,null,4931.json,null,null,2851.json,null,null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.symref(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateParentRef(),org.eclipse.jgit.pgm.debug.RebuildRefTree.rebuild(org.eclipse.jgit.lib.RefDatabase),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateSubdirectory(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId(),org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyThenReadMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Anonymous-a366b8f8-3c7d-454d-bb03-91b0f06b8f82.apply(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Anonymous-1d51f7f3-e37b-4993-8c83-d81584a7f50f.apply(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testUpdateMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldIdButAlreadyCurrentIsNoOp(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testTagIsPeeled(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.update(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	884
8325.json	org.eclipse.jgit.util.RawCharSequence.charAt(int)	8328.json	org.eclipse.jgit.util.RawCharSequence.toString()	true	3176
10141.json	org.eclipse.jgit.archive.TxzFormat.hashCode()	noCall	noCall	true	1521
2057.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.deleteFile(java.lang.String)	noCall	noCall	true	3176
5515.json	org.eclipse.jgit.revwalk.DateRevQueue.toString()	noCall	noCall	true	3176
913.json	org.eclipse.jgit.ant.tasks.GitCloneTask.setBranch(java.lang.String)	noCall	noCall	true	2596
1353.json	org.eclipse.jgit.transport.CredentialsProvider.get(org.eclipse.jgit.transport.URIish, java.util.List<org.eclipse.jgit.transport.CredentialItem>)	10152.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptKeyboardInteractive(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean[])	true	2768
5307.json	org.eclipse.jgit.attributes.Attribute.getValue()	9906.json,null,7618.json,null,5299.json,5320.json	org.eclipse.jgit.lfs.BuiltinLFS.isEnabled(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.attributes.Attribute),org.eclipse.jgit.attributes.AttributeTest.testBasic(),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.attributes.Attributes.getValue(java.lang.String),org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	1249
3329.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.objIndexSize()	135.json,null,null	org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefNoIndex()	true	297
6935.json	org.eclipse.jgit.api.PushCommand.isForce()	noCall	noCall	true	2805
4020.json	org.eclipse.jgit.internal.storage.file.PackInserter.inflater()	4042.json,4029.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.openStream(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.inflate(long, int)	true	221
1081.json	org.eclipse.jgit.errors.UnmergedPathException.getDirCacheEntry()	noCall	noCall	true	3176
247.json	org.eclipse.jgit.pgm.Diff.run()	noCall	noCall	true	3169
154.json	org.eclipse.jgit.pgm.debug.ReadReftable.write(org.eclipse.jgit.lib.Ref)	153.json	org.eclipse.jgit.pgm.debug.ReadReftable.run()	true	297
6087.json	org.eclipse.jgit.storage.file.FileBasedConfig.getFile()	null,null,4849.json,6093.json,6092.json,2237.json,null,6089.json,null	org.eclipse.jgit.internal.storage.file.FileRepository.loadUserConfig(),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.loadUserConfig(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.storage.file.FileBasedConfig.isOutdated(),org.eclipse.jgit.storage.file.FileBasedConfig.toString(),org.eclipse.jgit.transport.TransportHttp.updateSslVerifyUser(boolean),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig()	true	3176
3225.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry.updateIndex()	3223.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry.compare(org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry, org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry)	true	293
5826.json	org.eclipse.jgit.ignore.internal.Strings.split(java.lang.String, char)	null	org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSplit()	true	1322
7822.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()	6024.json,7530.json,null,6032.json,7764.json,null,7756.json,null,9570.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	2881
3025.json	org.eclipse.jgit.internal.revwalk.AddToBitmapFilter.clone()	noCall	noCall	true	1922
6214.json	org.eclipse.jgit.revplot.PlotWalk.createCommit(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
1963.json	org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
5497.json	org.eclipse.jgit.revwalk.ObjectWalk.getPathBuffer()	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2685
8959.json	org.eclipse.jgit.lib.Repository.updateRef(java.lang.String, boolean)	7266.json,null,null,null,null,null,7438.json,null,null,7471.json,1853.json,null,3835.json,null,8958.json,6887.json,7436.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.pgm.BranchTest.testListDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.junit.TestRepository.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.junit.TestRepository.reset(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.lib.Repository.updateRef(java.lang.String),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	3085
6021.json	org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees()	6026.json,null	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.lib.DirCacheCheckoutTest.prescanTwoTrees(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)	true	2844
2416.json	org.eclipse.jgit.transport.PackParser.openDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	2397.json,2413.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo)	true	2692
3887.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getPacks()	null,3452.json,null,null,null,3768.json,null,null,null,null,null,null,null,null,3750.json,null,null,null,3363.json,3718.json,null,null,null,null,null,3749.json,null,3717.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateCompactPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateUnreachableGarbagePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testSinglePackForAllRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.countPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource),org.eclipse.jgit.internal.storage.dfs.DfsReader.garbagePacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndGarbagePacksPurged(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore(),org.eclipse.jgit.internal.storage.dfs.DfsReader.getCachedPacksAndUpdate(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizesWithGcAndGcRestPacks(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsReader.sortPacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithNoGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsReader.getBitmapIndex(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndGarbagePacksPurged()	true	2410
3462.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getGitwebDescription()	noCall	noCall	true	572
3325.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.totalBytes()	3638.json,135.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexScan()	true	297
6121.json	org.eclipse.jgit.storage.pack.PackStatistics.getAdvertised()	noCall	noCall	true	117
2403.json	org.eclipse.jgit.transport.PackParser.firstChildOf(org.eclipse.jgit.transport.PackedObjectInfo)	2397.json,2398.json,2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	2718
8782.json	org.eclipse.jgit.lib.ConfigLine.forValue(java.lang.String)	8909.json	org.eclipse.jgit.lib.Config.replaceStringList(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	3176
7307.json	org.eclipse.jgit.api.TagCommand.setSigned(boolean)	null	org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags()	true	2844
5529.json	org.eclipse.jgit.revwalk.RevCommit.parseBody(org.eclipse.jgit.revwalk.RevWalk)	5575.json	org.eclipse.jgit.revwalk.PendingGenerator.next()	true	3176
8231.json	org.eclipse.jgit.util.io.IsolatedOutputStream.write(byte[], int, int)	8230.json	org.eclipse.jgit.util.io.IsolatedOutputStream.write(int)	true	573
120.json	org.eclipse.jgit.pgm.Blame.abbreviate(org.eclipse.jgit.revwalk.RevCommit)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2493
3161.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.lastKey()	3338.json,3336.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.estimateBytes(long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.flushCurBlock()	true	297
1400.json	org.eclipse.jgit.transport.UploadPack.getRevWalk()	null,null,1888.json,null	org.eclipse.jgit.transport.UploadPackTest.Anonymous-9d19ac99-df2a-4ed0-97ef-a2bed4d6788f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.UploadPack),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	false	3176
6717.json	org.eclipse.jgit.diff.DiffEntry.modify(java.lang.String)	null,null,null,null,null,null,null	org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired()	true	2899
8453.json	org.eclipse.jgit.util.FS.runProcess(java.lang.ProcessBuilder, java.io.OutputStream, java.io.OutputStream, java.lang.String)	8448.json,9847.json	org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.call()	true	1223
4896.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFilePath(java.lang.String)	4895.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFile(java.lang.String)	true	2683
533.json	org.eclipse.jgit.junit.http.MockServletConfig.getServletContext()	noCall	noCall	true	3070
1725.json	org.eclipse.jgit.transport.URIish.equals(java.lang.Object)	null	org.eclipse.jgit.transport.URIishTest.testEqualsHashcode()	true	3176
6122.json	org.eclipse.jgit.storage.pack.PackStatistics.getWants()	noCall	noCall	true	117
1415.json	org.eclipse.jgit.transport.UploadPack.setRefFilter(org.eclipse.jgit.transport.RefFilter)	null	org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...)	true	3041
3714.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache()	3806.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	true	2410
2564.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowNonFastForwards()	2625.json,1853.json,2621.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	3176
4868.json	org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.loadRulesFromFile(org.eclipse.jgit.attributes.AttributesNode, java.io.File)	4236.json,4181.json	org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load()	true	1249
80.json	org.eclipse.jgit.pgm.ShowRef.run()	noCall	noCall	true	3176
1307.json	org.eclipse.jgit.transport.BaseFetchConnection.didFetchIncludeTags()	noCall	noCall	true	3176
9536.json	org.eclipse.jgit.lib.RefUpdate.isForceRefLog()	4491.json,4494.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String)	true	253
1182.json	org.eclipse.jgit.notes.NotesMergeConflictException.name(org.eclipse.jgit.notes.NonNoteEntry)	noCall	noCall	true	2709
10034.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalRequest(java.net.URL, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
8031.json	org.eclipse.jgit.util.RefMap.SetIterator.resolveLoose(org.eclipse.jgit.lib.Ref)	8030.json	org.eclipse.jgit.util.RefMap.SetIterator.peek()	true	3060
8612.json	org.eclipse.jgit.util.SystemReader.getClock()	noCall	noCall	true	565
3853.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.copy(long, byte[], int, int)	3756.json,3663.json,3524.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copy(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.read(long, byte[], int, int)	true	2410
9400.json	org.eclipse.jgit.lib.ObjectChecker.checkBlob(byte[])	null,9366.json	org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlob(),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	true	3176
2762.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp)	null,2760.json	org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
9197.json	org.eclipse.jgit.lib.MutableObjectId.fromString(byte[], int)	5664.json,5530.json,1155.json,9367.json	org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.notes.NoteParser.parseObjectId(org.eclipse.jgit.lib.MutableObjectId),org.eclipse.jgit.lib.ObjectChecker.checkId(byte[])	true	3176
4903.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.performsAtomicTransactions()	null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testSupportsAtomic()	true	880
7825.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getIgnoreNode()	7824.json,7856.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String)	true	2881
2807.json	org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	2762.json,2725.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.RemoteGitReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	true	872
348.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableBoundary(boolean)	noCall	noCall	true	3176
10208.json	org.eclipse.jgit.transport.JschSession.JschProcess.exitValue()	10211.json	org.eclipse.jgit.transport.JschSession.JschProcess.waitFor()	true	2636
9240.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.pollForUpdates()	null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2783
1699.json	org.eclipse.jgit.transport.AmazonS3.ListParser.list()	1685.json	org.eclipse.jgit.transport.AmazonS3.list(java.lang.String, java.lang.String)	true	3176
6166.json	org.eclipse.jgit.storage.pack.PackConfig.getMaxDeltaDepth()	5119.json,6209.json,6210.json	org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	3176
4391.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeObjectNames()	4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	true	3176
4162.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeByte(int)	noCall	noCall	true	1922
7403.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(org.eclipse.jgit.revwalk.RevCommit)	7402.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean)	true	1674
9456.json	org.eclipse.jgit.lib.CommitBuilder.toByteArray()	null	org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack()	true	2745
7241.json	org.eclipse.jgit.api.StashApplyCommand.setApplyUntracked(boolean)	noCall	noCall	true	1480
8726.json	org.eclipse.jgit.patch.CombinedHunkHeader.getOldImage(int)	null,8725.json,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.CombinedHunkHeader.getOldImage(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
6959.json	org.eclipse.jgit.api.Status.getChanged()	null,null,null,null,null,null,null,94.json,null,96.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile()	true	2636
1136.json	org.eclipse.jgit.notes.NoteMap.newMap(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.lib.ObjectReader)	null,1210.json	org.eclipse.jgit.notes.NoteMapMergerTest.setUp(),org.eclipse.jgit.notes.NoteMapMerger.merge(org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap)	true	2709
5147.json	org.eclipse.jgit.internal.storage.pack.PackWriter.exclude(org.eclipse.jgit.lib.AnyObjectId)	5142.json,5140.json,5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(org.eclipse.jgit.revwalk.BitmapWalker, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2485
9521.json	org.eclipse.jgit.lib.RefUpdate.getNewObjectId()	null,null,3959.json,4981.json,3347.json,4491.json,4102.json,null,null	org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefDirectory.stored(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref()	true	3176
8460.json	org.eclipse.jgit.util.FS.Attributes.isSymbolicLink()	7671.json,null,null,null	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.openInputStream(),org.eclipse.jgit.treewalk.FileTreeIterator.NoGitlinksStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-0b68a76b-6218-4583-b1f3-1f133dc97b00.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes),org.eclipse.jgit.treewalk.FileTreeIterator.DefaultFileModeStrategy.getMode(java.io.File, org.eclipse.jgit.util.FS.Attributes)	true	1579
8265.json	org.eclipse.jgit.util.io.TimeoutInputStream.skip(long)	null,null	org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Timeout(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Success()	true	3176
3416.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.shouldCopyThroughCache(long)	3799.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1144
9214.json	org.eclipse.jgit.lib.AbbreviatedObjectId.getFirstByte()	4482.json,4520.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	true	2848
8108.json	org.eclipse.jgit.util.TemporaryBuffer.LocalFile.Anonymous-3f071125-4df8-4a38-b83e-7afd3db94a5c.close()	noCall	noCall	true	3176
1709.json	org.eclipse.jgit.transport.URIish.isRemote()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	3176
7772.json	org.eclipse.jgit.treewalk.filter.PathSuffixFilter.create(java.lang.String)	null	org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean)	true	3176
1817.json	org.eclipse.jgit.transport.TransportLocal.ForkLocalPushConnection.close()	noCall	noCall	true	3176
2268.json	org.eclipse.jgit.transport.TransportHttp.Service.openStream()	2277.json,2269.json	org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.overflow(),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	3070
7026.json	org.eclipse.jgit.api.InitCommand.setDirectory(java.io.File)	null,null,null,null,null,null,null,null,null,null,358.json,null,null,null,null,null,null,904.json,6884.json	org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository(),org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir(),org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.testRandomPatterns(),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.InitCommandTest.testInitBareRepository(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.InitCommandTest.testInitRepository(),org.eclipse.jgit.ant.tasks.GitInitTask.execute(),org.eclipse.jgit.api.CloneCommand.init()	true	2743
3518.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.write(int)	noCall	noCall	true	2410
3215.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.add(org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry)	3218.json,3211.json,3209.json,null,3208.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.skipShadowedRefs(java.lang.String),org.eclipse.jgit.internal.storage.reftable.MergedReftable.byObjectId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekRef(java.lang.String),org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.next(),org.eclipse.jgit.internal.storage.reftable.MergedReftable.allRefs()	true	297
7950.json	org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(java.lang.String)	null,301.json,null	org.eclipse.jgit.util.GitDateFormatterTest.setUp(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.assertPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent)	true	2845
4579.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.remove(int)	4583.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.remove(org.eclipse.jgit.lib.AnyObjectId)	true	1922
1248.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String)	noCall	noCall	true	2210
7705.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.contains(byte[], int, int)	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk)	true	1965
6949.json	org.eclipse.jgit.api.errors.AbortedByHookException.getReturnCode()	noCall	noCall	true	1195
2573.json	org.eclipse.jgit.transport.BaseReceivePack.setRefFilter(org.eclipse.jgit.transport.RefFilter)	noCall	noCall	true	3041
3897.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.commitPack(java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>, java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>)	null,3771.json,3604.json,null,3361.json,3505.json,null,null,null,null,null,3646.json,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.weirdBlockSize()	true	2370
9129.json	org.eclipse.jgit.lib.UserConfig.getAuthorName()	null,null	org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped(),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3176
7530.json	org.eclipse.jgit.api.AddCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,79.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6979.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,900.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testEmptyGitAttributeFile(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.StatusTest.createUnmergedFile(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testReplaceFileByPartOfDirectory(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.pgm.Add.run(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategy(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testCheckinCheckoutDifferences(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.api.AddCommandTest.testReplaceFileWithDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_13(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.AddCommandTest.testAttributesConflictingMatch(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryWithFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoAttributes(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.AddCommandTest.testCleanFilter(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testRules(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testIncorrectAttributeFileName(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly2(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_4(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.AddCommandTest.testAddFolder(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testHierarchyBothIterator(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.EolRepositoryTest.gitAdd(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testAddNothing(),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.pgm.RmTest.multiplePathsShouldBeRemoved(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.AddCommandTest.testCommandInjection(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndAdd(java.lang.String, java.lang.String...),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.StatusTest.addFilesToIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoMatchingAttributes(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_10(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2888
4712.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.readDatabase(byte[], int, int)	noCall	noCall	true	2692
217.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs()	212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	true	3176
4378.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readByte()	noCall	noCall	true	1922
341.json	org.eclipse.jgit.pgm.IndexPack.run()	noCall	noCall	true	3176
9596.json	org.eclipse.jgit.lib.AnyObjectId.getFirstByte()	null,4478.json,4243.json,4515.json,4517.json	org.eclipse.jgit.lib.ObjectIdTest.testGetByte(),org.eclipse.jgit.internal.storage.file.PackIndexV1.findOffset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeFanOutTable(),org.eclipse.jgit.internal.storage.file.PackIndexV2.findOffset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(org.eclipse.jgit.lib.AnyObjectId)	true	3176
5011.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clear(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5010.json,5021.json,5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clearWindowOnTypeSwitch(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.checkLoadable(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, long),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2893
7281.json	org.eclipse.jgit.api.DiffCommand.getDiffFormatter()	7282.json	org.eclipse.jgit.api.DiffCommand.call()	true	96
2887.json	org.eclipse.jgit.internal.ketch.Proposal.await(long, java.util.concurrent.TimeUnit)	2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	872
6806.json	org.eclipse.jgit.events.RefsChangedEvent.dispatch(org.eclipse.jgit.events.RefsChangedListener)	noCall	noCall	true	2907
5548.json	org.eclipse.jgit.revwalk.RevCommit.getFullMessage()	null,7402.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,380.json,null,null,null,null,272.json,null,null,null,null,null,null,null,null,null,7412.json,null,null,null,null,null,null,7195.json,null,null,7406.json,null,null,null,null,null,7425.json,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7416.json,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedLF(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.RebaseCommandTest.assertDerivedFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyNoLF(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessage(),org.eclipse.jgit.junit.TestRepositoryTest.insertChangeIdIgnoresExisting(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEndLF(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_OnlyLFMessage(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.junit.TestRepositoryTest.amendCommit(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_WeirdHeaderOnlyCommit(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.api.RebaseCommand.writeMergeInfo(org.eclipse.jgit.revwalk.RevCommit, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incorrectUtf8Name(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.junit.TestRepositoryTest.insertExplicitChangeId(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.junit.TestRepositoryTest.amendHead(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommand.composeSquashMessage(boolean, org.eclipse.jgit.revwalk.RevCommit, java.lang.String, int),org.eclipse.jgit.junit.TestRepositoryTest.insertChangeId(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoMessage(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	3176
4570.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getBitmap(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
4690.json	org.eclipse.jgit.internal.storage.file.BitSet.get(int)	4578.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.contains(int)	true	1922
2319.json	org.eclipse.jgit.transport.ProgressSpinner.update()	2893.json,2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	906
7055.json	org.eclipse.jgit.api.Git.commit()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7414.json,null,6812.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7423.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7385.json,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,301.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6309.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7402.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7195.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranchThatAlreadyExists(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.pgm.ConfigTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.pgm.MergeTest.setUp(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_7(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.EolRepositoryTest.gitCommit(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CleanTest.testCleanLeaveDirs(),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.ReflogTest.testSingleCommit(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_8(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSelf(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.StatusTest.makeInitialCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_3(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6_f2_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.pgm.FetchTest.testFetchForceUpdate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.pgm.CleanTest.testCleanDeleteDirs(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.pgm.TextBuiltinTest.testCleanDeleteDirs(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_4(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testWrongParams(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranch(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.DescribeCommandTest.modify(java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.pgm.BranchTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.TagTest.setUp(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutHead(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2953
7234.json	org.eclipse.jgit.api.StashApplyCommand.setStashRef(java.lang.String)	null,null,null,null,null,null,null,7401.json,null	org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2293
6825.json	org.eclipse.jgit.api.ApplyCommand.getFile(java.lang.String, boolean)	6824.json	org.eclipse.jgit.api.ApplyCommand.call()	true	2288
8521.json	org.eclipse.jgit.util.IntList.grow()	8518.json	org.eclipse.jgit.util.IntList.add(int)	true	3176
6871.json	org.eclipse.jgit.api.RemoteSetUrlCommand.setUri(org.eclipse.jgit.transport.URIish)	null,null,83.json	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.pgm.Remote.run()	true	911
369.json	org.eclipse.jgit.pgm.Log.ignoreSpaceChange(boolean)	noCall	noCall	true	2899
6146.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeWriting()	1518.json,6151.json	org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackStatistics.getTransferRate()	true	1094
3200.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.key(java.lang.String, long)	3040.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekLog(java.lang.String, long)	true	297
3843.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.EmptyAttributesNodeProvider.getGlobalAttributesNode()	noCall	noCall	true	935
8266.json	org.eclipse.jgit.util.io.TimeoutInputStream.beginRead()	8262.json,8265.json,8264.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(),org.eclipse.jgit.util.io.TimeoutInputStream.skip(long),org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[], int, int)	true	3176
7816.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.parseEntry()	7827.json,7815.json,7811.json,7814.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.init(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry[]),org.eclipse.jgit.treewalk.WorkingTreeIterator.back(int),org.eclipse.jgit.treewalk.WorkingTreeIterator.reset(),org.eclipse.jgit.treewalk.WorkingTreeIterator.next(int)	true	3176
7410.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1676
4932.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	4930.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	880
1377.json	org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree)	1374.json,1375.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	true	3176
3910.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.clearCache()	null,3466.json,null,3838.json,3361.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.run(org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.commitPackImpl(java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>, java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsRepository.scanForRepoChanges(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.compact()	true	2410
1420.json	org.eclipse.jgit.transport.UploadPack.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	null	org.eclipse.jgit.transport.Daemon.Anonymous-9a88878e-0733-4707-968c-06a0eae94c5c.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	2874
2546.json	org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedRefs()	noCall	noCall	true	3176
10136.json	org.eclipse.jgit.archive.TxzFormat.createArchiveOutputStream(java.io.OutputStream)	noCall	noCall	true	1839
6939.json	org.eclipse.jgit.api.PushCommand.setPushOptions(java.util.List<java.lang.String>)	122.json,null,null,null	org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported()	true	688
8092.json	org.eclipse.jgit.util.TemporaryBuffer.write(byte[], int, int)	null,9836.json,null,null,null,null,null,null,9838.json,null,null,null,null,null,null,null	org.eclipse.jgit.transport.PackParserTest.deflate(org.eclipse.jgit.util.TemporaryBuffer.Heap, byte[]),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, byte[], int),org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites(),org.eclipse.jgit.util.TemporaryBufferTest.testOneBlock_BulkWrite(),org.eclipse.jgit.internal.storage.file.PackFileTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.internal.storage.file.PackFileTest.deflate(org.eclipse.jgit.util.TemporaryBuffer.Heap, byte[]),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnCopy(),org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.transport.PackParserTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.deflate(org.eclipse.jgit.util.TemporaryBuffer.Heap, byte[]),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.copy(org.eclipse.jgit.util.TemporaryBuffer.Heap, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.internal.storage.file.PackFileTest.objectHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int, int),org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite(),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnAppendByte(),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchBeforeAppendByte()	true	3176
5116.json	org.eclipse.jgit.internal.storage.pack.PackWriter.close()	null,null,null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean),org.eclipse.jgit.internal.storage.file.PackWriterTest.tearDown(),org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.List<org.eclipse.jgit.revwalk.RevObject>),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2904
8583.json	org.eclipse.jgit.util.BlockList.MyIterator.hasNext()	noCall	noCall	true	2651
1344.json	org.eclipse.jgit.transport.PacketLineOut.flush()	null,2152.json,2644.json,null,1343.json,1908.json,null	org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.transport.TransportGitAnon.service(java.lang.String, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket3(),org.eclipse.jgit.transport.PacketLineOut.end(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PacketLineOutTest.testFlush()	true	3176
8578.json	org.eclipse.jgit.util.BlockList.iterator()	null,null	org.eclipse.jgit.util.BlockListTest.testFastIterator(),org.eclipse.jgit.util.BlockListTest.testEmptyList()	true	2651
237.json	org.eclipse.jgit.pgm.Diff.ignoreLeadingSpace(boolean)	noCall	noCall	true	2899
8626.json	org.eclipse.jgit.util.time.MonotonicSystemClock.nowMicros()	8629.json	org.eclipse.jgit.util.time.MonotonicSystemClock.propose()	true	565
8584.json	org.eclipse.jgit.util.BlockList.MyIterator.next()	noCall	noCall	true	2651
8673.json	org.eclipse.jgit.patch.Patch.getErrors()	null,null,null,null,6824.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew(),org.eclipse.jgit.patch.GetTextTest.testGetText_Convert(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591(),org.eclipse.jgit.patch.PatchTest.testEmpty(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
1794.json	org.eclipse.jgit.transport.SignedPushConfig.getNonceGenerator()	noCall	noCall	true	1088
6560.json	org.eclipse.jgit.diff.DiffFormatter.getRenameDetector()	247.json,378.json,269.json	org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run()	true	2838
6792.json	org.eclipse.jgit.events.WorkingTreeModifiedEvent.getModified()	null	org.eclipse.jgit.events.ChangeRecorder.onWorkingTreeModified(org.eclipse.jgit.events.WorkingTreeModifiedEvent)	true	299
1992.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish)	2722.json,null,2729.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.setUp(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	3176
10428.json	org.eclipse.jgit.http.server.FileSender.getLastModified()	null	org.eclipse.jgit.http.server.ObjectFileServlet.Loose.etag(org.eclipse.jgit.http.server.FileSender)	false	3070
10117.json	org.eclipse.jgit.archive.TgzFormat.hashCode()	noCall	noCall	true	1521
1595.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getContentType()	noCall	noCall	true	1572
319.json	org.eclipse.jgit.pgm.opt.CmdLineParser.containsHelp(java.lang.String...)	315.json	org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(java.lang.String...)	true	893
363.json	org.eclipse.jgit.pgm.Tag.run()	noCall	noCall	true	3176
79.json	org.eclipse.jgit.pgm.Add.run()	noCall	noCall	true	2772
4141.json	org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(org.eclipse.jgit.lib.ObjectId)	4140.json,4143.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	2906
1593.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setConnectTimeout(int)	noCall	noCall	true	1572
2370.json	org.eclipse.jgit.transport.PackParser.isAllowThin()	2395.json	org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2692
5678.json	org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	null,null,5577.json,5534.json,null,5537.json,5400.json,7502.json,5644.json,null,7511.json	org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO(),org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront(),org.eclipse.jgit.revwalk.DelayRevQueue.next(),org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueueTest.testAddLargeBlocks(),org.eclipse.jgit.revwalk.RevCommit.carryOneStep(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalk.reset(int),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.revwalk.DepthGenerator.next(),org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.next(),org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	true	3176
9975.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(long[], int)	9974.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(long[])	true	856
7212.json	org.eclipse.jgit.api.StashDropCommand.createRefUpdate(org.eclipse.jgit.lib.Ref)	7213.json,7214.json	org.eclipse.jgit.api.StashDropCommand.deleteRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.StashDropCommand.updateRef(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectId)	true	2272
3080.json	org.eclipse.jgit.internal.storage.reftable.Reftable.exactRef(java.lang.String)	null,3085.json,3688.json,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.failDeepChainOfSymbolicRef(),org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(org.eclipse.jgit.lib.Ref, int),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.resolveSymbolicRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
2888.json	org.eclipse.jgit.internal.ketch.Proposal.awaitStateChange(org.eclipse.jgit.internal.ketch.Proposal.State, long, java.util.concurrent.TimeUnit)	2893.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	872
7617.json	org.eclipse.jgit.treewalk.TreeWalk.getTree(java.lang.Class<T>)	null,5315.json,null	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>)	true	935
7426.json	org.eclipse.jgit.api.RebaseCommand.toAuthorScript(org.eclipse.jgit.lib.PersonIdent)	null,7425.json	org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	true	2739
6234.json	org.eclipse.jgit.revplot.PlotCommit.addChild(org.eclipse.jgit.revplot.PlotCommit)	6253.json	org.eclipse.jgit.revplot.PlotCommitList.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)	true	3176
9754.json	org.eclipse.jgit.lib.RebaseTodoFile.nextParsableToken(byte[], int, int)	9753.json,9752.json	org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean)	true	1683
8520.json	org.eclipse.jgit.util.IntList.fillTo(int, int)	null,null,null	org.eclipse.jgit.util.IntListTest.testFillTo0(),org.eclipse.jgit.util.IntListTest.testFillTo1(),org.eclipse.jgit.util.IntListTest.testFillTo100()	true	3176
7329.json	org.eclipse.jgit.api.GitCommand.checkCallable()	6856.json,6875.json,7494.json,7222.json,7280.json,7132.json,7342.json,6831.json,7133.json,7223.json,6955.json,6838.json,6992.json,6996.json,6997.json,7270.json,7336.json,7279.json,7182.json,6921.json,7188.json,7393.json,6830.json,6851.json,7190.json,6924.json,7227.json,7228.json,7131.json,6863.json,6813.json,6954.json,7218.json,6991.json,7225.json,6839.json,7506.json,6836.json,6995.json,7215.json,6855.json,7260.json,7385.json,6914.json,7219.json,7474.json,7278.json,7495.json,7487.json,7189.json,7275.json,6994.json,7277.json,7129.json,7221.json,7399.json,6912.json,6824.json,7191.json,6845.json,7389.json,null,6865.json,6812.json,7302.json,7208.json,6930.json,7507.json,7521.json,7515.json,7528.json,6969.json,7496.json,6853.json,7493.json,7380.json,6911.json,6832.json,6979.json,6864.json,7530.json,7390.json,7298.json,6934.json,7341.json,6868.json,7397.json,6970.json,6918.json,7471.json,7138.json,7505.json,6989.json,7130.json,6861.json,7488.json,6988.json,7338.json,7331.json,7371.json,7197.json,7040.json,7195.json,7237.json,7187.json,6953.json,6823.json,6985.json,6971.json,7350.json,7192.json,7193.json,6847.json,7266.json,7299.json,6923.json,6936.json,6309.json,6867.json,7337.json,7008.json,7503.json,7464.json,7340.json,7489.json,7137.json,7339.json,7394.json,7475.json,7007.json,7220.json,6843.json,6932.json,7305.json	org.eclipse.jgit.api.FetchCommand.setTagOpt(org.eclipse.jgit.transport.TagOpt),org.eclipse.jgit.api.RemoteSetUrlCommand.call(),org.eclipse.jgit.api.CheckoutCommand.setStartPoint(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.AddNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.LogCommand.setRevFilter(org.eclipse.jgit.revwalk.filter.RevFilter),org.eclipse.jgit.api.PullCommand.setRemote(java.lang.String),org.eclipse.jgit.api.ReflogCommand.call(),org.eclipse.jgit.api.ShowNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.PullCommand.setRemoteBranchName(java.lang.String),org.eclipse.jgit.api.AddNoteCommand.setMessage(java.lang.String),org.eclipse.jgit.api.DeleteBranchCommand.setForce(boolean),org.eclipse.jgit.api.FetchCommand.setRecurseSubmodules(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode),org.eclipse.jgit.api.CommitCommand.setAuthor(java.lang.String, java.lang.String),org.eclipse.jgit.api.CommitCommand.setOnly(java.lang.String),org.eclipse.jgit.api.CommitCommand.setInsertChangeId(boolean),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.api.CreateBranchCommand.setName(java.lang.String),org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.GarbageCollectCommand.call(),org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(java.util.List<org.eclipse.jgit.transport.RefLeaseSpec>),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.api.MergeCommand.setSquash(boolean),org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.api.FetchCommand.setRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.api.RenameBranchCommand.setOldName(java.lang.String),org.eclipse.jgit.api.PushCommand.setRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.DeleteTagCommand.call(),org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.DeleteBranchCommand.setBranchNames(java.lang.String...),org.eclipse.jgit.api.RemoteRemoveCommand.call(),org.eclipse.jgit.api.CommitCommand.setAuthor(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.api.AddNoteCommand.setNotesRef(java.lang.String),org.eclipse.jgit.api.FetchCommand.setRemote(java.lang.String),org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags(),org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.api.CommitCommand.setAmend(boolean),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.api.FetchCommand.setThin(boolean),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.PushCommand.setReceivePack(java.lang.String),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.api.CheckoutCommand.addPath(java.lang.String),org.eclipse.jgit.api.LogCommand.setMaxCount(int),org.eclipse.jgit.api.CheckoutCommand.setUpstreamMode(org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.api.CheckoutCommand.setName(java.lang.String),org.eclipse.jgit.api.RenameBranchCommand.setNewName(java.lang.String),org.eclipse.jgit.api.LogCommand.addPath(java.lang.String),org.eclipse.jgit.api.CommitCommand.setAll(boolean),org.eclipse.jgit.api.LogCommand.setSkip(int),org.eclipse.jgit.api.PullCommand.setRebase(boolean),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.PushCommand.setRemote(java.lang.String),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.api.RmCommand.addFilepattern(java.lang.String),org.eclipse.jgit.api.FetchCommand.setRemoveDeletedRefs(boolean),org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommand.setForce(boolean),org.eclipse.jgit.api.ListBranchCommand.call(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.TagCommand.setName(java.lang.String),org.eclipse.jgit.api.RemoteListCommand.call(),org.eclipse.jgit.api.PushCommand.setDryRun(boolean),org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.api.LsRemoteCommand.setRemote(java.lang.String),org.eclipse.jgit.api.AddCommand.addFilepattern(java.lang.String),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.api.CheckoutCommand.setStage(org.eclipse.jgit.api.CheckoutCommand.Stage),org.eclipse.jgit.api.FetchCommand.setDryRun(boolean),org.eclipse.jgit.api.CheckoutCommand.setStartPoint(java.lang.String),org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.api.ShowNoteCommand.setNotesRef(java.lang.String),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.DeleteTagCommand.setTags(java.lang.String...),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.PushCommand.setAtomic(boolean),org.eclipse.jgit.api.ReflogCommand.setRef(java.lang.String),org.eclipse.jgit.api.ListBranchCommand.setContains(java.lang.String),org.eclipse.jgit.api.MergeCommand.setInsertChangeId(boolean),org.eclipse.jgit.api.RemoveNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.PushCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.PullCommand.setFastForward(org.eclipse.jgit.api.MergeCommand.FastForwardMode),org.eclipse.jgit.api.NameRevCommand.addPrefix(java.lang.String),org.eclipse.jgit.api.CommitCommand.setCommitter(java.lang.String, java.lang.String),org.eclipse.jgit.api.PullCommand.setRebase(org.eclipse.jgit.lib.BranchConfig.BranchRebaseMode),org.eclipse.jgit.api.SubmoduleStatusCommand.call(),org.eclipse.jgit.api.CheckoutCommand.setCreateBranch(boolean),org.eclipse.jgit.api.CommitCommand.setCommitter(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(java.lang.String),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.ArchiveCommand.call(),org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.api.ApplyCommand.setPatch(java.io.InputStream),org.eclipse.jgit.api.CommitCommand.setMessage(java.lang.String),org.eclipse.jgit.api.RemoveNoteCommand.setNotesRef(java.lang.String),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.api.RmCommand.setCached(boolean),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.api.FetchCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.api.PushCommand.setRefSpecs(org.eclipse.jgit.transport.RefSpec...),org.eclipse.jgit.api.PushCommand.setForce(boolean),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.ListBranchCommand.setListMode(org.eclipse.jgit.api.ListBranchCommand.ListMode),org.eclipse.jgit.api.CreateBranchCommand.setForce(boolean),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.NameRevCommand.add(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.api.CreateBranchCommand.setUpstreamMode(org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.api.CheckoutCommand.setOrphan(boolean),org.eclipse.jgit.api.PullCommand.setTagOpt(org.eclipse.jgit.transport.TagOpt),org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommand.setFastForward(org.eclipse.jgit.api.MergeCommand.FastForwardMode),org.eclipse.jgit.api.CheckoutCommand.addPaths(java.util.List<java.lang.String>),org.eclipse.jgit.api.ListTagCommand.call(),org.eclipse.jgit.api.ListNotesCommand.setNotesRef(java.lang.String),org.eclipse.jgit.api.FetchCommand.setCheckFetchedObjects(boolean),org.eclipse.jgit.api.PushCommand.setThin(boolean),org.eclipse.jgit.api.TagCommand.setMessage(java.lang.String)	true	2953
8196.json	org.eclipse.jgit.util.io.TimeoutOutputStream.flush()	null,null	org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Success(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Timeout()	true	3176
8888.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String)	null,null,89.json,8887.json,7188.json	org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig),org.eclipse.jgit.lib.Config.getNames(java.lang.String),org.eclipse.jgit.api.RenameBranchCommand.call()	true	2917
2346.json	org.eclipse.jgit.transport.RefSpec.isWildcard()	null,1998.json,1951.json,null,null,2359.json,null,2367.json,null,null,null,null,null,null,null,null,null,null,2356.json,1997.json,null,null,null,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.Transport.findTrackingRefName(java.lang.String, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpec.expandFromDestination(java.lang.String),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object),org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String),org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard()	true	3176
125.json	org.eclipse.jgit.pgm.Push.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId)	124.json	org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate)	true	2848
3044.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter()	3046.json,3048.json,3047.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.initRefIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.initLogIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.initObjIndex()	true	297
1404.json	org.eclipse.jgit.transport.UploadPack.setTimeout(int)	91.json,null	org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.transport.Daemon.Anonymous-9a88878e-0733-4707-968c-06a0eae94c5c.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
7375.json	org.eclipse.jgit.api.ArchiveCommand.setOutputStream(java.io.OutputStream)	null,null,362.json,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1871
6250.json	org.eclipse.jgit.revplot.PlotCommitList.drawLaneToChild(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	6249.json	org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	1480
4005.json	org.eclipse.jgit.internal.storage.file.PackInserter.getBufferSize()	null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallObjectBeforeLargeObject(),org.eclipse.jgit.internal.storage.file.PackInserterTest.insertLargeInputStreamBypassesCheckExisting(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackFallsBackToRepo(),org.eclipse.jgit.internal.storage.file.PackInserterTest.insertSmallInputStreamRespectsCheckExisting(),org.eclipse.jgit.internal.storage.file.PackInserterTest.largeBlob(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallFiles()	true	221
5650.json	org.eclipse.jgit.revwalk.RevFlagSet.Anonymous-96958791-9c0c-42d9-b35e-b98b2daa558c.next()	noCall	noCall	true	3176
8507.json	org.eclipse.jgit.util.FileUtils.getFileAttributesPosix(org.eclipse.jgit.util.FS, java.io.File)	8063.json	org.eclipse.jgit.util.FS_POSIX.getAttributes(java.io.File)	true	1579
1973.json	org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(org.eclipse.jgit.lib.BatchRefUpdate)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	2210
7818.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength()	null,7040.json,7530.json,6981.json,null	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.open(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength()	true	2267
2441.json	org.eclipse.jgit.transport.PackParser.onEndDelta()	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	2692
9871.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.extractProjectName(org.eclipse.jgit.transport.URIish)	9869.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish)	true	113
1737.json	org.eclipse.jgit.transport.TransferConfig.newObjectChecker()	noCall	noCall	true	1293
7675.json	org.eclipse.jgit.treewalk.FileTreeIterator.idSubmodule(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	noCall	noCall	true	2410
7893.json	org.eclipse.jgit.submodule.SubmoduleWalk.setModulesConfig(org.eclipse.jgit.lib.Config)	noCall	noCall	true	2186
477.json	org.eclipse.jgit.junit.MockSystemReader.setCurrentPlatform()	null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot()	true	2376
5840.json	org.eclipse.jgit.ignore.internal.WildMatcher.isSubdirectory(java.lang.String)	5838.json	org.eclipse.jgit.ignore.internal.WildMatcher.matches(java.lang.String, boolean, boolean)	true	108
1181.json	org.eclipse.jgit.notes.NotesMergeConflictException.noteData(org.eclipse.jgit.notes.Note)	noCall	noCall	true	2709
6170.json	org.eclipse.jgit.storage.pack.PackConfig.getSinglePack()	3361.json,6209.json,6210.json,4817.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.file.GC.repack()	true	361
2315.json	org.eclipse.jgit.transport.ServiceMayNotContinueException.isOutput()	1434.json	org.eclipse.jgit.transport.UploadPack.service()	false	2627
5459.json	org.eclipse.jgit.revwalk.StartGenerator.outputType()	noCall	noCall	true	3176
7169.json	org.eclipse.jgit.api.MergeResult.getBase()	noCall	noCall	true	2852
5256.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.AnyObjectId)	5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
6765.json	org.eclipse.jgit.diff.Edit.getEndA()	null,6586.json,null,null,null,null,null,6378.json,null,923.json,6604.json,null,6606.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.EditTest.testSwap(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.EditTest.testCreate(),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S),org.eclipse.jgit.diff.DiffFormatter.combineA(java.util.List<org.eclipse.jgit.diff.Edit>, int),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.diff.DiffFormatter.end(org.eclipse.jgit.diff.Edit, int, int)	true	3176
8826.json	org.eclipse.jgit.lib.BranchConfig.BranchRebaseMode.matchConfigValue(java.lang.String)	noCall	noCall	true	1426
4900.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getTxnCommitted()	4932.json,null,null,4976.json,null,4928.json,167.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.getTxnCommitted(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.reftree.RefTreeNames.isRefTree(org.eclipse.jgit.lib.RefDatabase, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testIsNameConflicting(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.pgm.debug.RebuildRefTree.run()	true	880
4566.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate)	4565.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()	true	3059
5413.json	org.eclipse.jgit.revwalk.RevWalk.assumeShallow(java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	null,null,null,5099.json,1434.json,null,null	org.eclipse.jgit.transport.UploadPackTest.Anonymous-9d19ac99-df2a-4ed0-97ef-a2bed4d6788f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeShallowPack(org.eclipse.jgit.internal.storage.file.FileRepository, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.service(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	1593
9812.json	org.eclipse.jgit.lib.ObjectReader.Filter.newReader()	noCall	noCall	true	776
7612.json	org.eclipse.jgit.treewalk.TreeWalk.skipEntriesEqual()	7590.json	org.eclipse.jgit.treewalk.TreeWalk.next()	true	3176
1675.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.addRefDelta()	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	629
6735.json	org.eclipse.jgit.diff.PatchIdDiffFormatter.getCalulatedPatchId()	null,null	org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff()	true	2574
1883.json	org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int)	noCall	noCall	true	3176
3018.json	org.eclipse.jgit.internal.revwalk.AddUnseenToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	1922
7324.json	org.eclipse.jgit.api.SubmoduleDeinitResult.setStatus(org.eclipse.jgit.api.SubmoduleDeinitCommand.SubmoduleDeinitStatus)	noCall	noCall	true	164
6378.json	org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	6377.json	org.eclipse.jgit.blame.Candidate.takeBlame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate)	true	2567
8542.json	org.eclipse.jgit.util.RefList.contains(java.lang.String)	3961.json,null,3939.json,3573.json,null,null	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.isNameConflicting(java.lang.String),org.eclipse.jgit.util.RefListTest.testEmptyBuilder(),org.eclipse.jgit.util.RefListTest.testFindContainsGet()	true	3060
9850.json	org.eclipse.jgit.lfs.errors.CorruptMediaFile.getMediaFile()	noCall	noCall	true	628
8992.json	org.eclipse.jgit.lib.Repository.isBare()	null,null,1807.json,8984.json,null,null,9006.json,9847.json,4915.json,9016.json,9013.json,4849.json,null,4906.json,6836.json,7350.json,null,null,6979.json,7898.json,9549.json,9009.json,112.json,6309.json,9008.json,null,8988.json,null,4862.json,6310.json,4829.json,null,null,8448.json,null,null	org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testIsBare_CreateRepositoryFromArbitraryGitDir(),org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.Repository.getIndexFile(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyWorktree(org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Repository.readMergeHeads(),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.call(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(java.lang.String, boolean),org.eclipse.jgit.lib.Repository.readCommitMsgFile(java.lang.String),org.eclipse.jgit.lib.Repository.readOrigHead(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.gitrepo.RepoCommand.addSubmoduleBare(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, java.util.Set<java.lang.String>, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String),org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(),org.eclipse.jgit.api.InitCommandTest.testInitBareRepository(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.containsGitModulesFile(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.RefUpdate.delete(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.lib.Repository.readRevertHead(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.lib.Repository.readCherryPickHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.lib.Repository.getRepositoryState(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(),org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly(),org.eclipse.jgit.lib.Repository.getWorkTree(),org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromDotGitGitDir()	true	2917
8103.json	org.eclipse.jgit.util.TemporaryBuffer.reset()	null	org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute()	true	3070
3948.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String)	3940.json,3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getLooseRefs(),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3059
1409.json	org.eclipse.jgit.transport.UploadPack.setRequestValidator(org.eclipse.jgit.transport.UploadPack.RequestValidator)	noCall	noCall	true	1803
9469.json	org.eclipse.jgit.lib.TagBuilder.toByteArray()	noCall	noCall	true	2745
3755.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.CachedPack)	noCall	noCall	true	2410
7466.json	org.eclipse.jgit.api.StatusCommand.addPath(java.lang.String)	null,92.json	org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.pgm.Status.run()	true	1785
499.json	org.eclipse.jgit.junit.http.AppServer.addContext(java.lang.String)	null,561.json	org.eclipse.jgit.lfs.server.fs.LfsServerTest.setup(),org.eclipse.jgit.junit.http.SimpleHttpServer.smart(java.lang.String)	true	3070
9114.json	org.eclipse.jgit.lib.RepositoryCache.clearAll()	9103.json	org.eclipse.jgit.lib.RepositoryCache.clear()	true	3176
9462.json	org.eclipse.jgit.lib.TagBuilder.getTag()	9468.json,7299.json	org.eclipse.jgit.lib.TagBuilder.build(),org.eclipse.jgit.api.TagCommand.call()	true	3176
1131.json	org.eclipse.jgit.notes.NoteMap.newEmptyMap()	6830.json,null,null,6969.json,7219.json,null,7221.json,null	org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.notes.NoteMapMergerTest.setUp(),org.eclipse.jgit.notes.NoteMapTest.testIteratorEmptyMap(),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.notes.NoteMapMergerTest.createLargeNoteMap(java.lang.String, java.lang.String, int, int),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty()	true	2766
4938.json	org.eclipse.jgit.internal.storage.reftree.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String)	4934.json,4930.json,4937.json,4954.json	org.eclipse.jgit.internal.storage.reftree.Command.abort(java.lang.Iterable<org.eclipse.jgit.internal.storage.reftree.Command>, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	884
2110.json	org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName()	null,null,null,null,2094.json,null,2724.json,2306.json,2725.json,2727.json,null,2311.json,1515.json,null,124.json,null,null,1102.json,2310.json,2314.json,1519.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.transport.PushConnectionTest.limitCommandBytes(),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.transport.PushConnectionTest.testWrongOldIdDoesNotReplace(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.internal.ketch.RemoteGitReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.RemoteGitReplica.asUpdateMap(java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking(),org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushConnectionTest.commandOrder(),org.eclipse.jgit.transport.PushConnectionTest.remoteRefNames(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.WalkPushConnection.pickHEAD(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
9192.json	org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte[])	null	org.eclipse.jgit.lib.ObjectIdTest.testSetByte()	true	3176
8809.json	org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean)	8808.json,8809.json	org.eclipse.jgit.lib.ConfigSnapshot.getNames(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean)	true	2260
6195.json	org.eclipse.jgit.storage.pack.PackConfig.isBuildBitmaps()	6209.json,6210.json,5139.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1922
1009.json	org.eclipse.jgit.merge.EolAwareOutputStream.write(int)	1007.json,921.json	org.eclipse.jgit.merge.EolAwareOutputStream.beginln(),org.eclipse.jgit.merge.MergeFormatterPass.writeLine(org.eclipse.jgit.diff.RawText, int)	true	1171
9939.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	9865.json,null	org.eclipse.jgit.lfs.LfsPointer.compareTo(org.eclipse.jgit.lfs.LfsPointer),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareTo()	true	856
3589.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getBlockLimit()	3599.json,3427.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.tableSize(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig)	true	2410
2948.json	org.eclipse.jgit.internal.fsck.FsckError.getNonCommitHeads()	null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead()	true	319
9892.json	org.eclipse.jgit.lfs.LfsPrePushHook.uploadFile(org.eclipse.jgit.lfs.Protocol.ObjectInfo, org.eclipse.jgit.lfs.Protocol.Action, java.nio.file.Path)	9890.json	org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>)	true	102
2456.json	org.eclipse.jgit.transport.PackParser.InflaterStream.read(byte[], int, int)	2455.json,2454.json	org.eclipse.jgit.transport.PackParser.InflaterStream.read(),org.eclipse.jgit.transport.PackParser.InflaterStream.skip(long)	true	2741
1970.json	org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref)	null	org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate)	true	3176
1873.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-f5cffdca-d03e-411d-b86b-1b73264c0120.open(org.eclipse.jgit.transport.URIish)	noCall	noCall	true	1463
9072.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.requireGitDirOrWorkTree()	9070.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()	true	2907
7510.json	org.eclipse.jgit.api.NameRevCommand.addPrefix(java.lang.String, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	7509.json	org.eclipse.jgit.api.NameRevCommand.addPrefixes(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	true	1917
2171.json	org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(org.eclipse.jgit.transport.PacketLineIn)	null,null,null,null,null,2606.json	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1202
2532.json	org.eclipse.jgit.transport.SshSessionFactory.getInstance()	8317.json	org.eclipse.jgit.util.SshSupport.runSshCommand(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, int)	true	3176
9943.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.hashCode()	null,null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.test003_equals(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray()	true	856
7197.json	org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.Ref)	7199.json	org.eclipse.jgit.api.CherryPickCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	true	2795
8043.json	org.eclipse.jgit.util.FS_Win32_Cygwin.userHomeImpl()	noCall	noCall	true	3176
8653.json	org.eclipse.jgit.patch.FileHeader.addHunk(org.eclipse.jgit.patch.HunkHeader)	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
6803.json	org.eclipse.jgit.events.ListenerList.remove(org.eclipse.jgit.events.ListenerHandle)	6786.json	org.eclipse.jgit.events.ListenerHandle.remove()	true	2907
7167.json	org.eclipse.jgit.api.MergeResult.getMergeStatus()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null,null,null,null,null,null,7045.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.api.MergeCommandTest.checkMergeFailedResult(org.eclipse.jgit.api.MergeResult, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason, java.lang.String, java.io.File),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullResult.isSuccessful(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2939
9085.json	org.eclipse.jgit.lib.SymbolicRef.getName()	null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor()	true	3176
5126.json	org.eclipse.jgit.internal.storage.pack.PackWriter.runTasks(java.util.concurrent.ExecutorService, org.eclipse.jgit.lib.ThreadSafeProgressMonitor, org.eclipse.jgit.internal.storage.pack.DeltaTask.Block, java.util.List<java.lang.Throwable>)	5125.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	2874
1033.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int)	1032.json,1033.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int)	true	1933
8339.json	org.eclipse.jgit.util.sha1.SHA1.s1(int, int, int, int, int)	8337.json,8338.json	org.eclipse.jgit.util.sha1.SHA1.compress(),org.eclipse.jgit.util.sha1.SHA1.recompress(int)	true	466
2585.json	org.eclipse.jgit.transport.BaseReceivePack.isQuiet()	noCall	noCall	true	1117
1429.json	org.eclipse.jgit.transport.UploadPack.getAdvertisedOrDefaultRefs()	null,null,1434.json,null	org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.UploadPack.service(),org.eclipse.jgit.transport.UploadPack.fetchV2()	true	2292
2373.json	org.eclipse.jgit.transport.PackParser.setCheckObjectCollisions(boolean)	noCall	noCall	true	1102
8689.json	org.eclipse.jgit.patch.HunkHeader.OldImage.getLinesDeleted()	null,null,null,null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	null,1536.json,null,2308.json,null,3382.json,null,3782.json,null,1518.json,null,null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.write(java.io.File[], org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.List<org.eclipse.jgit.revwalk.RevObject>)	true	3176
6053.json	org.eclipse.jgit.dircache.DirCacheIterator.hasId()	noCall	noCall	true	2838
2909.json	org.eclipse.jgit.internal.ketch.KetchLeader.runAsync(org.eclipse.jgit.internal.ketch.Round)	2812.json	org.eclipse.jgit.internal.ketch.Round.runAsync(org.eclipse.jgit.lib.AnyObjectId)	true	872
8972.json	org.eclipse.jgit.lib.Repository.close()	null,null,null,null,230.json,null,1617.json,null,null,null,null,null,null,null,6880.json,null,2323.json,null,null,null,null,null,null,null,null,null,null,null,null,null,4774.json,null,null,6310.json,null,7050.json,2280.json,null,914.json	org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String),org.eclipse.jgit.lfs.server.fs.CheckoutTest.cleanup(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.tearDown(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.CloneCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyIndex(org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, java.lang.String, java.lang.String),org.eclipse.jgit.transport.InternalFetchConnection.Anonymous-514b2954-31df-43f2-8493-e88a63a26832.run(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCountWithRegisteredRepository(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired(),org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lfs.server.fs.PushTest.cleanup(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.junit.TestRepositoryTest.tearDown(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateRepository.close(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-ede6ccfa-bcf5-4cc2-bd1e-a0589cf0fb28.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath(),org.eclipse.jgit.api.Git.close(),org.eclipse.jgit.transport.InternalPushConnection.Anonymous-9faa373a-b723-4388-8da5-ccfafc7367d7.run(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tearDown(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute()	true	3176
7454.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(java.lang.String)	7410.json,7412.json,7399.json,7423.json,7411.json,7401.json,7414.json,7409.json,7436.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.api.RebaseCommand.checkSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	1912
5353.json	org.eclipse.jgit.revwalk.RevWalk.sort(org.eclipse.jgit.revwalk.RevSort)	null,null,null,null,null,null,null,null,null,1912.json,null,1904.json,5483.json,null	org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4(),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE(),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC(),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7(),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2(),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE(),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO()	true	3176
7932.json	org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte[], int, org.eclipse.jgit.util.MutableInteger)	2700.json,7931.json	org.eclipse.jgit.transport.PushCertificateIdent.parse(java.lang.String),org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte[], int)	true	3176
9460.json	org.eclipse.jgit.lib.TagBuilder.setObjectId(org.eclipse.jgit.lib.AnyObjectId, int)	9461.json,null,null,null,null	org.eclipse.jgit.lib.TagBuilder.setObjectId(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag()	true	2851
4112.json	org.eclipse.jgit.internal.storage.file.PackFile.shouldBeKept()	4817.json,4805.json	org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	2142
1549.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRef(java.lang.String)	2310.json	org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
1831.json	org.eclipse.jgit.transport.ReceiveCommand.link(java.lang.String, java.lang.String, java.lang.String)	3130.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
7559.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.reset()	noCall	noCall	true	2839
1271.json	org.eclipse.jgit.transport.RemoteConfig.replaceUri(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	2287
9540.json	org.eclipse.jgit.lib.RefUpdate.getPushCertificate()	noCall	noCall	true	1088
10287.json	org.eclipse.jgit.http.server.glue.MetaFilter.destroy()	10256.json	org.eclipse.jgit.http.server.glue.MetaServlet.destroy()	true	2438
2128.json	org.eclipse.jgit.transport.PushCertificate.getPusherIdent()	null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1095
5077.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(boolean)	1536.json,1518.json,null	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2656
8871.json	org.eclipse.jgit.lib.Config.escapeSubsection(java.lang.String)	null,null,null	org.eclipse.jgit.lib.ConfigTest.testEscapeValueInvalidCharacters(),org.eclipse.jgit.lib.ConfigTest.testEscapeSubsectionInvalidCharacters(),org.eclipse.jgit.lib.ConfigTest.assertSubsectionRoundTrip(java.lang.String, java.lang.String)	true	3176
1823.json	org.eclipse.jgit.transport.TransportBundleFile.openFetch()	noCall	noCall	true	3176
5059.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice.size()	5054.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask)	true	1885
1982.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String)	7521.json,6836.json	org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.api.FetchCommand.call()	true	3176
1811.json	org.eclipse.jgit.transport.TransportLocal.openRepo()	1813.json,1812.json	org.eclipse.jgit.transport.TransportLocal.openPush(),org.eclipse.jgit.transport.TransportLocal.openFetch()	true	1198
1369.json	org.eclipse.jgit.transport.WalkFetchConnection.swapFetchQueue()	1368.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
7684.json	org.eclipse.jgit.treewalk.filter.TreeFilter.toString()	5633.json,null,7729.json,null,null,null	org.eclipse.jgit.revwalk.FollowFilter.toString(),org.eclipse.jgit.treewalk.filter.OrTreeFilter.List.toString(),org.eclipse.jgit.treewalk.filter.NotTreeFilter.toString(),org.eclipse.jgit.treewalk.filter.AndTreeFilter.List.toString(),org.eclipse.jgit.treewalk.filter.AndTreeFilter.Binary.toString(),org.eclipse.jgit.treewalk.filter.OrTreeFilter.Binary.toString()	true	3176
1784.json	org.eclipse.jgit.transport.SideBandInputStream.progress(java.lang.String)	1783.json	org.eclipse.jgit.transport.SideBandInputStream.needDataPacket()	true	3176
4623.json	org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(boolean)	5890.json,4491.json,4494.json	org.eclipse.jgit.dircache.DirCache.lock(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String)	true	3176
10092.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getOutputStream(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	856
2312.json	org.eclipse.jgit.transport.WalkPushConnection.isNewRepository()	2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
3461.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setPerformsAtomicTransactions(boolean)	null,null,null,null,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()	true	920
1348.json	org.eclipse.jgit.transport.CredentialsProvider.setDefault(org.eclipse.jgit.transport.CredentialsProvider)	1639.json,5.json,441.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.install(),org.eclipse.jgit.awtui.AwtCredentialsProvider.install(),org.eclipse.jgit.console.ConsoleCredentialsProvider.install()	true	2768
6838.json	org.eclipse.jgit.api.FetchCommand.setRecurseSubmodules(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode)	6835.json,286.json,null,7131.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommand.call()	true	463
6882.json	org.eclipse.jgit.api.CloneCommand.isNonEmptyDirectory(java.io.File)	6883.json	org.eclipse.jgit.api.CloneCommand.verifyDirectories(org.eclipse.jgit.transport.URIish)	true	502
9493.json	org.eclipse.jgit.lib.RebaseTodoLine.getAction()	null,7399.json,7402.json,7427.json,9756.json,null,null,null,7411.json,null,7414.json	org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.popSteps(int),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand(),org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.api.RebaseCommand.checkSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine)	true	2028
2198.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.KD(java.lang.String, java.lang.String)	null	org.eclipse.jgit.transport.HttpAuthMethod.Digest.configureRequest(org.eclipse.jgit.transport.http.HttpConnection)	true	2813
4466.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.add(org.eclipse.jgit.lib.AnyObjectId)	4741.json,4746.json,4751.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	2833
4986.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.translate(org.eclipse.jgit.transport.ReceiveCommand.Result, org.eclipse.jgit.lib.RefUpdate.Result)	4985.json,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	880
3475.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.Out.getData()	3469.json,3470.json,3474.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.Anonymous-65ad237f-66dc-4ef5-8caf-cf364ea6a76d.flush(),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.writeFile(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.Out.read(long, java.nio.ByteBuffer)	true	2410
8894.json	org.eclipse.jgit.lib.Config.notifyUponTransientChanges()	8908.json	org.eclipse.jgit.lib.Config.setStringList(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	2852
6589.json	org.eclipse.jgit.diff.DiffFormatter.writeAddedLine(org.eclipse.jgit.diff.RawText, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	2920
19.json	org.eclipse.jgit.awtui.CommitGraphPane.GraphCellRender.getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)	noCall	noCall	true	3176
272.json	org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	269.json	org.eclipse.jgit.pgm.Show.run()	true	2154
2511.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.resolveKey(java.lang.String)	2518.json,2517.json,2521.json,2516.json,2514.json,2515.json,2519.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.deleteFile(java.lang.String),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.open(java.lang.String),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.openAlternate(java.lang.String),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getPackNames(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, byte[])	true	3176
3805.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long, byte[], int, int, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3806.json,3809.json,3803.json,3811.json,3812.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex)	true	2410
1722.json	org.eclipse.jgit.transport.URIish.getPort()	null,1806.json,null,null,1883.json,null,null,null,null,null,null,null,1728.json,null,2152.json,null,null,null,10153.json,null,null,null,2151.json,null,null,2298.json,1724.json,null,null,null,null,null,null,null,null,null,null,2236.json,null,1495.json,null,1725.json,null,1820.json,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.TransportGitAnon.service(java.lang.String, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.TransportGitAnon.openConnection(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	3176
1718.json	org.eclipse.jgit.transport.URIish.getUser()	null,2186.json,1806.json,null,1883.json,null,null,null,null,1728.json,null,null,null,10153.json,null,null,2298.json,1724.json,null,null,null,null,null,null,null,null,2506.json,null,1495.json,null,1725.json,1820.json,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.HttpAuthMethod.authorize(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testALot(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	3176
4891.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getObjectCount()	noCall	noCall	true	2683
5680.json	org.eclipse.jgit.revwalk.FIFORevQueue.next()	5536.json,5809.json,null,5577.json,null,null,5400.json,7502.json,5644.json,null	org.eclipse.jgit.revwalk.RevCommit.slowCarryFlags(org.eclipse.jgit.revwalk.FIFORevQueue, int),org.eclipse.jgit.revwalk.TopoSortGenerator.next(),org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront(),org.eclipse.jgit.revwalk.DelayRevQueue.next(),org.eclipse.jgit.revwalk.FIFORevQueueTest.testCloneEmpty(),org.eclipse.jgit.revwalk.FIFORevQueueTest.testAddLargeBlocks(),org.eclipse.jgit.revwalk.RevWalk.reset(int),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.revwalk.DepthGenerator.next(),org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.next()	true	3176
357.json	org.eclipse.jgit.pgm.Init.requiresRepository()	noCall	noCall	true	3176
7400.json	org.eclipse.jgit.api.RebaseCommand.autoStash()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1648
6260.json	org.eclipse.jgit.gitrepo.RepoProject.setUrl(java.lang.String)	6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	true	1115
2921.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	319
8155.json	org.eclipse.jgit.util.io.AutoLFInputStream.fillBuffer()	8152.json	org.eclipse.jgit.util.io.AutoLFInputStream.read(byte[], int, int)	true	2851
2401.json	org.eclipse.jgit.transport.PackParser.removeBaseById(org.eclipse.jgit.lib.AnyObjectId)	2403.json	org.eclipse.jgit.transport.PackParser.firstChildOf(org.eclipse.jgit.transport.PackedObjectInfo)	true	3176
7913.json	org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl()	7266.json,null,null,null,null,null,null,6862.json,null,null,null,null,null,null,null,null,6835.json,null,null,null,null,null,7227.json,null	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	2355
9258.json	org.eclipse.jgit.lib.internal.WorkQueue.Anonymous-66a2b465-5600-4b5a-8689-7b6edf69dc86.newThread(java.lang.Runnable)	noCall	noCall	true	2658
5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5130.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
6484.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.initialize(int, int, int, int)	6482.json	org.eclipse.jgit.diff.MyersDiff.calculateEdits(org.eclipse.jgit.diff.Edit)	true	3169
3155.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setIndexObjects(boolean)	null,135.json,null,3068.json,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.getReftableConfig(),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef()	true	297
5142.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject)	3375.json,null,5096.json,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack(),org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(java.util.Iterator<org.eclipse.jgit.revwalk.RevObject>),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.pack(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3176
7616.json	org.eclipse.jgit.treewalk.TreeWalk.pathOf(byte[], int, int)	7824.json,7856.json,7855.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String)	true	2881
9865.json	org.eclipse.jgit.lfs.LfsPointer.compareTo(org.eclipse.jgit.lfs.LfsPointer)	noCall	noCall	true	102
1645.json	org.eclipse.jgit.transport.DaemonClient.getRemoteAddress()	null	org.eclipse.jgit.transport.Daemon.Anonymous-5c6dde27-6f03-413e-abe5-3ff82e0f92a7.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
4285.json	org.eclipse.jgit.internal.storage.file.WindowCache.isFull()	4292.json	org.eclipse.jgit.internal.storage.file.WindowCache.evict()	true	3176
5496.json	org.eclipse.jgit.revwalk.ObjectWalk.getPathHashCode()	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2893
8821.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.Anonymous-a784fc90-f70b-43cf-92b9-c566da4fc4d7.next()	noCall	noCall	true	2260
1753.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int)	noCall	noCall	true	2658
7657.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getName(byte[], int)	1158.json,null	org.eclipse.jgit.notes.NoteParser.storeNonNote(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryPath()	true	3176
9347.json	org.eclipse.jgit.lib.ObjectId.fromRaw(byte[])	3806.json,null,null,null,6735.json,4017.json,3812.json,3974.json,null,null,null,3809.json,4139.json,4719.json,4143.json,6091.json,10399.json,4140.json,5106.json,null,null,null,4146.json,null,null,null,3971.json,null,null,null,null,8940.json,10429.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.diff.PatchIdDiffFormatter.getCalulatedPatchId(),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte[]),org.eclipse.jgit.http.server.ServletUtils.etag(byte[]),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.pack.PackWriter.computeName(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.id(int),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdTest.testGetByte(),org.eclipse.jgit.junit.TestRepository.assertHash(org.eclipse.jgit.revwalk.RevObject, byte[]),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.id(int),org.eclipse.jgit.lib.ObjectIdTest.testSetByte(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.id(int),org.eclipse.jgit.lib.ObjectIdSerializer.readWithoutMarker(java.io.InputStream),org.eclipse.jgit.http.server.FileSender.getTailChecksum()	true	3176
4513.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectId(long)	noCall	noCall	true	3176
10288.json	org.eclipse.jgit.http.server.glue.MetaFilter.Anonymous-da4bd7d7-e372-481c-8c3a-57bcc3ab39d2.add(java.lang.Object)	noCall	noCall	true	3070
1171.json	org.eclipse.jgit.notes.LeafBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter)	1226.json	org.eclipse.jgit.notes.NoteMapMerger.write(org.eclipse.jgit.notes.NonNoteEntry)	true	2766
5122.json	org.eclipse.jgit.internal.storage.pack.PackWriter.reselectNonDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5130.json,5119.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	1892
4451.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor)	noCall	noCall	true	2906
2446.json	org.eclipse.jgit.transport.PackParser.DeltaChain.add(org.eclipse.jgit.transport.PackParser.UnresolvedDelta)	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	3176
5882.json	org.eclipse.jgit.dircache.DirCache.replace(org.eclipse.jgit.dircache.DirCacheEntry[], int)	5939.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.replace()	true	3176
5221.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.wantWrite()	5245.json,5130.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
3011.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.lang.String, java.io.File)	10179.json	org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String)	true	289
6930.json	org.eclipse.jgit.api.PushCommand.setDryRun(boolean)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
3133.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.reader()	3251.json,3688.json,3687.json,3689.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String)	true	235
3681.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.performsAtomicTransactions()	noCall	noCall	true	235
6631.json	org.eclipse.jgit.diff.SimilarityIndex.common(long[], int, long[], int)	6630.json	org.eclipse.jgit.diff.SimilarityIndex.common(org.eclipse.jgit.diff.SimilarityIndex, org.eclipse.jgit.diff.SimilarityIndex)	true	2899
3704.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBitmapIndexCount()	noCall	noCall	true	387
6164.json	org.eclipse.jgit.storage.pack.PackConfig.isDeltaCompress()	null,5113.json,5119.json,6209.json,6210.json	org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	2893
4148.json	org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex()	null,4341.json,4340.json,4834.json	org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.internal.storage.file.WindowCursor.getCachedPacksAndUpdate(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder),org.eclipse.jgit.internal.storage.file.WindowCursor.getBitmapIndex(),org.eclipse.jgit.internal.storage.file.GC.getStatistics()	true	1922
7817.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength()	7040.json,7530.json,6981.json,7818.json,null,null,5910.json,7830.json,7833.json,null	org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.size(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator)	true	3176
3156.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.fromConfig(org.eclipse.jgit.lib.Config)	null	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.getReftableConfig()	true	297
2054.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.openAlternate(java.lang.String)	noCall	noCall	true	3176
4911.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.peel(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	880
8670.json	org.eclipse.jgit.patch.Patch.addFile(org.eclipse.jgit.patch.FileHeader)	8678.json,8679.json,8680.json	org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int),org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int),org.eclipse.jgit.patch.Patch.parseTraditionalPatch(byte[], int, int)	true	3176
4069.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.getSize()	noCall	noCall	true	3176
1454.json	org.eclipse.jgit.transport.UploadPack.parseWants()	null	org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut)	true	1919
6200.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapRecentCommitCount(int)	6209.json,null	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.newPeparer(int, int, int)	true	963
1857.json	org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result)	1853.json,1246.json,9326.json	org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	2292
4525.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.next()	noCall	noCall	true	3176
2027.json	org.eclipse.jgit.transport.Transport.getPackConfig()	2308.json,1518.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	true	2874
3621.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getLastModified()	3912.json,3366.json,null,null,3365.json,null	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList.getLastModified(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsExpiredGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableComparator()	true	2410
3349.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doLink(java.lang.String)	noCall	noCall	true	2410
6063.json	org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()	7019.json,null,null,null,null,5910.json,null,9570.json,7040.json,7796.json,6041.json,null,6032.json,7699.json,7760.json,7530.json,null,null,null,null,null,6024.json,6981.json,null,7243.json,7764.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
2760.json	org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	noCall	noCall	true	872
6683.json	org.eclipse.jgit.diff.RenameDetector.getRenameLimit()	null,6685.json	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.isOverRenameLimit()	true	2899
7790.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.initRootIterator(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	2881
7522.json	org.eclipse.jgit.api.TransportCommand.setCredentialsProvider(org.eclipse.jgit.transport.CredentialsProvider)	7527.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.api.TransportCommand)	true	2686
3150.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getMaxIndexLevels()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
10382.json	org.eclipse.jgit.http.server.GitSmartHttpTools.infoRefsResultType(java.lang.String)	noCall	noCall	false	2391
5294.json	org.eclipse.jgit.attributes.Attributes.getState(java.lang.String)	5295.json,5297.json,5296.json,5298.json	org.eclipse.jgit.attributes.Attributes.isSet(java.lang.String),org.eclipse.jgit.attributes.Attributes.isUnspecified(java.lang.String),org.eclipse.jgit.attributes.Attributes.isUnset(java.lang.String),org.eclipse.jgit.attributes.Attributes.isCustom(java.lang.String)	true	925
6486.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getIndex(int, int)	6501.json,6487.json,6488.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getX(int, int),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getSnake(int, int)	true	3169
8230.json	org.eclipse.jgit.util.io.IsolatedOutputStream.write(int)	noCall	noCall	true	573
2041.json	org.eclipse.jgit.transport.UploadPack.recvWants()	1434.json	org.eclipse.jgit.transport.UploadPack.service()	true	3176
7580.json	org.eclipse.jgit.treewalk.TreeWalk.setAttributesNodeProvider(org.eclipse.jgit.attributes.AttributesNodeProvider)	noCall	noCall	true	935
2147.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-e3e6033b-75e4-467e-8fec-c0a015e0353e.open(org.eclipse.jgit.transport.URIish)	noCall	noCall	true	1463
4643.json	org.eclipse.jgit.internal.storage.file.PackIndex.isTOC(byte[])	4642.json	org.eclipse.jgit.internal.storage.file.PackIndex.read(java.io.InputStream)	true	3176
8659.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int)	8678.json,null,null,null,null	org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.assertParse(org.eclipse.jgit.patch.FileHeader)	true	3176
3111.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockIntoBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	3110.json,3114.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlock(org.eclipse.jgit.internal.storage.io.BlockSource, long, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int)	true	297
9046.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getFS()	9074.json,9079.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.safeFS()	true	2907
4151.json	org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(long)	4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
2271.json	org.eclipse.jgit.transport.TransportHttp.Service.getOutputStream()	2265.json,2267.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	2186
9552.json	org.eclipse.jgit.lib.RefUpdate.setCheckConflicting(boolean)	9326.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	1898
4010.json	org.eclipse.jgit.internal.storage.file.PackInserter.idxFor(java.io.File)	null,null	org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.internal.storage.file.PackInserter.close()	true	221
6932.json	org.eclipse.jgit.api.PushCommand.setThin(boolean)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
2722.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	null,2721.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.Anonymous-cf7dcb13-a265-4d33-bc49-d2ae661afcbd.run(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
3125.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock()	3098.json,3111.json,3112.json,3114.json,3096.json,3116.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockIntoBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.readPositionFromIndex(),org.eclipse.jgit.internal.storage.reftable.BlockReader.verifyIndex()	true	297
5048.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDeltaVarIntLength(long)	5047.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDelta(long, byte[], int)	true	1887
7502.json	org.eclipse.jgit.api.NameRevCommand.call()	null,null,null	org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult(),org.eclipse.jgit.api.NameRevCommandTest.assertOneResult(java.lang.String, org.eclipse.jgit.api.NameRevCommand, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor()	true	1917
1517.json	org.eclipse.jgit.transport.BasePackPushConnection.enableCapabilities(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	1515.json	org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
114.json	org.eclipse.jgit.pgm.Blame.uniqueAbbrevLen(org.eclipse.jgit.revwalk.RevCommit)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	1515
7304.json	org.eclipse.jgit.api.TagCommand.getMessage()	noCall	noCall	true	2844
6357.json	org.eclipse.jgit.fnmatch.AbstractHead.getNextHeads(char)	noCall	noCall	true	3176
7205.json	org.eclipse.jgit.api.CherryPickCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	138
8864.json	org.eclipse.jgit.lib.NullProgressMonitor.update(int)	noCall	noCall	true	3176
2369.json	org.eclipse.jgit.transport.RefSpec.toString()	null,null,null,null,null,null,null,null,null,null,null,1265.json,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testSetDestination(),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testSetSource(),org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty(),org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon()	true	3176
3821.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.setBlockSize(int)	3646.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
1270.json	org.eclipse.jgit.transport.RemoteConfig.getReplacements(org.eclipse.jgit.lib.Config, java.lang.String)	noCall	noCall	true	2287
5925.json	org.eclipse.jgit.dircache.DirCacheTree.insertChild(int, org.eclipse.jgit.dircache.DirCacheTree)	5924.json	org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
7421.json	org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	7410.json,7428.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	2580
334.json	org.eclipse.jgit.pgm.opt.RevTreeHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
9550.json	org.eclipse.jgit.lib.RefUpdate.link(java.lang.String)	null,null,null,null,null,null,4849.json,4568.json,7421.json,1853.json,null,null,null,6887.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7471.json,null,null,3835.json,null,7436.json	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsPeel(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref(),org.eclipse.jgit.junit.TestRepositoryTest.nonRacingChange(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsMultipleCommands(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsSymrefs(),org.eclipse.jgit.junit.TestRepositoryTest.reattachToMaster_Race(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.junit.TestRepositoryTest.amendHead(),org.eclipse.jgit.junit.TestRepositoryTest.commitToUnbornHead(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeSymref(java.lang.String, java.lang.String),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean),org.eclipse.jgit.lib.RefTest.writeSymref(java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	3059
7915.json	org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUpdate()	7266.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl()	true	2355
1426.json	org.eclipse.jgit.transport.UploadPack.upload(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	2323.json,91.json,null,null	org.eclipse.jgit.transport.InternalFetchConnection.Anonymous-514b2954-31df-43f2-8493-e88a63a26832.run(),org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.Daemon.Anonymous-877d5170-d55d-47c6-bb03-61a3912bd36a.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>)	true	3176
3628.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileSize(org.eclipse.jgit.internal.storage.pack.PackExt)	null,null,null,null,3773.json,null,3768.json,null,3366.json,null,null,null,null,3375.json,3381.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-cda10879-e0a4-4db4-8b33-7a8202285458.compare(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.estimatePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizesWithGcAndGcRestPacks(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateCompactPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateUnreachableGarbagePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.estimateGcPackSize(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource...),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	1971
4193.json	org.eclipse.jgit.internal.storage.file.PackLock.unlock()	2603.json,4719.json,1950.json	org.eclipse.jgit.transport.BaseReceivePack.unlockPack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.transport.FetchProcess.execute(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	noCall	noCall	true	1509
7010.json	org.eclipse.jgit.api.ResetCommand.resolveRefToCommitId()	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	1731
6645.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
2615.json	org.eclipse.jgit.transport.BaseReceivePack.Anonymous-d8015b13-f089-4e87-8900-bc7d286d1315.limitExceeded()	noCall	noCall	true	1565
5852.json	org.eclipse.jgit.ignore.internal.PathMatcher.isWild(org.eclipse.jgit.ignore.internal.IMatcher)	5843.json,5850.json	org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(java.util.List<java.lang.String>, java.lang.Character, boolean),org.eclipse.jgit.ignore.internal.PathMatcher.iterate(java.lang.String, int, int, boolean, boolean)	true	108
2210.json	org.eclipse.jgit.transport.TransportHttp.Anonymous-ed70e8af-8a92-4443-9647-10aa5d7180aa.open(org.eclipse.jgit.transport.URIish)	noCall	noCall	true	2187
8740.json	org.eclipse.jgit.patch.FormatError.getBuffer()	noCall	noCall	true	3176
9194.json	org.eclipse.jgit.lib.MutableObjectId.fromRaw(int[])	noCall	noCall	true	3176
1756.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int, int, int)	noCall	noCall	true	2658
8547.json	org.eclipse.jgit.util.RefList.add(int, T)	null,null,null,8549.json,3976.json,8016.json,null,null	org.eclipse.jgit.util.RefListTest.testAddToMiddleOfListByInsertionPosition(),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.util.RefListTest.testAddToEndOfList(),org.eclipse.jgit.util.RefList.put(T),org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefListTest.testAddToEmptyList(),org.eclipse.jgit.util.RefListTest.testAddToFrontOfList()	true	3060
6942.json	org.eclipse.jgit.api.errors.FilterFailedException.getFilterCommand()	noCall	noCall	true	925
6423.json	org.eclipse.jgit.blame.BlameResult.computeNext()	noCall	noCall	true	2567
3174.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.compare(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	noCall	noCall	true	297
6400.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.getNextCandidate(int)	noCall	noCall	true	2567
4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	noCall	noCall	true	880
6574.json	org.eclipse.jgit.diff.DiffFormatter.isAdd(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2899
3585.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.size()	3563.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exists()	true	2410
448.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.YesNoType)	444.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
3806.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	3794.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.get(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	true	2410
2796.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushAsync(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	2788.json,2791.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.pushCommitAsync(org.eclipse.jgit.internal.ketch.LogIndex)	true	872
4110.json	org.eclipse.jgit.internal.storage.file.PackFile.getPackName()	null,null,null,4895.json,4805.json	org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(),org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFile(java.lang.String),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	2683
8731.json	org.eclipse.jgit.patch.BinaryHunk.getFileHeader()	null,null	org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta()	true	3176
4374.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte[])	noCall	noCall	true	1922
2947.json	org.eclipse.jgit.internal.fsck.FsckError.getCorruptIndices()	3452.json,null	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testHealthyRepo()	true	319
7575.json	org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	null,null,5657.json,203.json,null,null,7018.json,null,1005.json,2839.json,110.json,7477.json,7530.json,null,null,7896.json,null,null,null,7901.json,null,6570.json,null,6758.json,null,null,6472.json,null,5910.json,9570.json,6470.json,null,6043.json,null,7040.json,7568.json,null,null,6041.json,7975.json,null,null,null,null,null,7193.json,null,null,null,null,null,4829.json,null,7423.json,385.json,7370.json	org.eclipse.jgit.api.StashCreateCommandTest.createTreeWalk(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(org.eclipse.jgit.revwalk.RevCommit, boolean, boolean),org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.createTreeWalk(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(java.util.Set<java.lang.String>),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.treewalk.filter.TreeFilter, boolean),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>)	true	3176
3838.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.scanForRepoChanges()	null,null	org.eclipse.jgit.transport.UploadPackTest.generateBitmaps(org.eclipse.jgit.internal.storage.dfs.InMemoryRepository),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps()	true	2410
4927.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	880
3470.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.writeFile(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackExt)	noCall	noCall	true	2410
2453.json	org.eclipse.jgit.transport.PackParser.InflaterStream.open(org.eclipse.jgit.transport.PackParser.Source, long)	2444.json	org.eclipse.jgit.transport.PackParser.inflate(org.eclipse.jgit.transport.PackParser.Source, long)	true	2741
2777.json	org.eclipse.jgit.internal.ketch.KetchReplica.getName()	2778.json,2720.json,2758.json,2772.json	org.eclipse.jgit.internal.ketch.KetchReplica.describeForLog(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.describeForLog(),org.eclipse.jgit.internal.ketch.LocalReplica.describeForLog(),org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
2891.json	org.eclipse.jgit.internal.ketch.Proposal.format(java.lang.StringBuilder, org.eclipse.jgit.lib.Ref, java.lang.String)	2890.json	org.eclipse.jgit.internal.ketch.Proposal.toString()	true	872
8336.json	org.eclipse.jgit.util.sha1.SHA1.initBlock(byte[], int)	8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	true	466
9101.json	org.eclipse.jgit.lib.RepositoryCache.getRegisteredKeys()	null,null,null,null,null,null	org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegisteredWhenEmpty(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative(),org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired(),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister()	true	1083
153.json	org.eclipse.jgit.pgm.debug.ReadReftable.run()	noCall	noCall	true	297
5177.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()	5011.json,null,null,5187.json,5019.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clear(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128(),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize(),org.eclipse.jgit.internal.storage.pack.DeltaIndex.toString(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
521.json	org.eclipse.jgit.junit.http.AccessEvent.getRequestHeader(java.lang.String)	noCall	noCall	true	3070
6420.json	org.eclipse.jgit.blame.BlameResult.getSourcePath(int)	null,null,117.json,null	org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.Blame.path(int),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String)	true	2567
6556.json	org.eclipse.jgit.diff.DiffFormatter.setNewPrefix(java.lang.String)	267.json,375.json,6548.json,7282.json,266.json,376.json,244.json,245.json	org.eclipse.jgit.pgm.Show.noPrefix(boolean),org.eclipse.jgit.pgm.Log.dstPrefix(java.lang.String),org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.pgm.Show.dstPrefix(java.lang.String),org.eclipse.jgit.pgm.Log.noPrefix(boolean),org.eclipse.jgit.pgm.Diff.dstPrefix(java.lang.String),org.eclipse.jgit.pgm.Diff.noPrefix(boolean)	true	2839
4762.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.reuseMap(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	4761.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
6718.json	org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry)	null,6686.json,null,null,6714.json	org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.diff.RenameDetector.breakModifies(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[])	true	2899
8437.json	org.eclipse.jgit.util.FS.setHidden(java.io.File, boolean)	4849.json	org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean)	true	1864
1537.json	org.eclipse.jgit.transport.BundleWriter.newPackWriter()	1536.json	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	424
6944.json	org.eclipse.jgit.api.errors.FilterFailedException.getOutput()	noCall	noCall	true	925
8161.json	org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte[], int, int)	8163.json,8159.json,8160.json	org.eclipse.jgit.util.io.AutoLFOutputStream.decideMode(),org.eclipse.jgit.util.io.AutoLFOutputStream.write(int),org.eclipse.jgit.util.io.AutoLFOutputStream.write(byte[])	true	824
7439.json	org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.revwalk.RevCommit)	7266.json,null,null	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate()	true	2756
9886.json	org.eclipse.jgit.lfs.LfsPrePushHook.loadLfsPointer(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	9884.json	org.eclipse.jgit.lfs.LfsPrePushHook.findLfsPointers(java.util.Set<org.eclipse.jgit.lfs.LfsPointer>, org.eclipse.jgit.revwalk.ObjectWalk)	true	102
2548.json	org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedObjects()	null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-927ee934-d631-4ad2-b01a-49c4e722782b.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	2627
3343.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRepository()	noCall	noCall	true	2410
6344.json	org.eclipse.jgit.fnmatch.FileNameMatcher.indexOfUnescaped(java.lang.String, char, int)	6339.json,6340.json	org.eclipse.jgit.fnmatch.FileNameMatcher.findGroupEnd(int, java.lang.String),org.eclipse.jgit.fnmatch.FileNameMatcher.parseHeads(java.lang.String, java.lang.Character)	true	1891
10139.json	org.eclipse.jgit.archive.TxzFormat.suffixes()	noCall	noCall	true	1830
8824.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.size()	noCall	noCall	true	2711
2898.json	org.eclipse.jgit.internal.ketch.KetchLeader.findLocal(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>)	2896.json	org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>)	true	872
937.json	org.eclipse.jgit.merge.MergeChunk.getSequenceIndex()	915.json,919.json,7173.json,918.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.merge.MergeFormatterPass.writeConflictChange(org.eclipse.jgit.merge.MergeChunk),org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>),org.eclipse.jgit.merge.MergeFormatterPass.writeConflictStart(org.eclipse.jgit.merge.MergeChunk)	true	3076
1419.json	org.eclipse.jgit.transport.UploadPack.setPostUploadHook(org.eclipse.jgit.transport.PostUploadHook)	null	org.eclipse.jgit.transport.TestProtocolTest.DefaultUpload.create(org.eclipse.jgit.transport.TestProtocolTest.User, org.eclipse.jgit.lib.Repository)	true	1094
9621.json	org.eclipse.jgit.lib.AnyObjectId.toString()	7388.json,7009.json,6979.json	org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ResetCommand.parseCommit(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CommitCommand.call()	true	3176
8207.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.print(int)	144.json,352.json	org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	2093
8675.json	org.eclipse.jgit.patch.Patch.readFully(java.io.InputStream)	8674.json	org.eclipse.jgit.patch.Patch.parse(java.io.InputStream)	true	3176
6267.json	org.eclipse.jgit.gitrepo.RepoProject.getLinkFiles()	6324.json,6309.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles(),org.eclipse.jgit.gitrepo.RepoCommand.call()	true	418
5946.json	org.eclipse.jgit.dircache.DirCacheEditor.commit()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7479.json,null,null,null,7481.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.merge.MergerTest.addSubmoduleToIndex(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.lib.IndexDiffTest.removeFromIndex(java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
7608.json	org.eclipse.jgit.treewalk.TreeWalk.isPostChildren()	null,null,null	org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree()	true	3176
6232.json	org.eclipse.jgit.revplot.PlotCommit.addMergingLane(org.eclipse.jgit.revplot.PlotLane)	6248.json	org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit)	true	1480
6086.json	org.eclipse.jgit.storage.file.FileBasedConfig.notifyUponTransientChanges()	noCall	noCall	true	2852
954.json	org.eclipse.jgit.merge.MergeResult.Anonymous-959e9342-4a3c-4042-9ee2-f0a18aceca54.remove()	noCall	noCall	true	3076
6987.json	org.eclipse.jgit.api.CommitCommand.getMessage()	noCall	noCall	true	2953
6034.json	org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2844
8075.json	org.eclipse.jgit.util.ChangeIdUtil.indexOfChangeId(java.lang.String, java.lang.String)	null,8074.json,null	org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.util.ChangeIdUtilTest.testIndexOfChangeId()	true	1967
1866.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-a82da11c-2881-41fe-9e0e-dc40c8e5e2b4.getName()	noCall	noCall	true	2645
2725.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	2723.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	872
5456.json	org.eclipse.jgit.revwalk.FooterLine.getValue()	null,null,null,5457.json,5458.json,null,null,null,null,5556.json,null,null,null,null	org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers(),org.eclipse.jgit.revwalk.FooterLine.getEmailAddress(),org.eclipse.jgit.revwalk.FooterLine.toString(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testShortKey(),org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF(),org.eclipse.jgit.revwalk.RevCommit.getFooterLines(org.eclipse.jgit.revwalk.FooterKey),org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter()	true	3176
4884.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int)	4875.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int, boolean)	true	2543
5023.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.ZipStream.finish()	5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
8785.json	org.eclipse.jgit.lib.ConfigLine.eqIgnoreCase(java.lang.String, java.lang.String)	8784.json,8783.json	org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String, java.lang.String)	true	3176
2819.json	org.eclipse.jgit.internal.ketch.KetchSystem.getTxnNamespace()	2808.json,2759.json,2764.json	org.eclipse.jgit.internal.ketch.KetchReplica.canDelete(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
6097.json	org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitLimit()	null,4287.json,6111.json	org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.checkLimits(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.internal.storage.file.WindowCache.tableSize(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
6730.json	org.eclipse.jgit.diff.DiffEntry.getNewId()	null,null,null,null,null,6600.json,null,null,null,null,null,6595.json,6733.json,null,null,null,null,null,null,null,null,null,6718.json,null,null,6601.json,null,null,null,null,null,null,null	org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntry.getId(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
5306.json	org.eclipse.jgit.attributes.Attribute.getState()	5294.json,5315.json,null,null,null,null,5320.json	org.eclipse.jgit.attributes.Attributes.getState(java.lang.String),org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.attributes.AttributeTest.testBasic(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	1249
303.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String)	302.json,123.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult)	true	3011
3275.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.computeVarintSize(long)	null,null,3183.json,null,3176.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.sizeBytes()	true	297
5137.json	org.eclipse.jgit.internal.storage.pack.PackWriter.deflater()	5132.json,5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2902
8168.json	org.eclipse.jgit.util.io.LimitedInputStream.read()	noCall	noCall	true	1565
8543.json	org.eclipse.jgit.util.RefList.get(java.lang.String)	null,4970.json,150.json,null,8015.json,3976.json,3564.json,8017.json,3586.json,null,4906.json,null,149.json,8016.json,null,3567.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.reftree.Scanner.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRef(java.lang.String),org.eclipse.jgit.util.RefMap.get(java.lang.Object),org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exactRef(java.lang.String),org.eclipse.jgit.util.RefMap.remove(java.lang.Object),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.get(java.lang.String),org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String),org.eclipse.jgit.util.RefListTest.testEmptyBuilder(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefListTest.testFindContainsGet(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	true	3060
2779.json	org.eclipse.jgit.internal.ketch.KetchReplica.getParticipation()	2896.json,2910.json,2772.json	org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
3601.json	org.eclipse.jgit.internal.storage.dfs.PackInputStream.read(byte[], int, int)	3602.json	org.eclipse.jgit.internal.storage.dfs.PackInputStream.read()	true	2410
5471.json	org.eclipse.jgit.revwalk.AbstractRevQueue.AlwaysEmptyQueue.add(org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
7729.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.toString()	noCall	noCall	true	3176
1588.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getResponseMessage()	noCall	noCall	true	1572
5816.json	org.eclipse.jgit.ignore.FastIgnoreRule.isEmpty()	5864.json	org.eclipse.jgit.ignore.IgnoreNode.parse(java.io.InputStream)	true	1056
7099.json	org.eclipse.jgit.api.Git.describe()	null,null,274.json,null,null	org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.api.DescribeCommandTest.testDescribe(),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, java.lang.String...),org.eclipse.jgit.api.DescribeCommandTest.noTargetSet()	true	1717
4183.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getNewId()	noCall	noCall	true	3176
4514.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(long)	noCall	noCall	true	1808
4156.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeInt(int)	noCall	noCall	true	1922
9912.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.shouldBeRecursive()	noCall	noCall	true	516
4658.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.name()	null,2938.json,null	org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testIteratorReturnedValues1(),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testIteratorReturnedValues2()	true	3176
22.json	org.eclipse.jgit.awtui.CommitGraphPane.GraphCellRender.paintComponent(java.awt.Graphics)	noCall	noCall	true	3176
5858.json	org.eclipse.jgit.ignore.internal.AbstractMatcher.equals(java.lang.Object)	noCall	noCall	true	1322
1969.json	org.eclipse.jgit.transport.FetchProcess.localRefs()	1959.json,1964.json,1968.json,null,1963.json	org.eclipse.jgit.transport.FetchProcess.askForIsComplete(),org.eclipse.jgit.transport.FetchProcess.expandFetchTags(),org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags()	true	2210
5553.json	org.eclipse.jgit.revwalk.RevCommit.guessEncoding()	5549.json,5548.json,5554.json	org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.revwalk.RevCommit.getFullMessage(),org.eclipse.jgit.revwalk.RevCommit.getFooterLines()	true	880
3637.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getReftableStats()	null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable()	true	286
8469.json	org.eclipse.jgit.util.FS.getAttributes(java.io.File)	noCall	noCall	true	1579
8890.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String, boolean)	null	org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive()	true	1646
4398.json	org.eclipse.jgit.internal.storage.file.ByteArrayWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int)	4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
459.json	org.eclipse.jgit.junit.MockSystemReader.getenv(java.lang.String)	noCall	noCall	true	3141
2512.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getURI()	2521.json,2522.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String)	true	3176
1153.json	org.eclipse.jgit.notes.NoteParser.parseTree()	1152.json	org.eclipse.jgit.notes.NoteParser.parse()	true	2767
7413.json	org.eclipse.jgit.api.RebaseCommand.resetSoftToParent()	7402.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean)	true	1677
8667.json	org.eclipse.jgit.patch.FileHeader.parseIndexLine(int, int)	8659.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int)	true	3176
3038.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.byObjectId(org.eclipse.jgit.lib.AnyObjectId)	null,null,151.json,152.json,158.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.byObjectIdOneRefNoIndex(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	297
10123.json	org.eclipse.jgit.archive.TarFormat.hashCode()	noCall	noCall	true	1521
9039.json	org.eclipse.jgit.lib.PersonIdent.toExternalString()	8072.json,null,9468.json,null,null,null,null,2614.json,null,4103.json,7426.json,9454.json,null	org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent(),org.eclipse.jgit.lib.TagBuilder.build(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testEmptyNameAndEmail(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsAllWhitespace(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsOtherBadCharacters(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.putPersonIdent(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent(),org.eclipse.jgit.internal.storage.file.ReflogWriter.encode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.toAuthorScript(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsNameAndEmail()	true	3176
66.json	org.eclipse.jgit.transport.http.apache.HttpClientConnectionFactory.create(java.net.URL, java.net.Proxy)	10053.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	1572
5978.json	org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(int)	6011.json	org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	922
5075.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseDeltaCommits(boolean)	3772.json,3380.json,null,3375.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.newPackWriter(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2657
1358.json	org.eclipse.jgit.transport.WalkFetchConnection.close()	noCall	noCall	true	3176
5162.json	org.eclipse.jgit.internal.storage.pack.PackExt.toString()	noCall	noCall	true	1969
6893.json	org.eclipse.jgit.api.CloneCommand.setDirectory(java.io.File)	null,null,null,230.json,null,null,null,null,null,null,null,null,null,7265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,914.json,null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2686
5689.json	org.eclipse.jgit.revwalk.RevWalkUtils.count(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	null,9627.json	org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.count(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	2336
5225.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearReuseAsIs()	4073.json,5148.json,5130.json,5012.json,5122.json,3406.json	org.eclipse.jgit.internal.storage.file.LocalObjectToPack.clearReuseAsIs(),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow(),org.eclipse.jgit.internal.storage.pack.PackWriter.reselectNonDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.clearReuseAsIs()	true	2906
3467.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.rollbackPack(java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>)	noCall	noCall	true	2410
2877.json	org.eclipse.jgit.internal.ketch.Proposal.getPushCertificate()	noCall	noCall	true	872
4627.json	org.eclipse.jgit.internal.storage.file.LockFile.commit()	216.json,4192.json,9878.json,217.json,6089.json,4491.json,5893.json,null,3974.json,null,4458.json,4856.json,214.json,4849.json,4494.json,1958.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.PackLock.lock(java.lang.String),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.close(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.dircache.DirCache.commit(),org.eclipse.jgit.junit.TestRepository.writeFile(java.io.File, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.file.GcLog.commit(),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	true	3176
87.json	org.eclipse.jgit.pgm.Config.list()	86.json	org.eclipse.jgit.pgm.Config.run()	true	2209
7892.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String)	7298.json,7921.json	org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl()	true	2335
5289.json	org.eclipse.jgit.attributes.Attributes.get(java.lang.String)	null,null,null,7618.json,null,null,null,6714.json,6376.json	org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader)	true	925
8820.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.Anonymous-fdbb8c51-6bcc-4a84-a550-f97d757f2f1b.hasNext()	noCall	noCall	true	2260
9060.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getWorkTree()	9074.json,9064.json,9072.json,9073.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.lib.BaseRepositoryBuilder.requireGitDirOrWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()	true	2907
6368.json	org.eclipse.jgit.blame.Candidate.getNextCandidate(int)	6452.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate)	true	2567
5791.json	org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.clone()	noCall	noCall	true	3176
5967.json	org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid()	null,null,7530.json,null,9585.json,7764.json,null,7830.json,7760.json	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
7270.json	org.eclipse.jgit.api.LogCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7429.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip(),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	2953
6982.json	org.eclipse.jgit.api.CommitCommand.lookupOnly(java.lang.String)	6981.json	org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk)	true	2647
4902.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.create()	noCall	noCall	true	880
9033.json	org.eclipse.jgit.lib.PersonIdent.getEmailAddress()	null,null,null,null,9040.json,null,9039.json,null,9038.json,null,2847.json,null,null,null,null,null,null,null,null,null,118.json,null,null,null,null,380.json,null,1031.json,9037.json,270.json,null,272.json,7426.json,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testEmptyNameAndEmail(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.PersonIdent.toString(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsAllWhitespace(),org.eclipse.jgit.lib.PersonIdent.toExternalString(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress(),org.eclipse.jgit.lib.PersonIdent.equals(java.lang.Object),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsOtherBadCharacters(),org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.putPersonIdent(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine(),org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent(),org.eclipse.jgit.awtui.CommitGraphPane.NameCellRender.getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertReflogEquals(org.eclipse.jgit.lib.ReflogEntry, org.eclipse.jgit.lib.ReflogEntry, boolean),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent(),org.eclipse.jgit.pgm.Blame.author(int),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine(),org.eclipse.jgit.merge.SquashMessageFormatter.toString(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.lib.PersonIdent.hashCode(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.toAuthorScript(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsNameAndEmail(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached()	true	3176
1664.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeBlob()	noCall	noCall	true	629
4665.json	org.eclipse.jgit.internal.storage.file.PackIndex.EntriesIterator.remove()	noCall	noCall	true	3176
6465.json	org.eclipse.jgit.blame.BlameGenerator.getResultEnd()	6425.json,null,null,null,6427.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
1031.json	org.eclipse.jgit.merge.SquashMessageFormatter.toString(org.eclipse.jgit.lib.PersonIdent)	1030.json	org.eclipse.jgit.merge.SquashMessageFormatter.format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref)	true	2187
4940.json	org.eclipse.jgit.internal.storage.reftree.Command.getMessage()	4943.json,null,null	org.eclipse.jgit.internal.storage.reftree.Command.toString(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists()	true	884
5964.json	org.eclipse.jgit.dircache.DirCacheEntry.isSmudged()	null,null,5910.json,7830.json	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry)	true	2882
6642.json	org.eclipse.jgit.diff.SimilarityIndex.keyOf(long)	6641.json,6637.json,6633.json,6631.json	org.eclipse.jgit.diff.SimilarityIndex.grow(),org.eclipse.jgit.diff.SimilarityIndex.add(int, int),org.eclipse.jgit.diff.SimilarityIndex.key(int),org.eclipse.jgit.diff.SimilarityIndex.common(long[], int, long[], int)	true	2899
2522.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String)	2520.json,2521.json,2522.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readAdvertisedRefs(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String)	true	3176
8176.json	org.eclipse.jgit.util.io.CountingOutputStream.write(byte[], int, int)	4027.json,3285.json,3283.json,4026.json,3286.json,3288.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushBlock(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushFileHeader(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.write(byte[], int, int),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.padBetweenBlocksToNextBlock(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.finishFile()	true	2410
5049.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.getCopyBuffer()	3802.json,3803.json,4461.json,4124.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.newCopyBuffer(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.ByteBufferWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
7970.json	org.eclipse.jgit.util.LfsFactory.applySmudgeFilter(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.attributes.Attribute)	null,6598.json,6376.json	org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader)	true	98
5018.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.keepInWindow()	5012.json,5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2893
7925.json	org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], int, org.eclipse.jgit.util.MutableInteger)	9368.json,8659.json,7932.json,8702.json,5530.json,null,8737.json,8727.json	org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte[], int, org.eclipse.jgit.util.MutableInteger),org.eclipse.jgit.patch.HunkHeader.parseHeader(),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.patch.EGitPatchHistoryTest.NumStatReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.BinaryHunk.parseHunk(int, int),org.eclipse.jgit.patch.CombinedHunkHeader.parseHeader()	true	3176
5189.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.step(int, byte, byte)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
5446.json	org.eclipse.jgit.revwalk.LIFORevQueue.toString()	noCall	noCall	true	3176
7564.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.stopWalk()	noCall	noCall	true	3176
7211.json	org.eclipse.jgit.api.StashDropCommand.getRef()	7215.json	org.eclipse.jgit.api.StashDropCommand.call()	true	2272
2736.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getMinRetry(java.util.concurrent.TimeUnit)	noCall	noCall	true	872
963.json	org.eclipse.jgit.merge.StrategyOneSided.newMerger(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.lib.Config)	noCall	noCall	true	431
116.json	org.eclipse.jgit.pgm.Blame.findLine(int, java.lang.String)	115.json	org.eclipse.jgit.pgm.Blame.parseLineRangeOption()	true	2493
7692.json	org.eclipse.jgit.treewalk.filter.PathFilter.getPath()	5629.json,6430.json,6472.json,6381.json,6376.json,null,6460.json	org.eclipse.jgit.revwalk.FollowFilter.getPath(),org.eclipse.jgit.blame.BlameGenerator.getResultPath(),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.blame.Candidate.canMergeRegions(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.blame.Candidate.toString(),org.eclipse.jgit.blame.BlameGenerator.getSourcePath()	true	2899
9608.json	org.eclipse.jgit.lib.AnyObjectId.copyRawTo(java.io.OutputStream)	8938.json,null,null,4391.json,null,9835.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.ObjectIdSerializer.writeWithoutMarker(java.io.OutputStream, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PackParserTest.testTinyThinPack(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeObjectNames(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain(),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.toByteArray(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.entry(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails()	true	3176
9453.json	org.eclipse.jgit.lib.CommitBuilder.getEncoding()	9454.json	org.eclipse.jgit.lib.CommitBuilder.build()	true	3176
9130.json	org.eclipse.jgit.lib.UserConfig.getCommitterName()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3176
9079.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.safeFS()	9077.json,9069.json,9078.json,9075.json,9073.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()	true	2907
8148.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	8145.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.detectStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType, org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	824
6517.json	org.eclipse.jgit.diff.DiffAlgorithm.coverEdit(S, S)	6516.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	2819
6303.json	org.eclipse.jgit.gitrepo.RepoCommand.setRecommendShallow(boolean)	null	org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation()	true	740
5903.json	org.eclipse.jgit.dircache.DirCache.getEntry(java.lang.String)	null,null,null,null,null,null,null,null,null,4951.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6026.json,null,976.json,null,null,null,null,null,9587.json,null,null,4950.json,null,4959.json,null	org.eclipse.jgit.merge.CherryPickTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.internal.storage.reftree.RefTree.readRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.pgm.RmTest.multiplePathsShouldBeRemoved(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.AddCommandTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.pgm.AddTest.testAddAFile(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.pgm.AddTest.testAddFileTwice(),org.eclipse.jgit.lib.IndexDiffTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.merge.SimpleMergeTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.ResolveMerger.cleanUp(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.api.ResetCommandTest.inIndex(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.lib.IndexDiff.getIndexMode(java.lang.String),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.merge.MergerTest.checkConsistentLastModified(java.lang.String...),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode()	true	3176
6568.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree)	273.json,6567.json,383.json,6578.json	org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree)	true	2838
9239.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.endWorker()	null,5061.json,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b9da345b-7dab-4ee9-8b52-579a4d122ccf.run(),org.eclipse.jgit.internal.storage.pack.DeltaTask.call(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2783
1914.json	org.eclipse.jgit.transport.BasePackFetchConnection.markAdvertised(org.eclipse.jgit.lib.AnyObjectId)	1913.json	org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised()	true	3176
2874.json	org.eclipse.jgit.internal.ketch.Proposal.setAuthor(org.eclipse.jgit.lib.PersonIdent)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
4916.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newRename(java.lang.String, java.lang.String)	noCall	noCall	true	880
5558.json	org.eclipse.jgit.revwalk.RevCommit.disposeBody()	null,380.json,5575.json	org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.PendingGenerator.next()	true	3176
939.json	org.eclipse.jgit.merge.MergeChunk.getEnd()	915.json,7173.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>)	true	3076
528.json	org.eclipse.jgit.junit.http.MockServletConfig.getInitParameter(java.lang.String)	noCall	noCall	true	3070
385.json	org.eclipse.jgit.pgm.DiffTree.run()	noCall	noCall	true	3176
9128.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.resolve(java.io.File, org.eclipse.jgit.util.FS)	9118.json,1807.json,1617.json,1808.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.lenient(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String),org.eclipse.jgit.transport.TransportLocal.Anonymous-0daac936-dcdd-48d2-a7eb-6ea66e2fb3ba.open(org.eclipse.jgit.transport.URIish)	true	3176
3660.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackFooter(byte[])	noCall	noCall	true	2410
7382.json	org.eclipse.jgit.api.MergeCommand.FastForwardMode.matchConfigValue(java.lang.String)	1024.json	org.eclipse.jgit.merge.MergeConfig.getFastForwardMode(org.eclipse.jgit.lib.Config, java.lang.String[])	true	1968
133.json	org.eclipse.jgit.pgm.debug.MakeCacheTree.run()	noCall	noCall	true	3176
2149.json	org.eclipse.jgit.transport.TransportGitAnon.openPush()	noCall	noCall	true	3176
7284.json	org.eclipse.jgit.api.DiffCommand.setPathFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
6280.json	org.eclipse.jgit.gitrepo.RepoProject.getPathWithSlash()	6285.json,6284.json,6283.json,6282.json,6281.json	org.eclipse.jgit.gitrepo.RepoProject.compareTo(org.eclipse.jgit.gitrepo.RepoProject),org.eclipse.jgit.gitrepo.RepoProject.hashCode(),org.eclipse.jgit.gitrepo.RepoProject.equals(java.lang.Object),org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(java.lang.String),org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(org.eclipse.jgit.gitrepo.RepoProject)	true	1412
9252.json	org.eclipse.jgit.lib.TextProgressMonitor.format(java.lang.StringBuilder, java.lang.String, int, int, int)	9251.json,9250.json	org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int, int, int),org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int, int, int)	true	2658
1293.json	org.eclipse.jgit.transport.RemoteConfig.getTimeout()	null,2022.json,null	org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout()	true	3176
7481.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit)	7477.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPaths()	true	2031
10265.json	org.eclipse.jgit.http.server.glue.WrappedRequest.getServletPath()	noCall	noCall	true	3070
9132.json	org.eclipse.jgit.lib.UserConfig.getCommitterEmail()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3176
4621.json	org.eclipse.jgit.internal.storage.file.LockFile.getOutputStream()	5891.json,1958.json	org.eclipse.jgit.dircache.DirCache.write(),org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	true	3176
9388.json	org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	9382.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1551
4769.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.lang.String)	4767.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.loadAlternates()	true	3176
2922.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginOfsDelta(long, long, long)	noCall	noCall	true	319
3437.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3527.json,null,null,3673.json,3663.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getOrLoadBlock(long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.notInCache(long),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	true	2410
10175.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.JschBugFixingConfig.getValue(java.lang.String)	noCall	noCall	true	148
4757.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertPack(org.eclipse.jgit.internal.storage.file.PackFile)	4729.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File)	true	3176
6952.json	org.eclipse.jgit.api.errors.ConcurrentRefUpdateException.getResult()	noCall	noCall	true	2953
4975.json	org.eclipse.jgit.internal.storage.reftree.Scanner.refName(org.eclipse.jgit.treewalk.CanonicalTreeParser, boolean)	4973.json,4974.json	org.eclipse.jgit.internal.storage.reftree.Scanner.peel(org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(org.eclipse.jgit.lib.ObjectReader, int, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	880
6818.json	org.eclipse.jgit.api.RevertCommand.getRevertedRefs()	noCall	noCall	true	2715
8838.json	org.eclipse.jgit.lib.CoreConfig.isLogAllRefUpdates()	null,null	org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.internal.storage.file.ReflogWriter.isLogAllRefUpdates()	true	3173
3513.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	3669.json,3505.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.writePackIndex(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()	true	2410
2331.json	org.eclipse.jgit.transport.BasePackConnection.init(java.io.InputStream, java.io.OutputStream)	2265.json,2267.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
6242.json	org.eclipse.jgit.revplot.PlotLane.getPosition()	6251.json,null,6252.json,6249.json,null,6228.json	org.eclipse.jgit.revplot.PlotCommitList.addBlockedPosition(java.util.BitSet, org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.lanePos(int),org.eclipse.jgit.revplot.PlotCommitList.closeLane(org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.lanePos(java.util.Set<java.lang.Integer>),org.eclipse.jgit.revplot.AbstractPlotRenderer.laneX(org.eclipse.jgit.revplot.PlotLane)	true	3176
1083.json	org.eclipse.jgit.errors.AmbiguousObjectException.getCandidates()	null	org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique()	true	2846
4389.json	org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncRefFiles()	4491.json,4494.json,4105.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, byte[])	true	2766
1532.json	org.eclipse.jgit.transport.BundleWriter.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	noCall	noCall	true	2874
6889.json	org.eclipse.jgit.api.CloneCommand.findBranchToCheckout(org.eclipse.jgit.transport.FetchResult)	6887.json	org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	true	2622
6768.json	org.eclipse.jgit.diff.Edit.getLengthA()	6516.json,6665.json,6664.json,null,null,null,6479.json,null	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA(),org.eclipse.jgit.diff.EditTest.testType_Insert(),org.eclipse.jgit.diff.EditTest.testType_Replace(),org.eclipse.jgit.diff.EditTest.testType_Delete(),org.eclipse.jgit.diff.HistogramDiff.State.diff(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.diff.EditTest.testType_Empty()	true	2837
6550.json	org.eclipse.jgit.diff.DiffFormatter.setAbbreviationLength(int)	241.json,373.json,null,264.json,242.json,372.json,263.json	org.eclipse.jgit.pgm.Diff.abbrev(int),org.eclipse.jgit.pgm.Log.abbrev(boolean),org.eclipse.jgit.diff.DiffFormatterTest.setUp(),org.eclipse.jgit.pgm.Show.abbrev(boolean),org.eclipse.jgit.pgm.Diff.abbrev(boolean),org.eclipse.jgit.pgm.Log.abbrev(int),org.eclipse.jgit.pgm.Show.abbrev(int)	true	2899
5805.json	org.eclipse.jgit.revwalk.filter.ObjectFilter.AllFilter.include(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1123
7877.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.isDirNoGitLinks()	null,null	org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange()	true	796
8650.json	org.eclipse.jgit.patch.FileHeader.getPatchType()	null,null,null,null,null,null,8682.json,null,null,null,null,6585.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
392.json	org.eclipse.jgit.pgm.Main.createErrorWriter()	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	885
4054.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.hashCode()	noCall	noCall	true	1922
2740.json	org.eclipse.jgit.internal.ketch.LagCheck.initRevWalk()	2744.json	org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String)	true	872
8353.json	org.eclipse.jgit.util.Holder.get()	7853.json,7851.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.getCleanFilterCommand()	true	824
8330.json	org.eclipse.jgit.util.sha1.SHA1.newInstance()	null,null,null,null,null,7837.json,null,null,null	org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.util.sha1.SHA1Test.detectsShatteredByDefault(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredStoredInGitBlob()	true	468
4782.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.get(int)	4780.json,4781.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.maybeContains(int),org.eclipse.jgit.internal.storage.file.InflatingBitSet.contains(int)	true	1922
4622.json	org.eclipse.jgit.internal.storage.file.LockFile.requireLock()	null,4616.json,4621.json,4614.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.LockFile.write(byte[]),org.eclipse.jgit.internal.storage.file.LockFile.getOutputStream(),org.eclipse.jgit.internal.storage.file.LockFile.copyCurrentContent()	true	3176
4952.json	org.eclipse.jgit.internal.storage.reftree.RefTree.toRef(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String)	4951.json	org.eclipse.jgit.internal.storage.reftree.RefTree.readRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	true	884
27.json	org.eclipse.jgit.awtui.AWTPlotRenderer.drawLine(java.awt.Color, int, int, int, int, int)	noCall	noCall	true	3176
44.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getHeaderFields()	noCall	noCall	true	1572
444.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	2768
1290.json	org.eclipse.jgit.transport.RemoteConfig.setTagOpt(org.eclipse.jgit.transport.TagOpt)	null,null	org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags()	true	3176
8343.json	org.eclipse.jgit.util.sha1.SHA1.eq(org.eclipse.jgit.util.sha1.SHA1.State, org.eclipse.jgit.util.sha1.SHA1.State)	8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	true	466
3223.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry.compare(org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry, org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry)	3215.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.add(org.eclipse.jgit.internal.storage.reftable.MergedReftable.RefQueueEntry)	true	297
9490.json	org.eclipse.jgit.lib.RebaseTodoLine.Action.toToken()	9756.json,null	org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment()	true	2756
7647.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.reset()	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2839
6843.json	org.eclipse.jgit.api.FetchCommand.setCheckFetchedObjects(boolean)	6835.json,286.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run()	true	2823
1233.json	org.eclipse.jgit.notes.Note.getData()	1173.json,null,1223.json,null,1138.json,null,null,null,null,null,null,null,1181.json,null,null,1130.json,null	org.eclipse.jgit.notes.LeafBucket.build(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder(),org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle(),org.eclipse.jgit.notes.NoteMap.get(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit(),org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace(),org.eclipse.jgit.notes.LeafBucketTest.testParseFive(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast(),org.eclipse.jgit.notes.NotesMergeConflictException.noteData(org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder(),org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.notes.DefaultNoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd()	true	2767
3664.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.read(long, byte[], int, int)	3663.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	true	2410
5645.json	org.eclipse.jgit.revwalk.RevFlagSet.contains(java.lang.Object)	null,null	org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove(),org.eclipse.jgit.revwalk.RevFlagSetTest.testContains()	true	3176
7378.json	org.eclipse.jgit.api.ArchiveCommand.setPaths(java.lang.String...)	null,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1488
4106.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.shouldAutoCreateLog(java.lang.String)	4105.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, byte[])	true	3059
7282.json	org.eclipse.jgit.api.DiffCommand.call()	null,null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
8700.json	org.eclipse.jgit.patch.HunkHeader.getLinesContext()	null,null,null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
1213.json	org.eclipse.jgit.notes.NoteMapMerger.nonNotes(org.eclipse.jgit.notes.InMemoryNoteBucket)	1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2709
7567.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...)	null,null,null,null,9256.json,null,null,4969.json	org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.transport.PushCertificateStore.newTreeWalk(java.lang.String),org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	2875
3701.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.cachePeeledState(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	noCall	noCall	true	235
9305.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogIdent()	4502.json,3260.json,4931.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	2210
1027.json	org.eclipse.jgit.merge.MergeConfig.MergeConfigSectionParser.parse(org.eclipse.jgit.lib.Config)	noCall	noCall	true	1577
6453.json	org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit)	6452.json,6456.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate)	true	1515
5501.json	org.eclipse.jgit.revwalk.ObjectWalk.dispose()	4810.json	org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
9898.json	org.eclipse.jgit.lfs.CleanFilter.run()	9909.json	org.eclipse.jgit.lfs.LfsBlobFilter.cleanLfsBlob(org.eclipse.jgit.lib.Repository, java.io.InputStream)	true	628
6639.json	org.eclipse.jgit.diff.SimilarityIndex.slot(int)	6641.json,6637.json	org.eclipse.jgit.diff.SimilarityIndex.grow(),org.eclipse.jgit.diff.SimilarityIndex.add(int, int)	true	2899
1589.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getHeaderFields()	noCall	noCall	true	1572
12.json	org.eclipse.jgit.awtui.CommitGraphPane.setModel(javax.swing.table.TableModel)	noCall	noCall	true	3176
7541.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.hasId()	noCall	noCall	true	2838
10182.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getHostName()	null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive(),org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit(),org.eclipse.jgit.transport.OpenSshConfigTest.testNoConfig(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_DoesNotMatch(),org.eclipse.jgit.transport.OpenSshConfigTest.testHostnameReplacement()	true	3176
4966.json	org.eclipse.jgit.internal.storage.reftree.RefTree.copy()	2900.json	org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal)	true	884
2151.json	org.eclipse.jgit.transport.TransportGitAnon.openConnection()	noCall	noCall	true	3176
346.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableTopoOrder(boolean)	noCall	noCall	true	3176
7606.json	org.eclipse.jgit.treewalk.TreeWalk.getDepth()	noCall	noCall	true	3176
4494.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String)	noCall	noCall	true	3059
7345.json	org.eclipse.jgit.api.BlameCommand.setTextComparator(org.eclipse.jgit.diff.RawTextComparator)	null	org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge()	true	2567
9778.json	org.eclipse.jgit.lib.RefWriter.writeInfoRefs()	null,2306.json	org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
9348.json	org.eclipse.jgit.lib.ObjectId.fromRaw(byte[], int)	4482.json,3107.json,2409.json,4476.json,5988.json,9347.json,7634.json,null	org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueId(),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long),org.eclipse.jgit.dircache.DirCacheEntry.getObjectId(),org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]),org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()	true	3176
15.json	org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getColumnCount()	noCall	noCall	true	3176
3811.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	3810.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	true	2410
3503.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	noCall	noCall	true	2410
8144.json	org.eclipse.jgit.util.CachedAuthenticator.CachedAuthentication.toPasswordAuthentication()	8142.json	org.eclipse.jgit.util.CachedAuthenticator.getPasswordAuthentication()	true	3176
8063.json	org.eclipse.jgit.util.FS_POSIX.getAttributes(java.io.File)	noCall	noCall	true	1579
5687.json	org.eclipse.jgit.revwalk.RevTree.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)	5688.json	org.eclipse.jgit.revwalk.RevTree.parseBody(org.eclipse.jgit.revwalk.RevWalk)	true	2846
35.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getClient()	43.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.execute()	true	1572
4676.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBlobs()	4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	false	1922
8331.json	org.eclipse.jgit.util.sha1.SHA1.setDetectCollision(boolean)	null,null	org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredStoredInGitBlob()	true	466
4688.json	org.eclipse.jgit.internal.storage.file.BitSet.set(int)	4178.json,4580.json,4579.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.set(int),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.remove(int)	true	1922
7000.json	org.eclipse.jgit.api.CommitCommand.setHookOutputStream(java.io.PrintStream)	null,null,null,null,null	org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit()	true	1223
3706.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadIndexMicros()	noCall	noCall	true	387
5397.json	org.eclipse.jgit.revwalk.RevWalk.reset()	null,4988.json,1043.json,null,null,null,7429.json,null,null,null,5640.json,null,null,null,null,5691.json,null,null,5690.json,1033.json,null,9627.json	org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0(),org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3(),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits(),org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2(),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0(),org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1(),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow(),org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot(),org.eclipse.jgit.revwalk.RevWalkUtils.find(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow(),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
9138.json	org.eclipse.jgit.lib.UserConfig.getDefaultUserName()	9141.json	org.eclipse.jgit.lib.UserConfig.getDefaultEmail()	true	2643
9323.json	org.eclipse.jgit.lib.BatchRefUpdate.setPushOptions(java.util.List<java.lang.String>)	3251.json,null,9326.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
524.json	org.eclipse.jgit.junit.http.AccessEvent.getStatus()	noCall	noCall	true	3070
2658.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseCapability(java.lang.String)	null,null,2604.json	org.eclipse.jgit.transport.RefAdvertiserTest.advertiser(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	3176
9190.json	org.eclipse.jgit.lib.MutableObjectId.clear()	7597.json	org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, int)	true	3176
4133.json	org.eclipse.jgit.internal.storage.file.PackFile.endWindowCache()	4284.json	org.eclipse.jgit.internal.storage.file.WindowCache.close(org.eclipse.jgit.internal.storage.file.PackFile)	true	3176
6786.json	org.eclipse.jgit.events.ListenerHandle.remove()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.removeListener(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.StashApplyCommandTest.tearDown(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs()	true	2907
5849.json	org.eclipse.jgit.ignore.internal.PathMatcher.matches(java.lang.String, int, int)	noCall	noCall	true	1322
2028.json	org.eclipse.jgit.transport.Transport.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	noCall	noCall	true	2874
2034.json	org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	2035.json,6911.json	org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.api.PushCommand.call()	true	1908
7385.json	org.eclipse.jgit.api.MergeCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,7131.json,null,null,null,null,null,null,null,null,null,null,null,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7266.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.pgm.StatusTest.mergeTestBranchInMaster(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.revplot.AbstractPlotRendererTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.DescribeCommandTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting()	true	2939
3571.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newUpdate(java.lang.String, boolean)	3572.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newRename(java.lang.String, java.lang.String)	true	2410
7860.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin()	7859.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()	true	3176
1266.json	org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String)	1265.json	org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config)	true	3176
5439.json	org.eclipse.jgit.revwalk.RevObject.toString()	noCall	noCall	true	3176
2528.json	org.eclipse.jgit.transport.PackedObjectInfo.setCRC(int)	2423.json,3650.json,4009.json,5130.json,2921.json,4701.json,4716.json,3667.json,5239.json,3509.json	org.eclipse.jgit.transport.PackParser.newInfo(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.file.PackInserter.endObject(org.eclipse.jgit.lib.ObjectId, long),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.fsck.FsckPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.pack.ObjectToPack.setWeight(int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.endObject(org.eclipse.jgit.lib.ObjectId, long)	true	3176
4663.json	org.eclipse.jgit.internal.storage.file.PackIndex.EntriesIterator.hasNext()	noCall	noCall	true	3176
6354.json	org.eclipse.jgit.fnmatch.LastHead.getNextHeads(char)	noCall	noCall	true	3176
1944.json	org.eclipse.jgit.transport.UserAgent.computeVersion()	1943.json	org.eclipse.jgit.transport.UserAgent.computeUserAgent()	true	3070
6211.json	org.eclipse.jgit.revplot.PlotWalk.dispose()	noCall	noCall	true	3176
5300.json	org.eclipse.jgit.attributes.Attributes.canBeContentMerged()	null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes)	true	348
10402.json	org.eclipse.jgit.http.server.SmartServiceInfoRefs.destroy()	noCall	noCall	true	3070
4808.json	org.eclipse.jgit.internal.storage.file.GC.prunePack(java.lang.String)	4805.json	org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	1670
3348.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	2410
2234.json	org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	2233.json	org.eclipse.jgit.transport.TransportHttp.handleSslFailure(java.lang.Throwable)	true	270
5232.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getExtendedFlags()	noCall	noCall	true	2851
4502.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	319
3812.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex)	3748.json,null	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
6828.json	org.eclipse.jgit.api.ApplyCommand.isChanged(java.util.List<java.lang.String>, java.util.List<java.lang.String>)	6826.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader)	true	2288
8819.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.contains(java.lang.Object)	noCall	noCall	true	2711
2872.json	org.eclipse.jgit.internal.ketch.Proposal.getCommands()	2855.json,2851.json,2900.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal)	true	872
6442.json	org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	112.json,7350.json,6441.json	org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2567
9243.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.update(int)	null,null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b9da345b-7dab-4ee9-8b52-579a4d122ccf.run(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2893
5822.json	org.eclipse.jgit.ignore.internal.Strings.stripTrailing(java.lang.String, char)	null	org.eclipse.jgit.ignore.BasicRuleTest.testStripTrailingChar()	true	1322
3641.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setIndexVersion(int)	3783.json,3382.json,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	1922
4083.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.hash(long)	4085.json,4086.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int)	true	3176
3417.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getCurrentSize()	3418.json,3429.json,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getFillPercentage(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reserveSpace(int, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks()	true	2410
5150.json	org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor)	null,3382.json	org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	1922
5432.json	org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)	1455.json,340.json,5139.json,1910.json,1360.json,1365.json,7258.json,352.json,null,null,1905.json,7260.json,1355.json,1906.json,5421.json,1323.json,1359.json,1915.json,112.json,1377.json,null,5463.json,1467.json,null,5420.json,null,1912.json,339.json,3781.json,2619.json,1904.json,null,null,6220.json,1376.json,5644.json,1470.json	org.eclipse.jgit.transport.UploadPack.want(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.Anonymous-9e2f4a4d-aeff-43c8-b1e6-ca2a9775d495.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.WalkFetchConnection.needs(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.DescribeCommand.Candidate.reaches(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.blame.Candidate.has(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.revwalk.RevCommitList.lastIndexOf(org.eclipse.jgit.revwalk.RevFlag, int),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.transport.PacketLineIn.AckNackResult),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.revwalk.RevObjectTest.testHasRevFlag(),org.eclipse.jgit.revwalk.AbstractRevQueue.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.transport.UploadPack.addCommonBase(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.revwalk.RevCommitList.indexOf(org.eclipse.jgit.revwalk.RevFlag, int),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin(),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.revwalk.ObjectWalkTest.testCull(),org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryCustom_SlowClock(),org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int),org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.DepthGenerator.next(),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	true	3176
7417.json	org.eclipse.jgit.api.RebaseCommand.getOrdinal(int)	7416.json	org.eclipse.jgit.api.RebaseCommand.composeSquashMessage(boolean, org.eclipse.jgit.revwalk.RevCommit, java.lang.String, int)	true	1677
6462.json	org.eclipse.jgit.blame.BlameGenerator.getSourceStart()	null,null,6427.json	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
7986.json	org.eclipse.jgit.util.FS_Win32.isCaseSensitive()	noCall	noCall	true	2134
3648.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackHeader(long)	noCall	noCall	true	2410
6976.json	org.eclipse.jgit.api.CherryPickResult.getNewHead()	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	2636
6531.json	org.eclipse.jgit.diff.RawText.getString(int)	6826.json,116.json,382.json,6829.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.pgm.Blame.findLine(int, java.lang.String),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(org.eclipse.jgit.patch.FileHeader)	true	2797
6434.json	org.eclipse.jgit.blame.BlameGenerator.getRenameDetector()	noCall	noCall	true	2567
6356.json	org.eclipse.jgit.fnmatch.AbstractHead.setNewHeads(java.util.List<org.eclipse.jgit.fnmatch.Head>)	6338.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createHeadsStartValues(java.lang.String, java.lang.Character)	true	3176
10207.json	org.eclipse.jgit.transport.JschSession.JschProcess.getErrorStream()	noCall	noCall	true	2745
1896.json	org.eclipse.jgit.transport.BasePackFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	1895.json	org.eclipse.jgit.transport.BasePackFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	1908
4685.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry.getFlags()	4096.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)	true	1922
209.json	org.eclipse.jgit.pgm.debug.ShowPackDelta.run()	noCall	noCall	true	2893
5710.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.has(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	3176
10109.json	org.eclipse.jgit.archive.ArchiveFormats.register(java.lang.String, org.eclipse.jgit.api.ArchiveCommand.Format<?>)	noCall	noCall	true	1839
4369.json	org.eclipse.jgit.internal.storage.file.PackInputStream.read()	noCall	noCall	true	2901
9387.json	org.eclipse.jgit.lib.ObjectChecker.toHexString(byte[], int, int)	9386.json	org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1269
5969.json	org.eclipse.jgit.dircache.DirCacheEntry.isUpdateNeeded()	null,7830.json	org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry)	true	2893
1695.json	org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	1699.json,1686.json,1687.json,1690.json,1683.json	org.eclipse.jgit.transport.AmazonS3.ListParser.list(),org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	true	3176
3599.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	noCall	noCall	true	2410
6721.json	org.eclipse.jgit.diff.DiffEntry.getNewPath()	null,null,null,5657.json,null,6824.json,null,null,6600.json,null,null,null,null,null,null,null,null,null,null,null,null,null,6575.json,null,null,6722.json,null,null,null,null,null,null,6472.json,6574.json,null,null,null,null,6602.json,null,null,null,248.json,null,null,null,null,null,null,null,null,null,null,null,null,6718.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.assertRenames(java.lang.String...),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.diff.DiffEntry.getPath(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.diff.DiffFormatter.isAdd(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FailFooBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
8260.json	org.eclipse.jgit.util.io.TimeoutInputStream.getTimeout()	1520.json	org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()	true	3176
8501.json	org.eclipse.jgit.util.FileUtils.setHidden(java.io.File, boolean)	8437.json	org.eclipse.jgit.util.FS.setHidden(java.io.File, boolean)	true	988
5240.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getPathHash()	5056.json,5120.json,null,5005.json,5055.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.computeTopPaths(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-f5042ec6-97f3-474f-8ab9-e0d394a07672.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.DeltaWindow.remaining(),org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.partitionTasks()	true	2893
1548.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, byte[])	2059.json,2305.json,2313.json,1552.json,2306.json,1551.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, byte[]),org.eclipse.jgit.transport.WalkPushConnection.Anonymous-ff2db75c-ce00-4133-addf-be95f7c88c11.writeFile(java.lang.String, byte[]),org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(java.util.Collection<java.lang.String>),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeRef(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	3176
4750.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.doLogExponentialBackoff(int)	null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile)	true	452
1054.json	org.eclipse.jgit.nls.TranslationBundle.load(java.util.Locale)	null,1061.json,null,null,null	org.eclipse.jgit.nls.TranslationBundleTest.testNonTranslatedBundle(),org.eclipse.jgit.nls.GlobalBundleCache.lookupBundle(java.util.Locale, java.lang.Class<T>),org.eclipse.jgit.nls.TranslationBundleTest.testMissingPropertiesFile(),org.eclipse.jgit.nls.TranslationBundleTest.testMissingString(),org.eclipse.jgit.nls.TranslationBundleTest.testGermanTranslation()	true	3012
8003.json	org.eclipse.jgit.util.QuotedString.GitPathStyle.dq(byte[], int, int)	8002.json	org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, int)	true	3176
3163.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.mustAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	3335.json,3338.json,3340.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.beginBlock(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.estimateBytes(long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeMultiLevelIndex(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
5764.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.between(java.util.Date, java.util.Date)	null	org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter()	true	3176
1304.json	org.eclipse.jgit.transport.PreUploadHookChain.onSendPack(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	2374
2354.json	org.eclipse.jgit.transport.RefSpec.matchDestination(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.RefSpecTest.destinationWithWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate)	true	3176
1822.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-6c9352ed-88ab-442d-b26b-caf914bc32ab.open(org.eclipse.jgit.transport.URIish)	noCall	noCall	true	1785
7299.json	org.eclipse.jgit.api.TagCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,363.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.DescribeCommandTest.tag(java.lang.String),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.TagTest.testTagDelete(),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMultiMatch(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMatch2()	true	2844
6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	null,null,null,null,null,null,null,null,null,109.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile(),org.eclipse.jgit.gitrepo.RepoCommandTest.testDefaultRemoteRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.pgm.Repo.run(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	1509
7253.json	org.eclipse.jgit.api.DescribeCommand.setMatch(java.lang.String...)	274.json,null	org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, java.lang.String...)	true	356
7531.json	org.eclipse.jgit.api.AddCommand.setUpdate(boolean)	79.json,null,null,null,null,null,null,null,6979.json	org.eclipse.jgit.pgm.Add.run(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.CommitCommand.call()	true	2867
10309.json	org.eclipse.jgit.http.server.resolver.AsIsFileService.isEnabled(org.eclipse.jgit.lib.Repository)	noCall	noCall	false	3070
944.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.lib.Config)	noCall	noCall	true	431
4048.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.findPosition(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
2045.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-e19ab94a-14a1-467f-a821-3e28f154cbf2.getRequiredFields()	noCall	noCall	true	2645
7712.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.initTable(int)	7711.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.grow()	true	1965
910.json	org.eclipse.jgit.ant.tasks.GitCloneTask.setUri(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnEmptyUrl(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadUrl(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldRaiseErrorOnBadSourceURL(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCloneAValidGitRepository()	true	2596
2355.json	org.eclipse.jgit.transport.RefSpec.matchDestination(org.eclipse.jgit.lib.Ref)	null,null,null,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster()	true	3176
7724.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.negate()	noCall	noCall	true	3176
3710.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksMicros()	noCall	noCall	true	387
4613.json	org.eclipse.jgit.internal.storage.file.LockFile.lockForAppend()	noCall	noCall	true	3176
3493.json	org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.hashCode()	noCall	noCall	true	328
4957.json	org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-d2bcfbca-c807-42c8-b450-e4f516025a0c.apply(org.eclipse.jgit.dircache.DirCacheEntry)	noCall	noCall	true	884
5057.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.getAdjustedWeight(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5056.json,5055.json,5124.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.computeTopPaths(),org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.partitionTasks(),org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	949
5073.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(boolean)	3772.json,1536.json,3380.json,null,3375.json,1518.json,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.newPackWriter(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3176
3634.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setDeltaCount(long)	3636.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics)	true	2410
9921.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.length()	null,null,9922.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isComplete(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString()	true	856
9326.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	null,9329.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor)	true	2210
1620.json	org.eclipse.jgit.transport.resolver.FileResolver.exportRepository(java.lang.String, org.eclipse.jgit.lib.Repository)	noCall	noCall	true	2672
3607.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toPruneTopOfStack()	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
6993.json	org.eclipse.jgit.api.CommitCommand.getAuthor()	noCall	noCall	true	2953
6115.json	org.eclipse.jgit.storage.pack.PackStatistics.ObjectType.getObjects()	noCall	noCall	true	1094
3569.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.doPeel(org.eclipse.jgit.lib.Ref)	3568.json,3693.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.peel(org.eclipse.jgit.lib.Ref)	true	2410
7900.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModuleName(java.lang.String)	7910.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModuleName()	true	279
5475.json	org.eclipse.jgit.revwalk.AbstractRevQueue.AlwaysEmptyQueue.clear()	noCall	noCall	true	3176
7898.json	org.eclipse.jgit.submodule.SubmoduleWalk.containsGitModulesFile(org.eclipse.jgit.lib.Repository)	null	org.eclipse.jgit.submodule.SubmoduleWalkTest.bareRepositoryWithNoSubmodules()	true	1314
1212.json	org.eclipse.jgit.notes.NoteMapMerger.asFanout(org.eclipse.jgit.notes.InMemoryNoteBucket)	1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2709
4135.json	org.eclipse.jgit.internal.storage.file.PackFile.openFail(boolean)	4134.json	org.eclipse.jgit.internal.storage.file.PackFile.doOpen()	true	3176
7558.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.idOffset()	null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId()	true	3176
9902.json	org.eclipse.jgit.lfs.BuiltinLFS.applyCleanFilter(org.eclipse.jgit.lib.Repository, java.io.InputStream, long, org.eclipse.jgit.attributes.Attribute)	noCall	noCall	true	98
9375.json	org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	9374.json,9366.json	org.eclipse.jgit.lib.ObjectChecker.checkTree(byte[]),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	true	3176
9411.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getRefSpecs(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	288
1020.json	org.eclipse.jgit.merge.MergeConfig.getParser(java.lang.String)	1019.json,null,null,null	org.eclipse.jgit.merge.MergeConfig.getConfigForCurrentBranch(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge(),org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions()	true	1577
2423.json	org.eclipse.jgit.transport.PackParser.newInfo(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.lib.ObjectId)	2398.json,2410.json,2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	2692
7433.json	org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit)	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	2689
4032.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.getCreatedFromInserter()	noCall	noCall	true	221
6218.json	org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.timeof(org.eclipse.jgit.revwalk.RevObject)	6217.json	org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	3176
6096.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitOpenFiles(int)	null,null,null,null,6111.json	org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.whackCache(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.setUp(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitOpenFiles_0(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
8405.json	org.eclipse.jgit.util.FS.lastModified(java.io.File)	4195.json,null,null,6045.json,4805.json,6027.json,null,null,null,null,null,null,4810.json,null	org.eclipse.jgit.internal.storage.file.FileSnapshot.save(java.io.File),org.eclipse.jgit.treewalk.FileTreeIteratorTest.setUp(),org.eclipse.jgit.internal.storage.file.GcTestCase.lastModified(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutGitlink(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(java.io.File),org.eclipse.jgit.merge.MergerTest.checkModificationTimeStampOrder(java.lang.String...),org.eclipse.jgit.merge.MergerTest.checkConsistentLastModified(java.lang.String...),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.junit.RepositoryTestCase.fsTick(java.io.File),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	1864
410.json	org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	409.json	org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(org.eclipse.jgit.pgm.opt.CmdLineParser)	true	3176
7982.json	org.eclipse.jgit.util.FS_Win32.newInstance()	noCall	noCall	true	2645
1385.json	org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdate(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled(),org.eclipse.jgit.transport.PushProcessTest.testPushResult()	true	3176
8503.json	org.eclipse.jgit.util.FileUtils.isDirectory(java.io.File)	8434.json	org.eclipse.jgit.util.FS.isDirectory(java.io.File)	true	988
6002.json	org.eclipse.jgit.dircache.DirCacheEntry.checkPath(byte[])	noCall	noCall	true	1585
56.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setDoOutput(boolean)	noCall	noCall	true	1572
7879.json	org.eclipse.jgit.submodule.SubmoduleConflict.getObjectId()	noCall	noCall	true	125
1824.json	org.eclipse.jgit.transport.TransportBundleFile.openPush()	noCall	noCall	true	3176
1530.json	org.eclipse.jgit.transport.HMACSHA1NonceGenerator.verify(java.lang.String, java.lang.String, org.eclipse.jgit.lib.Repository, boolean, int)	null,null,null,null,null,null,null	org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKeyWithSlop(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.unsolicited(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.signedByDifferentKey(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.slop(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.ok(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.invalidFormat(),org.eclipse.jgit.transport.HMACSHA1NonceGeneratorTest.missing()	true	1202
5393.json	org.eclipse.jgit.revwalk.RevWalk.retainOnReset(java.util.Collection<org.eclipse.jgit.revwalk.RevFlag>)	noCall	noCall	true	1330
8586.json	org.eclipse.jgit.util.SystemReader.Default.getenv(java.lang.String)	noCall	noCall	true	3176
7552.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.loadAttributes(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	7551.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader)	true	923
9081.json	org.eclipse.jgit.lib.InflaterCache.get()	4357.json,4020.json,3760.json,4064.json,3114.json	org.eclipse.jgit.internal.storage.file.WindowCursor.prepareInflater(),org.eclipse.jgit.internal.storage.file.PackInserter.inflater(),org.eclipse.jgit.internal.storage.dfs.DfsReader.prepareInflater(),org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, long, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int)	true	3176
1779.json	org.eclipse.jgit.transport.WalkEncryption.JGitV1.wrap(java.lang.String, java.lang.String)	noCall	noCall	true	966
6855.json	org.eclipse.jgit.api.FetchCommand.setThin(boolean)	6835.json,286.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run()	true	2816
2004.json	org.eclipse.jgit.transport.Transport.isFetchThin()	noCall	noCall	true	3176
5421.json	org.eclipse.jgit.revwalk.RevCommitList.lastIndexOf(org.eclipse.jgit.revwalk.RevFlag, int)	noCall	noCall	true	3176
7716.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.hash()	7714.json,7711.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.chainlength(byte[]),org.eclipse.jgit.treewalk.filter.ByteArraySet.grow()	true	1965
5586.json	org.eclipse.jgit.revwalk.FooterKey.getName()	2852.json,2752.json	org.eclipse.jgit.internal.ketch.ProposalRound.message(org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	3176
10272.json	org.eclipse.jgit.http.server.glue.RegexPipeline.Binder.create()	noCall	noCall	true	3070
2070.json	org.eclipse.jgit.transport.BaseConnection.getPeerUserAgent()	2338.json	org.eclipse.jgit.transport.BasePackConnection.getPeerUserAgent()	true	1137
4348.json	org.eclipse.jgit.internal.storage.file.WindowCursor.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	noCall	noCall	true	2906
6794.json	org.eclipse.jgit.events.WorkingTreeModifiedEvent.getListenerType()	noCall	noCall	true	299
1234.json	org.eclipse.jgit.notes.Note.setData(org.eclipse.jgit.lib.ObjectId)	1170.json	org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
3802.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.newCopyBuffer(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1144
7624.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.setPathCapacity(int, int)	7622.json,7623.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.growPath(int),org.eclipse.jgit.treewalk.AbstractTreeIterator.ensurePathCapacity(int, int)	true	3176
6581.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.DiffEntry)	6580.json	org.eclipse.jgit.diff.DiffFormatter.format(java.util.List<? extends org.eclipse.jgit.diff.DiffEntry>)	true	2899
7248.json	org.eclipse.jgit.api.DescribeCommand.setTarget(java.lang.String)	7260.json	org.eclipse.jgit.api.DescribeCommand.call()	true	1717
2449.json	org.eclipse.jgit.transport.PackParser.UnresolvedDelta.setCRC(int)	2924.json,4704.json,3653.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onEndDelta(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndDelta(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndDelta()	true	2692
211.json	org.eclipse.jgit.pgm.debug.ShowPackDelta.getDelta(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevObject)	209.json	org.eclipse.jgit.pgm.debug.ShowPackDelta.run()	true	2893
7656.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getNameOffset()	6050.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	2239
2384.json	org.eclipse.jgit.transport.PackParser.setObjectChecking(boolean)	noCall	noCall	true	3176
7296.json	org.eclipse.jgit.api.SubmoduleAddCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	6310.json	org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git)	true	2355
2624.json	org.eclipse.jgit.transport.BaseReceivePack.filterCommands(org.eclipse.jgit.transport.ReceiveCommand.Result)	2625.json,2644.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.ReceivePack.service()	true	2218
9660.json	org.eclipse.jgit.lib.RefDatabase.refresh()	3938.json,3838.json,3361.json,4904.json	org.eclipse.jgit.internal.storage.file.RefDirectory.refresh(),org.eclipse.jgit.internal.storage.dfs.DfsRepository.scanForRepoChanges(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.refresh()	true	2627
9016.json	org.eclipse.jgit.lib.Repository.readCommitMsgFile(java.lang.String)	9002.json,9014.json,9004.json	org.eclipse.jgit.lib.Repository.readMergeCommitMsg(),org.eclipse.jgit.lib.Repository.readSquashCommitMsg(),org.eclipse.jgit.lib.Repository.readCommitEditMsg()	true	2187
7593.json	org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)	null,null,null,null,null,7594.json,null,null,947.json,985.json,6470.json,null,4829.json,385.json,null,945.json,7764.json,5655.json,984.json,2839.json,null,2807.json,7760.json	org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int),org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.transport.PushCertificateStore.read(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.ResolveMerger.isIndexDirty(),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
2865.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	2722.json,2762.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
6542.json	org.eclipse.jgit.diff.RawText.getLineDelimiter()	null,null	org.eclipse.jgit.diff.RawTextTest.testLineDelimiter2(),org.eclipse.jgit.diff.RawTextTest.testLineDelimiter()	true	2290
5386.json	org.eclipse.jgit.revwalk.RevWalk.parseBody(org.eclipse.jgit.revwalk.RevObject)	null,null,null,null,null,null,null,null,null,null,6218.json,null,null,null,null,null,269.json,null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.setUp(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.junit.TestRepositoryTest.insertChangeIdIgnoresExisting(),org.eclipse.jgit.junit.TestRepositoryTest.insertExplicitChangeId(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.junit.TestRepositoryTest.amendCommit(),org.eclipse.jgit.junit.TestRepositoryTest.amendHead(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.setUp(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.timeof(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.junit.TestRepository.parseBody(T),org.eclipse.jgit.blame.Candidate.beginResult(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge(),org.eclipse.jgit.junit.TestRepositoryTest.insertChangeId(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs()	true	3176
7542.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.idBuffer()	6011.json,5252.json,7538.json	org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	true	3176
4145.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	4144.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2893
5715.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.clone()	noCall	noCall	true	3176
7569.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...)	7570.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevTree)	true	3176
6744.json	org.eclipse.jgit.diff.DiffConfig.parseRenameDetectionType(java.lang.String)	noCall	noCall	true	2749
9390.json	org.eclipse.jgit.lib.ObjectChecker.isGit(byte[], int)	9382.json,9395.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.isNormalizedGit(byte[], int, int)	true	1551
196.json	org.eclipse.jgit.pgm.debug.LfsStore.getStoreUrl(java.net.URI)	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	856
7125.json	org.eclipse.jgit.api.RebaseResult.getFailingPaths()	null	org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet()	true	2635
7517.json	org.eclipse.jgit.api.LsRemoteCommand.setTags(boolean)	null,75.json	org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.pgm.LsRemote.run()	true	2579
1490.json	org.eclipse.jgit.transport.HttpConfig.getMaxRedirects()	null	org.eclipse.jgit.transport.TransportHttp.redirect(java.lang.String, java.lang.String, int)	true	273
7354.json	org.eclipse.jgit.api.CleanCommand.filterFolders(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)	7351.json	org.eclipse.jgit.api.CleanCommand.call()	true	2031
9189.json	org.eclipse.jgit.lib.MutableObjectId.set(int, int, int)	9188.json	org.eclipse.jgit.lib.MutableObjectId.setByte(int, int)	true	2775
179.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.init()	178.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository)	true	2816
9051.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectory(java.io.File)	9064.json,null,9053.json,9052.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.io.File[]),org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.util.Collection<java.io.File>)	true	2907
3019.json	org.eclipse.jgit.internal.revwalk.AddUnseenToBitmapFilter.clone()	noCall	noCall	true	1922
2393.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor)	3453.json,1916.json,null,null,1380.json,null,null,null,341.json,null,null,null,1320.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.PackParserTest.testTinyThinPack(),org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob(),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.downloadPack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.openPack(org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.pgm.IndexPack.run(),org.eclipse.jgit.transport.UploadPackTest.parsePack(java.io.ByteArrayInputStream, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean),org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize(),org.eclipse.jgit.transport.PackParserTest.test1(),org.eclipse.jgit.transport.PackParserTest.test2(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()	true	2692
9211.json	org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(org.eclipse.jgit.lib.AnyObjectId)	4033.json,null,null,null,9601.json,null,3531.json,6452.json,null,null,6456.json,null,null	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lib.AnyObjectId.startsWith(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8(),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9(),org.eclipse.jgit.lib.ObjectReader.abbreviate(org.eclipse.jgit.lib.AnyObjectId, int)	true	3176
104.json	org.eclipse.jgit.pgm.CommandCatalog.common()	393.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[])	true	3176
9498.json	org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage()	7399.json,9756.json,null	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment()	true	2028
3389.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.equals(java.lang.Object)	null,3643.json	org.eclipse.jgit.internal.storage.dfs.DfsStreamKey.ByteArrayDfsStreamKey.equals(java.lang.Object),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.equals(java.lang.Object)	true	2410
6998.json	org.eclipse.jgit.api.CommitCommand.setReflogComment(java.lang.String)	7405.json,7195.json,null,6812.json,7385.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2454
7775.json	org.eclipse.jgit.treewalk.filter.PathSuffixFilter.shouldBeRecursive()	noCall	noCall	true	3176
10057.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	10050.json,10053.json,10051.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	true	843
3830.json	org.eclipse.jgit.internal.storage.dfs.DfsConfig.load()	noCall	noCall	true	2410
5277.json	org.eclipse.jgit.attributes.AttributesRule.isDirOnly()	null	org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()	true	1249
8686.json	org.eclipse.jgit.patch.Patch.matchAny(byte[], int, byte[][])	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
5537.json	org.eclipse.jgit.revwalk.RevCommit.carryOneStep(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit)	5536.json,5535.json	org.eclipse.jgit.revwalk.RevCommit.slowCarryFlags(org.eclipse.jgit.revwalk.FIFORevQueue, int),org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], int)	true	1550
1516.json	org.eclipse.jgit.transport.BasePackPushConnection.transmitOptions()	1514.json	org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	688
9005.json	org.eclipse.jgit.lib.Repository.writeCommitEditMsg(java.lang.String)	1124.json	org.eclipse.jgit.hooks.CommitMsgHook.call()	true	1195
186.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.addContext(java.lang.String)	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	856
8179.json	org.eclipse.jgit.util.io.TeeInputStream.read()	noCall	noCall	true	2844
7500.json	org.eclipse.jgit.api.NameRevCommand.NameRevCommit.toString()	noCall	noCall	true	1917
6285.json	org.eclipse.jgit.gitrepo.RepoProject.compareTo(org.eclipse.jgit.gitrepo.RepoProject)	noCall	noCall	true	1412
2856.json	org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp)	2848.json	org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	565
9465.json	org.eclipse.jgit.lib.TagBuilder.setTagger(org.eclipse.jgit.lib.PersonIdent)	null,7299.json,null,null,null,null	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag()	true	3176
4657.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.getOffset()	null,3781.json,null,null,3375.json,null,null,null,4473.json	org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.findFirstOffset(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject(),org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyObjectsOrder(org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testCompareEntriesOffsetsWithFindOffsets(),org.eclipse.jgit.internal.storage.file.PackWriterTest.Anonymous-24ac8ead-677b-4646-8330-9237ab8b8faf.compare(org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry, org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry),org.eclipse.jgit.internal.storage.file.PackIndexTestCase.testCompareEntriesOffsetsWithGetOffsets(),org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset64Count()	true	3176
149.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String)	145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	true	297
6013.json	org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry)	6007.json,6006.json,6005.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, int),org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
2917.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onPackHeader(long)	noCall	noCall	true	319
968.json	org.eclipse.jgit.merge.StrategyRecursive.newMerger(org.eclipse.jgit.lib.Repository, boolean)	noCall	noCall	true	1933
2520.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readAdvertisedRefs()	2509.json,2508.json	org.eclipse.jgit.transport.TransportAmazonS3.openPush(),org.eclipse.jgit.transport.TransportAmazonS3.openFetch()	true	3176
5664.json	org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[])	null,null,null,null,null,5661.json,5375.json,5384.json,null,null,5663.json,null,null,null,null,null,5662.json	org.eclipse.jgit.revwalk.RevTagParseTest.create(java.lang.String),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevWalk.Anonymous-5cb19d3f-31cb-4673-ab61-f1f79a3183b6.next(),org.eclipse.jgit.revwalk.RevTag.parse(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded(),org.eclipse.jgit.revwalk.RevTag.parseBody(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.revwalk.RevTag.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)	true	3176
2569.json	org.eclipse.jgit.transport.BaseReceivePack.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)	null	org.eclipse.jgit.transport.Daemon.Anonymous-5c6dde27-6f03-413e-abe5-3ff82e0f92a7.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
3399.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.getMemoryUsed()	null,null,null	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires2(),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheMemoryUsedConsistentWithExpectations(),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires1()	true	1126
4281.json	org.eclipse.jgit.internal.storage.file.WindowCache.load(org.eclipse.jgit.internal.storage.file.PackFile, long)	4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
7075.json	org.eclipse.jgit.api.Git.archive()	null,null,362.json,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1843
9230.json	org.eclipse.jgit.lib.FileMode.copyTo(byte[], int)	9837.json	org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte[], int, int, org.eclipse.jgit.lib.FileMode)	true	2775
6219.json	org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.kind(org.eclipse.jgit.lib.Ref)	6217.json	org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	2745
3390.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.toString()	noCall	noCall	true	2410
70.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getContent()	noCall	noCall	true	1572
5258.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit.getFlags()	5150.json	org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor)	true	1922
4798.json	org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.StoredBitmap.getBitmap()	4682.json,null,null,null,4178.json,null,4796.json,null	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps(),org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithoutXor(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7c01fee1-3c2d-4791-ae44-c0f415eb6d04.iterator(),org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithThreeXor(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-f5f5e630-ec34-42cd-9111-dc3539965e81.next(),org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.StoredBitmapTest.testGetBitmapWithOneXor()	true	1922
10122.json	org.eclipse.jgit.archive.TarFormat.equals(java.lang.Object)	noCall	noCall	true	1521
9427.json	org.eclipse.jgit.lib.ObjectDatabase.create()	noCall	noCall	true	3176
3631.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getObjectCount()	3453.json,3379.json,null,3872.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.objectsBefore(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getObjectCount()	true	2410
5334.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.isEmpty()	5442.json,5680.json	org.eclipse.jgit.revwalk.LIFORevQueue.next(),org.eclipse.jgit.revwalk.FIFORevQueue.next()	true	3176
5329.json	org.eclipse.jgit.revwalk.BlockRevQueue.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	5808.json,5643.json,null,null	org.eclipse.jgit.revwalk.TopoSortGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue),org.eclipse.jgit.revwalk.DepthGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue),org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.next(),org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	true	3176
3606.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
2017.json	org.eclipse.jgit.transport.Transport.setRemoveDeletedRefs(boolean)	6836.json	org.eclipse.jgit.api.FetchCommand.call()	true	3176
3836.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.getConfig()	null,null,null,null,null,null,3683.json,null,null,null,null	org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.getReftableConfig(),org.eclipse.jgit.transport.UploadPackTest.uploadPackV2Setup(org.eclipse.jgit.transport.UploadPack.RequestPolicy, org.eclipse.jgit.transport.RefFilter, java.lang.String...),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilterWhenNotAllowed(),org.eclipse.jgit.transport.PushConnectionTest.limitCommandBytes(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getReftableConfig(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithNonSupportingServer(),org.eclipse.jgit.transport.UploadPackTest.testV2CapabilitiesAllowFilter()	true	2410
6266.json	org.eclipse.jgit.gitrepo.RepoProject.getCopyFiles()	6324.json,6309.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles(),org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1111
1386.json	org.eclipse.jgit.transport.OperationResult.setAdvertisedRefs(org.eclipse.jgit.transport.URIish, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	1951.json,2093.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3875.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3755.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.CachedPack)	true	2410
9047.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setGitDir(java.io.File)	null,null,null,396.json,null,9064.json,1811.json,null,null,9074.json,null,null,null,7025.json,6114.json,177.json,null,null,9069.json,202.json,null,null,null,9073.json,7048.json	org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testIsBare_CreateRepositoryFromArbitraryGitDir(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.transport.TransportLocal.openRepo(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.createNestedRepo(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(java.io.File),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromDotGitGitDir(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir(),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	2907
6997.json	org.eclipse.jgit.api.CommitCommand.setInsertChangeId(boolean)	null,7385.json	org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.api.MergeCommand.call()	true	2642
4857.json	org.eclipse.jgit.internal.storage.file.FileRepository.descriptionFile()	4855.json,4856.json	org.eclipse.jgit.internal.storage.file.FileRepository.getGitwebDescription(),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String)	true	572
8690.json	org.eclipse.jgit.patch.HunkHeader.OldImage.getLinesAdded()	null,null,null,null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
8879.json	org.eclipse.jgit.lib.Config.allValuesOf(T)	8878.json	org.eclipse.jgit.lib.Config.getEnum(java.lang.String, java.lang.String, java.lang.String, T)	true	2833
270.json	org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag)	269.json	org.eclipse.jgit.pgm.Show.run()	true	2154
5728.json	org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
3217.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.poll()	3218.json,null	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.skipShadowedRefs(java.lang.String),org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.next()	true	297
7351.json	org.eclipse.jgit.api.CleanCommand.call()	null,null,null,null,null,null,null,null,null,437.json,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.api.CleanCommandTest.testClean(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2574
10298.json	org.eclipse.jgit.http.server.glue.MetaFilter.createPipelines()	10297.json	org.eclipse.jgit.http.server.glue.MetaFilter.getPipelines()	true	3070
2576.json	org.eclipse.jgit.transport.BaseReceivePack.setMaxCommandBytes(long)	noCall	noCall	true	484
1495.json	org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish)	1494.json	org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish)	true	273
10416.json	org.eclipse.jgit.http.server.ClientVersionUtil.toString(int[])	null,null	org.eclipse.jgit.http.server.ClientVersionUtilTest.assertEquals(java.lang.String, int[]),org.eclipse.jgit.http.server.ClientVersionUtilTest.testParse()	true	2174
8504.json	org.eclipse.jgit.util.FileUtils.isFile(java.io.File)	8435.json,8505.json	org.eclipse.jgit.util.FS.isFile(java.io.File),org.eclipse.jgit.util.FileUtils.canExecute(java.io.File)	true	988
6866.json	org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>)	6865.json	org.eclipse.jgit.api.ListBranchCommand.call()	true	1607
3406.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.clearReuseAsIs()	noCall	noCall	true	2410
4147.json	org.eclipse.jgit.internal.storage.file.PackFile.findEndOffset(long)	4146.json	org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
7090.json	org.eclipse.jgit.api.Git.submoduleSync()	noCall	noCall	true	2350
1008.json	org.eclipse.jgit.merge.EolAwareOutputStream.isBeginln()	921.json	org.eclipse.jgit.merge.MergeFormatterPass.writeLine(org.eclipse.jgit.diff.RawText, int)	true	1171
4686.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry.getObjectId()	4096.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)	true	1922
8695.json	org.eclipse.jgit.patch.HunkHeader.getStartOffset()	8647.json,6826.json,6585.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
3724.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.checkType(org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.lib.AnyObjectId, int)	3723.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	654
8321.json	org.eclipse.jgit.util.Base64.encodeBytes(byte[], int, int)	8320.json	org.eclipse.jgit.util.Base64.encodeBytes(byte[])	true	3176
10055.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config)	noCall	noCall	true	843
1712.json	org.eclipse.jgit.transport.URIish.getScheme()	null,null,1806.json,null,null,null,null,null,null,1728.json,null,null,null,null,null,null,2298.json,1724.json,null,1821.json,null,null,null,null,null,null,2236.json,null,9868.json,null,1495.json,null,null,1725.json,null,null,1871.json,null,null,null,null,null,null,null,null,null,null,null,1881.json,null,1822.json,null,null,null,null,1879.json,null,null,1820.json	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-d5fbdced-de8a-4ee7-b6f4-e81b78ebaedc.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.discoverLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ea91b67b-c28a-4bdb-ad18-6ecf605c4ee3.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode(),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.TransportGitSsh.cleanNotFound(org.eclipse.jgit.errors.NoRemoteRepositoryException, java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-6c9352ed-88ab-442d-b26b-caf914bc32ab.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.TransportGitSsh.commandFor(java.lang.String),org.eclipse.jgit.transport.URIishTest.testALot(),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
485.json	org.eclipse.jgit.junit.StrictWorkMonitor.update(int)	noCall	noCall	true	1848
2893.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
4704.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndDelta()	noCall	noCall	true	2692
2733.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getParticipation()	noCall	noCall	true	872
6637.json	org.eclipse.jgit.diff.SimilarityIndex.add(int, int)	null,6625.json	org.eclipse.jgit.diff.SimilarityIndex.hash(java.io.InputStream, long, boolean),org.eclipse.jgit.diff.SimilarityIndex.hash(byte[], int, int)	true	2899
3171.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.commonPrefix(byte[], int, byte[])	3165.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, boolean)	true	297
7124.json	org.eclipse.jgit.api.RebaseResult.getCurrentCommit()	null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD()	true	2756
4895.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPackFile(java.lang.String)	4894.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPacks()	true	2683
7071.json	org.eclipse.jgit.api.Git.rm()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.RmCommandTest.testRemove(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.pgm.Rm.run(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_3(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2756
6622.json	org.eclipse.jgit.diff.SimilarityIndex.create(org.eclipse.jgit.lib.ObjectLoader)	noCall	noCall	true	1111
2517.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.deleteFile(java.lang.String)	noCall	noCall	true	3176
8408.json	org.eclipse.jgit.util.FS.setLastModified(java.io.File, long)	noCall	noCall	true	1864
8716.json	org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(java.nio.charset.Charset[])	8715.json,null	org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(java.nio.charset.Charset, java.nio.charset.Charset),org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc()	true	3176
366.json	org.eclipse.jgit.pgm.Log.noRenames(boolean)	noCall	noCall	true	2838
7141.json	org.eclipse.jgit.api.PullCommand.getFastForwardMode()	7131.json	org.eclipse.jgit.api.PullCommand.call()	true	359
4644.json	org.eclipse.jgit.internal.storage.file.PackIndex.hasObject(org.eclipse.jgit.lib.AnyObjectId)	null,1368.json	org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
4123.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	4349.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean)	true	2906
5445.json	org.eclipse.jgit.revwalk.LIFORevQueue.anybodyHasFlag(int)	noCall	noCall	true	3176
6518.json	org.eclipse.jgit.diff.DiffAlgorithm.normalize(org.eclipse.jgit.diff.SequenceComparator<? super S>, org.eclipse.jgit.diff.EditList, S, S)	6516.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	433
4614.json	org.eclipse.jgit.internal.storage.file.LockFile.copyCurrentContent()	4613.json	org.eclipse.jgit.internal.storage.file.LockFile.lockForAppend()	true	3176
3665.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.toBlockStart(long)	3663.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	true	2410
8005.json	org.eclipse.jgit.util.LongList.get(int)	3063.json,6501.json,null,3058.json,null,6488.json,3099.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getSnake(int, int),org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()	true	3167
7592.json	org.eclipse.jgit.treewalk.TreeWalk.getTree(int, java.lang.Class<T>)	7019.json,948.json,null,null,5910.json,null,6023.json,9570.json,null,6043.json,7040.json,7018.json,7796.json,6021.json,6041.json,7699.json,7760.json,null,1006.json,7792.json,7530.json,null,7766.json,null,7244.json,null,null,null,null,7756.json,null,6981.json,null,6758.json,7243.json,7764.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.getTree(int),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer(),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.treewalk.WorkingTreeIterator.getDirCacheIterator(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.workingTree(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
5504.json	org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree)	5504.json,5488.json,5482.json	org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.revwalk.ObjectWalk.next(),org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject)	true	3176
9914.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isId(java.lang.String)	null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testIsId()	true	856
7184.json	org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.RepoStatistics)	7183.json,7182.json	org.eclipse.jgit.api.GarbageCollectCommand.getStatistics(),org.eclipse.jgit.api.GarbageCollectCommand.call()	true	2029
3175.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.writeKey(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
1014.json	org.eclipse.jgit.merge.MergeMessageFormatter.joinNames(java.util.List<java.lang.String>, java.lang.String, java.lang.String)	1011.json	org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref)	true	2773
3699.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stored(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	235
7538.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	7540.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	true	3176
1783.json	org.eclipse.jgit.transport.SideBandInputStream.needDataPacket()	1781.json,1782.json	org.eclipse.jgit.transport.SideBandInputStream.read(),org.eclipse.jgit.transport.SideBandInputStream.read(byte[], int, int)	true	3176
4881.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.flush()	noCall	noCall	true	2907
4397.json	org.eclipse.jgit.internal.storage.file.ByteArrayWindow.crc32(java.util.zip.CRC32, long, int)	4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
9499.json	org.eclipse.jgit.lib.RebaseTodoLine.setShortMessage(java.lang.String)	noCall	noCall	true	1683
6746.json	org.eclipse.jgit.diff.ContentSource.create(org.eclipse.jgit.treewalk.WorkingTreeIterator)	6572.json	org.eclipse.jgit.diff.DiffFormatter.source(org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2838
18.json	org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.authorFor(org.eclipse.jgit.revplot.PlotCommit<org.eclipse.jgit.awtui.SwingCommitList.SwingLane>)	17.json	org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getValueAt(int, int)	true	3176
252.json	org.eclipse.jgit.pgm.internal.CLIText.Format.format(java.lang.Object...)	251.json	org.eclipse.jgit.pgm.internal.CLIText.Format.formatWithLocale(java.util.Locale, java.lang.Object...)	true	278
5338.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.pop()	5442.json,5680.json	org.eclipse.jgit.revwalk.LIFORevQueue.next(),org.eclipse.jgit.revwalk.FIFORevQueue.next()	true	3176
2758.json	org.eclipse.jgit.internal.ketch.LocalReplica.describeForLog()	noCall	noCall	true	872
7587.json	org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.lib.AnyObjectId)	7019.json,null,null,null,null,9570.json,7903.json,6043.json,null,null,7040.json,7018.json,null,null,6022.json,null,null,null,945.json,7481.json,null,1005.json,2839.json,null,2807.json,null,271.json,null,7244.json,null,null,null,null,4829.json,6981.json,null,7423.json,null,null,7243.json,null,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.setTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.dircache.DirCacheCheckout.addTree(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.treewalk.filter.TreeFilter, boolean),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(org.eclipse.jgit.revwalk.RevCommit, boolean, boolean),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstWorking(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.api.StashCreateCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstHead(org.eclipse.jgit.revwalk.RevCommit)	true	3176
279.json	org.eclipse.jgit.pgm.Merge.getOldHead()	278.json	org.eclipse.jgit.pgm.Merge.run()	true	927
7830.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry)	7796.json,null,7831.json,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()	true	2696
5889.json	org.eclipse.jgit.dircache.DirCache.is_DIRC(byte[])	5886.json	org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream)	true	3176
5370.json	org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(org.eclipse.jgit.lib.AnyObjectId)	3781.json,3375.json,5139.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2851
9127.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.readFirstLine(java.io.File)	9126.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.isValidHead(java.io.File)	true	3176
1319.json	org.eclipse.jgit.transport.BundleFetchConnection.readLine(byte[])	1317.json,1316.json	org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2(),org.eclipse.jgit.transport.BundleFetchConnection.readSignature()	true	3176
1640.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.supports(org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1408
1739.json	org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)	1737.json,1738.json	org.eclipse.jgit.transport.TransferConfig.newObjectChecker(),org.eclipse.jgit.transport.TransferConfig.newReceiveObjectChecker()	true	1293
1323.json	org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites()	1320.json	org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
3857.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int)	null,3803.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
7042.json	org.eclipse.jgit.api.PullResult.getMergeResult()	null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode)	true	2802
6753.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-792c270f-880a-45ac-9ad3-821aa66de5df.getType()	noCall	noCall	true	2838
295.json	org.eclipse.jgit.pgm.CommandRef.toString()	noCall	noCall	true	276
5729.json	org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.requiresCommitBody()	noCall	noCall	true	2673
5070.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setObjectCountCallback(org.eclipse.jgit.transport.ObjectCountCallback)	1536.json	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	1097
494.json	org.eclipse.jgit.junit.time.MonotonicFakeClock.tick(long, java.util.concurrent.TimeUnit)	noCall	noCall	true	565
6576.json	org.eclipse.jgit.diff.DiffFormatter.isRename(org.eclipse.jgit.diff.DiffEntry)	6575.json	org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2899
6192.json	org.eclipse.jgit.storage.pack.PackConfig.setExecutor(java.util.concurrent.Executor)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	2874
8895.json	org.eclipse.jgit.lib.Config.fireConfigChangedEvent()	8908.json,6089.json	org.eclipse.jgit.lib.Config.setStringList(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>),org.eclipse.jgit.storage.file.FileBasedConfig.save()	true	2852
2530.json	org.eclipse.jgit.transport.PackedObjectInfo.setType(int)	2398.json,2410.json,2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	319
6551.json	org.eclipse.jgit.diff.DiffFormatter.setDiffAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm)	235.json	org.eclipse.jgit.pgm.Diff.setAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm.SupportedAlgorithm)	true	2830
97.json	org.eclipse.jgit.pgm.Status.printSectionHeader(java.lang.String, java.lang.Object...)	96.json	org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	true	2100
2400.json	org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	2930.json,2931.json,4710.json,3662.json,4711.json,3661.json	org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	true	2692
2222.json	org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	2220.json	org.eclipse.jgit.transport.TransportHttp.getConnection(org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream, java.lang.String)	true	3070
5186.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.negmatch(byte[], int, byte[], int, int)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
3157.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.estimateEntryCount(byte, byte, int)	noCall	noCall	true	297
7613.json	org.eclipse.jgit.treewalk.TreeWalk.exitSubtree()	7868.json,7590.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk(),org.eclipse.jgit.treewalk.TreeWalk.next()	true	3176
6482.json	org.eclipse.jgit.diff.MyersDiff.calculateEdits(org.eclipse.jgit.diff.Edit)	noCall	noCall	true	3169
5811.json	org.eclipse.jgit.ignore.FastIgnoreRule.isMatch(java.lang.String, boolean, boolean)	5810.json,null,5868.json	org.eclipse.jgit.ignore.FastIgnoreRule.isMatch(java.lang.String, boolean),org.eclipse.jgit.ignore.FastIgnoreRuleTest.match(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.IgnoreNode.checkIgnored(java.lang.String, boolean)	true	1322
5887.json	org.eclipse.jgit.dircache.DirCache.skipOptionalExtension(java.io.InputStream, java.security.MessageDigest, byte[], long)	5886.json	org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream)	true	3049
7627.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(java.lang.String)	null,null,null	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst()	true	923
349.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addAuthorRevFilter(java.lang.String)	noCall	noCall	true	3176
5836.json	org.eclipse.jgit.ignore.internal.Strings.checkPosixCharClass(char[])	null	org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String)	true	1322
7128.json	org.eclipse.jgit.api.PullCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	2802
1910.json	org.eclipse.jgit.transport.BasePackFetchConnection.Anonymous-9e2f4a4d-aeff-43c8-b1e6-ca2a9775d495.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
3425.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hash(int, long)	3440.json,3441.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.slot(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.lockFor(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
9306.json	org.eclipse.jgit.lib.BatchRefUpdate.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)	4933.json,2762.json,2625.json,null,4985.json,null,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideRefLogMessage(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogCustomIdent(),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	2210
3795.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findOffset(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	3728.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, java.util.Collection<T>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReader.FoundObject<T>>)	true	2410
3809.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	3375.json,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
7557.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.idBuffer()	null,null,null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId()	true	3176
1126.json	org.eclipse.jgit.hooks.CommitMsgHook.getHookName()	noCall	noCall	true	1195
9620.json	org.eclipse.jgit.lib.AnyObjectId.formatHexChar(char[], int, int)	9619.json,9218.json	org.eclipse.jgit.lib.AnyObjectId.toHexCharArray(char[]),org.eclipse.jgit.lib.AbbreviatedObjectId.name()	true	3176
1815.json	org.eclipse.jgit.transport.TransportLocal.spawn(java.lang.String)	noCall	noCall	true	3011
7549.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry()	7548.json,7547.json,7536.json,7534.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.back(int),org.eclipse.jgit.treewalk.CanonicalTreeParser.next(int),org.eclipse.jgit.treewalk.CanonicalTreeParser.next(),org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(byte[])	true	3176
5223.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isReuseAsIs()	5245.json,5237.json,5148.json,5130.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.ObjectToPack.getFormat(),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2906
7328.json	org.eclipse.jgit.api.GitCommand.setCallable(boolean)	7530.json,6824.json,7270.json,7502.json,6865.json,7008.json,7188.json,7372.json,7471.json,6953.json,7260.json,7007.json,6979.json,7193.json,7385.json,7331.json,6863.json	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.api.ListBranchCommand.call(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.api.ArchiveCommand.setTree(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.api.ListTagCommand.call(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.DeleteTagCommand.call()	true	2953
2218.json	org.eclipse.jgit.transport.TransportHttp.setURI(org.eclipse.jgit.transport.URIish)	2229.json	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String)	true	297
2749.json	org.eclipse.jgit.internal.ketch.ElectionRound.start()	noCall	noCall	true	872
262.json	org.eclipse.jgit.pgm.Show.unified(int)	noCall	noCall	true	2154
6313.json	org.eclipse.jgit.gitrepo.RepoCommand.findRef(java.lang.String, org.eclipse.jgit.lib.Repository)	6310.json	org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git)	true	1493
10104.json	org.eclipse.jgit.lfs.server.LfsProtocolServlet.LfsRequest.isVerify()	noCall	noCall	true	512
8146.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.wrapInputStream(java.io.InputStream, org.eclipse.jgit.lib.CoreConfig.EolStreamType)	null,7808.json	org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckin(org.eclipse.jgit.lib.CoreConfig.EolStreamType, org.eclipse.jgit.lib.CoreConfig.EolStreamType, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.handleAutoCRLF(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	824
5821.json	org.eclipse.jgit.ignore.internal.Strings.getPathSeparator(java.lang.Character)	5844.json	org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character, boolean)	true	1322
9841.json	org.eclipse.jgit.lib.TreeFormatter.toByteArray()	null,null,9842.json,null	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst()	true	2775
1210.json	org.eclipse.jgit.notes.NoteMapMerger.merge(org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange(),org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs(),org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs(),org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes()	true	2709
2220.json	org.eclipse.jgit.transport.TransportHttp.getConnection(org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream, java.lang.String)	2221.json	org.eclipse.jgit.transport.TransportHttp.openFetch()	true	77
8122.json	org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.read(byte[], int, int)	noCall	noCall	true	2844
1935.json	org.eclipse.jgit.transport.Daemon.clearThread()	1931.json	org.eclipse.jgit.transport.Daemon.Acceptor.terminate()	true	279
83.json	org.eclipse.jgit.pgm.Remote.run()	noCall	noCall	true	911
7941.json	org.eclipse.jgit.util.RawParseUtils.lineMap(byte[], int, int)	null,null,null,null,null,null	org.eclipse.jgit.util.RawParseUtils_LineMapTest.testEmpty(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.testOneBlankLine(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.testFourLineBlanks(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.testBinary(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineNoLF(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.testTwoLineFooBar()	true	3176
216.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[])	noCall	noCall	true	3176
9113.json	org.eclipse.jgit.lib.RepositoryCache.clearAllExpired()	null,9104.json,9106.json	org.eclipse.jgit.lib.RepositoryCache.Anonymous-c2e38f5a-3f3b-4c1a-9145-82b6773c8872.run(),org.eclipse.jgit.lib.RepositoryCache.clearExpired(),org.eclipse.jgit.lib.RepositoryCache.configureEviction(org.eclipse.jgit.lib.RepositoryCacheConfig)	true	698
7666.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getMode()	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree()	true	3176
5044.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	4350.json,5128.json,3754.json	org.eclipse.jgit.internal.storage.file.WindowCursor.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.dfs.DfsReader.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	2851
9295.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.Anonymous-e0f55f10-34ca-4698-a811-fd70ebf3f8df.next()	noCall	noCall	true	2645
9987.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(long[], int)	9986.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(long[])	true	856
3705.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadIndexBytes()	noCall	noCall	true	387
8506.json	org.eclipse.jgit.util.FileUtils.getFileAttributesBasic(org.eclipse.jgit.util.FS, java.io.File)	7994.json	org.eclipse.jgit.util.FS_Win32.getAttributes(java.io.File)	true	1579
8226.json	org.eclipse.jgit.util.io.UnionInputStream.close()	null	org.eclipse.jgit.util.io.UnionInputStreamTest.testExceptionDuringClose()	true	3078
2828.json	org.eclipse.jgit.internal.ketch.KetchSystem.hasParticipation(org.eclipse.jgit.lib.Config, java.lang.String)	2827.json	org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository)	true	872
6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	6663.json	org.eclipse.jgit.diff.HistogramDiffIndex.findLongestCommonSequence()	true	2816
9193.json	org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte[], int)	5490.json,4485.json,5504.json,5252.json,4484.json,9192.json,7635.json,7538.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.initEntry(),org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.Anonymous-37a40128-707c-4b93-b1c5-8fd21a903d3e.ensureId(),org.eclipse.jgit.lib.MutableObjectId.fromRaw(byte[]),org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId(org.eclipse.jgit.lib.MutableObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	true	3176
3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	3340.json,3341.json,3336.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeMultiLevelIndex(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.flushCurBlock()	true	297
1696.json	org.eclipse.jgit.transport.AmazonS3.properties(java.io.File)	2507.json	org.eclipse.jgit.transport.TransportAmazonS3.loadPropertiesFile(java.io.File)	true	3176
3338.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.estimateBytes(long)	3302.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()	true	297
9522.json	org.eclipse.jgit.lib.RefUpdate.setDetachingSymbolicRef()	3955.json,null,3571.json,4915.json	org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newUpdate(java.lang.String, boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(java.lang.String, boolean)	true	2634
3856.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.crc32(java.util.zip.CRC32, long, int)	3803.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
4342.json	org.eclipse.jgit.internal.storage.file.WindowCursor.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	noCall	noCall	true	2848
5144.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.lib.AnyObjectId, int, int)	5143.json,5146.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, int),org.eclipse.jgit.internal.storage.pack.PackWriter.filterAndAddObject(org.eclipse.jgit.lib.AnyObjectId, int, int)	true	2893
8683.json	org.eclipse.jgit.patch.Patch.parseGitBinary(org.eclipse.jgit.patch.FileHeader, int, int)	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
5022.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflater()	5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
478.json	org.eclipse.jgit.junit.MockSystemReader.setWindows()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows(),org.eclipse.jgit.lib.ValidRefNameTest.setWindowsSystemReader(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	2376
2656.json	org.eclipse.jgit.transport.RefAdvertiser.setUseProtocolV2(boolean)	null	org.eclipse.jgit.transport.UploadPack.lsRefsV2()	true	48
8089.json	org.eclipse.jgit.util.NB.encodeInt32(byte[], int, int)	3309.json,4717.json,5978.json,8345.json,8344.json,5986.json,4392.json,4393.json,4330.json,4156.json,5977.json,3310.json,5892.json,null,null,5999.json,null,null,4012.json,5043.json,3510.json,3285.json,9606.json,null,4243.json,4242.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.encodeHeader(byte[]),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack(),org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(int),org.eclipse.jgit.util.sha1.SHA1.digest(),org.eclipse.jgit.util.sha1.SHA1.finish(),org.eclipse.jgit.dircache.DirCacheEntry.setLength(int),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeCRCs(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset32(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl(),org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeInt(int),org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter(),org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream),org.eclipse.jgit.util.NBTest.testEncodeInt32(),org.eclipse.jgit.internal.storage.file.PackFileTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.dircache.DirCacheEntry.encodeTS(int, long),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.transport.PackParserTest.packHeader(org.eclipse.jgit.util.TemporaryBuffer.Heap, int),org.eclipse.jgit.internal.storage.file.PackInserter.writePackHeader(byte[], int),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeFileHeader(int, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushBlock(),org.eclipse.jgit.lib.AnyObjectId.copyRawTo(byte[], int),org.eclipse.jgit.transport.RefAdvertiserTest.id(int),org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeFanOutTable(),org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeTOC(int)	true	3176
4439.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getShallowCommits()	noCall	noCall	true	2026
945.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl()	noCall	noCall	true	3176
7380.json	org.eclipse.jgit.api.StashListCommand.call()	null,null,null,null	org.eclipse.jgit.api.StashListCommandTest.noStashRef(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog()	true	2332
8808.json	org.eclipse.jgit.lib.ConfigSnapshot.getNames(java.lang.String, java.lang.String, boolean)	8890.json,8889.json,8807.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.Config.getNames(java.lang.String, boolean),org.eclipse.jgit.lib.ConfigSnapshot.getNames(java.lang.String, java.lang.String)	true	2260
3511.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.sortObjectsById()	3505.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()	true	2410
9340.json	org.eclipse.jgit.lib.BlobObjectChecker.Anonymous-f0b4ef82-180e-4a8f-8263-f241da111ada.endBlob(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	286
3770.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	3768.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()	true	1881
4450.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openPack(java.io.File)	noCall	noCall	true	2692
3525.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.inflate(org.eclipse.jgit.internal.storage.dfs.DfsReader, long, int)	3533.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int)	true	1397
3035.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allRefs()	null,null,null,null,null,null,null,null,null,null,156.json,null,147.json,null,null,153.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneSymbolicRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneTagRef(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneDeletedRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.compaction(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneIdRef(),org.eclipse.jgit.pgm.debug.ReadReftable.run()	true	297
8262.json	org.eclipse.jgit.util.io.TimeoutInputStream.read()	null,null,null,null	org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Timeout(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Success2(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Success1(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Success()	true	3176
4170.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.findPosition(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
2093.json	org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	null,2034.json	org.eclipse.jgit.transport.PushProcessTest.executePush(),org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
6636.json	org.eclipse.jgit.diff.SimilarityIndex.packedIndex(int)	6634.json,6630.json,6633.json	org.eclipse.jgit.diff.SimilarityIndex.count(int),org.eclipse.jgit.diff.SimilarityIndex.common(org.eclipse.jgit.diff.SimilarityIndex, org.eclipse.jgit.diff.SimilarityIndex),org.eclipse.jgit.diff.SimilarityIndex.key(int)	true	2899
540.json	org.eclipse.jgit.junit.http.RecordingLogger.warn(java.lang.String)	noCall	noCall	true	3070
6295.json	org.eclipse.jgit.gitrepo.RepoCommand.setInputStream(java.io.InputStream)	null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	1462
6145.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeCompressing()	noCall	noCall	true	1094
1242.json	org.eclipse.jgit.transport.TrackingRefUpdate.getResult()	304.json,302.json,null,null,null	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled()	true	3176
4693.json	org.eclipse.jgit.internal.storage.file.BitSet.mask(int)	4690.json,4688.json,4689.json	org.eclipse.jgit.internal.storage.file.BitSet.get(int),org.eclipse.jgit.internal.storage.file.BitSet.set(int),org.eclipse.jgit.internal.storage.file.BitSet.clear(int)	true	1922
3364.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readReftablesBefore()	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	278
4617.json	org.eclipse.jgit.internal.storage.file.LockFile.Anonymous-8cd08354-04a6-4aa1-a9a2-fc9656445122.write(byte[], int, int)	noCall	noCall	true	3176
9948.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(long[], int)	null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareLong(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToLong()	true	856
3190.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.key(int, org.eclipse.jgit.lib.ObjectId)	noCall	noCall	true	297
3031.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.blockSize()	noCall	noCall	true	297
8744.json	org.eclipse.jgit.lib.RepositoryCacheConfig.getExpireAfter()	null,8748.json,null,9106.json,null,null	org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelayShouldBeMax10minutes(),org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDefaultValues(),org.eclipse.jgit.lib.RepositoryCache.configureEviction(org.eclipse.jgit.lib.RepositoryCacheConfig),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelay(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testFromConfig()	true	698
5140.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(org.eclipse.jgit.revwalk.BitmapWalker, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1922
5053.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.cost()	5125.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	1880
9864.json	org.eclipse.jgit.lfs.LfsPointer.toString()	noCall	noCall	true	628
544.json	org.eclipse.jgit.junit.http.RecordingLogger.info(java.lang.String, java.lang.Object, java.lang.Object)	noCall	noCall	true	3070
6738.json	org.eclipse.jgit.diff.HashedSequenceComparator.equals(org.eclipse.jgit.diff.HashedSequence<S>, int, org.eclipse.jgit.diff.HashedSequence<S>, int)	6665.json,6664.json,null,null	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.ForwardEditPaths.snake(int, int),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.BackwardEditPaths.snake(int, int)	true	2820
3337.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.finishSectionMaybeWriteIndex()	3305.json,3304.json,3306.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishRefAndObjSections(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishLogSection()	true	297
4694.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.setIndexVersion(int)	null,341.json	org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean),org.eclipse.jgit.pgm.IndexPack.run()	true	3176
6652.json	org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor)	6645.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
1843.json	org.eclipse.jgit.transport.ReceiveCommand.disableRefLog()	1842.json,null	org.eclipse.jgit.transport.ReceiveCommand.setRefLogMessage(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideDisableRefLog()	true	319
8839.json	org.eclipse.jgit.lib.CoreConfig.getExcludesFile()	null	org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load()	true	2663
8047.json	org.eclipse.jgit.util.FS_Win32_Cygwin.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String)	noCall	noCall	true	1223
8743.json	org.eclipse.jgit.patch.FormatError.toString()	noCall	noCall	true	3176
9954.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexByteArray()	9951.json,9953.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.io.OutputStream),org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.nio.ByteBuffer)	true	856
7043.json	org.eclipse.jgit.api.PullResult.getRebaseResult()	null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict()	true	2689
4515.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.findOffset(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
10076.json	org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.close()	10075.json,10074.json	org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onAllDataRead(),org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onDataAvailable()	true	856
6436.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.diff.RawText)	6435.json,112.json,7350.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, byte[]),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommand.call()	true	2567
10412.json	org.eclipse.jgit.http.server.ClientVersionUtil.parseVersion(java.lang.String)	null,null	org.eclipse.jgit.http.server.ClientVersionUtilTest.testParse(),org.eclipse.jgit.http.server.ClientVersionUtilTest.testPushStatusBug()	true	2174
1317.json	org.eclipse.jgit.transport.BundleFetchConnection.readBundleV2()	noCall	noCall	true	3176
1079.json	org.eclipse.jgit.errors.DirCacheNameConflictException.getPath2()	null,null,4954.json	org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	893
537.json	org.eclipse.jgit.junit.http.RecordingLogger.getName()	noCall	noCall	true	3070
2759.json	org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository)	2901.json	org.eclipse.jgit.internal.ketch.KetchLeader.initialize()	true	872
5647.json	org.eclipse.jgit.revwalk.RevFlagSet.add(org.eclipse.jgit.revwalk.RevFlag)	null,null,5713.json,5711.json,null,null,null,null,null,null,null,5710.json,null,7260.json	org.eclipse.jgit.revwalk.RevFlagSetTest.testEquals(),org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove(),org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAny(org.eclipse.jgit.revwalk.RevFlag...),org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAll(org.eclipse.jgit.revwalk.RevFlag...),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne(),org.eclipse.jgit.revwalk.RevObjectTest.testHasAllFlag(),org.eclipse.jgit.revwalk.RevObjectTest.testHasAnyFlag(),org.eclipse.jgit.revwalk.RevFlagSetTest.testContainsAll(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo(),org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlagSet(),org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet(),org.eclipse.jgit.revwalk.filter.RevFlagFilter.has(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.RevFlagSetTest.testContains(),org.eclipse.jgit.api.DescribeCommand.call()	true	3176
3322.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.refBytes()	135.json,null	org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog()	true	297
7701.json	org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.clone()	noCall	noCall	true	2839
9440.json	org.eclipse.jgit.lib.CommitBuilder.setCommitter(org.eclipse.jgit.lib.PersonIdent)	null,7224.json,null,null,null,null,1034.json,7037.json,null,null,2850.json,null,6979.json,null,6309.json,null,2752.json,167.json,null,4931.json,null,null,2840.json,null,2851.json,null,null,213.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.junit.TestRepository.setAuthorAndCommitter(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.api.StashCreateCommand.createBuilder(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
6215.json	org.eclipse.jgit.revplot.PlotWalk.next()	noCall	noCall	true	2874
7220.json	org.eclipse.jgit.api.ListNotesCommand.setNotesRef(java.lang.String)	noCall	noCall	true	2618
6714.json	org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[])	6713.json,null	org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter()	true	1964
10251.json	org.eclipse.jgit.http.server.glue.SuffixPipeline.toString()	noCall	noCall	true	3070
1306.json	org.eclipse.jgit.transport.BaseFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	1305.json	org.eclipse.jgit.transport.BaseFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	1908
5276.json	org.eclipse.jgit.attributes.AttributesRule.parseAttributes(java.lang.String)	noCall	noCall	true	1249
4667.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectSet()	5094.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectSet()	true	1031
8195.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[], int, int)	8194.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[])	true	3176
1778.json	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.decrypt(java.io.InputStream)	noCall	noCall	true	966
2410.json	org.eclipse.jgit.transport.PackParser.whole(long, int, long)	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	3176
4944.json	org.eclipse.jgit.internal.storage.reftree.Command.append(java.lang.StringBuilder, org.eclipse.jgit.lib.Ref, java.lang.String)	4943.json	org.eclipse.jgit.internal.storage.reftree.Command.toString()	true	884
5239.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setWeight(int)	5120.json,5148.json,5121.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsNeedingDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	2906
6111.json	org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
7132.json	org.eclipse.jgit.api.PullCommand.setRemote(java.lang.String)	null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead()	true	1576
4405.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getDeltaBase()	noCall	noCall	true	2906
1088.json	org.eclipse.jgit.errors.TranslationStringMissingException.getKey()	null	org.eclipse.jgit.nls.TranslationBundleTest.testMissingString()	true	3012
7133.json	org.eclipse.jgit.api.PullCommand.setRemoteBranchName(java.lang.String)	null,null	org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead()	true	1576
2411.json	org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	2926.json,2398.json,2410.json	org.eclipse.jgit.internal.fsck.FsckPackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	3176
3868.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setWorkTree(java.io.File)	noCall	noCall	true	2410
2571.json	org.eclipse.jgit.transport.BaseReceivePack.getRefFilter()	noCall	noCall	true	3041
9151.json	org.eclipse.jgit.lib.RefRename.needToUpdateHEAD()	4565.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()	true	3059
9546.json	org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk)	3346.json,4565.json,7224.json,6309.json,9544.json,167.json,null,9326.json,2122.json,null,1853.json,7300.json,7434.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.update(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.lib.RefUpdate.update(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	true	3176
8165.json	org.eclipse.jgit.util.io.AutoLFOutputStream.close()	noCall	noCall	true	824
7451.json	org.eclipse.jgit.api.RebaseCommand.parseAuthor(byte[])	null,7424.json	org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.api.RebaseCommand.parseAuthor()	true	2739
7536.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.next()	6010.json,6007.json,9842.json,5252.json,4968.json	org.eclipse.jgit.dircache.DirCacheBuilder.enterTree(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	3176
9931.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.name()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9932.json,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString()	true	856
3726.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getShallowCommits()	3535.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.getShallowCommits()	true	2026
3489.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getWeight()	noCall	noCall	true	2410
5325.json	org.eclipse.jgit.revwalk.RevObjectList.set(int, E)	5324.json	org.eclipse.jgit.revwalk.RevObjectList.add(int, E)	true	3176
5688.json	org.eclipse.jgit.revwalk.RevTree.parseBody(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	3176
4025.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.write(int)	noCall	noCall	true	221
8664.json	org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, int, int)	8661.json,8659.json,8660.json	org.eclipse.jgit.patch.FileHeader.parseNewName(int, int),org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.FileHeader.parseOldName(int, int)	true	3176
3024.json	org.eclipse.jgit.internal.revwalk.AddToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	1922
6941.json	org.eclipse.jgit.api.errors.CheckoutConflictException.addConflictingPath(java.lang.String)	noCall	noCall	true	2939
5716.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.toString()	noCall	noCall	true	3176
244.json	org.eclipse.jgit.pgm.Diff.dstPrefix(java.lang.String)	noCall	noCall	true	2838
10398.json	org.eclipse.jgit.http.server.ServletUtils.compress(byte[])	noCall	noCall	false	3070
5948.json	org.eclipse.jgit.dircache.DirCacheEditor.applyEdits()	5947.json	org.eclipse.jgit.dircache.DirCacheEditor.finish()	true	3176
2992.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.parseList(java.lang.String)	2991.json	org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream)	true	289
9353.json	org.eclipse.jgit.lib.ObjectId.fromHexString(byte[], int)	9352.json,9351.json	org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.ObjectId.fromString(byte[], int)	true	3176
5422.json	org.eclipse.jgit.revwalk.RevCommitList.source(org.eclipse.jgit.revwalk.RevWalk)	null,6244.json	org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.revplot.PlotCommitList.source(org.eclipse.jgit.revwalk.RevWalk)	true	3176
2502.json	org.eclipse.jgit.transport.TransportAmazonS3.Anonymous-bb45ff4e-ceed-46bf-9307-ac6b77becd98.getSchemes()	noCall	noCall	true	2645
6129.json	org.eclipse.jgit.storage.pack.PackStatistics.getRootCommits()	noCall	noCall	true	1029
8984.json	org.eclipse.jgit.lib.Repository.getIndexFile()	null,null,null,5875.json,null,null,5878.json,null,null,null,null,null,null,null,null,null,4863.json,null,null,null,null,null,null,null,null,4862.json,4829.json,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.dircache.DirCache.lock(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.events.IndexChangedListener),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetIndexFile(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.EolRepositoryTest.recreateWorktree(org.eclipse.jgit.api.Git),org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged(boolean),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.api.ResetCommandTest.inIndex(java.lang.String),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.lib.RacyGitTests.testRacyGitDetection(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	3085
7615.json	org.eclipse.jgit.treewalk.TreeWalk.pathOf(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7600.json,7638.json	org.eclipse.jgit.treewalk.TreeWalk.getPathString(),org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString()	true	3176
99.json	org.eclipse.jgit.pgm.Status.printList(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>)	96.json	org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	true	2100
7461.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.appendToFile(java.io.File, java.lang.String)	7408.json	org.eclipse.jgit.api.RebaseCommand.writeCurrentCommit(org.eclipse.jgit.revwalk.RevCommit)	true	1426
1931.json	org.eclipse.jgit.transport.Daemon.Acceptor.terminate()	null	org.eclipse.jgit.transport.Daemon.Acceptor.run()	true	279
214.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead()	212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	true	3176
4019.json	org.eclipse.jgit.internal.storage.file.PackInserter.clear()	null,null	org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.internal.storage.file.PackInserter.close()	true	221
6139.json	org.eclipse.jgit.storage.pack.PackStatistics.byObjectType(int)	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics()	true	1094
8908.json	org.eclipse.jgit.lib.Config.setStringList(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	null,null,8904.json,1265.json,8905.json,null,null,null,7188.json	org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf(),org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf(),org.eclipse.jgit.lib.Config.setString(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.Config.unset(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testSetStringListWithEmptyValue(),org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNoPushUrl(),org.eclipse.jgit.api.RenameBranchCommand.call()	true	3176
466.json	org.eclipse.jgit.junit.MockSystemReader.getHostname()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3141
1727.json	org.eclipse.jgit.transport.URIish.toString()	null,null,null,null,null,null,null,null,2291.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2217.json,null,null,null,null,null,85.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1993.json,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.junit.http.HttpTestCase.extendPath(org.eclipse.jgit.transport.URIish, java.lang.String),org.eclipse.jgit.transport.FetchHeadRecord.write(java.io.Writer),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.TestProtocolTest.testFetch(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.TransportHttp.toURL(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode(),org.eclipse.jgit.transport.URIishTest.testStringConstructor(),org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.pgm.RemoteTest.testUpdate(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.RemoteConfigTest.testAddURI()	true	3176
7699.json	org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	2839
3341.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	3340.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeMultiLevelIndex(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
4735.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId)	4442.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId)	true	2848
5807.json	org.eclipse.jgit.revwalk.TopoSortGenerator.outputType()	noCall	noCall	true	3176
2345.json	org.eclipse.jgit.transport.RefSpec.setForceUpdate(boolean)	null,null,null,1965.json,7464.json,6837.json,6911.json,null,6885.json	org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.junit.http.HttpTestCase.mirror(java.lang.String...),org.eclipse.jgit.api.CloneCommand.calculateRefSpecs(java.lang.String),org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.api.FetchCommand.applyOptions(java.util.List<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish)	true	3176
3212.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.allLogs()	3245.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(org.eclipse.jgit.internal.storage.reftable.MergedReftable)	true	297
8989.json	org.eclipse.jgit.lib.Repository.isValidRefName(java.lang.String)	8967.json,null,null,8990.json,4955.json,2306.json,2621.json,7188.json,null,7334.json,2646.json,7301.json,430.json,null,1533.json,7485.json,null	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String),org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(java.lang.String, java.lang.String),org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames(),org.eclipse.jgit.lib.Repository.normalizeBranchName(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.isValidRef(org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.lib.ValidRefNameTest.assertInvalidOnWindows(java.lang.String),org.eclipse.jgit.api.CreateBranchCommand.processOptions(),org.eclipse.jgit.transport.BaseReceivePack.parseCommand(java.lang.String),org.eclipse.jgit.api.TagCommand.processOptions(org.eclipse.jgit.lib.RepositoryState),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.transport.BundleWriter.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CheckoutCommand.processOptions(),org.eclipse.jgit.lib.ValidRefNameTest.assertValid(boolean, java.lang.String)	true	3176
138.json	org.eclipse.jgit.pgm.debug.WriteReftable.readLog(java.lang.String)	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
6641.json	org.eclipse.jgit.diff.SimilarityIndex.grow()	6637.json	org.eclipse.jgit.diff.SimilarityIndex.add(int, int)	true	2899
7942.json	org.eclipse.jgit.util.RawParseUtils.lineMapOrBinary(byte[], int, int)	null,6543.json	org.eclipse.jgit.util.RawParseUtils_LineMapTest.testLineMapOrBinary(),org.eclipse.jgit.diff.RawText.load(org.eclipse.jgit.lib.ObjectLoader, int)	true	29
7277.json	org.eclipse.jgit.api.LogCommand.setSkip(int)	null,null,null	org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip()	true	2350
6667.json	org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(int, int, int)	6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	true	2816
3440.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.slot(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3435.json,3428.json,3436.json,3424.json,3437.json,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.contains(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hasBlock0(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getRef(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	true	2410
3375.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
95.json	org.eclipse.jgit.pgm.Status.printPorcelainLine(char, char, java.lang.String)	94.json	org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status)	true	1648
7455.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(java.lang.String, java.lang.String)	7400.json,7412.json,7402.json,7428.json,7419.json,7425.json	org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.RebaseCommand.initializeSquashFixupFile(java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	true	1912
3959.json	org.eclipse.jgit.internal.storage.file.RefDirectory.stored(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot)	4491.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	3176
1340.json	org.eclipse.jgit.transport.PacketLineOut.writePacket(byte[])	null,null,null,null	org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket1(),org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket3(),org.eclipse.jgit.transport.PacketLineOutTest.testWritePacket2(),org.eclipse.jgit.transport.PacketLineOut.writeString(java.lang.String)	true	3176
6908.json	org.eclipse.jgit.api.CloneCommand.validateDirs(java.io.File, java.io.File, boolean)	6893.json,6894.json,6883.json,6895.json	org.eclipse.jgit.api.CloneCommand.setDirectory(java.io.File),org.eclipse.jgit.api.CloneCommand.setGitDir(java.io.File),org.eclipse.jgit.api.CloneCommand.verifyDirectories(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.CloneCommand.setBare(boolean)	true	1273
1134.json	org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevTree)	1133.json	org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevCommit)	true	2767
6051.json	org.eclipse.jgit.dircache.DirCacheIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	null	org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset()	true	3176
1556.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefsImpl(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.io.BufferedReader)	1555.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	true	3176
6771.json	org.eclipse.jgit.diff.Edit.before(org.eclipse.jgit.diff.Edit)	null,6478.json	org.eclipse.jgit.diff.EditTest.testBeforeAfterCuts(),org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2837
6659.json	org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int)	6652.json,6698.json	org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
1497.json	org.eclipse.jgit.transport.HttpConfig.defaultedPort(int, java.lang.String)	1495.json	org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish)	true	273
6249.json	org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	6248.json	org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit)	true	1480
6911.json	org.eclipse.jgit.api.PushCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,122.json,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions()	true	2805
2023.json	org.eclipse.jgit.transport.Transport.isDryRun()	1951.json,2093.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
5227.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta()	5120.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2893
1043.json	org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	928.json	org.eclipse.jgit.merge.ThreeWayMerger.mergeBase()	true	1933
8585.json	org.eclipse.jgit.util.BlockList.MyIterator.remove()	noCall	noCall	true	2651
286.json	org.eclipse.jgit.pgm.Fetch.run()	noCall	noCall	true	3176
1038.json	org.eclipse.jgit.merge.Merger.getObjectInserter()	null,945.json,1005.json	org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean)	true	3176
1494.json	org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish)	noCall	noCall	true	257
6089.json	org.eclipse.jgit.storage.file.FileBasedConfig.save()	null,null,null,null,null,null,null,null,null,4849.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.merge.MergerTest.writeSubmodule(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setBare(java.io.File, boolean),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.lib.RefTest.testRemoteNames(),org.eclipse.jgit.attributes.AttributesHandlerTest.setupRepo(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyLooseObjects(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyPacks(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setWorkTree(java.io.File, java.io.File),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase()	true	3176
3756.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copy(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, byte[], int, int)	3601.json,3805.json,3672.json	org.eclipse.jgit.internal.storage.dfs.PackInputStream.read(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long, byte[], int, int, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	2410
4177.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.iterator()	noCall	noCall	true	1922
9820.json	org.eclipse.jgit.lib.ObjectReader.Filter.getShallowCommits()	noCall	noCall	true	776
7862.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.isGitlink(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7860.json,7865.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin(),org.eclipse.jgit.treewalk.NameConflictTreeWalk.combineDF(org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	125
9368.json	org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId)	9370.json,9372.json	org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	892
6559.json	org.eclipse.jgit.diff.DiffFormatter.setDetectRenames(boolean)	6548.json,247.json,6570.json,378.json,269.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Show.run()	true	2838
10417.json	org.eclipse.jgit.http.server.ClientVersionUtil.hasPushStatusBug(int[])	null	org.eclipse.jgit.http.server.ClientVersionUtilTest.testPushStatusBug()	false	2174
941.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.getName()	noCall	noCall	true	3176
5960.json	org.eclipse.jgit.dircache.DirCacheEntry.write(java.io.OutputStream)	5892.json	org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream)	true	3176
8732.json	org.eclipse.jgit.patch.BinaryHunk.getBuffer()	noCall	noCall	true	3176
2104.json	org.eclipse.jgit.transport.AdvertiseRefsHookChain.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack)	noCall	noCall	true	2292
10110.json	org.eclipse.jgit.archive.ArchiveFormats.registerAll()	noCall	noCall	false	1839
7728.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.clone()	noCall	noCall	true	3176
3675.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.adviseSequentialRead(long, long)	noCall	noCall	true	286
6583.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AbbreviatedObjectId)	6601.json	org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry)	true	2899
6414.json	org.eclipse.jgit.blame.BlameResult.discardResultContents()	noCall	noCall	true	2567
6456.json	org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate)	6445.json	org.eclipse.jgit.blame.BlameGenerator.next()	true	2567
3087.json	org.eclipse.jgit.internal.storage.reftable.ReftableConstants.isFileHeaderMagic(byte[], int, int)	null,3045.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.emptyTable(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long, int)	true	297
8587.json	org.eclipse.jgit.util.SystemReader.Default.getProperty(java.lang.String)	noCall	noCall	true	3176
5819.json	org.eclipse.jgit.ignore.FastIgnoreRule.equals(java.lang.Object)	noCall	noCall	true	1322
6325.json	org.eclipse.jgit.gitrepo.ManifestParser.inGroups(org.eclipse.jgit.gitrepo.RepoProject)	6322.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNotInGroup()	true	1509
2907.json	org.eclipse.jgit.internal.ketch.KetchLeader.getCommitted()	2788.json,2795.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
9202.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(byte[], int, int)	null,8667.json,null,8718.json	org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.patch.FileHeader.parseIndexLine(int, int),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine(int, int)	true	3176
4517.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
6205.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapExcessiveBranchCount()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
8958.json	org.eclipse.jgit.lib.Repository.updateRef(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,7421.json,null,430.json,null,7434.json,6979.json,null,null,null,null,null,null,null,7388.json,null,null,null,null,7212.json,null,null,null,7471.json,null,null,null,null,null,null,7331.json,6863.json,null,null,null,7224.json,null,null,null,null,null,null,null,null,null,4849.json,6953.json,null,null,null,null,null,null,null,6887.json,7385.json,null,null,null,6309.json,null,null,215.json,null,null,7008.json,null,null,null,null,null,null,null,7300.json,435.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.junit.RepositoryTestCase.createBranch(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsPeel(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.junit.TestRepository.delete(java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.updateRef(java.lang.String),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1(),org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe(),org.eclipse.jgit.junit.TestRepositoryTest.reattachToMaster_Race(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.junit.TestRepository.update(java.lang.String, T),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.api.StashDropCommand.createRefUpdate(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.lib.RefTest.testReadLooseRef(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeSymref(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.DeleteTagCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.merge.MergeMessageFormatterTest.setUp(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref(),org.eclipse.jgit.junit.TestRepositoryTest.nonRacingChange(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsMultipleCommands(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsSymrefs(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefs(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs(),org.eclipse.jgit.api.StashListCommandTest.newStashUpdate(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.junit.TestRepositoryTest.amendHead(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.junit.TestRepositoryTest.commitToUnbornHead(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.lib.RefTest.writeSymref(java.lang.String, java.lang.String),org.eclipse.jgit.lib.RefTest.writeNewRef(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked()	true	3176
8480.json	org.eclipse.jgit.util.FileUtils.mkdir(java.io.File)	null,null,null,null,null,null,null,null,null,null,7400.json,null,null,4849.json,null,null,null,null,null,null,null,null,null,4099.json,null,3935.json,null,null,null,null,null,null,4724.json,null,null,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.util.FileUtilsTest.testDeleteEmptyTreeOk(),org.eclipse.jgit.api.AddCommandTest.testAddFolder(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolder(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.transport.OpenSshConfigTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOk(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolderUntracked(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.util.FileUtilsTest.testMkdir(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOkButIgnoreFail(),org.eclipse.jgit.internal.storage.file.ReflogWriter.create(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.RefDirectory.create(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createEmptyFolderIgnored(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.transport.NetRCTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.create(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteEmptyFolder(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile()	true	2735
4816.json	org.eclipse.jgit.internal.storage.file.GC.packRefs()	null,null,null,4803.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcPackRefsTest.emptyRefDirectoryDeleted(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.internal.storage.file.GC.doGc(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-29a2f154-d0d9-47fb-92d9-8d1fd44e7e03.call(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs()	true	2142
2371.json	org.eclipse.jgit.transport.PackParser.setAllowThin(boolean)	1916.json,null,null,1380.json,null,null,null,341.json,2614.json,null,null,1320.json,null,null,null,null,null	org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.PackParserTest.testTinyThinPack(),org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob(),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.downloadPack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.openPack(org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.pgm.IndexPack.run(),org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean),org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()	true	2692
3277.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt16(int)	3169.json,3188.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
2007.json	org.eclipse.jgit.transport.Transport.setCheckFetchedObjects(boolean)	6836.json	org.eclipse.jgit.api.FetchCommand.call()	true	3176
1621.json	org.eclipse.jgit.transport.resolver.FileResolver.exportDirectory(java.io.File)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
7590.json	org.eclipse.jgit.treewalk.TreeWalk.next()	7019.json,null,null,null,203.json,178.json,6023.json,7906.json,null,null,null,7479.json,null,null,null,6021.json,null,null,2839.json,1006.json,7896.json,null,null,null,null,null,null,null,6470.json,null,null,null,6041.json,null,7975.json,null,null,5655.json,null,null,2807.json,null,271.json,null,null,null,null,null,6981.json,385.json,null,null,null,null,null,null,null,null,null,7018.json,null,945.json,7481.json,null,110.json,7530.json,null,null,7244.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6758.json,null,null,null,5910.json,null,null,null,9570.json,null,null,6043.json,7040.json,7568.json,null,null,null,null,null,7193.json,null,null,null,1362.json,null,null,null,null,null,1377.json,null,null,4829.json,7423.json,7243.json,6714.json,7370.json,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.submodule.SubmoduleWalk.next(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_WithTreeWalk(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.assertPaths(org.eclipse.jgit.treewalk.TreeWalk, java.lang.String...),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.attributes.AttributesHandlerTest.endWalk(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(java.util.Set<java.lang.String>),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.treewalk.filter.TreeFilter, boolean),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.endWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.endWalk(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.assertEntry(java.lang.String, java.lang.String, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.endWalk(),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.ignore.IgnoreNodeTest.endWalk(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored(),org.eclipse.jgit.api.EolRepositoryTest.endWalk(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit(),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	3176
3481.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.position()	noCall	noCall	true	2410
4012.json	org.eclipse.jgit.internal.storage.file.PackInserter.writePackHeader(byte[], int)	4027.json,4011.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.internal.storage.file.PackInserter.beginPack()	true	221
2085.json	org.eclipse.jgit.transport.PacketLineIn.discardUntilEnd()	2607.json	org.eclipse.jgit.transport.BaseReceivePack.discardCommands()	true	705
7600.json	org.eclipse.jgit.treewalk.TreeWalk.getPathString()	null,null,null,null,null,null,985.json,7906.json,null,null,null,7479.json,null,null,null,7481.json,null,110.json,null,null,null,null,null,6024.json,null,null,null,null,null,7618.json,7764.json,984.json,null,null,null,null,9570.json,null,7040.json,null,5315.json,null,6032.json,null,null,null,null,2807.json,7193.json,null,null,271.json,1362.json,null,null,null,null,null,1377.json,null,null,null,null,4829.json,6981.json,385.json,6714.json,7370.json,null	org.eclipse.jgit.merge.CherryPickTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.assertEntry(java.lang.String, java.lang.String, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalk.next(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk(),org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.assertPaths(org.eclipse.jgit.treewalk.TreeWalk, java.lang.String...),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.ResolveMerger.isIndexDirty(),org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>),org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(java.util.Set<java.lang.String>),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.treewalk.filter.TreeFilter, boolean),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.merge.SimpleMergeTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	3176
6663.json	org.eclipse.jgit.diff.HistogramDiffIndex.findLongestCommonSequence()	6478.json	org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2816
3109.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readPersonIdent()	3106.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogEntry()	true	297
6658.json	org.eclipse.jgit.diff.SimilarityRenameDetector.dstFile(long)	6645.json,6698.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
10194.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getValues(java.lang.String)	noCall	noCall	true	289
73.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.setContentLength(int)	57.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setFixedLengthStreamingMode(int)	true	1572
9061.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setIndexFile(java.io.File)	9074.json,9064.json,null,9055.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare()	true	2907
7387.json	org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration()	7385.json	org.eclipse.jgit.api.MergeCommand.call()	true	1577
6655.json	org.eclipse.jgit.diff.SimilarityRenameDetector.size(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	6652.json	org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor)	true	2890
9256.json	org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	noCall	noCall	true	2851
1913.json	org.eclipse.jgit.transport.BasePackFetchConnection.markRefsAdvertised()	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
4166.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeBytes(java.lang.String)	noCall	noCall	true	1922
6600.json	org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry)	6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2839
4811.json	org.eclipse.jgit.internal.storage.file.GC.getExpireDate()	4805.json,4810.json	org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	1084
8906.json	org.eclipse.jgit.lib.Config.unsetSection(java.lang.String, java.lang.String)	null,null,6953.json,null,7228.json,7218.json,7188.json	org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.api.RemoteRemoveCommand.call(),org.eclipse.jgit.api.RenameBranchCommand.call()	true	3054
2240.json	org.eclipse.jgit.transport.TransportHttp.getServiceURL(java.lang.String)	2229.json	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String)	true	297
4274.json	org.eclipse.jgit.internal.storage.file.WindowCache.getStreamFileThreshold()	noCall	noCall	true	2900
6835.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult)	6836.json	org.eclipse.jgit.api.FetchCommand.call()	true	463
6890.json	org.eclipse.jgit.api.CloneCommand.addMergeConfig(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref)	6887.json	org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	true	2622
6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	6581.json,6594.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.toFileHeader(org.eclipse.jgit.diff.DiffEntry)	true	2839
9437.json	org.eclipse.jgit.lib.CommitBuilder.getAuthor()	null,7224.json,2752.json,167.json,null,7040.json,1034.json,null,2840.json,null,9454.json,null,213.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
3596.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setStreamRatio(double)	3599.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	1144
10032.json	org.eclipse.jgit.lfs.server.s3.SignerV4.scope(java.lang.String, java.lang.String)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
10184.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getIdentityFile()	null,null,10166.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit(),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiHost(),org.eclipse.jgit.transport.JschConfigSessionFactory.getJSch(org.eclipse.jgit.transport.OpenSshConfig.Host, org.eclipse.jgit.util.FS),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testPattern(),org.eclipse.jgit.transport.OpenSshConfigTest.testIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive(),org.eclipse.jgit.transport.OpenSshConfigTest.testRemoteUserReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet(),org.eclipse.jgit.transport.OpenSshConfigTest.testMissingArgument(),org.eclipse.jgit.transport.OpenSshConfigTest.testHomeDirUserReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testNoConfig(),org.eclipse.jgit.transport.OpenSshConfigTest.testNegatedPattern(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_DoesNotMatch(),org.eclipse.jgit.transport.OpenSshConfigTest.testLocalhostFQDNReplacement()	true	3176
9433.json	org.eclipse.jgit.lib.ObjectDatabase.open(org.eclipse.jgit.lib.AnyObjectId, int)	null,4072.json,9432.json	org.eclipse.jgit.lib.Repository.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.lib.ObjectDatabase.open(org.eclipse.jgit.lib.AnyObjectId)	true	3176
4447.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2893
4581.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.contains(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
4477.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset(long)	noCall	noCall	true	1808
143.json	org.eclipse.jgit.pgm.debug.ReadDirCache.run()	noCall	noCall	true	3176
8254.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.fillBuffer()	8252.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.read(byte[], int, int)	true	2108
8912.json	org.eclipse.jgit.lib.Config.toText()	null,null,null,6309.json,null,6089.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.lib.ConfigTest.testSetEnum(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMerge(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.lib.ConfigTest.test003_PutRemote(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.transport.RemoteConfigTest.checkConfig(java.lang.String),org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMergeoptions(),org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection(),org.eclipse.jgit.lib.ConfigTest.test004_PutGetSimple(),org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue(),org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection(),org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList()	true	3176
9241.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()	5126.json,5125.json,null	org.eclipse.jgit.internal.storage.pack.PackWriter.runTasks(java.util.concurrent.ExecutorService, org.eclipse.jgit.lib.ThreadSafeProgressMonitor, org.eclipse.jgit.internal.storage.pack.DeltaTask.Block, java.util.List<java.lang.Throwable>),org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2783
4580.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.set(int)	4582.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.addObject(org.eclipse.jgit.lib.AnyObjectId, int)	true	1922
7802.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7801.json,7800.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	748
8920.json	org.eclipse.jgit.lib.Config.isUtf8(byte[])	8916.json,null	org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int),org.eclipse.jgit.storage.file.FileBasedConfig.load()	true	760
4181.json	org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load()	4866.json	org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.getInfoAttributesNode()	true	935
1198.json	org.eclipse.jgit.notes.FanoutBucket.build(boolean, org.eclipse.jgit.lib.ObjectInserter)	null,null	org.eclipse.jgit.notes.FanoutBucket.getTreeId(),org.eclipse.jgit.notes.FanoutBucket.writeTree(org.eclipse.jgit.lib.ObjectInserter)	true	2709
2941.json	org.eclipse.jgit.internal.fsck.FsckError.CorruptObject.getType()	noCall	noCall	true	319
7920.json	org.eclipse.jgit.submodule.SubmoduleWalk.getHeadRef()	noCall	noCall	true	2355
5540.json	org.eclipse.jgit.revwalk.RevCommit.getTree()	null,null,null,5372.json,203.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2840.json,null,2851.json,null,null,1375.json,null,null,null,null,6470.json,null,383.json,null,null,4928.json,5655.json,2807.json,7385.json,null,1363.json,null,2752.json,167.json,null,5488.json,null,null,null,9257.json,7230.json,null,null,null,null,7436.json,null,null,null,null,null,7438.json,null,6812.json,null,null,null,null,null,null,null,null,null,7481.json,null,null,null,null,2850.json,null,6979.json,null,null,null,null,2619.json,7471.json,null,null,6472.json,null,null,5139.json,null,7040.json,7195.json,null,1133.json,2901.json,1033.json,7976.json,null,6887.json,null,null,null,7266.json,273.json,null,null,null,6309.json,null,7008.json,null,null,null,null,null,928.json,null,null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth1(),org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileConflict(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth1(),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHardAndCount(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHard(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstWorking(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.transport.PushCertificateStore.getAll(java.lang.String),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth1(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth2(),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38(),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.revwalk.ObjectWalk.next(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.lib.BlobBasedConfig.asTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.transport.PushCertificateStore.Anonymous-b166a72a-958b-4bed-b785-368a18fbf24c.iterator(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.transport.PushCertificateStore.newTreeWalk(java.lang.String),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.transport.PushCertificateStore.Anonymous-324ea664-6841-49c6-8d36-706ae5aeecb7.hasNext(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileAndContentConflicts(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.parent(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(org.eclipse.jgit.revwalk.RevCommit, boolean, boolean),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.transport.PushCertificateStore.newDirCache(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testMultipleContentConflicts(),org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.ketch.KetchLeader.initialize(),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth2(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.setUp(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.RebaseCommandTest.readFile(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.CrissCrossMergeTest.contentId(java.lang.String, java.lang.String),org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38(),org.eclipse.jgit.merge.ThreeWayMerger.mergeBase(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth2(),org.eclipse.jgit.api.StashCreateCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstHead(org.eclipse.jgit.revwalk.RevCommit)	true	3176
4237.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.createOldestPossible(java.io.OutputStream, java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>)	4718.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx()	true	3176
2559.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowCreates(boolean)	noCall	noCall	true	3176
2105.json	org.eclipse.jgit.transport.AdvertiseRefsHookChain.advertiseRefs(org.eclipse.jgit.transport.UploadPack)	noCall	noCall	true	2292
8154.json	org.eclipse.jgit.util.io.AutoLFInputStream.close()	noCall	noCall	true	2851
7918.json	org.eclipse.jgit.submodule.SubmoduleWalk.getRepository()	null,null,null,null,7920.json,6862.json,null,null,9570.json,null,null,6835.json,7265.json,7187.json,null,null,null,null,null,null,null,null,null,null,7919.json,null,null,7230.json,6888.json,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalk.getHeadRef(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalk.getHead(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	2355
3126.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock(java.lang.Throwable)	3125.json,3114.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock(),org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int)	true	297
4995.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.newBitmapWalker()	5150.json	org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor)	true	1922
3303.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()	null,null,null,3068.json,null,null,3259.json,null,null,null,null,null,null,null,135.json,null,null,null,null,3386.json,null,null,null,3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>, long),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
134.json	org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree)	133.json,134.json	org.eclipse.jgit.pgm.debug.MakeCacheTree.run(),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree)	true	3176
9329.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor)	null,null,null,null,1951.json,null,null,3696.json,4933.json,2762.json,2625.json,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.execute(org.eclipse.jgit.lib.BatchRefUpdate, boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable()	true	2210
267.json	org.eclipse.jgit.pgm.Show.noPrefix(boolean)	noCall	noCall	true	2154
1166.json	org.eclipse.jgit.notes.LeafBucket.Anonymous-deb6e4fe-c93c-498b-98cc-56907137fceb.next()	noCall	noCall	true	2766
7550.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryAttributesNode(org.eclipse.jgit.lib.ObjectReader)	5321.json	org.eclipse.jgit.attributes.AttributesHandler.attributesNode(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	935
1813.json	org.eclipse.jgit.transport.TransportLocal.openPush()	null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	3176
6294.json	org.eclipse.jgit.gitrepo.RepoCommand.setPath(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,109.json,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest(),org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.testDefaultRemoteRevision(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.pgm.Repo.run(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteRevision()	true	1509
7532.json	org.eclipse.jgit.api.AddCommand.isUpdate()	noCall	noCall	true	2867
2047.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-d44e8129-c70c-4546-97be-bf6c10f294fc.getDefaultPort()	noCall	noCall	true	2645
5549.json	org.eclipse.jgit.revwalk.RevCommit.getShortMessage()	null,1536.json,null,null,null,null,null,null,7401.json,null,6812.json,null,null,null,null,null,null,7040.json,7195.json,null,null,null,null,null,6979.json,null,null,7405.json,null,null,null,null,null,434.json,null,7428.json,7403.json,null,null,null,6220.json,null,1030.json,null,301.json,null,7331.json	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_WeirdHeaderOnlyCommit(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedLF(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyNoLF(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessage(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEndLF(),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_OnlyLFMessage(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.merge.SquashMessageFormatter.format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoMessage(),org.eclipse.jgit.api.CreateBranchCommand.call()	true	3176
7883.json	org.eclipse.jgit.submodule.SubmoduleStatus.getHeadId()	null,null,null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule()	true	2355
7189.json	org.eclipse.jgit.api.RenameBranchCommand.setNewName(java.lang.String)	null,null,null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues()	true	2800
435.json	org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean)	430.json	org.eclipse.jgit.pgm.Branch.run()	true	3176
8078.json	org.eclipse.jgit.util.ChangeIdUtil.indexOfFirstFooterLine(java.lang.String[])	8074.json,1012.json	org.eclipse.jgit.util.ChangeIdUtil.insertId(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.merge.MergeMessageFormatter.formatWithConflicts(java.lang.String, java.util.List<java.lang.String>)	true	1967
254.json	org.eclipse.jgit.pgm.internal.CLIText.get()	164.json,388.json,426.json,null,193.json,247.json,302.json,274.json,230.json,232.json,null,396.json,439.json,231.json,352.json,132.json,208.json,294.json,414.json,334.json,124.json,329.json,194.json,430.json,361.json,363.json,417.json,314.json,101.json,217.json,130.json,427.json,425.json,382.json,380.json,397.json,441.json,270.json,143.json,278.json,272.json,438.json,332.json,428.json,301.json,83.json,299.json,233.json,303.json,448.json,429.json,216.json,195.json,287.json,279.json,406.json,123.json,358.json,214.json,null,91.json,323.json,393.json,362.json,269.json,134.json,360.json,338.json,308.json,336.json,284.json,112.json,null,295.json,220.json,391.json,255.json,311.json,331.json,223.json,177.json,297.json,96.json,219.json,218.json,435.json,320.json,399.json,212.json,202.json,256.json,437.json,null	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.DescribeTest.testNoHead(),org.eclipse.jgit.pgm.debug.LfsStore.run(),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.pgm.Clone.cloningSubmodule(java.lang.String),org.eclipse.jgit.pgm.BranchTest.testHelpAfterDelete(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.console.ConsoleAuthenticator.promptPasswordAuthentication(),org.eclipse.jgit.pgm.Clone.initializedSubmodules(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.pgm.RevParse.run(),org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.pgm.CommandRef.create(),org.eclipse.jgit.pgm.TextBuiltin.getResourceBundle(),org.eclipse.jgit.pgm.opt.RevTreeHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.pgm.opt.RefSpecHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.debug.LfsStore.checkOptions(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.pgm.AmazonS3Client.properties(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.TextBuiltin.resolve(java.lang.String),org.eclipse.jgit.pgm.opt.AbstractTreeIteratorHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.Status.getStageStateDescription(org.eclipse.jgit.lib.IndexDiff.StageState),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.pgm.Glog.createWalk(),org.eclipse.jgit.pgm.Branch.deleteForce(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.ReceivePack.run(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Main.installConsole(),org.eclipse.jgit.console.ConsoleCredentialsProvider.install(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.pgm.debug.ReadDirCache.run(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.console.ConsoleAuthenticator.install(),org.eclipse.jgit.pgm.opt.RevCommitHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.Branch.createForce(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.pgm.Daemon.service(org.eclipse.jgit.transport.Daemon, java.lang.String),org.eclipse.jgit.pgm.Clone.checkingOut(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.YesNoType),org.eclipse.jgit.pgm.Branch.moveRename(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[]),org.eclipse.jgit.pgm.debug.LfsStore.readAWSKeys(),org.eclipse.jgit.pgm.Fetch.fetchingSubmodule(java.lang.String),org.eclipse.jgit.pgm.Merge.getOldHead(),org.eclipse.jgit.pgm.TextBuiltin.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.pgm.opt.CmdLineParser.MyOptionDef.toString(),org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.pgm.AmazonS3Client.run(),org.eclipse.jgit.pgm.opt.OptionWithValuesListHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.opt.ObjectIdHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.opt.SubcommandHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.Fetch.recurseSubmodules(java.lang.String),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag(),org.eclipse.jgit.pgm.CommandRef.toString(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.pgm.Main.run(java.lang.String[]),org.eclipse.jgit.pgm.internal.CLIText.formatLine(java.lang.String),org.eclipse.jgit.pgm.opt.PathTreeFilterHandler.getDefaultMetaVariable(),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean),org.eclipse.jgit.pgm.Version.run(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.debug.ShowCacheTree.run(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.pgm.opt.CmdLineParser.getRepository(),org.eclipse.jgit.pgm.Main.configureHttpProxy(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.pgm.internal.CLIText.fatalError(java.lang.String),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.pgm.MergeTest.testNoFastForwardAndSquash()	false	2944
6432.json	org.eclipse.jgit.blame.BlameGenerator.setTextComparator(org.eclipse.jgit.diff.RawTextComparator)	112.json,7350.json	org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommand.call()	true	2567
4100.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, org.eclipse.jgit.lib.ReflogEntry)	noCall	noCall	true	2272
7793.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.setWalkIgnoredDirectories(boolean)	null,null	org.eclipse.jgit.ignore.IgnoreNodeTest.beginWalk(),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>)	true	20
1057.json	org.eclipse.jgit.nls.NLS.useJVMDefaultInternal()	1058.json,1056.json	org.eclipse.jgit.nls.NLS.getBundleFor(java.lang.Class<T>),org.eclipse.jgit.nls.NLS.useJVMDefaultLocale()	true	115
1959.json	org.eclipse.jgit.transport.FetchProcess.askForIsComplete()	1953.json,1951.json	org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
5878.json	org.eclipse.jgit.dircache.DirCache.lock(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.events.IndexChangedListener)	null	org.eclipse.jgit.lib.Repository.lockDirCache()	true	2204
3167.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.computeBlockBytes(int, boolean)	3165.json,3162.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry, boolean),org.eclipse.jgit.internal.storage.reftable.BlockWriter.currentSize()	true	297
2663.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseHave(org.eclipse.jgit.lib.AnyObjectId)	2604.json	org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	3176
2869.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String)	2867.json,2868.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setException(org.eclipse.jgit.lib.Repository, java.lang.Throwable),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.done(org.eclipse.jgit.lib.Repository)	true	872
4452.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getPacks()	noCall	noCall	true	1922
9229.json	org.eclipse.jgit.lib.FileMode.copyTo(java.io.OutputStream)	6601.json,null,6600.json,9838.json	org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.entry(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode)	true	3176
9346.json	org.eclipse.jgit.lib.ObjectId.equals(byte[], int, byte[], int)	7632.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	3176
6019.json	org.eclipse.jgit.dircache.DirCacheCheckout.getRemoved()	null,7471.json,6025.json	org.eclipse.jgit.lib.DirCacheCheckoutTest.getRemoved(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.checkout()	true	2844
8967.json	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String)	null,null	org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
1818.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-3b4da25d-6ceb-46b1-89b7-412d9fb459d3.getName()	noCall	noCall	true	2645
8205.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.println()	302.json,203.json,230.json,178.json,340.json,144.json,411.json,383.json,135.json,269.json,248.json,271.json,273.json,110.json,84.json,434.json,82.json,382.json,167.json,380.json,270.json,339.json,77.json,162.json,272.json,385.json,126.json,303.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.pgm.Remote.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.ShowRef.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.LsRemote.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.debug.ShowCommands.run(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.pgm.Push.printUpdateLine(char, java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String)	true	2093
4854.json	org.eclipse.jgit.internal.storage.file.FileRepository.getConfig()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4454.json,null,null,null,4813.json,null,null,null,null,null,null,null,null,null,null,null,4847.json,4869.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4849.json,null,null,4812.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.testRules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.merge.MergerTest.writeSubmodule(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.SimpleMergeTest.testOurs_noRepo(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.ignore.CGitIgnoreTest.initRepo(),org.eclipse.jgit.internal.storage.file.GC.tooManyPacks(),org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.internal.storage.file.GC.getLooseObjectLimit(),org.eclipse.jgit.internal.storage.file.FileRepository.shouldAutoDetach(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.lib.RefTest.testRemoteNames(),org.eclipse.jgit.attributes.AttributesHandlerTest.setupRepo(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.writeGlobalAttributeFile(java.lang.String, java.lang.String...),org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyLooseObjects(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyPacks(),org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyWorktree(org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput(),org.eclipse.jgit.internal.storage.file.GC.getPruneExpireStr(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.transport.TransportTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.FetchCommandTest.setupRemoteRepository(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_noRepo(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.attributes.CGitAttributesTest.initRepo(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	3176
1840.json	org.eclipse.jgit.transport.ReceiveCommand.getResult()	null,4502.json,1951.json,null,null,2805.json,2869.json,9326.json,2621.json,9328.json,4939.json,1826.json,2622.json,2803.json,4932.json,null,1973.json,null,2892.json,1828.json,2731.json,null,null,3696.json,2625.json,2619.json,null,null,null,1829.json,null,9338.json,null,2763.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(java.time.Duration),org.eclipse.jgit.internal.storage.reftree.Command.getResult(),org.eclipse.jgit.transport.ReceiveCommand.filter(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.transport.BaseReceivePack.anyRejects(),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertResults(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.Result...),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.ReceiveCommand.abort(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand.copyStatusToResult(),org.eclipse.jgit.transport.BaseReceivePack.sendStatusReport(boolean, java.lang.Throwable, org.eclipse.jgit.transport.BaseReceivePack.Reporter),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.transport.ReceiveCommand.isTransactionAborted(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.lib.BatchRefUpdate.toString(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.internal.ketch.LocalReplica.checkFailed(java.util.List<java.lang.String>, org.eclipse.jgit.transport.ReceiveCommand)	true	3176
976.json	org.eclipse.jgit.merge.ResolveMerger.cleanUp()	1006.json,1005.json	org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean)	true	2841
4064.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, long, org.eclipse.jgit.lib.ObjectId)	4072.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream()	true	2901
4695.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.setKeepEmpty(boolean)	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean)	true	3176
8348.json	org.eclipse.jgit.util.sha1.SHA1.hasCollision()	noCall	noCall	true	466
8746.json	org.eclipse.jgit.lib.RepositoryCacheConfig.getCleanupDelay()	null,null,null,null,9106.json,null,null	org.eclipse.jgit.lib.RepositoryCacheConfigTest.testCleanupDelay(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelayShouldBeMax10minutes(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDefaultValues(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDisabledCleanupDelay(),org.eclipse.jgit.lib.RepositoryCache.configureEviction(org.eclipse.jgit.lib.RepositoryCacheConfig),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelay(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testFromConfig()	true	698
8964.json	org.eclipse.jgit.lib.Repository.isHex(char)	8967.json,8965.json	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String),org.eclipse.jgit.lib.Repository.isAllHex(java.lang.String, int)	true	2846
10074.json	org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onDataAvailable()	noCall	noCall	true	856
7453.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir()	7399.json,7407.json,7429.json,7409.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes()	true	1426
4127.json	org.eclipse.jgit.internal.storage.file.PackFile.incrementTransientErrorCount()	null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile)	true	452
2619.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity()	2602.json	org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()	true	3176
34.json	org.eclipse.jgit.transport.http.apache.internal.HttpApacheText.get()	38.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getSSLContext()	true	1570
5971.json	org.eclipse.jgit.dircache.DirCacheEntry.getStage()	6014.json,5920.json,null,null,6015.json,null,5940.json,144.json,9570.json,null,7479.json,5908.json,null,null,6013.json,7530.json,null,978.json,6024.json,null,5974.json,null,null,5993.json,7764.json,null	org.eclipse.jgit.dircache.DirCacheBuilder.resort(),org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCacheBuilder.bad(org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String),org.eclipse.jgit.api.CheckoutCommand.Anonymous-7c862c11-5d8d-481f-951f-1a2c538609f3.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.dircache.DirCache.hasUnmergedPaths(),org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCacheEntry.isMerged(),org.eclipse.jgit.dircache.DirCache.Anonymous-08e428ef-290f-43e4-90da-37d6f002e5cb.compare(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertEqual(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.CGitIndexRecord, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntry.toString(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage()	true	3176
7015.json	org.eclipse.jgit.api.ResetCommand.isReflogDisabled()	null	org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled()	true	662
9364.json	org.eclipse.jgit.lib.ObjectChecker.setSafeForMacOS(boolean)	null,null,null,null,6049.json,8600.json,null,null,null,null,1739.json,null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.util.SystemReader.setPlatformChecker(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames8(),org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7(),org.eclipse.jgit.lib.ObjectCheckerTest.testBug477090()	true	1551
3716.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.setAvoidUnreachableObjects(boolean)	noCall	noCall	true	1919
9468.json	org.eclipse.jgit.lib.TagBuilder.build()	9180.json,9469.json,null	org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TagBuilder),org.eclipse.jgit.lib.TagBuilder.toByteArray(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod()	true	2745
8595.json	org.eclipse.jgit.util.SystemReader.Default.getCurrentTime()	noCall	noCall	true	3176
4935.json	org.eclipse.jgit.internal.storage.reftree.Command.toRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String, boolean)	null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Anonymous-1d51f7f3-e37b-4993-8c83-d81584a7f50f.apply(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.update(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	884
9563.json	org.eclipse.jgit.lib.IndexDiff.ProgressReportingFilter.clone()	noCall	noCall	true	2697
9625.json	org.eclipse.jgit.lib.AnyObjectId.copy()	null,4504.json,9448.json,3959.json,null,null,null,3569.json,4033.json,null,3723.json,4470.json,5012.json,null,9436.json,1073.json,4911.json,3531.json,3952.json,3532.json,1378.json,2840.json,null,4344.json,3262.json,4935.json,7392.json,5139.json,null,3724.json,4034.json,4982.json,9446.json,3347.json,9524.json,9447.json,4517.json,null,4346.json,1170.json,null,1175.json,null,3744.json,6815.json,null,9460.json,7503.json,9445.json,7199.json,null,null,null,null,9444.json	org.eclipse.jgit.diff.DiffFormatterTest.blob(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.lib.CommitBuilder.addParentId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.RefDirectory.stored(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.doPeel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow(),org.eclipse.jgit.junit.TestRepositoryTest.amendCommit(),org.eclipse.jgit.lib.CommitBuilder.setTreeId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.errors.LargeObjectException.setObjectId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.transport.WalkFetchConnection.recordError(org.eclipse.jgit.lib.AnyObjectId, java.lang.Throwable),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.command(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.WindowCursor.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.Command.toRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.api.MergeCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref(),org.eclipse.jgit.internal.storage.dfs.DfsReader.checkType(org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.newRef(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.lib.ObjectId...),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.CommitBuilder.setParentIds(java.util.List<? extends org.eclipse.jgit.lib.AnyObjectId>),org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.diff.RenameDetectorTest.blob(java.lang.String),org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.transport.UploadPack.processShallow(java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectId>, boolean),org.eclipse.jgit.notes.LeafBucket.parseOneEntry(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.api.RevertCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.TagBuilder.setObjectId(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.api.NameRevCommand.add(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CherryPickCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.lib.CommitBuilder.setParentId(org.eclipse.jgit.lib.AnyObjectId)	true	3176
3960.json	org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)	3954.json,3959.json	org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.stored(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot)	true	3059
10024.json	org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationQuery(java.util.Map<java.lang.String, java.lang.String>)	10023.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
3773.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.estimatePackSize()	3775.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.initOutDesc(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase)	true	499
8087.json	org.eclipse.jgit.util.NB.encodeInt16(byte[], int, int)	null,5995.json,3277.json,4155.json	org.eclipse.jgit.util.NBTest.testEncodeInt16(),org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry, boolean),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt16(int),org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeShort(int)	true	3176
1302.json	org.eclipse.jgit.transport.PreUploadHookChain.onBeginNegotiateRound(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, int)	noCall	noCall	true	2374
4057.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.parse(byte[], org.eclipse.jgit.lib.AnyObjectId)	1371.json	org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	2901
2060.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.mkdir_p(java.lang.String)	2058.json,2060.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.mkdir_p(java.lang.String)	true	3176
4483.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.idOffset(int)	4482.json,4478.json,4476.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.file.PackIndexV1.findOffset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long)	true	2848
1224.json	org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
9125.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.isGitRepository(java.io.File, org.eclipse.jgit.util.FS)	9069.json,null,9128.json,202.json,900.json,4770.json,9121.json,177.json,null	org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository(),org.eclipse.jgit.lib.RepositoryCache.FileKey.resolve(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.io.File),org.eclipse.jgit.lib.RepositoryCache.FileKey.open(boolean),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCloneAValidGitRepository()	true	3176
8886.json	org.eclipse.jgit.lib.Config.getSections()	null,null,null,89.json,null	org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathWithTilde(),org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathNotFound(),org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames(),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig),org.eclipse.jgit.lib.ConfigTest.testIncludeValuePathRelative()	true	2917
6220.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int)	26.json,null	org.eclipse.jgit.awtui.AWTPlotRenderer.paint(java.awt.Graphics, org.eclipse.jgit.revplot.PlotCommit<org.eclipse.jgit.awtui.SwingCommitList.SwingLane>),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment()	true	3176
6772.json	org.eclipse.jgit.diff.Edit.after(org.eclipse.jgit.diff.Edit)	null,6478.json	org.eclipse.jgit.diff.EditTest.testBeforeAfterCuts(),org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2837
2939.json	org.eclipse.jgit.internal.fsck.FsckPackParser.overwriteObjectCount(long)	3453.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	319
2709.json	org.eclipse.jgit.transport.PushCertificateIdent.hashCode()	noCall	noCall	true	1088
3695.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.clearCache()	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
7098.json	org.eclipse.jgit.api.Git.nameRev()	null,null,null,null,null,null,null	org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult(),org.eclipse.jgit.api.NameRevCommandTest.prefix(),org.eclipse.jgit.api.NameRevCommandTest.annotatedTags(),org.eclipse.jgit.api.NameRevCommandTest.ref(),org.eclipse.jgit.api.NameRevCommandTest.assertOneResult(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor(),org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent()	true	1917
1470.json	org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	1469.json	org.eclipse.jgit.transport.UploadPack.okToGiveUpImp()	true	3176
3444.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getStat(java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicLong[]>, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	3431.json,3429.json,3428.json,3437.json,null,3430.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.addToClock(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref, int),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reserveSpace(int, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getRef(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.creditSpace(int, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	true	194
7800.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	7796.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()	true	3176
1780.json	org.eclipse.jgit.transport.WalkEncryption.instance(java.util.Properties)	null	org.eclipse.jgit.transport.WalkEncryptionTest.Base.isAlgorithmAllowed(java.util.Properties)	true	966
293.json	org.eclipse.jgit.pgm.CommandRef.getImplementationClassLoader()	164.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef)	true	3176
3563.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exists()	3834.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.exists()	true	2410
9195.json	org.eclipse.jgit.lib.MutableObjectId.fromRaw(int[], int)	4524.json,4523.json,9194.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.initEntry(),org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.Anonymous-80afb28c-7774-44b3-afcd-023dc16ccc75.ensureId(),org.eclipse.jgit.lib.MutableObjectId.fromRaw(int[])	true	3176
8990.json	org.eclipse.jgit.lib.Repository.normalizeBranchName(java.lang.String)	null,null	org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeBranchName()	true	507
8748.json	org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	null	org.eclipse.jgit.lib.RepositoryCacheConfigTest.testFromConfig()	true	698
7201.json	org.eclipse.jgit.api.CherryPickCommand.setReflogPrefix(java.lang.String)	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	1785
1101.json	org.eclipse.jgit.hooks.PrePushHook.setRemoteLocation(java.lang.String)	1993.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String)	true	950
8371.json	org.eclipse.jgit.util.RawSubStringPattern.toString()	noCall	noCall	true	3176
7966.json	org.eclipse.jgit.util.LfsFactory.getInstance()	null,1111.json,6598.json,null,6376.json	org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader)	true	98
8641.json	org.eclipse.jgit.patch.FileHeader.getParentCount()	8647.json,8682.json,8649.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[])	true	3176
3536.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.getCreatedFromInserter()	noCall	noCall	true	775
5136.json	org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.storage.pack.PackConfig, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	5135.json,5020.json	org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
430.json	org.eclipse.jgit.pgm.Branch.run()	noCall	noCall	true	3176
6529.json	org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int)	null,null,null,921.json,112.json,6593.json	org.eclipse.jgit.diff.RawTextTest.testWriteLine1(),org.eclipse.jgit.diff.RawTextTest.testWriteLine2(),org.eclipse.jgit.diff.RawTextTest.testWriteLine3(),org.eclipse.jgit.merge.MergeFormatterPass.writeLine(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.diff.DiffFormatter.writeLine(char, org.eclipse.jgit.diff.RawText, int)	true	3176
2259.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding)	2258.json,2256.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.openReader(java.lang.String)	true	3176
6992.json	org.eclipse.jgit.api.CommitCommand.setAuthor(java.lang.String, java.lang.String)	null,null	org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits()	true	2953
4760.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacks(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	4728.json,null,4753.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPacks(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
3121.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readInt16()	3109.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readPersonIdent()	true	297
3633.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getDeltaCount()	3873.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getDeltaCount()	true	2410
4753.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	null,4734.json,4745.json,4740.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedObject(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	1587
2666.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	2662.json,2665.json	org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.RefAdvertiser.advertiseAnyOnce(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	3176
1078.json	org.eclipse.jgit.errors.DirCacheNameConflictException.getPath1()	null,null,4954.json	org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	893
2351.json	org.eclipse.jgit.transport.RefSpec.setSourceDestination(java.lang.String, java.lang.String)	null,null,7464.json,null,6885.json	org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.api.CloneCommand.calculateRefSpecs(java.lang.String),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish)	true	3176
6727.json	org.eclipse.jgit.diff.DiffEntry.getChangeType()	null,null,null,null,6824.json,null,null,6600.json,null,null,null,null,null,null,6595.json,null,null,null,null,null,null,null,6686.json,null,null,null,null,5658.json,6574.json,null,null,null,null,6602.json,null,248.json,null,null,null,null,6676.json,6473.json,null,null,6576.json,null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.diff.RenameDetector.breakModifies(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.revwalk.TreeRevFilter.isRename(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.isAdd(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.diff.RenameDetector.Anonymous-0c34688c-f441-4db4-80fe-34d03ed3f24e.compare(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.BlameGenerator.isRename(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffFormatter.isRename(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
9919.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hexUInt64(byte[], int, int)	9918.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromHexString(byte[], int, int)	true	856
1943.json	org.eclipse.jgit.transport.UserAgent.computeUserAgent()	noCall	noCall	true	1137
9566.json	org.eclipse.jgit.lib.IndexDiff.setWorkingTreeItFactory(org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory)	noCall	noCall	true	1314
6488.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getSnake(int, int)	null,null	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.BackwardEditPaths.meets(int, int, int, long),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.ForwardEditPaths.meets(int, int, int, long)	true	3169
8439.json	org.eclipse.jgit.util.FS.createNewFile(java.io.File)	4612.json	org.eclipse.jgit.internal.storage.file.LockFile.lock()	true	199
8900.json	org.eclipse.jgit.lib.Config.setInt(java.lang.String, java.lang.String, java.lang.String, int)	null,null,4849.json,null,167.json,1268.json,null	org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyPacks(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.transport.PushConnectionTest.limitCommandBytes(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, int, int),org.eclipse.jgit.internal.storage.file.AutoGcTest.testTooManyLooseObjects()	true	3176
2424.json	org.eclipse.jgit.transport.PackParser.setExpectedObjectCount(long)	2406.json,2917.json	org.eclipse.jgit.transport.PackParser.readPackHeader(),org.eclipse.jgit.internal.fsck.FsckPackParser.onPackHeader(long)	true	340
1158.json	org.eclipse.jgit.notes.NoteParser.storeNonNote()	1154.json,1156.json,1153.json	org.eclipse.jgit.notes.NoteParser.parseLeafTree(),org.eclipse.jgit.notes.NoteParser.parseFanoutTree(),org.eclipse.jgit.notes.NoteParser.parseTree()	true	2767
6341.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createSimpleHeads(java.lang.String, java.lang.Character)	6340.json	org.eclipse.jgit.fnmatch.FileNameMatcher.parseHeads(java.lang.String, java.lang.Character)	true	3176
3131.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toId(org.eclipse.jgit.lib.Ref)	3130.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
7687.json	org.eclipse.jgit.treewalk.filter.TreeFilter.matchFilter(org.eclipse.jgit.treewalk.TreeWalk)	7726.json,null,null,null,7590.json,null	org.eclipse.jgit.treewalk.filter.NotTreeFilter.matchFilter(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.AndTreeFilter.Binary.matchFilter(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.OrTreeFilter.List.matchFilter(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.AndTreeFilter.List.matchFilter(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.TreeWalk.next(),org.eclipse.jgit.treewalk.filter.OrTreeFilter.Binary.matchFilter(org.eclipse.jgit.treewalk.TreeWalk)	true	466
3999.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled.getObjectId()	null	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled.peel(org.eclipse.jgit.lib.ObjectIdRef)	true	907
4387.json	org.eclipse.jgit.internal.storage.file.WriteConfig.getCompression()	4887.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.compress(java.io.OutputStream)	true	2766
3765.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.setReftableConfig(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	noCall	noCall	true	278
1220.json	org.eclipse.jgit.notes.NoteMapMerger.min(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
3869.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setIndexFile(java.io.File)	noCall	noCall	true	2410
4630.json	org.eclipse.jgit.internal.storage.file.LockFile.getCommitLastModified()	noCall	noCall	true	3176
7463.json	org.eclipse.jgit.api.RemoteAddCommand.setUri(org.eclipse.jgit.transport.URIish)	null,83.json,null	org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()	true	911
2998.json	org.eclipse.jgit.transport.OpenSshConfig.nows(java.lang.String)	10189.json	org.eclipse.jgit.transport.OpenSshConfig.Host.complete(java.lang.String, java.io.File)	true	3176
1986.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig)	null,null,null,null,null,null,null	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs(),org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking()	true	3176
4839.json	org.eclipse.jgit.internal.storage.file.GC.setExpire(java.util.Date)	null,null,null,7182.json	org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedNonExpiredObject_notPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned(),org.eclipse.jgit.api.GarbageCollectCommand.call()	true	2092
5243.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedSize(int)	5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
5891.json	org.eclipse.jgit.dircache.DirCache.write()	null,null,null,null,null,5944.json,null,null,null,null,208.json,null,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.dircache.BaseDirCacheEditor.commit(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.AddCommandTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyCommit_RealIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyUnlock_RealIndex(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyReadEmpty_RealIndex(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode()	true	3176
9653.json	org.eclipse.jgit.lib.RefDatabase.getRefsByPrefix(java.lang.String)	4816.json,4910.json,9887.json,null,null,null,9651.json,null,7506.json,null,7260.json,7007.json,null,null,7510.json	org.eclipse.jgit.internal.storage.file.GC.packRefs(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getAdditionalRefs(),org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.api.TagCommandTest.getTags(),org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.api.ListBranchCommand.getRefs(java.lang.String),org.eclipse.jgit.lib.RefDatabase.getRefs(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.Anonymous-66893646-3baf-46ce-a04d-d1df9d7c2531.onRefsChanged(org.eclipse.jgit.events.RefsChangedEvent),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.api.ListTagCommand.call(),org.eclipse.jgit.lib.RefTest.testGetRefsByPrefix(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow(),org.eclipse.jgit.api.NameRevCommand.addPrefix(java.lang.String, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	false	51
1314.json	org.eclipse.jgit.transport.InternalHttpServerGlue.setPeerUserAgent(org.eclipse.jgit.transport.UploadPack, java.lang.String)	noCall	noCall	true	1137
8287.json	org.eclipse.jgit.util.HttpSupport.DummyX509TrustManager.getAcceptedIssuers()	noCall	noCall	true	2692
2588.json	org.eclipse.jgit.transport.BaseReceivePack.getPeerUserAgent()	noCall	noCall	true	1137
10254.json	org.eclipse.jgit.http.server.glue.MetaServlet.serveRegex(java.lang.String)	noCall	noCall	true	3070
6057.json	org.eclipse.jgit.dircache.DirCacheIterator.first()	6056.json,null	org.eclipse.jgit.dircache.DirCacheIterator.reset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset()	true	3176
1322.json	org.eclipse.jgit.transport.BundleFetchConnection.getPackLocks()	noCall	noCall	true	3176
7325.json	org.eclipse.jgit.api.ApplyResult.addUpdatedFile(java.io.File)	6824.json	org.eclipse.jgit.api.ApplyCommand.call()	true	2288
2063.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String)	2062.json,2061.json,2063.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readAdvertisedRefs(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String)	true	3176
9.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[])	8.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	1145
1721.json	org.eclipse.jgit.transport.URIish.setPass(java.lang.String)	null,2233.json,null,null,null,null,null,null,null,null,2235.json,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.TransportHttp.handleSslFailure(java.lang.Throwable),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.TransportHttp.redirect(java.lang.String, java.lang.String, int),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.TransportHttp.constructSslTrustItems(java.lang.Throwable),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	3176
6007.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	5874.json,null,947.json	org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.junit.TestRepository.CommitBuilder.parent(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int)	true	3176
7960.json	org.eclipse.jgit.util.RawParseUtils.decode(java.nio.ByteBuffer, java.nio.charset.Charset)	7958.json	org.eclipse.jgit.util.RawParseUtils.decodeNoFallback(java.nio.charset.Charset, byte[], int, int)	true	3176
5871.json	org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, org.eclipse.jgit.dircache.DirCacheEntry)	5950.json,5898.json,5870.json	org.eclipse.jgit.dircache.DirCacheEditor.findEntry(byte[], int),org.eclipse.jgit.dircache.DirCache.findEntry(int, byte[], int),org.eclipse.jgit.dircache.DirCache.cmp(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
1011.json	org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref)	null,null,null,null,null,null,null,null,null,null,null,7385.json	org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri(),org.eclipse.jgit.api.MergeCommand.call()	true	2773
1893.json	org.eclipse.jgit.transport.RefLeaseSpec.getExpected()	1995.json,1894.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefLeaseSpec.toString()	true	486
3320.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.objCount()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
4746.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	4742.json,null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseSizeFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2893
4.json	org.eclipse.jgit.awtui.UIText.get()	14.json,25.json,12.json,8.json,9.json	org.eclipse.jgit.awtui.CommitGraphPane.configureHeader(),org.eclipse.jgit.awtui.AwtAuthenticator.promptPasswordAuthentication(),org.eclipse.jgit.awtui.CommitGraphPane.setModel(javax.swing.table.TableModel),org.eclipse.jgit.awtui.AwtCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[])	true	2944
1509.json	org.eclipse.jgit.transport.PushConfig.PushRecurseSubmodulesMode.toConfigValue()	null	org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleToConfigValue()	true	274
1781.json	org.eclipse.jgit.transport.SideBandInputStream.read()	null	org.eclipse.jgit.transport.PushConnectionTest.invalidCommand()	true	3176
2700.json	org.eclipse.jgit.transport.PushCertificateIdent.parse(java.lang.String)	null,null,null,2170.json,null	org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateIdentTest.exoticUserId(),org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean),org.eclipse.jgit.transport.PushCertificateIdentTest.checkNameEmail(java.lang.String, java.lang.String, java.lang.String)	true	1088
3108.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueString()	3098.json,3106.json,3109.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogEntry(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readPersonIdent()	true	297
10054.json	org.eclipse.jgit.lfs.server.s3.S3Repository.cacheObjectMetaData(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	10051.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	true	843
1848.json	org.eclipse.jgit.transport.ReceiveCommand.isRefLogIncludingResult()	9336.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult(org.eclipse.jgit.transport.ReceiveCommand)	true	319
8206.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.print(char)	339.json,77.json,110.json,162.json,112.json,385.json,434.json,82.json,340.json,144.json,303.json,352.json	org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.LsRemote.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.pgm.debug.ShowCommands.run(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.ShowRef.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	2093
6363.json	org.eclipse.jgit.blame.Region.deepCopy()	6456.json	org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate)	true	2567
1268.json	org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, int, int)	1265.json	org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config)	true	3176
9071.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.build()	1811.json,7025.json,7890.json,202.json,396.json,177.json,7048.json	org.eclipse.jgit.transport.TransportLocal.openRepo(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String, org.eclipse.jgit.util.FS),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	2907
5976.json	org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()	7530.json,5920.json,7831.json,null,null,null,6045.json,5919.json,978.json,9587.json,null,6981.json,7796.json,975.json,6032.json,5993.json	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode(),org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.IndexDiff.getIndexMode(java.lang.String),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer(),org.eclipse.jgit.merge.ResolveMerger.checkout(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.dircache.DirCacheEntry.toString()	true	3176
6064.json	org.eclipse.jgit.dircache.DirCacheIterator.getEntryAttributesNode(org.eclipse.jgit.lib.ObjectReader)	null,5321.json	org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesHandler.attributesNode(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	1249
2995.json	org.eclipse.jgit.transport.OpenSshConfig.isHostMatch(java.lang.String, java.lang.String)	10179.json	org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String)	true	3176
137.json	org.eclipse.jgit.pgm.debug.WriteReftable.readRefs(java.lang.String)	135.json,155.json	org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.pgm.debug.VerifyReftable.run()	true	297
6665.json	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int)	6663.json	org.eclipse.jgit.diff.HistogramDiffIndex.findLongestCommonSequence()	true	2816
6066.json	org.eclipse.jgit.storage.file.WindowCacheStats.getOpenFiles()	noCall	noCall	true	126
124.json	org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate)	123.json	org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult)	true	3176
3799.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3875.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
3539.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream()	noCall	noCall	true	1397
7823.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int)	7822.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()	true	2881
8482.json	org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4724.json,null,null,null,null,null	org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.write(org.eclipse.jgit.lib.ObjectId, byte[]),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingEmptyDirectory(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingFile(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(),org.eclipse.jgit.util.FileUtilsTest.testMkdirs(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingNonEmptyDirectory(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursive(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createTempDirectory(java.lang.String),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.create(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmpty(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverNonExistingFile()	true	2735
2283.json	org.eclipse.jgit.transport.SshTransport.getSshSessionFactory()	noCall	noCall	true	3176
2114.json	org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate()	null,null,2094.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	3176
7034.json	org.eclipse.jgit.api.StashCreateCommand.setRef(java.lang.String)	7400.json	org.eclipse.jgit.api.RebaseCommand.autoStash()	true	2293
8221.json	org.eclipse.jgit.util.io.UnionInputStream.isEmpty()	null,null	org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream(),org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes()	true	3078
9381.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int)	null,6050.json,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testRejectNulInPathSegment(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.lib.ObjectChecker.checkPath(byte[], int, int),org.eclipse.jgit.lib.ObjectCheckerTest.testBug477090()	true	1551
1346.json	org.eclipse.jgit.transport.PacketLineOut.formatLength(byte[], int)	1345.json,2330.json,2328.json	org.eclipse.jgit.transport.PacketLineOut.formatLength(int),org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer(),org.eclipse.jgit.transport.SideBandOutputStream.write(byte[], int, int)	true	3176
9052.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.util.Collection<java.io.File>)	noCall	noCall	true	2907
10415.json	org.eclipse.jgit.http.server.ClientVersionUtil.compare(int[], int[])	10417.json	org.eclipse.jgit.http.server.ClientVersionUtil.hasPushStatusBug(int[])	false	2174
3685.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compactDuringCommit()	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
5988.json	org.eclipse.jgit.dircache.DirCacheEntry.getObjectId()	null,null,null,null,null,null,7831.json,null,144.json,7833.json,null,null,null,null,6062.json,4946.json,7350.json,null,null,112.json,null,6045.json,4952.json,null,978.json,null,null,null,4950.json,5993.json,null,null	org.eclipse.jgit.merge.CherryPickTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.internal.storage.reftree.Command.check(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.merge.SimpleMergeTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.internal.storage.reftree.RefTree.toRef(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertEqual(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.CGitIndexRecord, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.dircache.DirCacheEntry.toString(),org.eclipse.jgit.treewalk.WorkingTreeIterator.readContentAsNormalizedString(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts()	true	3176
6758.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String)	null,null	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.open(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.size(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	2838
9137.json	org.eclipse.jgit.lib.UserConfig.getNameInternal(org.eclipse.jgit.lib.Config, java.lang.String)	noCall	noCall	true	3176
3010.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.replaceTilde(java.util.List<java.lang.String>, java.io.File)	3011.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.lang.String, java.io.File)	true	235
2389.json	org.eclipse.jgit.transport.PackParser.getObject(int)	2938.json,4719.json	org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String)	true	2692
6988.json	org.eclipse.jgit.api.CommitCommand.setCommitter(org.eclipse.jgit.lib.PersonIdent)	null,null,null,6989.json,null,null,null	org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.CommitCommand.setCommitter(java.lang.String, java.lang.String),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	2953
6427.json	org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	6425.json,6423.json,6422.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.blame.BlameResult.computeNext(),org.eclipse.jgit.blame.BlameResult.computeAll()	true	2567
9354.json	org.eclipse.jgit.lib.ObjectId.toObjectId()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,994.json,null,null,null,null,null,928.json	org.eclipse.jgit.transport.UploadPackTest.testV2FetchClientStopsNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchNoProgress(),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.transport.UploadPackTest.testFetchUnreachableBlobWithBitmap(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsPeel(),org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithoutBitmap(),org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyObjectsOrder(org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.transport.UploadPackTest.testV2FetchShallow(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsMultipleCommands(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerDoesNotStopNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchOfsDelta(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsSymrefs(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefs(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchThinPack(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenWithoutDone(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithBitmap(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerStopsNegotiation(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefix(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchIncludeTag(),org.eclipse.jgit.merge.ResolveMerger.getResultTreeId(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilterWhenNotAllowed(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefixNoSlash(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenAndDone(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter(),org.eclipse.jgit.merge.ThreeWayMerger.mergeBase()	true	3176
6569.json	org.eclipse.jgit.diff.DiffFormatter.makeIteratorFromTreeOrNull(org.eclipse.jgit.revwalk.RevTree)	6568.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree)	true	1435
2164.json	org.eclipse.jgit.transport.PushCertificateParser.enabled()	null,null,null,2606.json	org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.PushCertificateParserTest.disabledParserStillRequiresCorrectSyntax(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1202
4734.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedObject(org.eclipse.jgit.lib.AnyObjectId)	4444.json,null,null,4006.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedInSelfOrAlternate(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, byte[], int, int)	true	3176
2805.json	org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand)	2804.json,2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
1758.json	org.eclipse.jgit.transport.SideBandProgressMonitor.format(java.lang.StringBuilder, java.lang.String, int, int, int)	1757.json,1756.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int, int, int),org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int, int, int)	true	2658
7401.json	org.eclipse.jgit.api.RebaseCommand.autoStashApply()	7410.json,7399.json,7436.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	1648
4339.json	org.eclipse.jgit.internal.storage.file.WindowCursor.newReader()	noCall	noCall	true	2893
4488.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRepository()	noCall	noCall	true	3176
8152.json	org.eclipse.jgit.util.io.AutoLFInputStream.read(byte[], int, int)	8151.json	org.eclipse.jgit.util.io.AutoLFInputStream.read()	true	2851
9809.json	org.eclipse.jgit.lib.ObjectReader.setStreamFileThreshold(int)	null	org.eclipse.jgit.internal.storage.file.PackFileTest.testConfigurableStreamFileThreshold()	true	595
2847.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent)	2845.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.internal.ketch.Proposal)	true	872
1157.json	org.eclipse.jgit.notes.NoteParser.parseFanoutCell()	1156.json	org.eclipse.jgit.notes.NoteParser.parseFanoutTree()	true	2767
7723.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter)	null,7685.json,null,null,null,null,null,null	org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testCloneIsSparseWhenPossible(),org.eclipse.jgit.treewalk.filter.TreeFilter.negate(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testCloneIsDeepClone(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testNegateIsUnwrap(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testWrap(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopNotPath(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testShouldBeRecursive_PathFilter(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testShouldBeRecursive_ALL()	true	3176
3151.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setMaxIndexLevels(int)	null,135.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
9291.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.addIfAbsent(Q)	4449.json,4009.json,5255.json,null,3509.json,null	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.internal.storage.file.PackInserter.endObject(org.eclipse.jgit.lib.ObjectId, long),org.eclipse.jgit.internal.storage.pack.BaseSearch.add(org.eclipse.jgit.lib.AnyObjectId, int, int),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.endObject(org.eclipse.jgit.lib.ObjectId, long),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()	true	2645
977.json	org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long)	null,null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes)	true	2841
10097.json	org.eclipse.jgit.lfs.server.LfsObject.getOid()	noCall	noCall	true	675
7013.json	org.eclipse.jgit.api.ResetCommand.addPath(java.lang.String)	null,null,342.json,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset()	true	2579
6607.json	org.eclipse.jgit.diff.RawTextComparator.Anonymous-837c468d-c71c-4269-bf45-53142f360ba5.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int)	noCall	noCall	true	2904
2792.json	org.eclipse.jgit.internal.ketch.KetchReplica.prepareTxnCommitted(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	2788.json,2791.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.pushCommitAsync(org.eclipse.jgit.internal.ketch.LogIndex)	true	872
6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	6025.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkout()	true	2844
1259.json	org.eclipse.jgit.transport.TransportBundleStream.openPush()	noCall	noCall	true	3176
3682.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.newBatchUpdate()	3696.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
8006.json	org.eclipse.jgit.util.LongList.contains(long)	4150.json,3813.json,3333.json	org.eclipse.jgit.internal.storage.file.PackFile.isCorrupt(long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isCorrupt(long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList.addBlock(long)	true	2906
947.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int)	945.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl()	true	3176
2741.json	org.eclipse.jgit.internal.ketch.LagCheck.close()	noCall	noCall	true	872
3122.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readVarint32()	3117.json,3120.json,3108.json,3093.json,3119.json,3096.json,3099.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte[]),org.eclipse.jgit.internal.storage.reftable.BlockReader.skipString(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueString(),org.eclipse.jgit.internal.storage.reftable.BlockReader.parseKey(),org.eclipse.jgit.internal.storage.reftable.BlockReader.skipValue(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readPositionFromIndex(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()	true	297
4159.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(byte[])	noCall	noCall	true	1922
364.json	org.eclipse.jgit.pgm.Log.addAdditionalNoteRef(java.lang.String)	noCall	noCall	true	2663
5995.json	org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry, boolean)	6034.json,null,5994.json	org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
7340.json	org.eclipse.jgit.api.CreateBranchCommand.setUpstreamMode(org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode)	null,7471.json,null,null	org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict()	true	2800
8233.json	org.eclipse.jgit.util.io.IsolatedOutputStream.close()	noCall	noCall	true	573
2253.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getURI()	noCall	noCall	true	3176
7769.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.toString()	noCall	noCall	true	2739
5170.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.canCache(int, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	noCall	noCall	true	2893
5279.json	org.eclipse.jgit.attributes.AttributesRule.isNameOnly()	null	org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()	true	1249
1260.json	org.eclipse.jgit.transport.TransportBundleStream.close()	noCall	noCall	true	3176
404.json	org.eclipse.jgit.pgm.TextBuiltin.initRaw(org.eclipse.jgit.lib.Repository, java.lang.String, java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	null	org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...)	true	262
2019.json	org.eclipse.jgit.transport.Transport.setFilterBlobLimit(long)	null,null,null,null	org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithNonSupportingServer()	true	87
1743.json	org.eclipse.jgit.transport.TransferConfig.isAllowFilter()	null,null,2041.json,null	org.eclipse.jgit.transport.UploadPack.getV2CapabilityAdvertisement(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.UploadPack.recvWants(),org.eclipse.jgit.transport.UploadPack.fetchV2()	true	87
7832.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator)	7530.json,6981.json	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk)	true	2349
10082.json	org.eclipse.jgit.lfs.server.fs.ObjectDownloadListener.onWritePossible()	noCall	noCall	true	856
9657.json	org.eclipse.jgit.lib.RefDatabase.hasRefs()	212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	true	42
1247.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result)	noCall	noCall	true	2210
9883.json	org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush()	9882.json	org.eclipse.jgit.lfs.LfsPrePushHook.call()	true	102
9200.json	org.eclipse.jgit.lib.MutableObjectId.toObjectId()	6440.json,6456.json,6454.json,6442.json,4659.json,7538.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.toObjectId(),org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	true	3176
1518.json	org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	1514.json	org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
1787.json	org.eclipse.jgit.transport.SideBandInputStream.remote(java.lang.String)	1783.json,1786.json	org.eclipse.jgit.transport.SideBandInputStream.needDataPacket(),org.eclipse.jgit.transport.SideBandInputStream.beginTask(int)	true	891
5159.json	org.eclipse.jgit.internal.storage.pack.PackExt.getExtension()	4152.json,3617.json,4729.json,5158.json,5162.json,null,null,4808.json,4761.json	org.eclipse.jgit.internal.storage.file.PackFile.extFile(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileName(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File),org.eclipse.jgit.internal.storage.pack.PackExt.newPackExt(java.lang.String),org.eclipse.jgit.internal.storage.pack.PackExt.toString(),org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.GC.prunePack(java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	1969
6324.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	6323.json	org.eclipse.jgit.gitrepo.ManifestParser.removeOverlaps()	true	900
4847.json	org.eclipse.jgit.internal.storage.file.GC.getLooseObjectLimit()	null	org.eclipse.jgit.internal.storage.file.GC.tooManyLooseObjects()	true	370
3766.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.add(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	3768.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()	true	2410
1733.json	org.eclipse.jgit.transport.AdvertiseRefsHook.Anonymous-80c4284d-36ef-489d-8157-3b741d8dff5f.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack)	noCall	noCall	true	2292
1012.json	org.eclipse.jgit.merge.MergeMessageFormatter.formatWithConflicts(java.lang.String, java.util.List<java.lang.String>)	null,7195.json,null,null,null,6812.json,7385.json	org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2622
2223.json	org.eclipse.jgit.transport.TransportHttp.toBufferedReader(java.io.InputStream)	2222.json	org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	true	3070
5132.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5130.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
5963.json	org.eclipse.jgit.dircache.DirCacheEntry.smudgeRacilyClean()	null,5892.json,null	org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream),org.eclipse.jgit.api.EolRepositoryTest.Anonymous-2902e090-6498-4b5a-8bf3-b4c70cefc0a6.apply(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
9980.json	org.eclipse.jgit.lfs.lib.LongObjectId.zeroId()	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testZeroId()	true	856
51.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getInputStream()	noCall	noCall	true	1572
2130.json	org.eclipse.jgit.transport.PushCertificate.getNonce()	null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
8800.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.iterator()	null,null,null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testIterator(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear()	true	3176
8491.json	org.eclipse.jgit.util.FileUtils.isStaleFileHandle(java.io.IOException)	null,null,null,null	org.eclipse.jgit.util.FileUtils.isStaleFileHandleInCausalChain(java.lang.Throwable),org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleWithIndirectCause(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.util.FileUtilsTest.testIsStaleFileHandleWithDirectCause()	true	1020
996.json	org.eclipse.jgit.merge.ResolveMerger.getCommitNames()	noCall	noCall	true	2841
6320.json	org.eclipse.jgit.gitrepo.ManifestParser.getProjects()	null	org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParser()	true	1115
6055.json	org.eclipse.jgit.dircache.DirCacheIterator.idOffset()	7796.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()	true	3176
8786.json	org.eclipse.jgit.lib.ConfigLine.eqSameCase(java.lang.String, java.lang.String)	8784.json,8783.json	org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String, java.lang.String)	true	3176
3272.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.bytesAvailableInBlock()	3335.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.beginBlock(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
3580.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.read()	3563.json,3568.json,3573.json,null,3564.json,3566.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exists(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String)	true	2410
7513.json	org.eclipse.jgit.api.NameRevCommand.compare(java.lang.String, long, java.lang.String, long)	7502.json	org.eclipse.jgit.api.NameRevCommand.call()	true	1917
8635.json	org.eclipse.jgit.util.time.ProposedTimestamp.micros()	8636.json	org.eclipse.jgit.util.time.ProposedTimestamp.instant()	true	565
5173.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.estimateIndexSize(int)	5009.json,5008.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateSize(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
8844.json	org.eclipse.jgit.lib.ObjectLoader.getBytes()	null,null,null,null,null,6045.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks(),org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.lib.ObjectLoaderTest.testLargeObjectLoader(),org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader(),org.eclipse.jgit.api.ArchiveCommandTest.MockFormat.putEntry(org.eclipse.jgit.api.ArchiveCommandTest.MockOutputStream, org.eclipse.jgit.lib.ObjectId, java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.merge.MergerTest.readBlob(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.weirdBlockSize()	true	3176
7543.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.idOffset()	null,6011.json,5252.json,7538.json	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	true	3176
9198.json	org.eclipse.jgit.lib.MutableObjectId.fromString(java.lang.String)	null,2077.json,4047.json	org.eclipse.jgit.transport.PacketLineInTest.testReadACK_NAK(),org.eclipse.jgit.transport.PacketLineIn.readACK(org.eclipse.jgit.lib.MutableObjectId),org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.load()	true	3176
8008.json	org.eclipse.jgit.util.LongList.add(long)	8010.json,6490.json,3814.json,3333.json,8009.json,4151.json,3099.json	org.eclipse.jgit.util.LongList.fillTo(int, long),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setCorrupt(long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList.addBlock(long),org.eclipse.jgit.util.LongList.set(int, long),org.eclipse.jgit.internal.storage.file.PackFile.setCorrupt(long),org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()	true	3167
8028.json	org.eclipse.jgit.util.RefMap.SetIterator.hasNext()	8029.json	org.eclipse.jgit.util.RefMap.SetIterator.next()	true	3060
4632.json	org.eclipse.jgit.internal.storage.file.LockFile.getCommitSnapshot()	5892.json,6089.json,4491.json,4494.json,5893.json,3974.json,null	org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.dircache.DirCache.commit(),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean)	true	2733
6446.json	org.eclipse.jgit.blame.BlameGenerator.done()	6445.json	org.eclipse.jgit.blame.BlameGenerator.next()	true	2567
4716.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	2692
9313.json	org.eclipse.jgit.lib.BatchRefUpdate.isForceRefLog()	9337.json	org.eclipse.jgit.lib.BatchRefUpdate.isForceRefLog(org.eclipse.jgit.transport.ReceiveCommand)	true	253
4373.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedInt()	noCall	noCall	true	1922
1513.json	org.eclipse.jgit.transport.BasePackPushConnection.noRepository()	noCall	noCall	true	3176
3744.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	2410
9277.json	org.eclipse.jgit.lib.BatchingProgressMonitor.isCancelled()	noCall	noCall	true	3176
4286.json	org.eclipse.jgit.internal.storage.file.WindowCache.toStart(long)	4276.json	org.eclipse.jgit.internal.storage.file.WindowCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
9422.json	org.eclipse.jgit.lib.ObjectIdRef.getObjectId()	null,9425.json,3999.json,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRef.toString(),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled.getObjectId(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()	true	3176
2549.json	org.eclipse.jgit.transport.BaseReceivePack.isCheckReferencedObjectsAreReachable()	2617.json	org.eclipse.jgit.transport.BaseReceivePack.needCheckConnectivity()	true	2977
9925.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(byte[], int)	null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareByte()	true	856
7030.json	org.eclipse.jgit.api.InitCommand.setFs(org.eclipse.jgit.util.FS)	6884.json	org.eclipse.jgit.api.CloneCommand.init()	true	162
6248.json	org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit)	6246.json	org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	2379
212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	noCall	noCall	true	3176
2406.json	org.eclipse.jgit.transport.PackParser.readPackHeader()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
1068.json	org.eclipse.jgit.errors.TranslationBundleException.getBundleClass()	null,null	org.eclipse.jgit.nls.TranslationBundleTest.testMissingPropertiesFile(),org.eclipse.jgit.nls.TranslationBundleTest.testMissingString()	true	3012
9834.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId)	1173.json,1198.json,9833.json	org.eclipse.jgit.notes.LeafBucket.build(),org.eclipse.jgit.notes.FanoutBucket.build(boolean, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.TreeFormatter.append(byte[], org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId)	true	2775
1282.json	org.eclipse.jgit.transport.RemoteConfig.setPushRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>)	noCall	noCall	true	3176
3814.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setCorrupt(long)	3803.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
1410.json	org.eclipse.jgit.transport.UploadPack.getAdvertiseRefsHook()	noCall	noCall	true	2292
5901.json	org.eclipse.jgit.dircache.DirCache.getEntryCount()	null,null,null,null,null,null,null,null,null,null,4966.json,null,null,null,null,null,null,null,null,null,null,null,null,null,9585.json,5948.json,null,null,null,null,null,5933.json,144.json,null,9570.json,null,5934.json,5949.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_WithTreeWalk(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyReadEmpty_RealIndex(),org.eclipse.jgit.pgm.AddTest.testAddFileTwice(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_TempIndex(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear(),org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged(),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_RealIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_RealIndex(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.dircache.DirCacheBuildIterator.stopWalk(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.dircache.DirCacheBuildIterator.needsStopWalk(),org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.pgm.AddTest.testAddAFile(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_NoTreeWalk(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded(),org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedOptionalExtension(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree()	true	3176
2818.json	org.eclipse.jgit.internal.ketch.KetchSystem.requireMonotonicLeaderElections()	2752.json	org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	565
8534.json	org.eclipse.jgit.util.RefList.Anonymous-4ddf7199-1382-4c38-b80e-9cb273a22c84.hasNext()	noCall	noCall	true	3060
7021.json	org.eclipse.jgit.api.ResetCommand.resetMerge()	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	2669
10171.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.getConfig(java.lang.String)	noCall	noCall	true	148
3562.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRepository()	3686.json,null,3694.json,3683.json,3682.json,3696.json,3260.json,3343.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stack(),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.getReftableConfig(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exists(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getReftableConfig(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.newBatchUpdate(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRepository()	true	2410
5973.json	org.eclipse.jgit.dircache.DirCacheEntry.isIntentToAdd()	null	org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int, java.lang.String, boolean, boolean, org.eclipse.jgit.dircache.DirCache)	true	2840
7326.json	org.eclipse.jgit.api.ApplyResult.getUpdatedFiles()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ApplyCommandTest.testModifyE(),org.eclipse.jgit.api.ApplyCommandTest.testAddA2(),org.eclipse.jgit.api.ApplyCommandTest.testAddA1(),org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM3(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIDel(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII(),org.eclipse.jgit.api.ApplyCommandTest.testAddM1(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII2(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyX(),org.eclipse.jgit.api.ApplyCommandTest.testModifyW(),org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1(),org.eclipse.jgit.api.ApplyCommandTest.testDeleteD(),org.eclipse.jgit.api.ApplyCommandTest.testModifyZ(),org.eclipse.jgit.api.ApplyCommandTest.testModifyY()	true	2288
7792.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getDirCacheIterator()	null	org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	true	20
7123.json	org.eclipse.jgit.api.RebaseResult.getStatus()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7045.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7436.json	org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.PullResult.isSuccessful(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2756
7561.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.eof()	null,null,null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testAtEOF()	true	3176
9372.json	org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[])	9371.json,9366.json	org.eclipse.jgit.lib.ObjectChecker.checkTag(byte[]),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	true	3176
9858.json	org.eclipse.jgit.lfs.Lfs.getMediaFile(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	9898.json,9908.json,9890.json,9895.json	org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.lfs.LfsBlobFilter.smudgeLfsBlob(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	628
4869.json	org.eclipse.jgit.internal.storage.file.FileRepository.shouldAutoDetach()	4870.json	org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor)	true	370
2144.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-46984d55-e280-4925-b43b-6ba235fa5d2e.getOptionalFields()	noCall	noCall	true	2645
3709.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksBytes()	noCall	noCall	true	387
9651.json	org.eclipse.jgit.lib.RefDatabase.getRefs()	1323.json,4828.json,1373.json,3362.json,168.json,1997.json,215.json,4861.json,9326.json,4834.json,352.json,132.json,81.json,9657.json,7274.json,1904.json,null,null	org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.internal.storage.file.GC.getAllRefs(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getAllRefs(),org.eclipse.jgit.pgm.debug.RebuildRefTree.rebuild(org.eclipse.jgit.lib.RefDatabase),org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs(),org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges(),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.GC.getStatistics(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.pgm.RevParse.run(),org.eclipse.jgit.pgm.ShowRef.getSortedRefs(),org.eclipse.jgit.lib.RefDatabase.hasRefs(),org.eclipse.jgit.api.LogCommand.all(),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.transport.UploadPack.TipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.ReachableCommitTipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	45
7024.json	org.eclipse.jgit.api.ResetCommand.toString()	noCall	noCall	true	609
2997.json	org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String)	2991.json	org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream)	true	3176
563.json	org.eclipse.jgit.junit.http.SimpleHttpServer.toURIish(java.lang.String)	noCall	noCall	true	2740
520.json	org.eclipse.jgit.junit.http.AccessEvent.getPath()	513.json	org.eclipse.jgit.junit.http.AppServer.getRequests(java.lang.String)	true	3070
2706.json	org.eclipse.jgit.transport.PushCertificateIdent.getTimeZone()	null,2710.json	org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdent.toString()	true	1088
1515.json	org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	1514.json	org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
6382.json	org.eclipse.jgit.blame.Candidate.mergeRegions(org.eclipse.jgit.blame.Candidate)	6451.json	org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate)	true	1515
9078.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail()	9074.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree()	true	2907
8016.json	org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref)	null,null,null,null,null,8036.json	org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_NoPrefix(),org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix(),org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved(),org.eclipse.jgit.util.RefMap.Ent.setValue(org.eclipse.jgit.lib.Ref)	true	3060
1702.json	org.eclipse.jgit.transport.AmazonS3.ListParser.characters(char[], int, int)	noCall	noCall	true	3176
6608.json	org.eclipse.jgit.diff.RawTextComparator.Anonymous-94cf0709-aacd-414d-8c95-5eb192abead5.hashRegion(byte[], int, int)	noCall	noCall	true	2904
1313.json	org.eclipse.jgit.transport.ChainingCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1355
8132.json	org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(java.lang.String, java.lang.String)	6744.json,8785.json,1703.json,2991.json,9405.json,8136.json,null,null,null,null,null	org.eclipse.jgit.diff.DiffConfig.parseRenameDetectionType(java.lang.String),org.eclipse.jgit.lib.ConfigLine.eqIgnoreCase(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.ListParser.endElement(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(org.eclipse.jgit.lib.Config, T[], java.lang.String, java.lang.String, java.lang.String, T),org.eclipse.jgit.util.StringUtils.toBooleanOrNull(java.lang.String),org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase4(),org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase3(),org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase2(),org.eclipse.jgit.transport.OpenSshConfig.yesno(java.lang.String),org.eclipse.jgit.util.StringUtilsTest.testEqualsIgnoreCase1()	true	3176
10206.json	org.eclipse.jgit.transport.JschSession.JschProcess.getOutputStream()	noCall	noCall	true	2745
4050.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getObjectCount()	noCall	noCall	true	1922
4190.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntry(int)	4188.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getLastEntry()	true	2364
7869.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.needsStopWalk()	7868.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()	true	893
5231.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaAttempted(boolean)	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2127
264.json	org.eclipse.jgit.pgm.Show.abbrev(boolean)	noCall	noCall	true	2154
906.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.setBranch(java.lang.String)	noCall	noCall	true	2596
2553.json	org.eclipse.jgit.transport.BaseReceivePack.isExpectDataAfterPackFooter()	2614.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack()	true	2186
3787.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setPackIndex(org.eclipse.jgit.internal.storage.file.PackIndex)	3789.json,3505.json,3646.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
7523.json	org.eclipse.jgit.api.TransportCommand.setTimeout(int)	7527.json,122.json,286.json,75.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.api.TransportCommand),org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.pgm.LsRemote.run()	true	2622
7911.json	org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()	7266.json,null,null,null,null,6862.json,null,null,null,null,9570.json,null,null,null,6835.json,null,7230.json,null,null	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules()	true	2355
1175.json	org.eclipse.jgit.notes.LeafBucket.parseOneEntry(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	1154.json,null	org.eclipse.jgit.notes.NoteParser.parseLeafTree(),org.eclipse.jgit.notes.LeafBucketTest.testParseFive()	true	2767
4125.json	org.eclipse.jgit.internal.storage.file.PackFile.invalid()	4762.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.reuseMap(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
359.json	org.eclipse.jgit.pgm.AmazonS3Client.requiresRepository()	noCall	noCall	true	3170
4523.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.Anonymous-80afb28c-7774-44b3-afcd-023dc16ccc75.ensureId()	noCall	noCall	true	3176
3308.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileHeader()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
5455.json	org.eclipse.jgit.revwalk.FooterLine.getKey()	null,null,null,null,null,null,null,null,null,null,null,5458.json	org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testShortKey(),org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail(),org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers(),org.eclipse.jgit.revwalk.FooterLine.toString()	true	3176
6379.json	org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region)	6382.json,6378.json	org.eclipse.jgit.blame.Candidate.mergeRegions(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
5062.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.initWindow(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)	5054.json,5061.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask),org.eclipse.jgit.internal.storage.pack.DeltaTask.call()	true	1880
10149.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.newPrompt(java.lang.String)	10147.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptPassphrase(java.lang.String)	true	2768
5042.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.flush()	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
6951.json	org.eclipse.jgit.api.errors.ConcurrentRefUpdateException.getRef()	noCall	noCall	true	2953
2768.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.getTerm()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
4509.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectCount()	noCall	noCall	true	3176
5209.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.lib.ObjectId)	5148.json,5012.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	3176
8360.json	org.eclipse.jgit.util.IO.read(java.nio.channels.ReadableByteChannel, byte[], int, int)	noCall	noCall	true	2410
3227.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.next()	noCall	noCall	true	297
5542.json	org.eclipse.jgit.revwalk.RevCommit.getParent(int)	null,null,null,null,203.json,7502.json,null,6812.json,null,null,null,null,null,null,null,null,6406.json,null,null,null,6253.json,7196.json,null,null,null,null,272.json,null,null,null,null,null,null,null,null,null,null,7407.json,5139.json,null,6246.json,383.json,7237.json,null,7425.json,null,null,7405.json,273.json,null,null,null,7429.json,null,null,null,null,339.json,null,null,null,6248.json,null,null,null,null	org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.blame.Candidate.getParent(int),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.blame.ReverseWalk.next(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2(),org.eclipse.jgit.revplot.PlotCommitList.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>),org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstWorking(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2(),org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3(),org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.parents(org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.StashCreateCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstHead(org.eclipse.jgit.revwalk.RevCommit)	true	3176
7494.json	org.eclipse.jgit.api.CheckoutCommand.setStartPoint(org.eclipse.jgit.revwalk.RevCommit)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2756
8056.json	org.eclipse.jgit.util.FS_POSIX.setExecute(java.io.File, boolean)	noCall	noCall	true	1864
496.json	org.eclipse.jgit.junit.time.MonotonicFakeClock.Anonymous-76d6e6c9-c482-47d4-bffc-e7ac3d204adb.blockUntil(java.time.Duration)	noCall	noCall	true	565
1389.json	org.eclipse.jgit.transport.OperationResult.addMessages(java.lang.String)	1954.json,2093.json	org.eclipse.jgit.transport.FetchProcess.closeConnection(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3011
7940.json	org.eclipse.jgit.util.RawParseUtils.prevLF(byte[], int, char)	noCall	noCall	true	3176
5355.json	org.eclipse.jgit.revwalk.RevWalk.getRevFilter()	5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	true	3176
4124.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	4123.json	org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2906
3363.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore()	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	713
2505.json	org.eclipse.jgit.transport.TransportAmazonS3.Anonymous-682ab654-57fe-47ea-afbf-10dbd0245933.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
7707.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.copyIfNotSameSize(byte[], int)	7706.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte[], int, int)	true	1965
6231.json	org.eclipse.jgit.revplot.PlotCommit.addPassingLane(org.eclipse.jgit.revplot.PlotLane)	6247.json,6250.json	org.eclipse.jgit.revplot.PlotCommitList.continueActiveLanes(org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.revplot.PlotCommitList.drawLaneToChild(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	3176
1730.json	org.eclipse.jgit.transport.URIish.toPrivateASCIIString()	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	2381
4770.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.io.File)	4769.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.lang.String)	true	3085
8648.json	org.eclipse.jgit.patch.FileHeader.trySimpleConversion(java.nio.charset.Charset[])	8647.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[])	true	3176
3468.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.openFile(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackExt)	noCall	noCall	true	2410
8710.json	org.eclipse.jgit.patch.CombinedFileHeader.getParentCount()	null,null,8715.json,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.CombinedFileHeader.getScriptText(java.nio.charset.Charset, java.nio.charset.Charset),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
6966.json	org.eclipse.jgit.api.Status.getConflictingStageState()	94.json,96.json	org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	true	1878
5800.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.negate()	noCall	noCall	true	3176
3559.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getStreamPackBufferSize()	null,3675.json,3561.json,null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.adviseSequentialRead(long, long),org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1144
6767.json	org.eclipse.jgit.diff.Edit.getEndB()	null,6586.json,null,null,null,null,null,6378.json,null,6605.json,923.json,null,6606.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.EditTest.testSwap(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.EditTest.testCreate(),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.DiffFormatter.combineB(java.util.List<org.eclipse.jgit.diff.Edit>, int),org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.diff.DiffFormatter.end(org.eclipse.jgit.diff.Edit, int, int)	true	3176
1448.json	org.eclipse.jgit.transport.UploadPack.getDepth()	noCall	noCall	true	1151
1274.json	org.eclipse.jgit.transport.RemoteConfig.addURI(org.eclipse.jgit.transport.URIish)	null,null,null,6875.json,null,null,null,null,null,null,6885.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7464.json,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.RemoteSetUrlCommand.call(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout(),org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(org.eclipse.jgit.api.Git, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.transport.TransportTest.setUp(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags(),org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI(),org.eclipse.jgit.api.FetchCommandTest.setupRemoteRepository(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath(),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI(),org.eclipse.jgit.transport.RemoteConfigTest.testAddURI()	true	3176
3565.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getAdditionalRefs()	noCall	noCall	true	2410
3956.json	org.eclipse.jgit.internal.storage.file.RefDirectory.newRename(java.lang.String, java.lang.String)	noCall	noCall	true	3176
1907.json	org.eclipse.jgit.transport.BasePackFetchConnection.enableCapabilities()	1906.json	org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>)	true	3176
8568.json	org.eclipse.jgit.util.BlockList.size()	null,4682.json,null,null,5110.json,5119.json,5152.json,null,5117.json,null,null,5120.json,null,5150.json,null,null,5092.json,null,4681.json,null	org.eclipse.jgit.util.BlockListTest.testRemoveFromEnd(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7c01fee1-3c2d-4791-ae44-c0f415eb6d04.iterator(),org.eclipse.jgit.util.BlockListTest.testAddRemoveAdd(),org.eclipse.jgit.internal.storage.pack.PackWriter.sortByName(),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.MutableState.snapshot(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.findOrInsert(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.util.BlockListTest.testRemoveSlowPath(),org.eclipse.jgit.util.BlockListTest.testAddAllFromOtherList(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-f5f5e630-ec34-42cd-9111-dc3539965e81.next(),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.util.BlockListTest.testAddToEnd(),org.eclipse.jgit.util.BlockListTest.testFastIterator(),org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectCount(),org.eclipse.jgit.util.BlockListTest.testAddSlowPath(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectCount(),org.eclipse.jgit.util.BlockListTest.testEmptyList()	true	2651
1164.json	org.eclipse.jgit.notes.LeafBucket.size()	1219.json,1217.json	org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int),org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
3507.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.clear()	null,3505.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.close(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()	true	2410
5661.json	org.eclipse.jgit.revwalk.RevTag.parse(org.eclipse.jgit.revwalk.RevWalk, byte[])	5660.json	org.eclipse.jgit.revwalk.RevTag.parse(byte[])	true	2851
3577.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.clearCache()	3575.json,3576.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.refresh(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.close(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	2410
5152.json	org.eclipse.jgit.internal.storage.pack.PackWriter.MutableState.snapshot()	5115.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getState()	true	2399
9103.json	org.eclipse.jgit.lib.RepositoryCache.clear()	null	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tearDown()	true	3176
2200.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.LHEX(byte[])	2198.json,2197.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.KD(java.lang.String, java.lang.String),org.eclipse.jgit.transport.HttpAuthMethod.Digest.H(java.lang.String)	true	2813
7719.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.hasNext()	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk)	true	1965
1365.json	org.eclipse.jgit.transport.WalkFetchConnection.needs(org.eclipse.jgit.revwalk.RevObject)	1362.json,1363.json,1364.json	org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject)	true	3176
560.json	org.eclipse.jgit.junit.http.SimpleHttpServer.getSecureUri()	noCall	noCall	true	270
5285.json	org.eclipse.jgit.attributes.AttributesNode.parse(java.io.InputStream)	null,null,null,4868.json,7552.json,null,null,7847.json,6065.json,null,null	org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyValueKey(),org.eclipse.jgit.attributes.AttributesNodeTest.testNegativePattern(),org.eclipse.jgit.attributes.AttributesNodeTest.testBasic(),org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.loadRulesFromFile(org.eclipse.jgit.attributes.AttributesNode, java.io.File),org.eclipse.jgit.treewalk.CanonicalTreeParser.loadAttributes(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyLine(),org.eclipse.jgit.attributes.AttributesNodeTest.testTabSeparator(),org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryAttributesNode.load(),org.eclipse.jgit.dircache.DirCacheIterator.LazyLoadingAttributesNode.load(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.attributes.AttributesNodeTest.testEmptyNegativeAttributeKey(),org.eclipse.jgit.attributes.AttributesNodeTest.testDoubleAsteriskAtEnd()	true	1249
10130.json	org.eclipse.jgit.archive.ZipFormat.createArchiveOutputStream(java.io.OutputStream)	noCall	noCall	true	2013
383.json	org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit)	380.json	org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit)	true	2899
4982.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.newRef(java.lang.String, org.eclipse.jgit.lib.ObjectId)	4981.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	880
1066.json	org.eclipse.jgit.errors.CommandFailedException.getReturnCode()	noCall	noCall	true	643
8889.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, boolean)	null	org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive()	true	1646
2835.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getCommitted()	2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
4812.json	org.eclipse.jgit.internal.storage.file.GC.getPruneExpireStr()	4811.json,4805.json	org.eclipse.jgit.internal.storage.file.GC.getExpireDate(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	477
30.json	org.eclipse.jgit.awtui.AWTPlotRenderer.drawText(java.lang.String, int, int)	noCall	noCall	true	3176
3352.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableConfig(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	278
4434.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.newCachedDatabase()	noCall	noCall	true	3061
1945.json	org.eclipse.jgit.transport.UserAgent.clean(java.lang.String)	1943.json,1947.json	org.eclipse.jgit.transport.UserAgent.computeUserAgent(),org.eclipse.jgit.transport.UserAgent.set(java.lang.String)	true	1137
8189.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.flush()	8190.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.close()	true	2342
8802.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.grow()	8793.json,8794.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.add(Q),org.eclipse.jgit.lib.ObjectIdSubclassMap.addIfAbsent(Q)	true	3176
2566.json	org.eclipse.jgit.transport.BaseReceivePack.isAtomic()	2625.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands()	true	767
7072.json	org.eclipse.jgit.api.Git.checkout()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,909.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,388.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.api.CheckoutCommandTest.newOrphanBranchCommand(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.StatusTest.checkoutTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.pgm.StatusTest.detachHead(org.eclipse.jgit.api.Git),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckout(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.checkoutMasterBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContentRequired(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository()	true	2756
9611.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(byte[], int)	4615.json,1173.json,null	org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.notes.LeafBucket.build(),org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	2851
9235.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.start(int)	null,null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testFailsMethodsOnBackgroundThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b21ae44e-1ca9-452d-abbd-ba4b124efb4a.run()	true	2893
240.json	org.eclipse.jgit.pgm.Diff.unified(int)	noCall	noCall	true	2899
4484.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.Anonymous-37a40128-707c-4b93-b1c5-8fd21a903d3e.ensureId()	noCall	noCall	true	3176
4921.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.getRepository()	noCall	noCall	true	880
1324.json	org.eclipse.jgit.transport.BundleFetchConnection.close()	1320.json	org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
8843.json	org.eclipse.jgit.lib.ObjectLoader.Filter.isLarge()	noCall	noCall	true	2902
3285.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushBlock()	3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
6349.json	org.eclipse.jgit.fnmatch.FileNameMatcher.canAppendMatch()	null,null,null,null,null	org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertFileNameMatch(java.lang.String, java.lang.String, char, boolean, boolean),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertMatch(java.lang.String, java.lang.String, boolean, boolean)	true	3176
9457.json	org.eclipse.jgit.lib.CommitBuilder.toString()	noCall	noCall	true	3176
1295.json	org.eclipse.jgit.transport.PushResult.getRemoteUpdates()	null,null,123.json	org.eclipse.jgit.transport.PushConnectionTest.commandOrder(),org.eclipse.jgit.transport.PushProcessTest.testPushResult(),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult)	true	3176
7715.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.init(byte[], int)	7711.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.grow()	true	1965
2875.json	org.eclipse.jgit.internal.ketch.Proposal.getMessage()	2845.json,2852.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.ketch.ProposalRound.message(org.eclipse.jgit.internal.ketch.Proposal)	true	872
5248.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[])	null,2398.json,null	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest(),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails()	true	3176
4794.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.openStream()	noCall	noCall	true	2901
9246.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isMainThread()	9240.json,9235.json,9241.json,9245.json,9236.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.pollForUpdates(),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.start(int),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion(),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.endTask(),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.beginTask(java.lang.String, int)	true	2783
9966.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copy()	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopy()	true	856
3760.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.prepareInflater()	3757.json,3759.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.inflate(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, byte[], boolean),org.eclipse.jgit.internal.storage.dfs.DfsReader.inflater()	true	2410
4870.json	org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	596
7343.json	org.eclipse.jgit.api.BlameCommand.setFilePath(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1()	true	2567
8058.json	org.eclipse.jgit.util.FS_POSIX.runInShell(java.lang.String, java.lang.String[])	noCall	noCall	true	2681
5267.json	org.eclipse.jgit.internal.JGitText.get()	7484.json,null,8298.json,5887.json,null,5375.json,9264.json,7831.json,8682.json,5389.json,null,null,1366.json,3809.json,null,7440.json,2095.json,4627.json,4062.json,5886.json,1787.json,7892.json,null,null,null,8924.json,7270.json,3736.json,2094.json,2218.json,4035.json,null,7182.json,1065.json,2413.json,6244.json,8281.json,null,3835.json,null,2522.json,7183.json,null,7732.json,7211.json,5694.json,6883.json,2359.json,null,6698.json,8135.json,7215.json,2404.json,9198.json,9407.json,null,3527.json,7236.json,1699.json,1372.json,4605.json,7403.json,2350.json,1513.json,4146.json,3744.json,null,6826.json,4058.json,null,3807.json,7778.json,null,null,7436.json,2141.json,2406.json,null,2521.json,7772.json,3526.json,7441.json,8683.json,2058.json,6812.json,8483.json,6152.json,1961.json,9382.json,6983.json,7380.json,null,1434.json,4107.json,2333.json,7530.json,3050.json,9372.json,9388.json,7038.json,null,5721.json,9835.json,1515.json,8647.json,5109.json,4239.json,7485.json,null,4930.json,1807.json,8365.json,5734.json,1687.json,2261.json,1484.json,4848.json,4075.json,6550.json,2364.json,6825.json,2077.json,6514.json,8870.json,2262.json,4143.json,null,5251.json,1362.json,3804.json,1377.json,4622.json,null,3798.json,2168.json,null,1237.json,6436.json,7367.json,8285.json,5490.json,7423.json,1764.json,null,7300.json,2313.json,1316.json,2235.json,1993.json,4756.json,6714.json,4060.json,7282.json,null,1361.json,1951.json,2237.json,null,6040.json,1086.json,2306.json,8916.json,4139.json,3592.json,null,null,2411.json,4124.json,2151.json,2300.json,1682.json,5977.json,null,7366.json,2059.json,3811.json,2221.json,1828.json,4141.json,6984.json,8481.json,7188.json,null,null,null,8200.json,5948.json,2076.json,4344.json,1370.json,5883.json,1907.json,1519.json,null,4988.json,7329.json,null,null,6014.json,4888.json,null,null,7009.json,null,4729.json,3044.json,6836.json,2034.json,7385.json,4346.json,2233.json,5890.json,null,1808.json,9386.json,2348.json,2646.json,6981.json,3285.json,1829.json,3375.json,2282.json,1555.json,3977.json,4870.json,9261.json,3812.json,6908.json,7438.json,5108.json,7002.json,1367.json,1556.json,5774.json,5150.json,1080.json,1692.json,6911.json,null,6979.json,3045.json,1043.json,6356.json,7388.json,6045.json,6089.json,7411.json,2420.json,4856.json,2244.json,1686.json,2269.json,null,null,8448.json,4121.json,4878.json,2456.json,9072.json,7157.json,1695.json,3599.json,9368.json,2171.json,1858.json,2396.json,7743.json,4272.json,7431.json,8653.json,2606.json,8649.json,7334.json,6315.json,4934.json,7040.json,2062.json,2409.json,5324.json,5126.json,9494.json,null,1033.json,7976.json,9202.json,7332.json,7193.json,4816.json,5103.json,9370.json,7299.json,1089.json,1777.json,6309.json,1546.json,8972.json,9406.json,3743.json,6005.json,null,null,5392.json,9044.json,null,7370.json,null,null,7498.json,8922.json,7402.json,2334.json,9256.json,8359.json,9376.json,7744.json,2596.json,8871.json,9326.json,1823.json,2621.json,2240.json,7342.json,8969.json,1691.json,1811.json,null,6213.json,null,2398.json,7012.json,null,7691.json,8362.json,6928.json,9204.json,1359.json,1318.json,7279.json,null,5733.json,2236.json,9375.json,6686.json,5414.json,7433.json,null,3987.json,null,7228.json,7301.json,2074.json,4810.json,7131.json,null,null,8484.json,5894.json,1824.json,3974.json,6597.json,4801.json,4034.json,7214.json,null,10153.json,7422.json,8283.json,8192.json,3126.json,7245.json,1373.json,7428.json,null,2356.json,8479.json,null,null,7230.json,7248.json,null,5757.json,2170.json,3867.json,2399.json,4717.json,8487.json,2938.json,6824.json,1959.json,null,1360.json,5249.json,null,4030.json,null,5407.json,7521.json,9542.json,4809.json,null,4145.json,1953.json,1818.json,6744.json,3723.json,8261.json,4064.json,5125.json,9263.json,2507.json,null,null,1111.json,3971.json,null,2619.json,2414.json,null,6549.json,7482.json,7331.json,5700.json,1037.json,9404.json,1499.json,6487.json,9570.json,null,7386.json,6880.json,4849.json,7237.json,null,null,5460.json,6486.json,4719.json,9266.json,2041.json,4330.json,2060.json,6013.json,7435.json,1705.json,8098.json,1966.json,8677.json,7008.json,5111.json,5369.json,6310.json,4829.json,2172.json,9366.json,3972.json,2407.json,1780.json,null,null,null,7229.json,2087.json,null,1683.json,8323.json,1804.json,null,1091.json,8170.json,2043.json,null,6680.json,7028.json,7421.json,1994.json,9550.json,8728.json,8923.json,5752.json,8703.json,null,5041.json,4641.json,4140.json,8921.json,2457.json,7010.json,6996.json,null,6645.json,2395.json,null,null,null,4637.json,8879.json,null,9077.json,3532.json,1495.json,2033.json,2351.json,2579.json,8237.json,6866.json,1934.json,1368.json,null,1375.json,6488.json,6863.json,3806.json,null,2224.json,2263.json,5390.json,2339.json,2229.json,1690.json,1880.json,2056.json,null,7745.json,null,7975.json,4095.json,null,null,6048.json,null,1987.json,9405.json,2308.json,2892.json,2063.json,4500.json,null,7838.json,2506.json,null,9492.json,6440.json,6994.json,null,8476.json,null,3590.json,1371.json,2252.json,9410.json,1765.json,9328.json,null,8229.json,null,8268.json,7298.json,7777.json,5504.json,1866.json,3427.json,9381.json,7196.json,null,7213.json,7731.json,5743.json,null,null,1783.json,5561.json,7471.json,5094.json,1547.json,null,1469.json,9000.json,3361.json,3533.json,9262.json,2484.json,3733.json,2394.json,7195.json,8523.json,9496.json,6953.json,1258.json,2055.json,1533.json,2397.json,5701.json,1072.json,7013.json,1323.json,1969.json,6026.json,1259.json,8282.json,930.json,4287.json,null,4059.json,3803.json,2400.json,8357.json,4954.json,2222.json,2057.json,null,null,1514.json	org.eclipse.jgit.api.CheckoutCommand.getStartPointObjectId(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar, java.util.Locale),org.eclipse.jgit.dircache.DirCache.skipOptionalExtension(java.io.InputStream, java.security.MessageDigest, byte[], long),org.eclipse.jgit.transport.UploadPack.reportInternalServerErrorOverSideband(),org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], byte, org.eclipse.jgit.util.MutableInteger),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.revwalk.RevWalk.allocFlag(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri(),org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectType(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.getMessage(),org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PushProcess.rejectAll(),org.eclipse.jgit.internal.storage.file.LockFile.commit(),org.eclipse.jgit.internal.storage.file.UnpackedObject.Anonymous-31db6662-b09b-4c65-a47c-a7ed9dddf0cb.read(byte[], int, int),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.transport.SideBandInputStream.remote(java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.lib.ConfigTest.testParseInvalidValues(),org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int),org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.internal.storage.dfs.DfsReader.open(java.lang.Iterable<T>, boolean),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.transport.TransportHttp.setURI(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled(),org.eclipse.jgit.api.GarbageCollectCommand.call(),org.eclipse.jgit.errors.RepositoryNotFoundException.message(java.lang.String),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.revplot.PlotCommitList.source(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.util.HttpSupport.encode(java.lang.StringBuilder, java.lang.String),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String),org.eclipse.jgit.api.GarbageCollectCommand.getStatistics(),org.eclipse.jgit.storage.file.FileBasedConfig.readIncludedConfig(java.lang.String),org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>),org.eclipse.jgit.api.StashDropCommand.getRef(),org.eclipse.jgit.revwalk.filter.CommitterRevFilter.create(java.lang.String),org.eclipse.jgit.api.CloneCommand.verifyDirectories(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.RefSpec.expandFromDestination(java.lang.String),org.eclipse.jgit.util.TemporaryBuffer.toByteArray(),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.util.StringUtils.toBoolean(java.lang.String),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.MutableObjectId.fromString(java.lang.String),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getLong(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-662b33f8-aaaa-4310-8885-acb3131eebc7.next(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getOrLoadBlock(long),org.eclipse.jgit.api.StashApplyCommand.getStashId(),org.eclipse.jgit.transport.AmazonS3.ListParser.list(),org.eclipse.jgit.transport.WalkFetchConnection.expandOneAlternate(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.getObject(int),org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.RefSpec.setDestination(java.lang.String),org.eclipse.jgit.transport.BasePackPushConnection.noRepository(),org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>),org.eclipse.jgit.util.io.InterruptTimer.AlarmState.begin(int),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.transport.TransportGitAnon.Anonymous-2d0d5966-2c36-43f0-95f3-71d4cdca8283.getName(),org.eclipse.jgit.transport.PackParser.readPackHeader(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.treewalk.filter.PathSuffixFilter.create(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.setInput(long, java.util.zip.Inflater),org.eclipse.jgit.api.RebaseCommand.setUpstream(java.lang.String),org.eclipse.jgit.patch.Patch.parseGitBinary(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File, boolean),org.eclipse.jgit.storage.pack.PackStatistics.getMessage(),org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.transport.TestProtocol.getName(),org.eclipse.jgit.transport.UploadPack.service(),org.eclipse.jgit.internal.storage.file.PackFile.idx(),org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlockLen(long),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.StashCreateCommand.getHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists(),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.create(java.lang.String),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.internal.storage.pack.PackWriter.writeBitmapIndex(java.io.OutputStream),org.eclipse.jgit.internal.storage.file.PackIndexWriter.createVersion(java.io.OutputStream, int),org.eclipse.jgit.api.CheckoutCommand.processOptions(),org.eclipse.jgit.errors.LargeObjectException.ExceedsLimit.getMessage(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.util.IO.resetAndSkipFully(java.io.Reader, long),org.eclipse.jgit.revwalk.filter.OrRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.outOfOrderAdvertisement(java.lang.String),org.eclipse.jgit.transport.HttpConfig.Anonymous-76f57d4a-cc8d-45f8-8078-651167dc50e2.get(),org.eclipse.jgit.internal.storage.file.FileRepository.loadRepoConfig(),org.eclipse.jgit.internal.storage.file.PackBitmapIndex.open(java.io.File, org.eclipse.jgit.internal.storage.file.PackIndex, org.eclipse.jgit.internal.storage.file.PackReverseIndex),org.eclipse.jgit.diff.DiffFormatter.setAbbreviationLength(int),org.eclipse.jgit.transport.RefSpec.checkValid(java.lang.String),org.eclipse.jgit.api.ApplyCommand.getFile(java.lang.String, boolean),org.eclipse.jgit.transport.PacketLineIn.readACK(org.eclipse.jgit.lib.MutableObjectId),org.eclipse.jgit.diff.MyersDiff.main(java.lang.String[]),org.eclipse.jgit.lib.Config.escapeValue(java.lang.String),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.invalidAdvertisement(java.lang.String),org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.util.TemporaryBuffer.LocalFile.toByteArray(),org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[], boolean),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.packfileIsTruncated(),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.internal.storage.file.LockFile.requireLock(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFileCorrupt(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress(long, int, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.transport.PushCertificateParser.parseHeader(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.transport.TagOpt.fromOption(java.lang.String),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.api.ArchiveCommand.unregisterFormat(java.lang.String),org.eclipse.jgit.util.HttpSupport.proxyFor(java.net.ProxySelector, java.net.URL),org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.transport.WalkEncryption.validateImpl(java.net.HttpURLConnection, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.util.FS.GobblerThread.waitForProcessCompletion(java.io.IOException),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.BundleFetchConnection.readSignature(),org.eclipse.jgit.transport.TransportHttp.constructSslTrustItems(java.lang.Throwable),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.unpeeledDoesNotWrite(),org.eclipse.jgit.transport.WalkFetchConnection.processBlob(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.TransportHttp.updateSslVerifyUser(boolean),org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts(),org.eclipse.jgit.errors.MissingBundlePrerequisiteException.format(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockSize(int),org.eclipse.jgit.transport.SideBandOutputStreamTest.testConstructor_RejectsBadBufferSize(),org.eclipse.jgit.errors.LargeObjectException.getMessage(),org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.transport.TransportGitAnon.openConnection(),org.eclipse.jgit.transport.TransportProtocol.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.AmazonS3.newMD5(),org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri(),org.eclipse.jgit.api.ArchiveCommand.registerFormat(java.lang.String, org.eclipse.jgit.api.ArchiveCommand.Format<?>),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.transport.TransportHttp.openFetch(),org.eclipse.jgit.transport.ReceiveCommand.abort(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CommitCommand.isMergeDuringRebase(org.eclipse.jgit.lib.RepositoryState),org.eclipse.jgit.util.FileUtils.mkdir(java.io.File, boolean),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.transport.UploadPack.parseFilter(java.lang.String),org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut(),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.transport.BaseConnection.setMessageWriter(java.io.Writer),org.eclipse.jgit.internal.storage.file.WindowCursor.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase),org.eclipse.jgit.dircache.DirCache.read(),org.eclipse.jgit.transport.BasePackFetchConnection.enableCapabilities(),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.badCrc32(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.GitCommand.checkCallable(),org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.lib.RepositoryState.getDescription(),org.eclipse.jgit.dircache.DirCacheBuilder.resort(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.shortInput(long),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.GcLog.autoGcBlockedByOldLockFile(boolean),org.eclipse.jgit.api.ResetCommand.parseCommit(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.FileRepository.loadUserConfig(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter(),org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.transport.TransportHttp.handleSslFailure(java.lang.Throwable),org.eclipse.jgit.dircache.DirCache.lock(),org.eclipse.jgit.transport.PushCertificateStore.buildMessage(org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.transport.TransportLocal.Anonymous-0daac936-dcdd-48d2-a7eb-6ea66e2fb3ba.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.ObjectChecker.checkTruncatedIgnorableUTF8(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.RefSpec.setSource(java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.parseCommand(java.lang.String),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.flushBlock(),org.eclipse.jgit.transport.ReceiveCommand.isTransactionAborted(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.SshTransport.setSshSessionFactory(org.eclipse.jgit.transport.SshSessionFactory),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.Constants.newMessageDigest(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex),org.eclipse.jgit.api.CloneCommand.validateDirs(java.io.File, java.io.File, boolean),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream),org.eclipse.jgit.api.CommitCommand.setHookOutputStream(java.lang.String, java.io.PrintStream),org.eclipse.jgit.transport.WalkFetchConnection.alreadyHave(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefsImpl(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.io.BufferedReader),org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.errors.NoClosingBracketException.createMessage(int, java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.maxAttempts(java.lang.String, java.lang.String),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.DoRepack.beginTask(java.lang.String, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long, int),org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.fnmatch.AbstractHead.setNewHeads(java.util.List<org.eclipse.jgit.fnmatch.Head>),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.api.RebaseCommand.checkSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.transport.PackParser.fill(org.eclipse.jgit.transport.PackParser.Source, int),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String),org.eclipse.jgit.transport.TransportHttp.wrongContentType(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.WalkEncryption.securityError(java.lang.String),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.internal.storage.file.PackFile.decompress(long, int, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insertOneObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.transport.PackParser.InflaterStream.read(byte[], int, int),org.eclipse.jgit.lib.BaseRepositoryBuilder.requireGitDirOrWorkTree(),org.eclipse.jgit.api.MergeResult.toString(),org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ObjectChecker.checkPersonIdent(byte[], org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(org.eclipse.jgit.transport.PacketLineIn),org.eclipse.jgit.transport.ReceiveCommand.reject(java.io.IOException),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>),org.eclipse.jgit.internal.storage.file.WindowCache.bits(int),org.eclipse.jgit.api.RebaseCommand.getHead(),org.eclipse.jgit.patch.FileHeader.addHunk(org.eclipse.jgit.patch.HunkHeader),org.eclipse.jgit.transport.BaseReceivePack.recvCommands(),org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[]),org.eclipse.jgit.api.CreateBranchCommand.processOptions(),org.eclipse.jgit.gitrepo.ManifestParser.read(java.io.InputStream),org.eclipse.jgit.internal.storage.reftree.Command.abort(java.lang.Iterable<org.eclipse.jgit.internal.storage.reftree.Command>, java.lang.String),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.revwalk.RevObjectList.add(int, E),org.eclipse.jgit.internal.storage.pack.PackWriter.runTasks(java.util.concurrent.ExecutorService, org.eclipse.jgit.lib.ThreadSafeProgressMonitor, org.eclipse.jgit.internal.storage.pack.DeltaTask.Block, java.util.List<java.lang.Throwable>),org.eclipse.jgit.lib.RebaseTodoLine.setAction(org.eclipse.jgit.lib.RebaseTodoLine.Action),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(byte[], int, int),org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.internal.storage.file.GC.packRefs(),org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.errors.InvalidObjectIdException.msg(byte[], int, int),org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.validate(java.net.HttpURLConnection, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteFile(java.lang.String),org.eclipse.jgit.lib.Repository.close(),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getInt(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, int),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(java.lang.Iterable<T>, boolean),org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.transport.UploadPack.verifyClientShallow(),org.eclipse.jgit.lib.ConfigTest.testIncludeInvalidName(),org.eclipse.jgit.revwalk.RevWalk.retainOnReset(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed(),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.dircache.DirCacheEditor.DeleteTree.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths(),org.eclipse.jgit.api.CheckoutCommand.checkOptions(),org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.transport.BasePackConnection.noRepository(),org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int, int),org.eclipse.jgit.lib.ObjectChecker.scanPathSegment(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.lang.String...),org.eclipse.jgit.transport.BaseReceivePack.getPackSize(),org.eclipse.jgit.lib.Config.escapeSubsection(java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.TransportBundleFile.openFetch(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.transport.TransportHttp.getServiceURL(java.lang.String),org.eclipse.jgit.api.ReflogCommand.call(),org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String),org.eclipse.jgit.transport.AmazonS3.error(java.lang.String, java.lang.String, java.net.HttpURLConnection),org.eclipse.jgit.transport.TransportLocal.openRepo(),org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.revplot.PlotWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.ResetCommand.setMode(org.eclipse.jgit.api.ResetCommand.ResetType),org.eclipse.jgit.util.io.InterruptTimer.begin(int),org.eclipse.jgit.treewalk.filter.PathFilter.create(java.lang.String),org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, long),org.eclipse.jgit.api.PushCommand.add(java.lang.String),org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String),org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.BundleFetchConnection.duplicateAdvertisement(java.lang.String),org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.blockSizeNotPowerOfTwoExpectsException(),org.eclipse.jgit.revwalk.filter.OrRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[]),org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.revwalk.RevWalk.initializeShallowCommits(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(java.io.File, int, org.eclipse.jgit.internal.storage.file.LockFile),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.api.TagCommand.processOptions(org.eclipse.jgit.lib.RepositoryState),org.eclipse.jgit.transport.BaseConnection.markStartedOperation(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream(),org.eclipse.jgit.util.FileUtils.createNewFile(java.io.File),org.eclipse.jgit.dircache.DirCache.requireLocked(org.eclipse.jgit.internal.storage.file.LockFile),org.eclipse.jgit.transport.TransportBundleFile.openPush(),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.diff.DiffFormatter.assertHaveReader(),org.eclipse.jgit.internal.storage.file.GC.gc(),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.api.StashDropCommand.updateRef(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.util.HttpSupport.response(java.net.HttpURLConnection),org.eclipse.jgit.util.io.TimeoutOutputStream.setTimeout(int),org.eclipse.jgit.internal.storage.reftable.BlockReader.invalidBlock(java.lang.Throwable),org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId(),org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String),org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File, java.nio.file.CopyOption...),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath(),org.eclipse.jgit.lib.ConfigTest.testIncludeEmptyValue(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.DescribeCommand.setTarget(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.create(int),org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean),org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.addAlternateObjectDirectory(java.io.File),org.eclipse.jgit.transport.PackParser.checkIfTooLarge(int, long),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack(),org.eclipse.jgit.util.FileUtils.createTempDir(java.lang.String, java.lang.String, java.io.File),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.transport.FetchProcess.askForIsComplete(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[]),org.eclipse.jgit.internal.storage.file.GC.checkCancelled(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.setInput(long, java.util.zip.Inflater, byte[]),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.revwalk.RevWalk.assertNotStarted(),org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.lib.RefUpdate.requireCanDoUpdate(),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.dircache.DirCacheEditor.DeletePath.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-3b4da25d-6ceb-46b1-89b7-412d9fb459d3.getName(),org.eclipse.jgit.diff.DiffConfig.parseRenameDetectionType(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.util.io.TimeoutInputStream.setTimeout(int),org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, long, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.lib.Constants.encodedTypeString(int),org.eclipse.jgit.transport.TransportAmazonS3.loadPropertiesFile(java.io.File),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.lib.ConfigTest.testIncludeNoValue(),org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream),org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.diff.DiffFormatter.setContext(int),org.eclipse.jgit.api.CheckoutCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.revwalk.filter.AndRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[]),org.eclipse.jgit.merge.Merger.nonNullRepo(),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getBoolean(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.transport.HttpConfig.normalize(java.lang.String),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getX(int, int),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.transport.TransportHttp.redirect(java.lang.String, java.lang.String, int),org.eclipse.jgit.api.MergeCommand.checkParameters(),org.eclipse.jgit.api.CloneCommand.call(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.lib.ConfigTest.testParseInvalidSubsections(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidType(),org.eclipse.jgit.revwalk.StartGenerator.next(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getIndex(int, int),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.lib.Constants.encodeASCII(java.lang.String),org.eclipse.jgit.transport.UploadPack.recvWants(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.mkdir_p(java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.RebaseCommand.checkParameters(),org.eclipse.jgit.transport.URIish.unescape(java.lang.String),org.eclipse.jgit.util.TemporaryBuffer.toByteArray(int),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec),org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.internal.storage.pack.PackWriter.beginPhase(org.eclipse.jgit.internal.storage.pack.PackWriter.PackingPhase, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(org.eclipse.jgit.transport.PushCertificateParser.StringReader),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.transport.PackParser.readPackFooter(),org.eclipse.jgit.transport.WalkEncryption.instance(java.util.Properties),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize(),org.eclipse.jgit.api.SubmoduleDeinitCommand.deinit(java.lang.String),org.eclipse.jgit.transport.PacketLineIn.invalidHeader(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String),org.eclipse.jgit.util.Base64.decode(byte[], int, int),org.eclipse.jgit.transport.TransportLocal.Anonymous-9492c004-2151-4a01-a2c3-57a25b99a068.getName(),org.eclipse.jgit.diff.RenameDetector.rejoinModifies(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.errors.CompoundException.format(java.util.Collection<java.lang.Throwable>),org.eclipse.jgit.util.io.LimitedInputStream.reset(),org.eclipse.jgit.transport.TransportSftp.Anonymous-20c03cc9-4f0c-4894-9464-7a9676e78ee1.getName(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit(),org.eclipse.jgit.diff.RenameDetector.setRenameScore(int),org.eclipse.jgit.api.InitCommand.validateDirs(java.io.File, java.io.File, boolean),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.RefUpdate.link(java.lang.String),org.eclipse.jgit.patch.CombinedHunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.lib.Config.readSubsectionName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.revwalk.filter.MessageRevFilter.create(java.lang.String),org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.diff.RenameDetector.breakModifies(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], int, int),org.eclipse.jgit.internal.storage.file.PackIndex.open(java.io.File),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.transport.PackParser.InflaterStream.close(),org.eclipse.jgit.api.ResetCommand.resolveRefToCommitId(),org.eclipse.jgit.api.CommitCommand.setOnly(java.lang.String),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.ReflogWriter.getFileOutputStream(java.io.File),org.eclipse.jgit.util.FS.GobblerThread.setError(java.io.IOException, java.lang.String, int),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.file.PackReverseIndex.findNextOffset(long, long),org.eclipse.jgit.lib.Config.allValuesOf(T),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpec.setSourceDestination(java.lang.String, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.setMaxPackSizeLimit(long),org.eclipse.jgit.util.io.IsolatedOutputStream.checkClosed(),org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.Daemon.start(),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getSnake(int, int),org.eclipse.jgit.api.DeleteTagCommand.call(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.transport.UploadPack.serveOneCommandV2(),org.eclipse.jgit.transport.TransportHttp.openPush(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.duplicateAdvertisement(java.lang.String),org.eclipse.jgit.revwalk.RevWalk.carry(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.transport.BasePackConnection.duplicateAdvertisement(java.lang.String),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.TransportGitSsh.checkExecFailure(int, java.lang.String, java.lang.String),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.open(java.lang.String),org.eclipse.jgit.revwalk.RevFlag.StaticRevFlag.getRevWalk(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.PathFilter>),org.eclipse.jgit.util.TemporaryBuffer.Heap.overflow(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder),org.eclipse.jgit.transport.TransportHttp.Anonymous-595f4821-749d-4e2f-89e6-385c028c9433.getName(),org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject(),org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, java.io.OutputStream),org.eclipse.jgit.lib.ConfigTest.testIncludeTooManyRecursions(),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(org.eclipse.jgit.lib.Config, T[], java.lang.String, java.lang.String, java.lang.String, T),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.api.errors.AbortedByHookException.getMessage(),org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.encodeName(java.nio.charset.CharsetEncoder),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject(),org.eclipse.jgit.lib.RebaseTodoLine.Action.parse(java.lang.String),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CommitCommand.setAll(boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.util.FileUtils.delete(java.io.File, int),org.eclipse.jgit.transport.TransportHttp.Anonymous-5fcd273d-b577-47e4-8a8f-dc9e00c83671.getName(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockLimit(long),org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String),org.eclipse.jgit.lib.DefaultTypedConfigGetter.notTimeUnit(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.WalkEncryption.error(java.lang.Throwable),org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(java.time.Duration),org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String),org.eclipse.jgit.util.io.DisabledOutputStream.write(int),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openRepoBadArgs(),org.eclipse.jgit.util.io.TimeoutInputStream.readTimedOut(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.transport.TransportGitSsh.Anonymous-a82da11c-2881-41fe-9e0e-dc40c8e5e2b4.getName(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.tableSize(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig),org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int),org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType(),org.eclipse.jgit.api.StashDropCommand.deleteRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.revwalk.filter.SkipRevFilter.create(int),org.eclipse.jgit.errors.LargeObjectException.OutOfMemory.getMessage(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_CreateBadTree(),org.eclipse.jgit.transport.SideBandInputStream.needDataPacket(),org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectSet(),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig(),org.eclipse.jgit.transport.UploadPack.okToGiveUpImp(),org.eclipse.jgit.lib.Repository.setGitwebDescription(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int),org.eclipse.jgit.lib.Constants.typeString(int),org.eclipse.jgit.transport.WantNotValidException.msg(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-b1474c89-36b5-493f-b944-72035ad7e5ec.open(),org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.util.RelativeDateFormatter.format(java.util.Date),org.eclipse.jgit.lib.RebaseTodoLine.createInvalidCommentException(java.lang.String),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.transport.TransportBundleStream.openFetch(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getPackNames(),org.eclipse.jgit.transport.BundleWriter.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.revwalk.filter.AndRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>),org.eclipse.jgit.errors.LargeObjectException.getObjectName(),org.eclipse.jgit.api.ResetCommand.addPath(java.lang.String),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.transport.FetchProcess.localRefs(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.transport.TransportBundleStream.openPush(),org.eclipse.jgit.util.HttpSupport.response(org.eclipse.jgit.transport.http.HttpConnection),org.eclipse.jgit.merge.MergeStrategy.register(java.lang.String, org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.WindowCache.tableSize(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute(),org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.util.IO.readFully(java.io.File, int),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.deleteFile(java.lang.String),org.eclipse.jgit.transport.TestProtocol.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	false	2944
5108.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream)	null,null,null,3783.json,2308.json,null,null,3382.json	org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.write(java.io.File[], org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	3176
4113.json	org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	null,null,4740.json	org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
4341.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getCachedPacksAndUpdate(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder)	noCall	noCall	true	1922
342.json	org.eclipse.jgit.pgm.Reset.run()	noCall	noCall	true	2669
5569.json	org.eclipse.jgit.revwalk.EndGenerator.outputType()	noCall	noCall	true	3176
7524.json	org.eclipse.jgit.api.TransportCommand.setTransportConfigCallback(org.eclipse.jgit.api.TransportConfigCallback)	7527.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.api.TransportCommand)	true	2459
10271.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getFilterName()	noCall	noCall	true	3070
2734.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getCommitMethod()	noCall	noCall	true	872
5868.json	org.eclipse.jgit.ignore.IgnoreNode.checkIgnored(java.lang.String, boolean)	7824.json,7856.json,5867.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.IgnoreNode.isIgnored(java.lang.String, boolean)	true	106
6638.json	org.eclipse.jgit.diff.SimilarityIndex.pair(int, long)	6637.json	org.eclipse.jgit.diff.SimilarityIndex.add(int, int)	true	2766
9048.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getGitDir()	9074.json,7025.json,396.json,9075.json,177.json,9071.json,9077.json,9064.json,9069.json,9068.json,9078.json,202.json,null,6113.json,null,9072.json,9073.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.lib.BaseRepositoryBuilder.build(),org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(),org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(),org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.build(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory(),org.eclipse.jgit.lib.BaseRepositoryBuilder.requireGitDirOrWorkTree(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()	true	2907
6091.json	org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte[])	null,6089.json,6090.json	org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.storage.file.FileBasedConfig.clear()	true	2733
4650.json	org.eclipse.jgit.internal.storage.file.PackIndex.getObjectId(int)	null,null,4636.json,4640.json	org.eclipse.jgit.internal.storage.file.PackWriterTest.assertContent(org.eclipse.jgit.internal.storage.file.PackIndex, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObject(long),org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObjectByPosition(int)	true	3176
10205.json	org.eclipse.jgit.transport.JschSession.JschProcess.getInputStream()	noCall	noCall	true	2745
457.json	org.eclipse.jgit.junit.MockSystemReader.clearProperties()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3141
5670.json	org.eclipse.jgit.revwalk.RevTag.getObject()	null,null,null,5616.json,5139.json,null,7512.json,null,null,1364.json,null,5482.json,null,1374.json,null,null,5481.json,269.json,null,7511.json,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag(),org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markRoot(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.NameRevCommand.minCommitTime(),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled(),org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_TagsOnly()	true	3176
8663.json	org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int)	8680.json	org.eclipse.jgit.patch.Patch.parseTraditionalPatch(byte[], int, int)	true	3176
5923.json	org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, int)	6062.json,5920.json,5919.json	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter)	true	3176
2890.json	org.eclipse.jgit.internal.ketch.Proposal.toString()	noCall	noCall	true	872
1619.json	org.eclipse.jgit.transport.resolver.FileResolver.setExportAll(boolean)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
2066.json	org.eclipse.jgit.transport.BaseConnection.getRefsMap()	2306.json,2312.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.WalkPushConnection.isNewRepository()	true	3176
1858.json	org.eclipse.jgit.transport.ReceiveCommand.reject(java.io.IOException)	2625.json,1853.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack)	true	2210
9855.json	org.eclipse.jgit.lfs.Lfs.getLfsRoot()	noCall	noCall	true	628
3557.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getStreamFileThreshold()	3543.json,3561.json,3504.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.getCachedBytes(),org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insertBuffer(long)	true	2410
4272.json	org.eclipse.jgit.internal.storage.file.WindowCache.bits(int)	noCall	noCall	true	3176
5229.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setEdge()	5148.json,5255.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.BaseSearch.add(org.eclipse.jgit.lib.AnyObjectId, int, int)	true	2851
6577.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	null,null,null,7425.json	org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffNullToNull(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	true	2838
3414.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.reconfigure(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig)	null,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.resetCache(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	2410
4478.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.findOffset(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
3904.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Set<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>)	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
7318.json	org.eclipse.jgit.api.CheckoutResult.getUndeletedList()	null,null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles()	true	2728
6823.json	org.eclipse.jgit.api.ApplyCommand.setPatch(java.io.InputStream)	null	org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean)	true	2288
3891.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentPacks()	noCall	noCall	true	2410
3646.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	2410
10203.json	org.eclipse.jgit.transport.JschSession.JschProcess.closeOutputStream()	10210.json	org.eclipse.jgit.transport.JschSession.JschProcess.destroy()	true	899
5288.json	org.eclipse.jgit.attributes.Attributes.isEmpty()	null,null,null	org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>)	true	925
8410.json	org.eclipse.jgit.util.FS.length(java.io.File)	null	org.eclipse.jgit.util.FSTest.testSymlinkAttributes()	true	1864
8015.json	org.eclipse.jgit.util.RefMap.get(java.lang.Object)	null,null,null,null,8014.json,null,null,null,null,null,null,null,8016.json	org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix2(),org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved(),org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose(),org.eclipse.jgit.util.RefMap.containsKey(java.lang.Object),org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix(),org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testEntryTypeSet(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix1(),org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster(),org.eclipse.jgit.util.RefMapTest.testRemove(),org.eclipse.jgit.util.RefMapTest.testClear(),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref)	true	3060
8741.json	org.eclipse.jgit.patch.FormatError.getOffset()	null,8743.json,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.FormatError.toString(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew()	true	3176
6003.json	org.eclipse.jgit.dircache.DirCacheEntry.toString(byte[])	6002.json,5991.json,5956.json	org.eclipse.jgit.dircache.DirCacheEntry.checkPath(byte[]),org.eclipse.jgit.dircache.DirCacheEntry.getPathString(),org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.toString()	true	3048
8054.json	org.eclipse.jgit.util.FS_POSIX.supportsExecute()	noCall	noCall	true	3176
4908.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,4906.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadBranchNotBorn(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadOnOneBranch(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DiscoversModified(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_EmptyDatabase(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DiscoversNew(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_CycleInSymbolicRef(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DeeplyNestedBranch(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DetachedHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadsOnly(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_HeadsSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_InvalidPrefixes(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_TagsOnly()	true	880
10125.json	org.eclipse.jgit.archive.Tbz2Format.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	10124.json	org.eclipse.jgit.archive.Tbz2Format.createArchiveOutputStream(java.io.OutputStream)	true	1206
9044.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS)	9069.json,9073.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()	true	2197
6480.json	org.eclipse.jgit.diff.HistogramDiff.State.subcmp()	6478.json	org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2816
1832.json	org.eclipse.jgit.transport.ReceiveCommand.unlink(java.lang.String, org.eclipse.jgit.lib.ObjectId, java.lang.String)	3130.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
1809.json	org.eclipse.jgit.transport.TransportLocal.createUploadPack(org.eclipse.jgit.lib.Repository)	null,1812.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-b9ecafc4-c7b4-4400-bc1f-8891fb8741b1.create(java.lang.Void, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.TransportLocal.openFetch()	true	2977
10146.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.getPassphrase()	noCall	noCall	true	2768
1797.json	org.eclipse.jgit.transport.DaemonService.isOverridable()	1802.json	org.eclipse.jgit.transport.DaemonService.isEnabledFor(org.eclipse.jgit.lib.Repository)	true	3176
4006.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, byte[], int, int)	4007.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream)	true	221
9275.json	org.eclipse.jgit.lib.BatchingProgressMonitor.update(int)	157.json,158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	2658
5401.json	org.eclipse.jgit.revwalk.RevWalk.dispose()	6211.json,1900.json,5501.json	org.eclipse.jgit.revplot.PlotWalk.dispose(),org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.revwalk.ObjectWalk.dispose()	true	3176
1856.json	org.eclipse.jgit.transport.ReceiveCommand.setTypeFastForwardUpdate()	2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	2210
1084.json	org.eclipse.jgit.errors.InvalidPatternException.getPattern()	noCall	noCall	true	3176
3097.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readUpdateIndexDelta()	3058.json,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next()	true	293
3490.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.getDeltaBase()	null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
8996.json	org.eclipse.jgit.lib.Repository.shortenRefName(java.lang.String)	null,7420.json,6817.json,7892.json,387.json,388.json,7472.json,7438.json,8976.json,7008.json,7186.json,7040.json,7400.json,7206.json,1011.json,7471.json,6890.json,96.json,430.json,null,7131.json,363.json,9627.json	org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.RebaseCommand.getOurCommitName(),org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.Reflog.toString(org.eclipse.jgit.lib.ReflogEntry, int),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.CheckoutCommand.getShortBranchName(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.Repository.getBranch(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.CherryPickCommand.calculateOurName(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.CloneCommand.addMergeConfig(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
7391.json	org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7266.json,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.revplot.AbstractPlotRendererTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.DescribeCommandTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.pgm.StatusTest.mergeTestBranchInMaster(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2939
7342.json	org.eclipse.jgit.api.ReflogCommand.call()	null,7380.json,null,386.json,null	org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog(),org.eclipse.jgit.pgm.Reflog.run(),org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog()	true	2545
8969.json	org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String)	null	org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	2367
5628.json	org.eclipse.jgit.revwalk.FollowFilter.create(java.lang.String, org.eclipse.jgit.diff.DiffConfig)	6575.json,5657.json,null,352.json	org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.follow(java.lang.String),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	2899
3301.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginLog()	3300.json,3299.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.deleteLog(java.lang.String, long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeLog(java.lang.String, long, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String)	true	297
7223.json	org.eclipse.jgit.api.AddNoteCommand.setMessage(java.lang.String)	null,null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.NotesCommandTest.setUp()	true	2618
2006.json	org.eclipse.jgit.transport.Transport.isCheckFetchedObjects()	1953.json	org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
5827.json	org.eclipse.jgit.ignore.internal.Strings.isWildCard(java.lang.String)	5842.json	org.eclipse.jgit.ignore.internal.PathMatcher.isSimplePathWithSegments(java.lang.String)	true	1322
9293.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.isEmpty()	null,null,null	org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains()	true	2645
155.json	org.eclipse.jgit.pgm.debug.VerifyReftable.run()	noCall	noCall	true	297
5115.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getState()	noCall	noCall	true	2399
961.json	org.eclipse.jgit.merge.StrategyOneSided.newMerger(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	3176
9968.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.setByte(int, int)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte()	true	856
1349.json	org.eclipse.jgit.transport.CredentialsProvider.isAnyNull(org.eclipse.jgit.transport.CredentialItem...)	1313.json,1641.json	org.eclipse.jgit.transport.ChainingCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	1355
3264.json	org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getRefName()	noCall	noCall	true	297
8697.json	org.eclipse.jgit.patch.HunkHeader.getOldImage()	null,null,null,null,8708.json,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.HunkHeader.toString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
8241.json	org.eclipse.jgit.util.io.IsolatedOutputStream.NamedThreadFactory.newThread(java.lang.Runnable)	noCall	noCall	true	573
3254.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
7472.json	org.eclipse.jgit.api.CheckoutCommand.getShortBranchName(org.eclipse.jgit.lib.Ref)	7471.json	org.eclipse.jgit.api.CheckoutCommand.call()	true	2470
7870.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict()	null,6024.json,7530.json,null,null,null,6032.json	org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2874
397.json	org.eclipse.jgit.pgm.Main.installConsole()	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	1145
6572.json	org.eclipse.jgit.diff.DiffFormatter.source(org.eclipse.jgit.treewalk.AbstractTreeIterator)	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2838
9598.json	org.eclipse.jgit.lib.AnyObjectId.compareTo(org.eclipse.jgit.lib.AnyObjectId)	1161.json,1220.json	org.eclipse.jgit.notes.LeafBucket.search(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.NoteMapMerger.min(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	true	3176
3039.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allLogs()	null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog()	true	297
4357.json	org.eclipse.jgit.internal.storage.file.WindowCursor.prepareInflater()	4356.json,4354.json	org.eclipse.jgit.internal.storage.file.WindowCursor.inflater(),org.eclipse.jgit.internal.storage.file.WindowCursor.inflate(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], boolean)	true	2948
9944.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	9945.json,9879.json,null	org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(java.lang.Object),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testEquals()	true	856
7483.json	org.eclipse.jgit.api.CheckoutCommand.isCheckoutIndex()	7498.json,7477.json	org.eclipse.jgit.api.CheckoutCommand.checkOptions(),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths()	true	2031
5837.json	org.eclipse.jgit.ignore.internal.Strings.deleteBackslash(java.lang.String)	noCall	noCall	true	988
5376.json	org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(org.eclipse.jgit.revwalk.RevObject)	5529.json,5662.json,5528.json,5663.json	org.eclipse.jgit.revwalk.RevCommit.parseBody(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevTag.parseHeaders(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevTag.parseBody(org.eclipse.jgit.revwalk.RevWalk)	true	2846
3280.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(java.lang.String)	null	org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
6131.json	org.eclipse.jgit.storage.pack.PackStatistics.getDeltasFound()	noCall	noCall	true	1094
8273.json	org.eclipse.jgit.util.LongMap.get(long)	3051.json,8272.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long),org.eclipse.jgit.util.LongMap.containsKey(long),org.eclipse.jgit.util.LongMapTest.testEmptyMap(),org.eclipse.jgit.util.LongMapTest.testSmallMap(),org.eclipse.jgit.util.LongMapTest.testLargeMap(),org.eclipse.jgit.util.LongMapTest.testReplaceMaxValue(),org.eclipse.jgit.util.LongMapTest.testInsertMinValue()	true	3176
6884.json	org.eclipse.jgit.api.CloneCommand.init()	6880.json	org.eclipse.jgit.api.CloneCommand.call()	true	2686
9339.json	org.eclipse.jgit.lib.BlobObjectChecker.Anonymous-c7764d53-414b-4bdd-90f2-d22fe391aa7d.update(byte[], int, int)	noCall	noCall	true	286
8072.json	org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent, java.lang.String)	null,null,null,6980.json	org.eclipse.jgit.util.ChangeIdUtilTest.call(java.lang.String, boolean),org.eclipse.jgit.util.ChangeIdUtilTest.testId(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.api.CommitCommand.insertChangeId(org.eclipse.jgit.lib.ObjectId)	true	2928
8493.json	org.eclipse.jgit.util.FileUtils.isSymlink(java.io.File)	8432.json	org.eclipse.jgit.util.FS.isSymLink(java.io.File)	true	988
2051.json	org.eclipse.jgit.transport.TransportSftp.newSftp()	noCall	noCall	true	3176
8620.json	org.eclipse.jgit.util.SystemReader.isMacOS()	8053.json,8600.json,8509.json,4849.json,null,6049.json,null,8052.json,8486.json,8508.json	org.eclipse.jgit.util.FS_POSIX.isCaseSensitive(),org.eclipse.jgit.util.SystemReader.setPlatformChecker(),org.eclipse.jgit.util.FileUtils.normalize(java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.setUp(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.util.FileUtilsTest.testRelativize_mixedCase(),org.eclipse.jgit.util.FS_POSIX.discoverGitExe(),org.eclipse.jgit.util.FileUtils.readSymLink(java.io.File),org.eclipse.jgit.util.FileUtils.normalize(java.io.File)	true	2717
2652.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.grow()	2651.json,2650.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.append(int),org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.append(java.lang.String)	true	722
7977.json	org.eclipse.jgit.util.LfsFactory.LfsInputStream.close()	noCall	noCall	true	98
4290.json	org.eclipse.jgit.internal.storage.file.WindowCache.scan(org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.PackFile, long)	4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
5949.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int)	5948.json	org.eclipse.jgit.dircache.DirCacheEditor.applyEdits()	true	893
10153.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int)	noCall	noCall	true	3176
7506.json	org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags()	null,null	org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult(),org.eclipse.jgit.api.NameRevCommandTest.annotatedTags()	true	1915
2593.json	org.eclipse.jgit.transport.BaseReceivePack.sendMessage(java.lang.String)	noCall	noCall	true	3176
2534.json	org.eclipse.jgit.transport.OpenSshConfig.userName()	10189.json	org.eclipse.jgit.transport.OpenSshConfig.Host.complete(java.lang.String, java.io.File)	true	3176
8082.json	org.eclipse.jgit.util.NB.decodeUInt24(byte[], int)	3117.json,3118.json,null	org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte[]),org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte[], int, int, int),org.eclipse.jgit.util.NBTest.testDecodeUInt24()	true	305
5771.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.Between.toString()	noCall	noCall	true	3176
8192.json	org.eclipse.jgit.util.io.TimeoutOutputStream.setTimeout(int)	null,null,null,2600.json,null,null,1426.json,2331.json	org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Timeout(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Success(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Success(),org.eclipse.jgit.transport.BaseReceivePack.init(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.setUp(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Timeout(),org.eclipse.jgit.transport.UploadPack.upload(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.transport.BasePackConnection.init(java.io.InputStream, java.io.OutputStream)	true	3176
6008.json	org.eclipse.jgit.dircache.DirCacheBuilder.createTreeParser(byte[], org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	6007.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	922
6627.json	org.eclipse.jgit.diff.SimilarityIndex.sort()	null,null,6654.json,null,6622.json	org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScoreLargeObject_SameFiles_CR_canonicalization(),org.eclipse.jgit.diff.SimilarityIndexTest.hash(java.lang.String),org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetector.calculateModifyScore(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.SimilarityIndex.create(org.eclipse.jgit.lib.ObjectLoader)	true	2899
367.json	org.eclipse.jgit.pgm.Log.ignoreSpaceAtEol(boolean)	noCall	noCall	true	2899
1104.json	org.eclipse.jgit.hooks.PreCommitHook.getHookName()	noCall	noCall	true	1195
7573.json	org.eclipse.jgit.treewalk.TreeWalk.close()	7922.json	org.eclipse.jgit.submodule.SubmoduleWalk.close()	true	1216
4803.json	org.eclipse.jgit.internal.storage.file.GC.doGc()	4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	true	2142
4283.json	org.eclipse.jgit.internal.storage.file.WindowCache.clear(org.eclipse.jgit.internal.storage.file.WindowCache.Ref)	4326.json	org.eclipse.jgit.internal.storage.file.WindowCache.gc()	true	3176
8805.json	org.eclipse.jgit.lib.ConfigSnapshot.getSections()	8886.json	org.eclipse.jgit.lib.Config.getSections()	true	2260
7886.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String)	null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules()	true	2355
9432.json	org.eclipse.jgit.lib.ObjectDatabase.open(org.eclipse.jgit.lib.AnyObjectId)	null,null	org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.lib.Repository.open(org.eclipse.jgit.lib.AnyObjectId)	true	2907
6653.json	org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(java.lang.String, java.lang.String)	6699.json,6652.json,6698.json	org.eclipse.jgit.diff.RenameDetector.bestPathMatch(org.eclipse.jgit.diff.DiffEntry, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2890
9082.json	org.eclipse.jgit.lib.InflaterCache.getImpl()	9081.json	org.eclipse.jgit.lib.InflaterCache.get()	true	3176
8555.json	org.eclipse.jgit.util.RefList.Builder.add(T)	148.json,4968.json,null,null,3689.json,3950.json,4501.json,null,3948.json,null,null,3972.json,3566.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote(),org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.util.RefListTest.testBuilder_Set(),org.eclipse.jgit.util.RefListTest.testBuilder_ToString(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanOne(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.util.RefListTest.testBuilder_AddThenSort(),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String),org.eclipse.jgit.util.RefListTest.testBuilder_Remove(),org.eclipse.jgit.util.RefListTest.testCopyConstructorReusesArray(),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String)	true	3060
6262.json	org.eclipse.jgit.gitrepo.RepoProject.setDefaultRevision(java.lang.String)	6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	true	1115
3758.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.quickCopy(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, long)	3803.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
3102.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.Anonymous-9ee5033d-1333-401d-8d4d-b037f074e8ff.getNewId()	noCall	noCall	true	297
8225.json	org.eclipse.jgit.util.io.UnionInputStream.skip(long)	null,null	org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream(),org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip()	true	3078
7221.json	org.eclipse.jgit.api.AddNoteCommand.call()	null,null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.NotesCommandTest.setUp()	true	2618
530.json	org.eclipse.jgit.junit.http.MockServletConfig.Anonymous-3bb955ec-7e11-47bd-9be9-a68c8a6b8d98.nextElement()	noCall	noCall	true	3070
4298.json	org.eclipse.jgit.internal.storage.file.WindowCache.clean(org.eclipse.jgit.internal.storage.file.WindowCache.Entry)	4326.json,4289.json,4294.json,4292.json,4298.json	org.eclipse.jgit.internal.storage.file.WindowCache.gc(),org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.WindowCache.evict(),org.eclipse.jgit.internal.storage.file.WindowCache.clean(org.eclipse.jgit.internal.storage.file.WindowCache.Entry)	true	3176
9951.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.io.OutputStream)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToOutputStream()	true	856
6116.json	org.eclipse.jgit.storage.pack.PackStatistics.ObjectType.getDeltas()	noCall	noCall	true	1094
8194.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[])	null,null	org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeBuffer_Success1(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeBuffer_Timeout()	true	3176
4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	5109.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeBitmapIndex(java.io.OutputStream)	true	1922
8840.json	org.eclipse.jgit.lib.CoreConfig.getAttributesFile()	4236.json	org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load()	true	1249
8422.json	org.eclipse.jgit.util.FS.readPipe(java.io.File, java.lang.String[], java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	8427.json,8421.json	org.eclipse.jgit.util.FS.discoverGitSystemConfig(),org.eclipse.jgit.util.FS.readPipe(java.io.File, java.lang.String[], java.lang.String)	true	2718
8216.json	org.eclipse.jgit.util.io.MessageWriter.toString()	noCall	noCall	true	3011
7347.json	org.eclipse.jgit.api.BlameCommand.setFollowFileRenames(boolean)	null,null	org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String)	true	2567
2757.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.computeKey(org.eclipse.jgit.lib.Repository)	2755.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.get(org.eclipse.jgit.lib.Repository)	true	872
3078.json	org.eclipse.jgit.internal.storage.reftable.Reftable.seekLog(java.lang.String)	noCall	noCall	true	297
5759.json	org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.clone()	noCall	noCall	true	2360
908.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.setForce(boolean)	noCall	noCall	true	2596
10163.json	org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.OpenSshConfig.Host, java.lang.String, java.lang.String, int, org.eclipse.jgit.util.FS)	10157.json	org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host)	true	3176
8327.json	org.eclipse.jgit.util.RawCharSequence.subSequence(int, int)	noCall	noCall	true	3176
7605.json	org.eclipse.jgit.treewalk.TreeWalk.isPathSuffix(byte[], int)	7774.json,2839.json,2807.json	org.eclipse.jgit.treewalk.filter.PathSuffixFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	true	3176
7922.json	org.eclipse.jgit.submodule.SubmoduleWalk.close()	7885.json,7886.json,7884.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository)	true	1216
3373.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
3270.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(byte[], int, int)	3281.json,3310.json,3308.json,3175.json,3276.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(byte[]),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileHeader(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.writeKey(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarint(long)	true	297
8211.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.print(java.lang.Object)	164.json,8206.json,340.json,144.json,8210.json,8207.json,411.json,8204.json,156.json,269.json,271.json,8208.json,110.json,8205.json,8209.json,112.json,434.json,82.json,382.json,380.json,270.json,143.json,278.json,77.json,162.json,272.json,385.json,303.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef),org.eclipse.jgit.util.io.ThrowingPrintWriter.print(char),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.util.io.ThrowingPrintWriter.format(java.lang.String, java.lang.Object...),org.eclipse.jgit.util.io.ThrowingPrintWriter.print(int),org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.util.io.ThrowingPrintWriter.println(java.lang.String),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.util.io.ThrowingPrintWriter.print(long),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.util.io.ThrowingPrintWriter.println(),org.eclipse.jgit.util.io.ThrowingPrintWriter.print(short),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.ShowRef.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.pgm.debug.ReadDirCache.run(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.pgm.LsRemote.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.debug.ShowCommands.run(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String)	true	2093
1345.json	org.eclipse.jgit.transport.PacketLineOut.formatLength(int)	1341.json,1343.json,1342.json	org.eclipse.jgit.transport.PacketLineOut.writePacket(byte[], int, int),org.eclipse.jgit.transport.PacketLineOut.end(),org.eclipse.jgit.transport.PacketLineOut.writeDelim()	true	3176
2738.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.fromConfig(org.eclipse.jgit.lib.Config, java.lang.String)	2732.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.newFromConfig(org.eclipse.jgit.lib.Config, java.lang.String)	true	872
2750.json	org.eclipse.jgit.internal.ketch.ElectionRound.success()	noCall	noCall	true	872
9285.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.restartTimer()	9284.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.update(org.eclipse.jgit.lib.BatchingProgressMonitor, int)	true	2658
6433.json	org.eclipse.jgit.blame.BlameGenerator.setFollowFileRenames(boolean)	7350.json	org.eclipse.jgit.api.BlameCommand.call()	true	2567
6128.json	org.eclipse.jgit.storage.pack.PackStatistics.getReusedPacks()	noCall	noCall	true	1094
6203.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapDistantCommitSpan()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
3434.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.putRef(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, T)	3787.json,3792.json,3791.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.setPackIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	327
1025.json	org.eclipse.jgit.merge.MergeConfig.isMergeConfigOptionSet(java.lang.String, java.lang.String[])	noCall	noCall	true	1577
3658.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.buffer(byte[], int, int)	3646.json,3667.json,3657.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onStoreStream(byte[], int, int)	true	2410
2025.json	org.eclipse.jgit.transport.Transport.getTimeout()	2241.json,2051.json,2284.json,2151.json,2331.json	org.eclipse.jgit.transport.TransportHttp.httpOpen(java.lang.String, java.net.URL, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.TransportSftp.newSftp(),org.eclipse.jgit.transport.SshTransport.getSession(),org.eclipse.jgit.transport.TransportGitAnon.openConnection(),org.eclipse.jgit.transport.BasePackConnection.init(java.io.InputStream, java.io.OutputStream)	true	3176
7313.json	org.eclipse.jgit.api.TagCommand.setForceUpdate(boolean)	null,null,363.json	org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.pgm.Tag.run()	true	2844
75.json	org.eclipse.jgit.pgm.LsRemote.run()	noCall	noCall	true	3176
7505.json	org.eclipse.jgit.api.NameRevCommand.addPrefix(java.lang.String)	null	org.eclipse.jgit.api.NameRevCommandTest.prefix()	true	1917
1648.json	org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket)	null,1940.json	org.eclipse.jgit.transport.Daemon.Anonymous-5037f7c5-341b-4e8c-9506-b34a8fceeed4.run(),org.eclipse.jgit.transport.Daemon.startClient(java.net.Socket)	true	3176
7764.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	2739
2934.json	org.eclipse.jgit.internal.fsck.FsckPackParser.readFromChannel(long)	2933.json	org.eclipse.jgit.internal.fsck.FsckPackParser.read(long, byte[], int, int)	true	319
4875.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int, boolean)	4874.json,4877.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean)	true	2543
9870.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsContentConnection(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.Protocol.Action, java.lang.String)	9892.json,9895.json	org.eclipse.jgit.lfs.LfsPrePushHook.uploadFile(org.eclipse.jgit.lfs.Protocol.ObjectInfo, org.eclipse.jgit.lfs.Protocol.Action, java.nio.file.Path),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	102
8678.json	org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int)	8677.json	org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	true	3176
4590.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.removeAllOrNone(org.eclipse.jgit.internal.storage.file.PackBitmapIndex)	noCall	noCall	true	1922
7978.json	org.eclipse.jgit.util.LfsFactory.LfsInputStream.read()	noCall	noCall	true	98
487.json	org.eclipse.jgit.junit.StrictWorkMonitor.isCancelled()	noCall	noCall	true	1848
1666.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumOfsDelta()	null	org.eclipse.jgit.transport.UploadPackTest.testV2FetchOfsDelta()	true	629
4128.json	org.eclipse.jgit.internal.storage.file.PackFile.resetTransientErrorCount()	null,4745.json,4740.json,null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	452
9075.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals()	9070.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()	true	2907
10363.json	org.eclipse.jgit.http.server.HttpServerText.get()	10295.json,10426.json,10331.json,10283.json,10335.json,10322.json	org.eclipse.jgit.http.server.glue.MetaFilter.register(org.eclipse.jgit.http.server.glue.ServletBinderImpl),org.eclipse.jgit.http.server.ReceivePackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable),org.eclipse.jgit.http.server.GitFilter.assertNotInitialized(),org.eclipse.jgit.http.server.glue.MetaFilter.serve(java.lang.String),org.eclipse.jgit.http.server.GitFilter.register(org.eclipse.jgit.http.server.glue.ServletBinder),org.eclipse.jgit.http.server.UploadPackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable)	false	2944
8516.json	org.eclipse.jgit.util.IntList.get(int)	6028.json,null,6535.json,null,null,6620.json,null,955.json,6487.json,6617.json,6534.json,953.json,null,6619.json,null,null,null,null,6501.json,6607.json,6530.json,null,null,3169.json,null,null,null,6618.json	org.eclipse.jgit.dircache.DirCacheCheckout.filterOut(java.util.ArrayList<java.lang.String>, org.eclipse.jgit.util.IntList),org.eclipse.jgit.util.IntListTest.testClear(),org.eclipse.jgit.diff.RawText.getEnd(int),org.eclipse.jgit.util.IntListTest.testAdd_LargeGroup(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.asInts(org.eclipse.jgit.util.IntList),org.eclipse.jgit.diff.RawTextComparator.findReverseLine(org.eclipse.jgit.util.IntList, int, int),org.eclipse.jgit.util.IntListTest.testFillTo1(),org.eclipse.jgit.merge.MergeResult.iterator(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getX(int, int),org.eclipse.jgit.diff.RawTextComparator.hash(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawText.getStart(int),org.eclipse.jgit.merge.MergeResult.Anonymous-0cb50a50-241b-4134-b235-9feb5919636d.next(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-497c94c9-3c5a-4578-a72c-a78d99537be0.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.findForwardLine(org.eclipse.jgit.util.IntList, int, int),org.eclipse.jgit.util.IntListTest.testEmpty_SpecificCapacity(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-f801d2cd-376f-48f0-83b4-030fc95f475b.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.util.IntListTest.testFillTo100(),org.eclipse.jgit.util.IntListTest.testAdd_SmallGroup(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-837c468d-c71c-4269-bf45-53142f360ba5.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawText.isMissingNewlineAtEnd(),org.eclipse.jgit.util.IntListTest.testSet(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-915ad25e-6142-4336-a316-7782b6640100.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.util.IntListTest.testAdd_ZeroCapacity(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-f8c3e213-dac1-4dde-97c8-54719e7e0776.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.util.IntListTest.testEmpty_DefaultCapacity(),org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.Edit)	true	3176
1105.json	org.eclipse.jgit.hooks.Hooks.preCommit(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	1195
8133.json	org.eclipse.jgit.util.StringUtils.compareIgnoreCase(java.lang.String, java.lang.String)	8816.json	org.eclipse.jgit.lib.ConfigSnapshot.compare2(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	2266
9446.json	org.eclipse.jgit.lib.CommitBuilder.setParentIds(org.eclipse.jgit.lib.ObjectId...)	7040.json,7224.json,6309.json,null,null,null,null,213.json	org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
4379.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedByte()	noCall	noCall	true	1922
5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5012.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	2893
6461.json	org.eclipse.jgit.blame.BlameGenerator.getRenameScore()	noCall	noCall	true	2567
2844.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(java.util.List<org.eclipse.jgit.internal.ketch.Proposal>)	noCall	noCall	true	872
2418.json	org.eclipse.jgit.transport.PackParser.readFrom(org.eclipse.jgit.transport.PackParser.Source)	2409.json,2400.json	org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.transport.PackParser.readObjectHeader(org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	true	3176
9314.json	org.eclipse.jgit.lib.BatchRefUpdate.setAtomic(boolean)	2625.json,null	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.newBatchUpdate(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	782
5463.json	org.eclipse.jgit.revwalk.AbstractRevQueue.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag)	5464.json	org.eclipse.jgit.revwalk.AbstractRevQueue.addParents(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag)	true	3176
7871.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.isFileMode()	7832.json,7829.json,6045.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	2764
3116.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.verifyIndex()	3049.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readIndex(long)	true	297
9617.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(char[], java.lang.StringBuilder)	null	org.eclipse.jgit.transport.RefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	3176
1643.json	org.eclipse.jgit.transport.DaemonClient.setRemoteAddress(java.net.InetAddress)	1940.json	org.eclipse.jgit.transport.Daemon.startClient(java.net.Socket)	true	3176
7623.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.ensurePathCapacity(int, int)	7816.json,null,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.parseEntry(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEnsurePathCapacityGrows(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEnsurePathCapacityFastCase()	true	3176
513.json	org.eclipse.jgit.junit.http.AppServer.getRequests(java.lang.String)	null,512.json	org.eclipse.jgit.junit.http.HttpTestCase.getRequests(java.lang.String),org.eclipse.jgit.junit.http.AppServer.getRequests(org.eclipse.jgit.transport.URIish, java.lang.String)	true	3070
2172.json	org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(org.eclipse.jgit.transport.PushCertificateParser.StringReader)	2171.json,2162.json	org.eclipse.jgit.transport.PushCertificateParser.receiveSignature(org.eclipse.jgit.transport.PacketLineIn),org.eclipse.jgit.transport.PushCertificateParser.parse(java.io.Reader)	true	1202
7416.json	org.eclipse.jgit.api.RebaseCommand.composeSquashMessage(boolean, org.eclipse.jgit.revwalk.RevCommit, java.lang.String, int)	7412.json	org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File)	true	1677
7243.json	org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree)	7237.json	org.eclipse.jgit.api.StashApplyCommand.call()	true	1956
3040.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekLog(java.lang.String, long)	noCall	noCall	true	297
8978.json	org.eclipse.jgit.lib.Repository.exactRef(java.lang.String)	null,null,7413.json,null,null,null,null,null,430.json,1906.json,null,7892.json,null,null,null,6313.json,null,6830.json,431.json,null,null,null,7211.json,7920.json,null,null,null,null,null,null,null,7215.json,7385.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7230.json,null,null,null,null,null,null,null,null,null,null,6865.json,6812.json,null,null,null,null,6969.json,379.json,null,null,null,null,7380.json,null,null,6911.json,null,6979.json,null,null,null,7038.json,null,null,null,null,null,7471.json,null,null,null,null,301.json,null,7485.json,null,null,null,null,null,7431.json,null,279.json,null,null,null,7195.json,8975.json,null,null,null,null,null,null,null,null,null,null,null,7008.json,null,7186.json,null,null,96.json,null,7300.json,null,null,9627.json	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.TagTest.testTagDelete(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRemoteUrl(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.gitrepo.RepoCommand.findRef(java.lang.String, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.pgm.Branch.list(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.api.StashDropCommand.getRef(),org.eclipse.jgit.submodule.SubmoduleWalk.getHeadRef(),org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithIdenticalContents(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.junit.TestRepository.amendRef(java.lang.String),org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches(),org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef(),org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.pgm.StatusTest.detachHead(org.eclipse.jgit.api.Git),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked(),org.eclipse.jgit.api.ResetCommandTest.assertSameAsHead(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.api.CheckoutCommandTest.assertHeadDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.api.ListBranchCommand.call(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.pgm.Log.addNoteMap(java.lang.String),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader(),org.eclipse.jgit.transport.TestProtocolTest.testFetch(),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.lib.RefTest.testGetRefsByPrefix(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.junit.TestRepositoryTest.reattachToMaster_Race(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.StashCreateCommand.getHead(),org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.lib.RefTest.testReadLooseRef(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.lib.RefTest.testGetShortRef(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.api.CheckoutCommand.processOptions(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit(),org.eclipse.jgit.api.RebaseCommand.getHead(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.pgm.Merge.getOldHead(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.lib.Repository.getFullBranch(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromDetachedHead(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.NameRevCommandTest.ref(),org.eclipse.jgit.lib.RefTest.testResolvedSymRef(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches(),org.eclipse.jgit.junit.TestRepositoryTest.amendHead(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.junit.TestRepositoryTest.commitToUnbornHead(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri(),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	927
4587.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.build()	null	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.iterator()	true	1922
4715.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.cleanupTemporaryFiles()	4698.json,4719.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String)	true	3176
549.json	org.eclipse.jgit.junit.http.RecordingLogger.warn(java.lang.Throwable)	noCall	noCall	true	2886
6591.json	org.eclipse.jgit.diff.DiffFormatter.writeHunkHeader(int, int, int, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
1683.json	org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	2516.json,360.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.open(java.lang.String),org.eclipse.jgit.pgm.AmazonS3Client.run()	true	3176
3092.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.next()	3063.json,3058.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
8065.json	org.eclipse.jgit.util.FS_POSIX.normalize(java.lang.String)	noCall	noCall	true	1578
8811.json	org.eclipse.jgit.lib.ConfigSnapshot.find(java.util.List<org.eclipse.jgit.lib.ConfigLine>, java.lang.String, java.lang.String, java.lang.String)	8809.json,8810.json	org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.ConfigSnapshot.get(java.lang.String, java.lang.String, java.lang.String)	true	2266
4138.json	org.eclipse.jgit.internal.storage.file.PackFile.mmap(long, int)	4281.json	org.eclipse.jgit.internal.storage.file.WindowCache.load(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
6723.json	org.eclipse.jgit.diff.DiffEntry.getDiffAttribute()	6598.json	org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	true	98
6555.json	org.eclipse.jgit.diff.DiffFormatter.getOldPrefix()	noCall	noCall	true	2319
5076.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isReuseValidatingObjects()	noCall	noCall	true	2656
1711.json	org.eclipse.jgit.transport.URIish.setHost(java.lang.String)	null,2512.json	org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getURI()	true	3176
9029.json	org.eclipse.jgit.lib.PersonIdent.getTimeZone(int)	2706.json,9035.json	org.eclipse.jgit.transport.PushCertificateIdent.getTimeZone(),org.eclipse.jgit.lib.PersonIdent.getTimeZone()	true	1088
7914.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUrl()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,7921.json	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl()	true	2355
9649.json	org.eclipse.jgit.lib.RefDatabase.exactRef(java.lang.String...)	2759.json,2762.json,null	org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_IgnoresGarbageRef()	true	1101
5464.json	org.eclipse.jgit.revwalk.AbstractRevQueue.addParents(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	3176
7933.json	org.eclipse.jgit.util.RawParseUtils.next(byte[], int, char)	7934.json,7451.json,9755.json	org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int),org.eclipse.jgit.api.RebaseCommand.parseAuthor(byte[]),org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int)	true	3176
8301.json	org.eclipse.jgit.util.GSSManagerFactory.detect()	noCall	noCall	true	1481
260.json	org.eclipse.jgit.pgm.Show.ignoreSpaceChange(boolean)	noCall	noCall	true	2154
1605.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setChunkedStreamingMode(int)	noCall	noCall	true	1572
5063.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.runWindow(org.eclipse.jgit.internal.storage.pack.DeltaWindow)	5061.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.call()	true	1880
4521.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.idOffset(int)	4520.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	true	2848
2229.json	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String)	2224.json,2221.json	org.eclipse.jgit.transport.TransportHttp.openPush(),org.eclipse.jgit.transport.TransportHttp.openFetch()	true	3070
1250.json	org.eclipse.jgit.transport.TrackingRefUpdate.toString()	noCall	noCall	true	2086
6281.json	org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(org.eclipse.jgit.gitrepo.RepoProject)	6323.json	org.eclipse.jgit.gitrepo.ManifestParser.removeOverlaps()	true	1412
5555.json	org.eclipse.jgit.revwalk.RevCommit.getFooterLines(java.lang.String)	null	org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase()	true	3176
8375.json	org.eclipse.jgit.util.FS.ExecutionResult.getRc()	null,null,null,null,null,null,null,7807.json	org.eclipse.jgit.util.RunExternalScriptTest.testStdErrExecute(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdInExecute(),org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBinExecute(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked(),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	935
7023.json	org.eclipse.jgit.api.ResetCommand.resetRevert()	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	1989
2113.json	org.eclipse.jgit.transport.RemoteRefUpdate.hasTrackingRefUpdate()	2097.json	org.eclipse.jgit.transport.PushProcess.updateTrackingRefs()	true	3176
9459.json	org.eclipse.jgit.lib.TagBuilder.getObjectId()	9468.json,null	org.eclipse.jgit.lib.TagBuilder.build(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod()	true	3176
2631.json	org.eclipse.jgit.transport.BaseReceivePack.getPushCertificate()	2625.json,2892.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	1202
6252.json	org.eclipse.jgit.revplot.PlotCommitList.closeLane(org.eclipse.jgit.revplot.PlotLane)	6249.json,6246.json	org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane),org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	2826
7773.json	org.eclipse.jgit.treewalk.filter.PathSuffixFilter.clone()	noCall	noCall	true	3176
1881.json	org.eclipse.jgit.transport.TransportGitSsh.cleanNotFound(org.eclipse.jgit.errors.NoRemoteRepositoryException, java.lang.String)	noCall	noCall	true	3176
3453.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	3452.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError)	true	284
2665.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseAnyOnce(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	2663.json	org.eclipse.jgit.transport.RefAdvertiser.advertiseHave(org.eclipse.jgit.lib.AnyObjectId)	true	3176
10350.json	org.eclipse.jgit.http.server.GitServlet.setAsIsFileService(org.eclipse.jgit.http.server.resolver.AsIsFileService)	noCall	noCall	true	3070
2256.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.openReader(java.lang.String)	2257.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getPackNames()	true	547
2537.json	org.eclipse.jgit.transport.SshSessionFactory.releaseSession(org.eclipse.jgit.transport.RemoteSession)	2285.json,8317.json	org.eclipse.jgit.transport.SshTransport.close(),org.eclipse.jgit.util.SshSupport.runSshCommand(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, int)	true	3176
8533.json	org.eclipse.jgit.util.RefList.emptyList()	null,4908.json,8022.json,8023.json,null,null,3689.json,null,null,3937.json,8016.json,3566.json	org.eclipse.jgit.util.RefList.remove(int),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(java.lang.String),org.eclipse.jgit.util.RefMap.Anonymous-67fb051e-a061-45c0-b31e-f927baf3bb0c.clear(),org.eclipse.jgit.util.RefMap.entrySet(),org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.util.RefListTest.testRemoveMakesEmpty(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRefs(java.lang.String),org.eclipse.jgit.util.RefListTest.testIterable(),org.eclipse.jgit.util.RefMapTest.setUp(),org.eclipse.jgit.internal.storage.file.RefDirectory.clearReferences(),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String)	true	3060
2701.json	org.eclipse.jgit.transport.PushCertificateIdent.getRaw()	null,null,null,2127.json	org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateIdentTest.checkNameEmail(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.PushCertificate.getPusher()	true	1088
548.json	org.eclipse.jgit.junit.http.RecordingLogger.warn(java.lang.String, java.lang.Object...)	noCall	noCall	true	2886
1004.json	org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(org.eclipse.jgit.treewalk.WorkingTreeIterator)	null,null,null,6812.json,null,7195.json,7237.json,null,null,null,7385.json,null,null	org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState)	true	2841
1028.json	org.eclipse.jgit.merge.MergeConfig.MergeConfigSectionParser.equals(java.lang.Object)	noCall	noCall	true	1577
4991.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.NotInBitmapFilter.clone()	noCall	noCall	true	947
4785.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.isEmpty()	noCall	noCall	false	1922
9021.json	org.eclipse.jgit.lib.Repository.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean)	7399.json,7427.json,7428.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.popSteps(int),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	1683
5538.json	org.eclipse.jgit.revwalk.RevCommit.carry(org.eclipse.jgit.revwalk.RevFlag)	1915.json,1904.json,1376.json,null,7260.json	org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.transport.PacketLineIn.AckNackResult),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.api.DescribeCommand.call()	true	3176
6380.json	org.eclipse.jgit.blame.Candidate.clearRegionList()	6382.json,6378.json	org.eclipse.jgit.blame.Candidate.mergeRegions(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.Candidate.blame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
6202.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapRecentCommitSpan(int)	6209.json,null	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.newPeparer(int, int, int)	true	963
1052.json	org.eclipse.jgit.nls.TranslationBundle.effectiveLocale()	null,null,null,null,null	org.eclipse.jgit.nls.TranslationBundleTest.testNonTranslatedBundle(),org.eclipse.jgit.nls.NLSTest.testNLSLocale(),org.eclipse.jgit.nls.NLSTest.testParallelThreadsWithDifferentLocales(),org.eclipse.jgit.nls.TranslationBundleTest.testGermanTranslation(),org.eclipse.jgit.nls.NLSTest.testJVMDefaultLocale()	true	3012
9398.json	org.eclipse.jgit.lib.ObjectChecker.isPositiveDigit(byte)	9388.json	org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1551
5507.json	org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	null,5561.json,1376.json,5567.json,null,5575.json,5563.json	org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie(),org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoOne(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder(),org.eclipse.jgit.revwalk.PendingGenerator.next(),org.eclipse.jgit.revwalk.MergeBaseGenerator._next()	true	3176
7134.json	org.eclipse.jgit.api.PullCommand.getRemote()	noCall	noCall	true	1576
2120.json	org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean)	2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	3176
8368.json	org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte)	8367.json	org.eclipse.jgit.util.RawSubStringPattern.match(org.eclipse.jgit.util.RawCharSequence)	true	3176
2165.json	org.eclipse.jgit.transport.PushCertificateParser.getAdvertiseNonce()	null,null,2604.json	org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	1202
4033.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	noCall	noCall	true	221
2834.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getAccepted()	2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
7298.json	org.eclipse.jgit.api.SubmoduleAddCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined()	true	2355
5318.json	org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(java.lang.String, int, boolean, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	5315.json,5318.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(java.lang.String, int, boolean, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	true	935
1830.json	org.eclipse.jgit.transport.ReceiveCommand.link(org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String)	3130.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
5561.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit)	5560.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.init(org.eclipse.jgit.revwalk.AbstractRevQueue)	true	3176
8845.json	org.eclipse.jgit.lib.ObjectLoader.getBytes(int)	null,null	org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFileFromRepo(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String)	true	3176
7851.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getCleanFilterCommand()	7821.json,7802.json,7807.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream(),org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	925
2275.json	org.eclipse.jgit.transport.TransportHttp.Service.HttpExecuteStream.read(byte[], int, int)	noCall	noCall	true	3070
8105.json	org.eclipse.jgit.util.TemporaryBuffer.last()	8096.json,8091.json,8092.json,8094.json	org.eclipse.jgit.util.TemporaryBuffer.inCoreLength(),org.eclipse.jgit.util.TemporaryBuffer.write(int),org.eclipse.jgit.util.TemporaryBuffer.write(byte[], int, int),org.eclipse.jgit.util.TemporaryBuffer.copy(java.io.InputStream)	true	3176
4792.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.isLarge()	noCall	noCall	true	2901
948.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.getTree(int)	947.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int)	true	3176
4465.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.isUnpacked(org.eclipse.jgit.lib.AnyObjectId)	4742.json,4737.json,4731.json,4467.json,4751.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.remove(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	2833
3893.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentPackList()	3891.json,3892.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentPacks(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentReftables()	true	2410
9619.json	org.eclipse.jgit.lib.AnyObjectId.toHexCharArray(char[])	9617.json,9616.json,9618.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(char[], java.lang.StringBuilder),org.eclipse.jgit.lib.AnyObjectId.copyTo(char[], java.io.Writer),org.eclipse.jgit.lib.AnyObjectId.toHexCharArray()	true	3176
7518.json	org.eclipse.jgit.api.LsRemoteCommand.setUploadPack(java.lang.String)	noCall	noCall	true	2579
3722.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.hasImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId)	3721.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId)	true	696
2015.json	org.eclipse.jgit.transport.Transport.setPushAtomic(boolean)	null,2722.json,null,null,null,null,6911.json,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled(),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()	true	920
4936.json	org.eclipse.jgit.internal.storage.reftree.Command.getRefName()	4930.json,4943.json,4954.json,4955.json,4959.json,2890.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.Command.toString(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTree.isValidRef(org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.ketch.Proposal.toString()	true	884
1790.json	org.eclipse.jgit.transport.SignedPushConfig.getCertNonceSeed()	noCall	noCall	true	1088
4204.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot)	null,3977.json,4761.json	org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	2733
6143.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeSearchingForReuse()	noCall	noCall	true	1094
9350.json	org.eclipse.jgit.lib.ObjectId.fromRaw(int[], int)	9349.json,4520.json,4513.json	org.eclipse.jgit.lib.ObjectId.fromRaw(int[]),org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectId(long)	true	3176
5934.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.needsStopWalk()	noCall	noCall	true	893
5684.json	org.eclipse.jgit.revwalk.FIFORevQueue.removeFlag(int)	null	org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.next()	true	3176
4917.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.conflictsWithBootstrap(java.lang.String)	4930.json,4906.json,4913.json,4915.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(java.lang.String, boolean)	true	880
1283.json	org.eclipse.jgit.transport.RemoteConfig.removeFetchRefSpec(org.eclipse.jgit.transport.RefSpec)	noCall	noCall	true	3176
9238.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorkers(int)	5125.json,9237.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorker()	true	2783
5667.json	org.eclipse.jgit.revwalk.RevTag.getFullMessage()	null,null,null,null,null,null,null,null,null,null,null,null,270.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_NoMessage(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_OnlyLFMessage(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage()	true	3176
9602.json	org.eclipse.jgit.lib.AnyObjectId.hashCode()	null,4471.json,null	org.eclipse.jgit.lib.ObjectIdTest.test003_equals(),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.index(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevObjectTest.testEquals()	true	3176
1510.json	org.eclipse.jgit.transport.PushConfig.PushRecurseSubmodulesMode.matchConfigValue(java.lang.String)	null,null	org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleMatch(),org.eclipse.jgit.transport.PushConfigTest.pushRecurseSubmoduleNoMatch()	true	274
6500.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.makeEdit(long, long)	null,null	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.BackwardEditPaths.meets(int, int, int, long),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.ForwardEditPaths.meets(int, int, int, long)	true	3169
2166.json	org.eclipse.jgit.transport.PushCertificateParser.sentNonce()	2165.json,2170.json	org.eclipse.jgit.transport.PushCertificateParser.getAdvertiseNonce(),org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean)	true	1095
3500.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.newPackParser(java.io.InputStream)	noCall	noCall	true	2410
3794.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.get(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	3723.json,3725.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsReader.openImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId)	true	2410
3419.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getHitCount()	null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks()	true	2410
2379.json	org.eclipse.jgit.transport.PackParser.isExpectDataAfterPackFooter()	noCall	noCall	true	2186
9941.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(long[], int)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToLong()	true	856
297.json	org.eclipse.jgit.pgm.Daemon.run()	noCall	noCall	true	3176
3551.json	org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedEvent.dispatch(org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedListener)	noCall	noCall	true	2410
8186.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[], int, int)	8188.json,8184.json,8185.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.decideMode(),org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(int),org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[])	true	2342
1176.json	org.eclipse.jgit.notes.LeafBucket.append(org.eclipse.jgit.notes.Note)	1200.json	org.eclipse.jgit.notes.FanoutBucket.append(org.eclipse.jgit.notes.Note)	true	2766
7831.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader)	null,null,7244.json,null,985.json,9570.json,null,6024.json,null,6041.json,null,6032.json,7764.json	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	2886
6705.json	org.eclipse.jgit.diff.RenameDetector.exactRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry)	6698.json	org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
5648.json	org.eclipse.jgit.revwalk.RevFlagSet.remove(java.lang.Object)	null	org.eclipse.jgit.revwalk.RevFlagSetTest.testRemove()	true	3176
1366.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	1355.json	org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
3786.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isIndexLoaded()	noCall	noCall	true	2047
6050.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser)	6049.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	2239
7440.json	org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.lib.AnyObjectId)	7131.json	org.eclipse.jgit.api.PullCommand.call()	true	2686
1379.json	org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.openIndex(org.eclipse.jgit.lib.ProgressMonitor)	1368.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
5908.json	org.eclipse.jgit.dircache.DirCache.hasUnmergedPaths()	null,7423.json,null,8988.json,null	org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.lib.Repository.getRepositoryState(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit()	true	2955
5311.json	org.eclipse.jgit.attributes.FilterCommandRegistry.unregister(java.lang.String)	null	org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean)	true	628
8121.json	org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.skip(long)	noCall	noCall	true	2844
9449.json	org.eclipse.jgit.lib.CommitBuilder.getMessage()	7040.json,null,null,2752.json,9454.json,null,null	org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents()	true	3176
7896.json	org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig()	7899.json	org.eclipse.jgit.submodule.SubmoduleWalk.lazyLoadModulesConfig()	true	2355
1139.json	org.eclipse.jgit.notes.NoteMap.getNote(org.eclipse.jgit.lib.AnyObjectId)	6830.json,6969.json,7221.json	org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.api.AddNoteCommand.call()	true	2692
382.json	org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean)	381.json	org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit)	true	2663
7808.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.handleAutoCRLF(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7807.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	925
7583.json	org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7479.json,6037.json,7244.json,7853.json,7481.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit)	true	748
9017.json	org.eclipse.jgit.lib.Repository.writeCommitMsg(java.io.File, java.lang.String)	9003.json,9015.json,9005.json	org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String),org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(java.lang.String),org.eclipse.jgit.lib.Repository.writeCommitEditMsg(java.lang.String)	true	2187
2614.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack()	2602.json	org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()	true	3176
436.json	org.eclipse.jgit.pgm.Gc.run()	noCall	noCall	true	2142
10178.json	org.eclipse.jgit.transport.OpenSshConfig.get(org.eclipse.jgit.util.FS)	10153.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int)	true	3176
9308.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult()	9336.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult(org.eclipse.jgit.transport.ReceiveCommand)	true	2210
4136.json	org.eclipse.jgit.internal.storage.file.PackFile.doClose()	4133.json,4131.json,4135.json	org.eclipse.jgit.internal.storage.file.PackFile.endWindowCache(),org.eclipse.jgit.internal.storage.file.PackFile.endCopyAsIs(),org.eclipse.jgit.internal.storage.file.PackFile.openFail(boolean)	true	3176
8816.json	org.eclipse.jgit.lib.ConfigSnapshot.compare2(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	8811.json,8817.json	org.eclipse.jgit.lib.ConfigSnapshot.find(java.util.List<org.eclipse.jgit.lib.ConfigLine>, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigSnapshot.LineComparator.compare(org.eclipse.jgit.lib.ConfigLine, org.eclipse.jgit.lib.ConfigLine)	true	2266
9334.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled(org.eclipse.jgit.transport.ReceiveCommand)	4502.json,9333.json,3260.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	319
2914.json	org.eclipse.jgit.internal.ketch.KetchLeader.snapshot()	2916.json,2910.json	org.eclipse.jgit.internal.ketch.KetchLeader.toString(),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	true	872
7732.json	org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>)	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	3176
4698.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	2692
6957.json	org.eclipse.jgit.api.Status.hasUncommittedChanges()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1650
10423.json	org.eclipse.jgit.http.server.ReceivePackServlet.Factory.destroy()	noCall	noCall	true	2627
3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	null,null,null,3068.json,null,null,3259.json,null,null,null,null,null,null,null,135.json,null,null,null,null,3386.json,null,null,null,3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>, long),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
2359.json	org.eclipse.jgit.transport.RefSpec.expandFromDestination(java.lang.String)	null,null,null,null,null,null,null,2361.json,null,null	org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard(),org.eclipse.jgit.transport.RefSpec.expandFromDestination(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate)	true	3176
7314.json	org.eclipse.jgit.api.TagCommand.setAnnotated(boolean)	null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.DescribeCommandTest.tag(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag()	true	1864
10030.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeHeaderString(java.util.Map<java.lang.String, java.lang.String>)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
6965.json	org.eclipse.jgit.api.Status.getConflicting()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile()	true	2582
5121.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsNeedingDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	5120.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2893
6903.json	org.eclipse.jgit.api.CloneCommand.setBranchesToClone(java.util.Collection<java.lang.String>)	null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch()	true	2622
2156.json	org.eclipse.jgit.transport.PostReceiveHookChain.onPostReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	noCall	noCall	true	2374
2756.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.startLeader(java.lang.String, org.eclipse.jgit.lib.Repository)	2755.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.get(org.eclipse.jgit.lib.Repository)	true	872
4244.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeChecksumFooter()	4390.json,4330.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl()	true	3176
9549.json	org.eclipse.jgit.lib.RefUpdate.delete(org.eclipse.jgit.revwalk.RevWalk)	2122.json,4565.json,1853.json,9547.json,215.json,9326.json	org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.lib.RefUpdate.delete(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs(),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	3176
1751.json	org.eclipse.jgit.transport.TransferConfig.FsckKeyNameHolder.parse(java.lang.String)	noCall	noCall	true	892
7295.json	org.eclipse.jgit.api.SubmoduleAddCommand.setURI(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined()	true	2355
501.json	org.eclipse.jgit.junit.http.AppServer.TestMappedLoginService.doStart()	noCall	noCall	true	395
3886.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newInserter()	noCall	noCall	true	2410
5924.json	org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	5906.json,5924.json	org.eclipse.jgit.dircache.DirCache.getCacheTree(boolean),org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
5005.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.remaining()	5064.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.remaining()	true	1887
3667.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	2410
3309.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.encodeHeader(byte[])	3310.json,3308.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileHeader()	true	297
2143.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-58ddc748-8ad6-4ebb-8e26-1725a1187806.getRequiredFields()	noCall	noCall	true	2645
8985.json	org.eclipse.jgit.lib.Repository.parseCommit(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	417
7441.json	org.eclipse.jgit.api.RebaseCommand.setUpstream(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange()	true	2756
7060.json	org.eclipse.jgit.api.Git.branchDelete()	null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.api.BranchCommandTest.testDelete(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch()	true	2800
2257.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getPackNames()	noCall	noCall	true	3176
9362.json	org.eclipse.jgit.lib.ObjectChecker.setAllowInvalidPersonIdent(boolean)	null,null,null,1739.json	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptCommitter(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptAuthor(),org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)	true	1137
2272.json	org.eclipse.jgit.transport.TransportHttp.Service.getInputStream()	2265.json,2267.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	2186
2852.json	org.eclipse.jgit.internal.ketch.ProposalRound.message(org.eclipse.jgit.internal.ketch.Proposal)	2851.json,2850.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
1264.json	org.eclipse.jgit.transport.RemoteConfig.getAllRemoteConfigs(org.eclipse.jgit.lib.Config)	null,7208.json,null,null	org.eclipse.jgit.pgm.RemoteTest.testAdd(),org.eclipse.jgit.api.RemoteListCommand.call(),org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.pgm.RemoteTest.testRemove()	true	3176
1434.json	org.eclipse.jgit.transport.UploadPack.service()	1426.json	org.eclipse.jgit.transport.UploadPack.upload(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	true	3176
8270.json	org.eclipse.jgit.util.RawCharUtil.trimTrailingWhitespace(byte[], int, int)	null,6607.json,null,null,null,6608.json	org.eclipse.jgit.util.RawCharUtilTest.testTrimTrailingWhitespace(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-837c468d-c71c-4269-bf45-53142f360ba5.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-497c94c9-3c5a-4578-a72c-a78d99537be0.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-f8c3e213-dac1-4dde-97c8-54719e7e0776.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-589ca895-7981-4248-9c1d-e9de3b40dcd7.hashRegion(byte[], int, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-94cf0709-aacd-414d-8c95-5eb192abead5.hashRegion(byte[], int, int)	true	2904
8747.json	org.eclipse.jgit.lib.RepositoryCacheConfig.setCleanupDelay(long)	null,8748.json,null,null,null	org.eclipse.jgit.lib.RepositoryCacheConfigTest.testCleanupDelay(),org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testDisabledCleanupDelay(),org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testAutoCleanupDelay()	true	698
2708.json	org.eclipse.jgit.transport.PushCertificateIdent.equals(java.lang.Object)	2138.json	org.eclipse.jgit.transport.PushCertificate.equals(java.lang.Object)	true	1088
2880.json	org.eclipse.jgit.internal.ketch.Proposal.addProposedTimestamp(org.eclipse.jgit.util.time.ProposedTimestamp)	noCall	noCall	true	565
4866.json	org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.getInfoAttributesNode()	noCall	noCall	true	935
4099.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.create()	3935.json	org.eclipse.jgit.internal.storage.file.RefDirectory.create()	true	2272
9035.json	org.eclipse.jgit.lib.PersonIdent.getTimeZone()	null,null,272.json,9040.json,119.json,8318.json,270.json	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.iso(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.PersonIdent.toString(),org.eclipse.jgit.pgm.Blame.date(int),org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag)	true	3176
5235.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearExtendedFlag(int)	noCall	noCall	true	2851
9234.json	org.eclipse.jgit.lib.FileMode.getBits()	null,null,7831.json,null,null,7829.json,null,null,6704.json,990.json,7833.json,6662.json,null,1150.json,null,7796.json,6062.json,null,null,null,null,null,7816.json,5977.json,null,null,null,null,null,null,null,null,null,null,null,null,9574.json	org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryFileMode(),org.eclipse.jgit.diff.RenameDetector.sameType(org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int, int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime(),org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte[], int, int, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer(),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.treewalk.WorkingTreeIterator.Anonymous-2476c284-27d7-4fec-b2c3-ee5a66700ea4.compare(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.WorkingTreeIterator.parseEntry(),org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName(),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.util.PathsTest.testPathCompare(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo(),org.eclipse.jgit.lib.IndexDiff.isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator)	false	3176
5607.json	org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.getDepth()	noCall	noCall	true	2485
5443.json	org.eclipse.jgit.revwalk.LIFORevQueue.clear()	noCall	noCall	true	3176
7038.json	org.eclipse.jgit.api.StashCreateCommand.getHead()	7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	true	2293
6787.json	org.eclipse.jgit.events.ListenerHandle.toString()	noCall	noCall	true	3176
1684.json	org.eclipse.jgit.transport.AmazonS3.decrypt(java.net.URLConnection)	2516.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.open(java.lang.String)	true	3176
1788.json	org.eclipse.jgit.transport.SideBandInputStream.readString(int)	1783.json	org.eclipse.jgit.transport.SideBandInputStream.needDataPacket()	true	3176
4791.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getSize()	noCall	noCall	true	2901
7770.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.getIgnoredPaths()	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	2440
4070.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.isLarge()	noCall	noCall	true	2902
7618.json	org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String)	7479.json,6037.json,7851.json,7481.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.treewalk.WorkingTreeIterator.getCleanFilterCommand(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit)	true	925
8658.json	org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int)	null,null,8678.json,null,null,null,null,null,null,null,null,null,null,null,null,null,8679.json	org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo(),org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar(),org.eclipse.jgit.patch.FileHeaderTest.assertParse(org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_EmptyHeader(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_NoLF(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_NoSecondLine(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Empty(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FailFooBar(),org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int)	true	3176
3793.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.hasObject(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.AnyObjectId)	null,null,null,3722.json,3721.json	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isObjectInPack(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsReader.hasImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId)	true	2410
4959.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command)	4954.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	884
5714.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAny(org.eclipse.jgit.revwalk.RevFlagSet)	noCall	noCall	true	3176
8508.json	org.eclipse.jgit.util.FileUtils.normalize(java.io.File)	8064.json	org.eclipse.jgit.util.FS_POSIX.normalize(java.io.File)	true	988
85.json	org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>)	83.json	org.eclipse.jgit.pgm.Remote.run()	true	911
1807.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
2778.json	org.eclipse.jgit.internal.ketch.KetchReplica.describeForLog()	2799.json,2744.json,2910.json,2869.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String)	true	872
1064.json	org.eclipse.jgit.errors.CheckoutConflictException.buildList(java.lang.String[])	noCall	noCall	true	3176
1687.json	org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[])	null,null,2519.json	org.eclipse.jgit.transport.WalkEncryptionTest.Base.remoteCreate(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.remoteVerify(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, byte[])	true	3176
1498.json	org.eclipse.jgit.transport.HttpConfig.segmentCompare(java.lang.String, java.lang.String)	null,1495.json,null	org.eclipse.jgit.transport.HttpConfigUriPathTest.testSegmentCompareFailing(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.HttpConfigUriPathTest.assertSuccess(java.lang.String, java.lang.String)	true	273
5746.json	org.eclipse.jgit.revwalk.filter.SubStringRevFilter.safe(java.lang.String)	5694.json,5752.json,5721.json	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.create(java.lang.String),org.eclipse.jgit.revwalk.filter.MessageRevFilter.create(java.lang.String),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.create(java.lang.String)	true	3176
2364.json	org.eclipse.jgit.transport.RefSpec.checkValid(java.lang.String)	2348.json,2350.json	org.eclipse.jgit.transport.RefSpec.setSource(java.lang.String),org.eclipse.jgit.transport.RefSpec.setDestination(java.lang.String)	true	1839
2444.json	org.eclipse.jgit.transport.PackParser.inflate(org.eclipse.jgit.transport.PackParser.Source, long)	2442.json,2410.json,2413.json,2443.json	org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source, long),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.transport.PackParser.inflateAndReturn(org.eclipse.jgit.transport.PackParser.Source, long)	true	3176
9920.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.mask(int, long, long)	9965.json,9928.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.abbreviate(int),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.mask(long, long)	true	856
3331.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.objIdLength()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
2118.json	org.eclipse.jgit.transport.RemoteRefUpdate.setExpectedOldObjectId(org.eclipse.jgit.lib.ObjectId)	2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	908
6120.json	org.eclipse.jgit.storage.pack.PackStatistics.ObjectType.getDeltaBytes()	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics()	true	1094
5064.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.remaining()	5054.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask)	true	1887
5212.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearDeltaBase()	5148.json,5130.json,5122.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.reselectNonDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
9918.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromHexString(byte[], int, int)	9917.json,9915.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(java.lang.String),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(byte[], int, int)	true	856
3328.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.refIndexLevels()	null,null,null,135.json,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexSeek(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexScan(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexScan()	true	297
2161.json	org.eclipse.jgit.transport.PushCertificateParser.fromString(java.lang.String)	null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseString()	true	1061
3459.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.getObjectDatabase()	null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.setUp(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.weirdBlockSize(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.setUp(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible()	true	2410
4724.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.create()	4849.json	org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean)	true	3176
5426.json	org.eclipse.jgit.revwalk.RevCommitList.enter(int, E)	5424.json,5425.json	org.eclipse.jgit.revwalk.RevCommitList.fillTo(int),org.eclipse.jgit.revwalk.RevCommitList.fillTo(org.eclipse.jgit.revwalk.RevCommit, int)	true	3176
9846.json	org.eclipse.jgit.lfs.LfsBlobLoader.openStream()	noCall	noCall	true	98
1674.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.addOffsetDelta()	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	629
1967.json	org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.ObjectId)	1961.json	org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>)	true	371
3969.json	org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, int, java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	3942.json,null,3955.json,3969.json,3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.getRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, int, java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3059
6888.json	org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository)	6888.json,6887.json	org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	true	2350
7489.json	org.eclipse.jgit.api.CheckoutCommand.setOrphan(boolean)	388.json,null,null,null	org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.CheckoutCommandTest.newOrphanBranchCommand(),org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName(),org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName()	true	1605
2812.json	org.eclipse.jgit.internal.ketch.Round.runAsync(org.eclipse.jgit.lib.AnyObjectId)	2749.json,2848.json	org.eclipse.jgit.internal.ketch.ElectionRound.start(),org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	872
928.json	org.eclipse.jgit.merge.ThreeWayMerger.mergeBase()	945.json,974.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.merge.ResolveMerger.mergeImpl()	true	3176
7595.json	org.eclipse.jgit.treewalk.TreeWalk.getFileMode()	5315.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes()	true	849
3769.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(org.eclipse.jgit.lib.ObjectIdSet)	3770.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.exclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	true	1881
6737.json	org.eclipse.jgit.diff.PatchIdDiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry)	noCall	noCall	true	2574
5958.json	org.eclipse.jgit.dircache.DirCacheEditor.DeleteTree.appendSlash(byte[])	noCall	noCall	true	893
6105.json	org.eclipse.jgit.storage.file.WindowCacheConfig.getDeltaBaseCacheLimit()	4084.json,6111.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
5834.json	org.eclipse.jgit.ignore.internal.Strings.setNext(char[], char)	null	org.eclipse.jgit.ignore.internal.Strings.convertGlob(java.lang.String)	true	1322
8721.json	org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine(int, int)	8717.json	org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
2788.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round)	2909.json	org.eclipse.jgit.internal.ketch.KetchLeader.runAsync(org.eclipse.jgit.internal.ketch.Round)	true	872
5280.json	org.eclipse.jgit.attributes.AttributesRule.getPattern()	null	org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()	true	1249
3745.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSizeImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId)	3744.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	true	696
9838.json	org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode)	9836.json,9835.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, byte[], int),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean)	true	2775
6875.json	org.eclipse.jgit.api.RemoteSetUrlCommand.call()	null,null,83.json	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.pgm.Remote.run()	true	911
5554.json	org.eclipse.jgit.revwalk.RevCommit.getFooterLines()	null,null,null,null,null,null,null,null,null,null,null,null,5556.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_OneLineBodyWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_EmptyBody(),org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_ShortBodyNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_ShortBodyWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testShortKey(),org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF(),org.eclipse.jgit.revwalk.RevCommit.getFooterLines(org.eclipse.jgit.revwalk.FooterKey),org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_NewlineOnlyBody5(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_OneLineBodyNoLF(),org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace(),org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter(),org.eclipse.jgit.revwalk.FooterLineTest.testNoFooters_NewlineOnlyBody1()	true	3176
1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	1210.json,1214.json	org.eclipse.jgit.notes.NoteMapMerger.merge(org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
1990.json	org.eclipse.jgit.transport.Transport.getURIs(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	1987.json,1989.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	true	3176
408.json	org.eclipse.jgit.pgm.TextBuiltin.parseArguments(java.lang.String[])	407.json	org.eclipse.jgit.pgm.TextBuiltin.execute(java.lang.String[])	true	3176
1724.json	org.eclipse.jgit.transport.URIish.hashCode()	null	org.eclipse.jgit.transport.URIishTest.testEqualsHashcode()	true	3176
6255.json	org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane(java.util.BitSet)	6254.json,6249.json	org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane(),org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	3176
5440.json	org.eclipse.jgit.revwalk.RevObject.appendCoreFlags(java.lang.StringBuilder)	5559.json,5439.json	org.eclipse.jgit.revwalk.RevCommit.toString(),org.eclipse.jgit.revwalk.RevObject.toString()	true	3176
7585.json	org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId)	null,1362.json,null,null,null,1377.json,178.json,null,null,null,7370.json,6470.json	org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	true	3176
7200.json	org.eclipse.jgit.api.CherryPickCommand.setOurCommitName(java.lang.String)	7405.json,7404.json,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName()	true	2123
381.json	org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit)	380.json	org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit)	true	2663
1053.json	org.eclipse.jgit.nls.TranslationBundle.resourceBundle()	164.json,414.json,393.json,295.json	org.eclipse.jgit.pgm.debug.ShowCommands.Format.print(org.eclipse.jgit.util.io.ThrowingPrintWriter, org.eclipse.jgit.pgm.CommandRef),org.eclipse.jgit.pgm.TextBuiltin.getResourceBundle(),org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.CommandRef.toString()	true	2944
1584.json	org.eclipse.jgit.transport.http.JDKHttpConnectionFactory.create(java.net.URL)	noCall	noCall	true	1572
2930.json	org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	319
1885.json	org.eclipse.jgit.transport.TransportGitSsh.ExtSession.disconnect()	noCall	noCall	true	2636
2924.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onEndDelta()	noCall	noCall	true	319
2543.json	org.eclipse.jgit.transport.BaseReceivePack.MessageOutputWrapper.flush()	noCall	noCall	true	2292
4619.json	org.eclipse.jgit.internal.storage.file.LockFile.Anonymous-617a3c37-93b2-429f-b6d7-34719bd43229.write(int)	noCall	noCall	true	3176
2186.json	org.eclipse.jgit.transport.HttpAuthMethod.authorize(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider)	2229.json,2269.json	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	2813
443.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.supports(org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	2768
2405.json	org.eclipse.jgit.transport.PackParser.growEntries(int)	2404.json	org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
234.json	org.eclipse.jgit.pgm.Diff.noRenames(boolean)	noCall	noCall	true	2838
3003.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.setValue(java.lang.String, java.lang.String)	2991.json	org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream)	true	289
1249.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.decode(org.eclipse.jgit.transport.ReceiveCommand.Result)	1247.json,1248.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String)	true	2210
4861.json	org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges()	noCall	noCall	true	3176
2863.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.getCommands()	2799.json,2722.json,2796.json,2762.json,2797.json,2803.json,2795.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.pushAsync(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.KetchReplica.defer(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
7746.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(org.eclipse.jgit.treewalk.filter.PathFilter[])	7745.json,7743.json,7744.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.PathFilter>),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.lang.String...)	true	3176
1168.json	org.eclipse.jgit.notes.LeafBucket.iterator(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	noCall	noCall	true	2766
6836.json	org.eclipse.jgit.api.FetchCommand.call()	null,null,null,286.json,null,null,null,null,null,null,6835.json,null,7265.json,null,null,null,null,null,null,6885.json,7131.json	org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.transport.TestProtocolTest.testFetch(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.PullCommand.call()	true	2823
3278.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt24(int)	3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
8236.json	org.eclipse.jgit.util.io.IsolatedOutputStream.dirtyClose()	8233.json	org.eclipse.jgit.util.io.IsolatedOutputStream.close()	true	573
7405.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit)	7403.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommit(org.eclipse.jgit.revwalk.RevCommit)	true	1426
8431.json	org.eclipse.jgit.util.FS.readSymLink(java.io.File)	null,null,null,7671.json,null,7676.json	org.eclipse.jgit.util.FileUtilsTest.testCreateSymlink(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.util.FileUtilsTest.testCreateSymlinkOverrideExisting(),org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.openInputStream(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.treewalk.FileTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	1864
8064.json	org.eclipse.jgit.util.FS_POSIX.normalize(java.io.File)	noCall	noCall	true	1578
6373.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.getAuthor()	noCall	noCall	true	2567
7427.json	org.eclipse.jgit.api.RebaseCommand.popSteps(int)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	2756
6938.json	org.eclipse.jgit.api.PushCommand.getPushOptions()	noCall	noCall	true	688
10093.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.toHexCharArray(int)	10089.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	856
422.json	org.eclipse.jgit.pgm.TextBuiltin.abbreviateRef(java.lang.String, boolean)	302.json,126.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Push.printUpdateLine(char, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	3176
6557.json	org.eclipse.jgit.diff.DiffFormatter.getNewPrefix()	noCall	noCall	true	2319
7487.json	org.eclipse.jgit.api.CheckoutCommand.setName(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,909.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,388.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7434.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.api.CheckoutCommandTest.newOrphanBranchCommand(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.StatusTest.checkoutTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.pgm.StatusTest.detachHead(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckout(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.checkoutMasterBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContentRequired(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag()	true	2756
9284.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.update(org.eclipse.jgit.lib.BatchingProgressMonitor, int)	9275.json	org.eclipse.jgit.lib.BatchingProgressMonitor.update(int)	true	3176
2646.json	org.eclipse.jgit.transport.BaseReceivePack.parseCommand(java.lang.String)	null,null,null,2606.json,2174.json	org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.transport.BaseReceivePackTest.assertParseCommandFails(java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands(),org.eclipse.jgit.transport.PushCertificateParser.addCommand(java.lang.String)	true	1096
7614.json	org.eclipse.jgit.treewalk.TreeWalk.parserFor(org.eclipse.jgit.lib.AnyObjectId)	7587.json,7585.json,7586.json	org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId...)	true	3176
8749.json	org.eclipse.jgit.lib.RepositoryCacheConfig.install()	null	org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure()	true	698
6061.json	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry()	6056.json,6059.json	org.eclipse.jgit.dircache.DirCacheIterator.reset(),org.eclipse.jgit.dircache.DirCacheIterator.next(int)	true	3176
10177.json	org.eclipse.jgit.transport.JschConfigSessionFactory.setConfig(org.eclipse.jgit.transport.OpenSshConfig)	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testConnectTimout(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasIdenticalWithPort(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testNoConfigEntry(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAlias(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasCaseDifferenceLowcaseInverted(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasWithPort(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasCaseDifferenceUpcase(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasCaseDifferenceLowcase(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasIdentical(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasWithUser(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasCaseDifferenceUpcaseInverted(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.testAliasIdenticalWithUser()	true	115
3977.json	org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	null,3976.json,3950.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanOne(java.lang.String)	true	3059
8849.json	org.eclipse.jgit.lib.ObjectLoader.copyTo(java.io.OutputStream)	6048.json,5132.json,null,6045.json,null,269.json,null	org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.lib.ObjectLoaderTest.testLargeObjectLoader(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyWorktree(org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState, java.lang.String, java.lang.String)	true	2902
8013.json	org.eclipse.jgit.util.LongList.toString()	noCall	noCall	true	3167
1592.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setUseCaches(boolean)	noCall	noCall	true	1572
1380.json	org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.downloadPack(org.eclipse.jgit.lib.ProgressMonitor)	1368.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
9357.json	org.eclipse.jgit.lib.ObjectChecker.ErrorType.getMessageId()	noCall	noCall	true	892
1384.json	org.eclipse.jgit.transport.OperationResult.getTrackingRefUpdates()	302.json,286.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.transport.PushProcessTest.testPushResult(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled()	true	3176
5366.json	org.eclipse.jgit.revwalk.RevWalk.lookupTree(org.eclipse.jgit.lib.AnyObjectId)	null,5530.json,null,5504.json,null,null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields()	true	3176
1367.json	org.eclipse.jgit.transport.WalkFetchConnection.alreadyHave(org.eclipse.jgit.lib.AnyObjectId)	1368.json,1366.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	2904
5808.json	org.eclipse.jgit.revwalk.TopoSortGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	noCall	noCall	true	3176
6605.json	org.eclipse.jgit.diff.DiffFormatter.combineB(java.util.List<org.eclipse.jgit.diff.Edit>, int)	6603.json	org.eclipse.jgit.diff.DiffFormatter.findCombinedEnd(java.util.List<org.eclipse.jgit.diff.Edit>, int)	true	3176
3711.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getInflatedBytes()	noCall	noCall	true	387
3359.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getGarbageTtlMillis()	noCall	noCall	true	713
9866.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String)	9882.json,9895.json	org.eclipse.jgit.lfs.LfsPrePushHook.call(),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	102
6885.json	org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish)	6880.json	org.eclipse.jgit.api.CloneCommand.call()	true	2686
1023.json	org.eclipse.jgit.merge.MergeConfig.isCommit()	7387.json,null	org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration(),org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions()	true	1577
3748.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean)	3747.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	108
7388.json	org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)	7385.json	org.eclipse.jgit.api.MergeCommand.call()	true	2939
5884.json	org.eclipse.jgit.dircache.DirCache.isOutdated()	noCall	noCall	true	2677
8300.json	org.eclipse.jgit.util.GitDateParser.parse_relative(java.lang.String, java.util.Calendar)	8298.json	org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar, java.util.Locale)	true	2112
4856.json	org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String)	noCall	noCall	true	572
1058.json	org.eclipse.jgit.nls.NLS.getBundleFor(java.lang.Class<T>)	9873.json,null,10108.json,null,null,5267.json,null,10071.json,10363.json,null,null,6286.json,3413.json,null,2838.json,null,254.json,34.json,4.json	org.eclipse.jgit.lfs.internal.LfsText.get(),org.eclipse.jgit.nls.RootLocaleTest.testUIText(),org.eclipse.jgit.archive.internal.ArchiveText.get(),org.eclipse.jgit.nls.RootLocaleTest.testCLIText(),org.eclipse.jgit.http.server.RootLocaleTest.testHttpServerText(),org.eclipse.jgit.internal.JGitText.get(),org.eclipse.jgit.nls.NoPropertiesBundle.get(),org.eclipse.jgit.lfs.server.internal.LfsServerText.get(),org.eclipse.jgit.http.server.HttpServerText.get(),org.eclipse.jgit.nls.MissingPropertyBundle.get(),org.eclipse.jgit.nls.NonTranslatedBundle.get(),org.eclipse.jgit.gitrepo.internal.RepoText.get(),org.eclipse.jgit.internal.storage.dfs.DfsText.get(),org.eclipse.jgit.nls.RootLocaleTest.testJGitText(),org.eclipse.jgit.internal.ketch.KetchText.get(),org.eclipse.jgit.nls.GermanTranslatedBundle.get(),org.eclipse.jgit.pgm.internal.CLIText.get(),org.eclipse.jgit.transport.http.apache.internal.HttpApacheText.get(),org.eclipse.jgit.awtui.UIText.get()	true	3012
1686.json	org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String)	null,2517.json,null,360.json	org.eclipse.jgit.transport.WalkEncryptionTest.Base.remoteDelete(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.deleteFile(java.lang.String),org.eclipse.jgit.transport.WalkEncryptionTest.Base.remoteVerify(),org.eclipse.jgit.pgm.AmazonS3Client.run()	true	3176
6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	7282.json,247.json,6568.json,6579.json	org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2899
332.json	org.eclipse.jgit.pgm.opt.RevCommitHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
2269.json	org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	null,null	org.eclipse.jgit.transport.TransportHttp.LongPollService.execute(),org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute()	true	2186
3761.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long)	3758.json,3799.json,3757.json,3756.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.quickCopy(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReader.inflate(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, byte[], boolean),org.eclipse.jgit.internal.storage.dfs.DfsReader.copy(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, byte[], int, int)	true	2410
8304.json	org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.init()	noCall	noCall	true	1481
6861.json	org.eclipse.jgit.api.SubmoduleStatusCommand.call()	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule()	true	2355
4731.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId)	null,null,4751.json	org.eclipse.jgit.internal.storage.file.AlternatesTest.assertCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertAlternateObjects(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	3176
7338.json	org.eclipse.jgit.api.CreateBranchCommand.setStartPoint(java.lang.String)	null,null,7471.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit()	true	2800
4864.json	org.eclipse.jgit.internal.storage.file.FileRepository.getReflogReader(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4827.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.api.ResetCommandTest.assertReflogDisabled(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.internal.storage.file.GC.listRefLogObjects(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead(),org.eclipse.jgit.api.ResetCommandTest.assertReflog(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	3176
2525.json	org.eclipse.jgit.transport.PackedObjectInfo.getOffset()	5245.json,3748.json,2397.json,2403.json,null,5130.json,2938.json,4711.json,4666.json,4035.json,3661.json,3533.json,4329.json,5221.json,4034.json,5045.json,2930.json,null,3532.json,4393.json,4394.json,4330.json,5214.json,5133.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.firstChildOf(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-bb9a5606-3265-4178-9436-e33528588558.compare(org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.canStore(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.pack.ObjectToPack.wantWrite(),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.fsck.FsckPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7412c17d-d983-459e-a3b4-e70566b1042f.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset32(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset64(),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl(),org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten(),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
3480.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.isOpen()	noCall	noCall	true	2410
3568.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	2410
6191.json	org.eclipse.jgit.storage.pack.PackConfig.getExecutor()	5125.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	2874
9976.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(byte[], int)	null	org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromStringByte()	true	856
47.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setUseCaches(boolean)	noCall	noCall	true	1572
7431.json	org.eclipse.jgit.api.RebaseCommand.getHead()	7405.json,7433.json,7400.json,7428.json,7409.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.tryFastForward(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes()	true	1648
6906.json	org.eclipse.jgit.api.CloneCommand.setNoCheckout(boolean)	230.json,null	org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch()	true	2567
2501.json	org.eclipse.jgit.transport.TransportAmazonS3.Anonymous-3c68eaef-6e2f-4c5c-9b9a-ddee99868c4b.getName()	noCall	noCall	true	2645
2341.json	org.eclipse.jgit.transport.BasePackConnection.close()	1901.json,2281.json,2332.json,1817.json,null,2153.json,1514.json	org.eclipse.jgit.transport.BasePackFetchConnection.close(),org.eclipse.jgit.transport.InternalPushConnection.close(),org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefs(),org.eclipse.jgit.transport.TransportLocal.ForkLocalPushConnection.close(),org.eclipse.jgit.transport.TransportGitSsh.SshPushConnection.close(),org.eclipse.jgit.transport.TransportGitAnon.TcpPushConnection.close(),org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
9337.json	org.eclipse.jgit.lib.BatchRefUpdate.isForceRefLog(org.eclipse.jgit.transport.ReceiveCommand)	4502.json,9333.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand)	true	253
1622.json	org.eclipse.jgit.transport.resolver.FileResolver.isExportOk(C, java.lang.String, org.eclipse.jgit.lib.Repository)	1617.json	org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String)	true	3070
3255.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
6628.json	org.eclipse.jgit.diff.SimilarityIndex.score(org.eclipse.jgit.diff.SimilarityIndex, int)	null,null,null,6652.json,null,null	org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles_CR_canonicalization(),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScoreLargeObject_SameFiles_CR_canonicalization(),org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SimiliarBy75(),org.eclipse.jgit.diff.RenameDetector.calculateModifyScore(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.diff.DiffEntry)	true	2899
3007.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.isListKey(java.lang.String)	2991.json	org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.InputStream)	true	289
1835.json	org.eclipse.jgit.transport.ReceiveCommand.getNewId()	4504.json,3262.json,4502.json,null,2805.json,4498.json,2869.json,9326.json,null,2621.json,1859.json,2762.json,null,1853.json,null,2803.json,3260.json,null,2794.json,3254.json,9333.json,2136.json,2789.json,2619.json,2139.json,2743.json,2795.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.PushCertificateStore.commandsEqual(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.transport.ReceiveCommand.toString(),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.internal.ketch.KetchReplica.delete(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificate.toStringBuilder(),org.eclipse.jgit.internal.ketch.KetchReplica.copy(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.PushCertificate.commandsEqual(org.eclipse.jgit.transport.PushCertificate, org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	3176
5986.json	org.eclipse.jgit.dircache.DirCacheEntry.setLength(int)	7019.json,null,null,null,7530.json,null,null,null,null,6045.json,978.json,7833.json,5987.json,null,null,null,null,null,null,7243.json,null,null,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-a06be1ec-290a-4622-a628-9c3118079d72.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-71bc2fad-08d5-4423-9bbc-74b13130c42f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-f3734649-e37e-4aba-8ea2-e1beea84884f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheEntry.setLength(long),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.dircache.DirCachePathEditTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(java.lang.String, java.io.File, org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCacheBuilder, int)	true	3176
6986.json	org.eclipse.jgit.api.CommitCommand.setAllowEmpty(boolean)	null	org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits()	true	871
1905.json	org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(org.eclipse.jgit.lib.ObjectId)	1904.json	org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int)	true	2642
7101.json	org.eclipse.jgit.api.Git.remoteAdd()	null,83.json,null	org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()	true	911
470.json	org.eclipse.jgit.junit.MockSystemReader.getClock()	noCall	noCall	true	565
1855.json	org.eclipse.jgit.transport.ReceiveCommand.setType(org.eclipse.jgit.transport.ReceiveCommand.Type)	1852.json,2621.json	org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	3176
5855.json	org.eclipse.jgit.ignore.internal.NameMatcher.matches(java.lang.String, int, int)	5854.json	org.eclipse.jgit.ignore.internal.NameMatcher.matches(java.lang.String, boolean, boolean)	true	1322
4476.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long)	noCall	noCall	true	3176
9793.json	org.eclipse.jgit.lib.ObjectReader.Anonymous-7bacc785-3cd4-4890-bdbf-34f8c955d1c7.open()	noCall	noCall	true	2851
1127.json	org.eclipse.jgit.hooks.CommitMsgHook.getParameters()	noCall	noCall	true	1195
4174.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Anonymous-5b730c7b-1d55-4270-93c3-b09a40794b13.hasNext()	noCall	noCall	true	1922
8213.json	org.eclipse.jgit.util.io.MessageWriter.getRawStream()	8317.json	org.eclipse.jgit.util.SshSupport.runSshCommand(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, int)	true	3011
8833.json	org.eclipse.jgit.lib.BranchConfig.getRebaseMode()	8832.json	org.eclipse.jgit.lib.BranchConfig.isRebase()	true	634
9533.json	org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(java.lang.String, boolean)	null,7438.json,null,null,null,7421.json,6953.json,1853.json,9147.json,430.json,null,null,7434.json,null,6979.json,7385.json,null,4565.json,null,9146.json,7388.json,9333.json,7008.json,null,7471.json,7300.json,7331.json,7436.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.lib.RefRename.disableRefLog(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.RefRename.setRefLogMessage(java.lang.String),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	3176
3069.json	org.eclipse.jgit.internal.storage.reftable.Reftable.setIncludeDeletes(boolean)	null,null,3242.json,null,null	org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.scanIncludeDeletes(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneDeletedRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
10140.json	org.eclipse.jgit.archive.TxzFormat.equals(java.lang.Object)	noCall	noCall	true	1521
251.json	org.eclipse.jgit.pgm.internal.CLIText.Format.formatWithLocale(java.util.Locale, java.lang.Object...)	noCall	noCall	true	278
6770.json	org.eclipse.jgit.diff.Edit.shift(int)	6518.json	org.eclipse.jgit.diff.DiffAlgorithm.normalize(org.eclipse.jgit.diff.SequenceComparator<? super S>, org.eclipse.jgit.diff.EditList, S, S)	true	433
6894.json	org.eclipse.jgit.api.CloneCommand.setGitDir(java.io.File)	null,null,7298.json,7265.json,null,230.json	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.Clone.run()	true	1273
225.json	org.eclipse.jgit.pgm.Version.getImplementationVersion()	223.json	org.eclipse.jgit.pgm.Version.run()	true	1702
7797.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isWorkTree()	noCall	noCall	true	796
6113.json	org.eclipse.jgit.storage.file.FileRepositoryBuilder.build()	null,null,null,909.json,null,null,null,null,null,null,null,null,null,null,null,null,null,6114.json,900.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testIsBare_CreateRepositoryFromArbitraryGitDir(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParentDir_CreateRepositoryFromDotGitGitDir(),org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.createNestedRepo(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openRepoBadArgs(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(java.io.File),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsDotGit_CreateRepositoryFromWorkDirOnly(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromWorkDirOnly(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromDotGitGitDir()	true	2907
8510.json	org.eclipse.jgit.util.FileUtils.canonicalize(java.io.File)	noCall	noCall	true	962
61.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.usingProxy()	noCall	noCall	true	1572
5761.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.before(long)	5760.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.before(java.util.Date)	true	3176
3391.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.hash(long)	3395.json,3393.json,3392.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.removeFromTable(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, byte[]),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
10108.json	org.eclipse.jgit.archive.internal.ArchiveText.get()	noCall	noCall	false	1625
2513.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getAlternates()	noCall	noCall	true	3176
7603.json	org.eclipse.jgit.treewalk.TreeWalk.isPathMatch(byte[], int)	7694.json	org.eclipse.jgit.treewalk.filter.PathFilter.matchFilter(org.eclipse.jgit.treewalk.TreeWalk)	true	466
8359.json	org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int, int)	4642.json,2086.json,null,null,4007.json,2252.json,2080.json,4375.json,null,null,null,null,5886.json,null,null,2078.json,null,null,null,1557.json,null,3503.json,1788.json,2413.json,2443.json,null,null,6543.json,8847.json,4059.json,4072.json,4058.json,null,8940.json	org.eclipse.jgit.internal.storage.file.PackIndex.read(java.io.InputStream),org.eclipse.jgit.transport.PacketLineIn.readLength(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String),org.eclipse.jgit.transport.PacketLineIn.readStringRaw(),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFully(byte[], int, int),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Success2(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Success1(),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.util.TemporaryBuffer.LocalFile.toByteArray(),org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject(),org.eclipse.jgit.transport.PacketLineIn.readString(),org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject(),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreInputStream(),org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Timeout(),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.FileStream.toArray(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.SideBandInputStream.readString(int),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.transport.PackParser.inflateAndReturn(org.eclipse.jgit.transport.PackParser.Source, long),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage(),org.eclipse.jgit.diff.RawText.load(org.eclipse.jgit.lib.ObjectLoader, int),org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(int),org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream(),org.eclipse.jgit.lib.ObjectIdSerializer.readWithoutMarker(java.io.InputStream)	true	3176
6464.json	org.eclipse.jgit.blame.BlameGenerator.getResultStart()	6425.json,null,null,null,6423.json,6427.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.blame.BlameResult.computeNext(),org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
280.json	org.eclipse.jgit.pgm.Merge.isMergedInto(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.AnyObjectId)	278.json	org.eclipse.jgit.pgm.Merge.run()	true	2031
1150.json	org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte[], int, int, org.eclipse.jgit.lib.FileMode)	1173.json,1198.json	org.eclipse.jgit.notes.LeafBucket.build(),org.eclipse.jgit.notes.FanoutBucket.build(boolean, org.eclipse.jgit.lib.ObjectInserter)	true	2766
2913.json	org.eclipse.jgit.internal.ketch.KetchLeader.nextRound()	2910.json,2848.json,2903.json	org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.ProposalRound.start(),org.eclipse.jgit.internal.ketch.KetchLeader.runLeader()	true	872
156.json	org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	155.json	org.eclipse.jgit.pgm.debug.VerifyReftable.run()	true	297
3591.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getBlockSize()	3599.json,null,3427.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.tooSmallBlockSizeIsConvertedToDefault(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.tableSize(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.validBlockSize(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfigTest.negativeBlockSizeIsConvertedToDefault()	true	2410
62.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.connect()	noCall	noCall	true	1572
8362.json	org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, long)	2085.json,2086.json,null,null,4072.json,1319.json,2421.json,2442.json,4058.json,5886.json,2407.json	org.eclipse.jgit.transport.PacketLineIn.discardUntilEnd(),org.eclipse.jgit.transport.PacketLineIn.readLength(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.FullPipeInputStream.free(int),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.FullPipeInputStream.want(int),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.transport.BundleFetchConnection.readLine(byte[]),org.eclipse.jgit.transport.PackParser.sync(),org.eclipse.jgit.transport.PackParser.inflateAndSkip(org.eclipse.jgit.transport.PackParser.Source, long),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.transport.PackParser.readPackFooter()	true	3176
4863.json	org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged(boolean)	4862.json	org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges()	true	2446
2841.json	org.eclipse.jgit.internal.ketch.StageBuilder.tmpAuthor(java.util.List<org.eclipse.jgit.revwalk.RevCommit>)	2840.json	org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter)	true	872
9207.json	org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, int, int)	9215.json,9624.json	org.eclipse.jgit.lib.AbbreviatedObjectId.mask(int, int),org.eclipse.jgit.lib.AnyObjectId.abbreviate(int)	true	3176
4714.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.baseName(java.io.File)	4698.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2692
3110.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlock(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	3049.json,3051.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readIndex(long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long)	true	297
7527.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.api.TransportCommand)	6835.json,7298.json,7265.json,6888.json,6885.json,7131.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.PullCommand.call()	true	2403
9597.json	org.eclipse.jgit.lib.AnyObjectId.getByte(int)	null,1201.json,null	org.eclipse.jgit.lib.ObjectIdTest.testGetByte(),org.eclipse.jgit.notes.FanoutBucket.cell(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdTest.testSetByte()	true	2775
3448.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.has()	3786.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isIndexLoaded()	true	1669
5419.json	org.eclipse.jgit.revwalk.RevCommitList.clearFlag(org.eclipse.jgit.revwalk.RevFlag, int, int)	5418.json	org.eclipse.jgit.revwalk.RevCommitList.clearFlag(org.eclipse.jgit.revwalk.RevFlag)	true	3176
6686.json	org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>)	null,5657.json,null,6687.json,6472.json,6573.json	org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_UnstagedFile(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile(),org.eclipse.jgit.diff.RenameDetector.add(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.diff.DiffFormatter.detectRenames(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2899
2637.json	org.eclipse.jgit.transport.ReceivePack.getPostReceiveHook()	noCall	noCall	true	3176
7885.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	null,7230.json	org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	2355
9578.json	org.eclipse.jgit.lib.IndexDiff.getRemoved()	null,null,6968.json,null,null,6960.json,9570.json,null,null,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.Status.getRemoved(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked()	true	3176
3089.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.type()	3042.json,3051.json,3063.json,3058.json,null,null,3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte, byte[], long, long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	true	297
9092.json	org.eclipse.jgit.lib.SymbolicRef.isPeeled()	null,null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor(),org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()	true	3176
5061.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.call()	5125.json,null	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-aa901242-21fc-4a3a-8aa5-89bdb2649cff.run()	true	2874
2565.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowNonFastForwards(boolean)	noCall	noCall	true	3176
2018.json	org.eclipse.jgit.transport.Transport.getFilterBlobLimit()	noCall	noCall	true	87
5638.json	org.eclipse.jgit.revwalk.BitmapWalker.getCountOfBitmapIndexMisses()	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1111
9421.json	org.eclipse.jgit.lib.ObjectIdRef.getTarget()	null,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()	true	3059
8130.json	org.eclipse.jgit.util.StringUtils.toLowerCase(java.lang.String)	8806.json,null,1678.json,7965.json,1751.json,1752.json,8809.json,8819.json,1695.json	org.eclipse.jgit.lib.ConfigSnapshot.getSubsections(java.lang.String),org.eclipse.jgit.util.StringUtilsTest.testToLowerCaseString(),org.eclipse.jgit.transport.AmazonS3.isSignedHeader(java.lang.String),org.eclipse.jgit.util.RawParseUtils.charsetForAlias(java.lang.String),org.eclipse.jgit.transport.TransferConfig.FsckKeyNameHolder.parse(java.lang.String),org.eclipse.jgit.transport.TransferConfig.FsckKeyNameHolder.keyNameFor(java.lang.String),org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.contains(java.lang.Object),org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	true	3176
3112.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	3110.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlock(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	true	297
5568.json	org.eclipse.jgit.revwalk.EndGenerator.next()	noCall	noCall	true	3176
2014.json	org.eclipse.jgit.transport.Transport.isPushAtomic()	2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	920
7074.json	org.eclipse.jgit.api.Git.status()	null,null,null,7399.json,null,null,null,null,null,null,null,null,null,null,null,null,null,92.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7230.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.pgm.Status.run(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.CheckoutCommandTest.assertRepositoryCondition(int),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.CleanCommandTest.testClean(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2636
3554.json	org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.dispatch(org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedListener)	noCall	noCall	true	2046
7801.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long)	7818.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength()	true	2267
8738.json	org.eclipse.jgit.patch.FormatError.getSeverity()	null,8743.json,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.FormatError.toString(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew()	true	3176
8579.json	org.eclipse.jgit.util.BlockList.toDirectoryIndex(int)	8570.json,8585.json,8577.json,8576.json,8571.json	org.eclipse.jgit.util.BlockList.get(int),org.eclipse.jgit.util.BlockList.MyIterator.remove(),org.eclipse.jgit.util.BlockList.resetTailBlock(),org.eclipse.jgit.util.BlockList.remove(int),org.eclipse.jgit.util.BlockList.set(int, T)	true	2651
999.json	org.eclipse.jgit.merge.ResolveMerger.getToBeCheckedOut()	noCall	noCall	true	2841
5315.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes()	7582.json	org.eclipse.jgit.treewalk.TreeWalk.getAttributes()	true	1249
9624.json	org.eclipse.jgit.lib.AnyObjectId.abbreviate(int)	null,387.json,null,1250.json,null,6812.json,null,7040.json,7195.json,null,null,2891.json,null,null,2861.json,null,2774.json,null,2744.json,null,null,1208.json,278.json,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.pgm.Reflog.toString(org.eclipse.jgit.lib.ReflogEntry, int),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.shortestUniqueAbbreviation(java.util.List<org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList>),org.eclipse.jgit.transport.TrackingRefUpdate.toString(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.blame.Candidate.toString(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeader(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeaderModeChange(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String),org.eclipse.jgit.internal.ketch.Proposal.format(java.lang.StringBuilder, org.eclipse.jgit.lib.Ref, java.lang.String),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob(),org.eclipse.jgit.internal.ketch.LogIndex.describeForLog(),org.eclipse.jgit.lib.ObjectReader.abbreviate(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.ketch.LeaderSnapshot.str(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.load(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateOnEmptyRepository(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob()	true	3176
7422.json	org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	2739
1673.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.addWholeObject(int)	2409.json	org.eclipse.jgit.transport.PackParser.indexOneObject()	true	629
8835.json	org.eclipse.jgit.lib.BranchConfig.getRemoteOrDefault()	8827.json,8828.json	org.eclipse.jgit.lib.BranchConfig.getTrackingBranch(),org.eclipse.jgit.lib.BranchConfig.getRemoteTrackingBranch()	true	2336
10267.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.Anonymous-65984367-7866-439c-8260-3a10f1efdd55.hasMoreElements()	noCall	noCall	true	2438
1559.json	org.eclipse.jgit.transport.HttpTransport.setConnectionFactory(org.eclipse.jgit.transport.http.HttpConnectionFactory)	noCall	noCall	true	1572
7672.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getFile()	7661.json,null,7671.json,null,7674.json	org.eclipse.jgit.treewalk.FileTreeIterator.enterSubtree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.TestFileTreeIterator.enterSubtree(),org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.openInputStream(),org.eclipse.jgit.treewalk.FileTreeIteratorWithTimeControl.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.FileTreeIterator.getEntryFile()	true	3176
7539.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator0(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	7538.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.MutableObjectId)	true	3176
1921.json	org.eclipse.jgit.transport.Daemon.getService(java.lang.String)	299.json	org.eclipse.jgit.pgm.Daemon.service(org.eclipse.jgit.transport.Daemon, java.lang.String)	true	3176
3208.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.allRefs()	3244.json,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeRefs(org.eclipse.jgit.internal.storage.reftable.MergedReftable),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoEmptyTables(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.scanDuplicates(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.scanIncludeDeletes(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.fourTableScan(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneEmptyTable(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.noTables(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.deleteIsHidden(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.oneTableScan()	true	297
7355.json	org.eclipse.jgit.api.CleanCommand.setPaths(java.util.Set<java.lang.String>)	null	org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths()	true	2574
3310.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter()	3303.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()	true	297
7876.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.getHideDotFiles()	noCall	noCall	true	1375
5297.json	org.eclipse.jgit.attributes.Attributes.isUnspecified(java.lang.String)	noCall	noCall	true	925
4215.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.toString()	noCall	noCall	true	1282
7.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.supports(org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1145
6585.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	null,6581.json	org.eclipse.jgit.diff.DiffFormatterReflowTest.assertFormatted(java.lang.String),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.DiffEntry)	true	3176
9119.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.canonical(java.io.File)	noCall	noCall	true	3176
5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2685
6360.json	org.eclipse.jgit.blame.Region.copy(int)	noCall	noCall	true	2567
6172.json	org.eclipse.jgit.storage.pack.PackConfig.getDeltaSearchWindowSize()	6209.json,6210.json,5139.json,5123.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	2893
2109.json	org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()	2122.json,1515.json,124.json,2094.json	org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	3176
8340.json	org.eclipse.jgit.util.sha1.SHA1.s2(int, int, int, int, int)	8337.json,8338.json	org.eclipse.jgit.util.sha1.SHA1.compress(),org.eclipse.jgit.util.sha1.SHA1.recompress(int)	true	466
1617.json	org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String)	noCall	noCall	true	3070
5919.json	org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter)	5920.json,5907.json	org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCache.writeTree(org.eclipse.jgit.lib.ObjectInserter)	true	3176
6844.json	org.eclipse.jgit.api.FetchCommand.isRemoveDeletedRefs()	6835.json,6836.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.FetchCommand.call()	true	2823
7208.json	org.eclipse.jgit.api.RemoteListCommand.call()	null,83.json	org.eclipse.jgit.api.RemoteListCommandTest.testList(),org.eclipse.jgit.pgm.Remote.run()	true	911
4090.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.clearEntry(org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot)	4087.json,4086.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.releaseMemory(),org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int)	true	3176
5168.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.copy(long, int)	null,5183.json,null,null	org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int),org.eclipse.jgit.internal.storage.file.PackFileTest.delta(byte[], byte[]),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.copy(int, int)	true	2900
3962.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.List<java.lang.String>)	null,4816.json,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack(),org.eclipse.jgit.internal.storage.file.GC.packRefs(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPackedRefsLockFailure()	true	2142
3639.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.clearPackStats()	noCall	noCall	true	2410
547.json	org.eclipse.jgit.junit.http.RecordingLogger.setDebugEnabled(boolean)	noCall	noCall	true	3070
4321.json	org.eclipse.jgit.internal.storage.file.WindowCache.Entry.kill()	4290.json,4294.json,4292.json,4293.json	org.eclipse.jgit.internal.storage.file.WindowCache.scan(org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.WindowCache.evict(),org.eclipse.jgit.internal.storage.file.WindowCache.removeAll()	true	3176
8261.json	org.eclipse.jgit.util.io.TimeoutInputStream.setTimeout(int)	2614.json,1520.json,2600.json,null,1426.json,2331.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout(),org.eclipse.jgit.transport.BaseReceivePack.init(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.util.io.TimeoutInputStreamTest.setUp(),org.eclipse.jgit.transport.UploadPack.upload(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.transport.BasePackConnection.init(java.io.InputStream, java.io.OutputStream)	true	3176
7631.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.alreadyMatch(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	7626.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator, int)	true	3176
3088.json	org.eclipse.jgit.internal.storage.reftable.ReftableConstants.reverseUpdateIndex(long)	3100.json,3200.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogUpdateIndex(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.key(java.lang.String, long)	true	297
7077.json	org.eclipse.jgit.api.Git.notesRemove()	null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote()	true	2618
7695.json	org.eclipse.jgit.treewalk.filter.PathFilter.shouldBeRecursive()	5631.json,null	org.eclipse.jgit.revwalk.FollowFilter.shouldBeRecursive(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Single.shouldBeRecursive()	true	3176
4046.json	org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.contains(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	892
3971.json	org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()	3961.json,null,3970.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()	true	3059
2906.json	org.eclipse.jgit.internal.ketch.KetchLeader.getHead()	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
1115.json	org.eclipse.jgit.hooks.GitHook.getRepository()	1124.json,9883.json,9887.json,9890.json,9882.json,1120.json,9892.json,1121.json,1128.json	org.eclipse.jgit.hooks.CommitMsgHook.call(),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.LfsPrePushHook.call(),org.eclipse.jgit.hooks.GitHook.doRun(),org.eclipse.jgit.lfs.LfsPrePushHook.uploadFile(org.eclipse.jgit.lfs.Protocol.ObjectInfo, org.eclipse.jgit.lfs.Protocol.Action, java.nio.file.Path),org.eclipse.jgit.hooks.GitHook.isNativeHookPresent(),org.eclipse.jgit.hooks.CommitMsgHook.getCommitEditMessageFilePath()	true	1195
8623.json	org.eclipse.jgit.util.SystemReader.checkPath(byte[])	6002.json	org.eclipse.jgit.dircache.DirCacheEntry.checkPath(byte[])	true	924
6020.json	org.eclipse.jgit.dircache.DirCacheCheckout.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7266.json,7195.json,7471.json,7020.json,7422.json,7438.json,6812.json,6887.json,7385.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.MergeCommand.call()	true	138
9218.json	org.eclipse.jgit.lib.AbbreviatedObjectId.name()	null,387.json,203.json,null,null,null,6812.json,null,null,null,305.json,null,null,null,null,null,2861.json,null,2744.json,434.json,null,120.json,6582.json,278.json,null,null,null,null,null,null,null,null,null,null,null,null,9756.json,1250.json,null,null,7040.json,7195.json,null,null,null,125.json,null,6583.json,2891.json,9494.json,null,7252.json,7425.json,null,null,null,null,2774.json,null,null,null,9219.json,null,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.pgm.Reflog.toString(org.eclipse.jgit.lib.ReflogEntry, int),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(),org.eclipse.jgit.blame.Candidate.toString(),org.eclipse.jgit.pgm.AbstractFetchCommand.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString(),org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob(),org.eclipse.jgit.internal.ketch.LogIndex.describeForLog(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.pgm.Blame.abbreviate(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString(),org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.transport.TrackingRefUpdate.toString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeader(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatterTest.makeDiffHeaderModeChange(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Push.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.internal.ketch.Proposal.format(java.lang.StringBuilder, org.eclipse.jgit.lib.Ref, java.lang.String),org.eclipse.jgit.lib.RebaseTodoLine.setAction(org.eclipse.jgit.lib.RebaseTodoLine.Action),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.api.DescribeCommand.longDescription(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.internal.ketch.LeaderSnapshot.str(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.lib.AbbreviatedObjectId.toString(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile()	true	3176
195.json	org.eclipse.jgit.pgm.debug.LfsStore.readAWSKeys()	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	843
3983.json	org.eclipse.jgit.internal.storage.file.RefDirectory.newTemporaryUpdate()	4565.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()	true	3059
3938.json	org.eclipse.jgit.internal.storage.file.RefDirectory.refresh()	noCall	noCall	true	2627
3715.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.newReader()	noCall	noCall	true	2410
4790.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getType()	noCall	noCall	true	2901
4288.json	org.eclipse.jgit.internal.storage.file.WindowCache.lockCount(org.eclipse.jgit.storage.file.WindowCacheConfig)	noCall	noCall	true	3176
1757.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int, int, int)	noCall	noCall	true	2658
3616.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.hasFileExt(org.eclipse.jgit.internal.storage.pack.PackExt)	3779.json,3608.json,null,3791.json,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toPrune(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.packOnlyContainsReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables()	true	1922
6704.json	org.eclipse.jgit.diff.RenameDetector.sameType(org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.FileMode)	6686.json,null,6699.json,6652.json,6714.json,6698.json	org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.diff.RenameDetector.rejoinModifies(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.bestPathMatch(org.eclipse.jgit.diff.DiffEntry, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
5926.json	org.eclipse.jgit.dircache.DirCacheTree.removeChild(int)	5924.json	org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
5354.json	org.eclipse.jgit.revwalk.RevWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean)	5484.json,null,6213.json,352.json	org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE(),org.eclipse.jgit.revplot.PlotWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
347.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableReverse(boolean)	noCall	noCall	true	3176
3446.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.clean(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry)	3446.json,3435.json,3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.clean(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
3059.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.getRefName()	noCall	noCall	true	297
9049.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setObjectDirectory(java.io.File)	9064.json,null,9075.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals()	true	2907
3851.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.zeroCopyByteBuffer(int)	3672.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	286
5841.json	org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher.matches(java.lang.String, int, int)	noCall	noCall	true	1299
2601.json	org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedOrDefaultRefs()	2644.json,2604.json	org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	2292
9365.json	org.eclipse.jgit.lib.ObjectChecker.check(int, byte[])	null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent(),org.eclipse.jgit.lib.ObjectCheckerTest.assertCorrupt(java.lang.String, int, byte[]),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlob(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobNotCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testCheckBlobWithBlobObjectCheckerNotCorrupt(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidEmptyTree(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag()	true	3176
8436.json	org.eclipse.jgit.util.FS.isHidden(java.io.File)	noCall	noCall	true	1864
3333.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList.addBlock(long)	3298.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexId(org.eclipse.jgit.lib.ObjectId, long)	true	297
7435.json	org.eclipse.jgit.api.RebaseCommand.checkParameters()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	2756
5486.json	org.eclipse.jgit.revwalk.ObjectWalk.setObjectFilter(org.eclipse.jgit.revwalk.filter.ObjectFilter)	null,5640.json,null,null,null,null	org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees(),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine()	true	1123
9529.json	org.eclipse.jgit.lib.RefUpdate.getRefLogIdent()	4565.json,9143.json,4985.json,4102.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.lib.RefRename.getRefLogIdent(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean)	true	3176
4195.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.save(java.io.File)	4629.json,null,4862.json,3971.json,null,null,null,4756.json,4626.json,5886.json,3977.json,4761.json,5883.json,4863.json	org.eclipse.jgit.internal.storage.file.LockFile.saveStatInformation(),org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileWithWait(),org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges(),org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs(),org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileNoWait(),org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testActuallyIsModifiedTrivial(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits(),org.eclipse.jgit.internal.storage.file.LockFile.waitForStatChange(),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.dircache.DirCache.read(),org.eclipse.jgit.internal.storage.file.FileRepository.notifyIndexChanged(boolean)	true	2733
1989.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	1985.json,1988.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig)	true	3176
365.json	org.eclipse.jgit.pgm.Log.dateFormat(java.lang.String)	noCall	noCall	true	2419
5203.json	org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.tableSize(int)	noCall	noCall	true	2893
3661.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	2410
32.json	org.eclipse.jgit.awtui.AWTPlotRenderer.paintTriangleDown(int, int, int)	noCall	noCall	true	3176
9272.json	org.eclipse.jgit.lib.BatchingProgressMonitor.setDelayStart(long, java.util.concurrent.TimeUnit)	2625.json,2619.json,1951.json,247.json,5113.json,2395.json	org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2658
5045.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long)	5132.json,3803.json,4124.json,5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2906
3235.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry.index()	3228.json,3233.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.skipShadowed(java.lang.String, long),org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry.compare(org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry, org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry)	true	297
1882.json	org.eclipse.jgit.transport.TransportGitSsh.useExtSession()	1876.json	org.eclipse.jgit.transport.TransportGitSsh.initSshSessionFactory()	true	2745
4675.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getTrees()	4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	false	1922
4242.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.writeTOC(int)	4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	true	3176
4507.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand.Result, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	4506.json,4498.json,4499.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockFailure(org.eclipse.jgit.transport.ReceiveCommand, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	320
9196.json	org.eclipse.jgit.lib.MutableObjectId.set(int, int, int, int, int)	8347.json	org.eclipse.jgit.util.sha1.SHA1.digest(org.eclipse.jgit.lib.MutableObjectId)	true	468
9650.json	org.eclipse.jgit.lib.RefDatabase.firstExactRef(java.lang.String...)	null,null,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_IgnoresGarbageRef(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testFirstExactRef(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_Mixed(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRef(java.lang.String)	true	1101
7305.json	org.eclipse.jgit.api.TagCommand.setMessage(java.lang.String)	null,null,null,null,null,null,363.json	org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.DescribeCommandTest.tag(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.Tag.run()	true	2844
4504.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand)	4501.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	320
483.json	org.eclipse.jgit.junit.StrictWorkMonitor.start(int)	noCall	noCall	true	1848
5928.json	org.eclipse.jgit.dircache.DirCacheTree.namecmp(byte[], int, org.eclipse.jgit.dircache.DirCacheTree)	5924.json	org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
1534.json	org.eclipse.jgit.transport.BundleWriter.include(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	3176
6278.json	org.eclipse.jgit.gitrepo.RepoProject.addLinkFiles(java.util.Collection<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>)	null	org.eclipse.jgit.gitrepo.RepoCommand.addSubmoduleBare(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, java.util.Set<java.lang.String>, java.lang.String)	true	418
6338.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createHeadsStartValues(java.lang.String, java.lang.Character)	noCall	noCall	true	3176
9953.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.nio.ByteBuffer)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByteBuffer()	true	856
3049.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readIndex(long)	3046.json,3048.json,3047.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.initRefIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.initLogIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.initObjIndex()	true	297
7479.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache)	7477.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPaths()	true	2031
329.json	org.eclipse.jgit.pgm.opt.RefSpecHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
8557.json	org.eclipse.jgit.util.RefList.Builder.addAll(org.eclipse.jgit.lib.Ref[], int, int)	null,null,8545.json,null	org.eclipse.jgit.util.RefMapTest.toList(org.eclipse.jgit.lib.Ref...),org.eclipse.jgit.util.RefListTest.toList(org.eclipse.jgit.lib.Ref...),org.eclipse.jgit.util.RefList.copy(int),org.eclipse.jgit.util.RefListTest.testBuilder_AddAll()	true	3060
10296.json	org.eclipse.jgit.http.server.glue.MetaFilter.register(org.eclipse.jgit.http.server.glue.ServletBinder)	10295.json,10258.json	org.eclipse.jgit.http.server.glue.MetaFilter.register(org.eclipse.jgit.http.server.glue.ServletBinderImpl),org.eclipse.jgit.http.server.glue.MetaServlet.register(org.eclipse.jgit.http.server.glue.ServletBinder)	true	2438
1874.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-63bc649b-b366-4654-a4f1-e702be49be57.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int)	noCall	noCall	true	2636
8703.json	org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int)	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
5041.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.write(byte[], int, int)	5045.json,null,4398.json,3857.json,5043.json,3803.json,4461.json,4124.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.ByteArrayWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int),org.eclipse.jgit.internal.storage.dfs.DfsBlock.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeFileHeader(int, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.file.ByteBufferWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
8567.json	org.eclipse.jgit.util.Paths.lastPathChar(int)	8566.json,8564.json	org.eclipse.jgit.util.Paths.coreCompare(byte[], int, int, int, byte[], int, int, int),org.eclipse.jgit.util.Paths.compare(byte[], int, int, int, byte[], int, int, int)	true	882
8023.json	org.eclipse.jgit.util.RefMap.entrySet()	8023.json,null,null,null,8020.json,null,null,null,null	org.eclipse.jgit.util.RefMap.entrySet(),org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testEntryTypeSet(),org.eclipse.jgit.util.RefMapTest.testEntryType(),org.eclipse.jgit.util.RefMap.Anonymous-a1e2102b-e71d-4a4c-95a9-e431502c3082.size(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix1(),org.eclipse.jgit.util.RefMapTest.testEmpty_WithPrefix(),org.eclipse.jgit.util.RefMapTest.testEmpty_NoPrefix2(),org.eclipse.jgit.util.RefMap.isEmpty()	true	3060
2612.json	org.eclipse.jgit.transport.BaseReceivePack.checkRequestWasRead()	2580.json,2585.json	org.eclipse.jgit.transport.BaseReceivePack.isSideBand(),org.eclipse.jgit.transport.BaseReceivePack.isQuiet()	true	653
4436.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2907
9054.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getAlternateObjectDirectories()	9064.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader)	true	2907
6996.json	org.eclipse.jgit.api.CommitCommand.setOnly(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,301.json,null	org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_4(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_8(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_7(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_3(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6_f2_14(org.eclipse.jgit.api.Git, int)	true	2647
432.json	org.eclipse.jgit.pgm.Branch.addRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>, java.lang.String)	431.json	org.eclipse.jgit.pgm.Branch.list()	true	3176
2395.json	org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor)	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	319
7546.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.eof()	null,null,null,null,null,4968.json,7534.json,1156.json,null,null,6010.json,6007.json,7548.json,1154.json,null,7547.json,null,9842.json,5252.json,null,null,null,null,1153.json	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFreakingHugePathName(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2(),org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(byte[]),org.eclipse.jgit.notes.NoteParser.parseFanoutTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName(),org.eclipse.jgit.dircache.DirCacheBuilder.enterTree(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParser.back(int),org.eclipse.jgit.notes.NoteParser.parseLeafTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParser.next(int),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testEmptyTree_AtEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo(),org.eclipse.jgit.notes.NoteParser.parseTree()	true	3176
6212.json	org.eclipse.jgit.revplot.PlotWalk.addAdditionalRefs(java.lang.Iterable<org.eclipse.jgit.lib.Ref>)	noCall	noCall	true	2536
7336.json	org.eclipse.jgit.api.CreateBranchCommand.setName(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7471.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchDash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchHEAD(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory()	true	2800
5605.json	org.eclipse.jgit.revwalk.DepthWalk.RevWalk.markRoot(org.eclipse.jgit.revwalk.RevCommit)	null	org.eclipse.jgit.transport.UploadPack.processShallow(java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectId>, boolean)	true	2485
1997.json	org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	1995.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	3176
1178.json	org.eclipse.jgit.notes.LeafBucket.shouldSplit()	1176.json,1170.json	org.eclipse.jgit.notes.LeafBucket.append(org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2766
8976.json	org.eclipse.jgit.lib.Repository.getBranch()	null,388.json,null,null,null,null,null,null,null,null,null,null,1019.json,null,null,null,435.json,null,null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.merge.MergeConfig.getConfigForCurrentBranch(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	3176
3747.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	noCall	noCall	true	2410
6526.json	org.eclipse.jgit.diff.EditList.toString()	null,6514.json	org.eclipse.jgit.diff.EditListTest.testEmpty(),org.eclipse.jgit.diff.MyersDiff.main(java.lang.String[])	true	3176
3911.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.close()	noCall	noCall	true	2410
2033.json	org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	null,null,null,null,null,6836.json,null,null,null,null,null	org.eclipse.jgit.transport.BundleWriterTest.fetchFromBundle(org.eclipse.jgit.lib.Repository, byte[]),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.setUp(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.transport.UploadPackTest.testFetchUnreachableBlobWithBitmap(),org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithNonSupportingServer(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithBitmap(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithoutBitmap()	true	3176
4383.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readFloat()	noCall	noCall	true	1922
8657.json	org.eclipse.jgit.patch.FileHeader.toEditList()	null,null,6585.json	org.eclipse.jgit.patch.EditListTest.testFileHeader(),org.eclipse.jgit.patch.EditListTest.testTypes(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
3466.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.commitPackImpl(java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>, java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>)	noCall	noCall	true	2410
7704.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.equals(byte[], byte[], int)	7714.json,7703.json,7706.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.chainlength(byte[]),org.eclipse.jgit.treewalk.filter.ByteArraySet.get(byte[], int, int),org.eclipse.jgit.treewalk.filter.ByteArraySet.addIfAbsent(byte[], int, int)	true	1965
7717.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.nextHash()	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk)	true	1965
3100.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogUpdateIndex()	null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
5625.json	org.eclipse.jgit.revwalk.Generator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	null,5673.json	org.eclipse.jgit.revwalk.BoundaryGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue),org.eclipse.jgit.revwalk.RewriteGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	true	3176
8983.json	org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId()	378.json	org.eclipse.jgit.pgm.Log.run()	true	3176
3894.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.has(org.eclipse.jgit.lib.AnyObjectId, boolean)	null,3502.json,null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible()	true	948
103.json	org.eclipse.jgit.pgm.CommandCatalog.all()	162.json	org.eclipse.jgit.pgm.debug.ShowCommands.run()	true	3176
4893.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.hasObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	noCall	noCall	true	2683
4184.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getWho()	4186.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.toString()	true	3176
4485.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.initEntry()	noCall	noCall	true	3176
5635.json	org.eclipse.jgit.revwalk.FollowFilter.setRenameCallback(org.eclipse.jgit.revwalk.RenameCallback)	5657.json,null	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.follow(java.lang.String)	true	2420
4137.json	org.eclipse.jgit.internal.storage.file.PackFile.read(long, int)	4281.json	org.eclipse.jgit.internal.storage.file.WindowCache.load(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
1690.json	org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	1688.json,1689.json	org.eclipse.jgit.transport.AmazonS3.Anonymous-17373ff6-e4a0-4b9c-bf76-294c6294ffee.close(),org.eclipse.jgit.transport.AmazonS3.beginPut(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	true	3176
1416.json	org.eclipse.jgit.transport.UploadPack.getPreUploadHook()	noCall	noCall	true	2627
9367.json	org.eclipse.jgit.lib.ObjectChecker.checkId(byte[])	9370.json,9372.json	org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTag(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	892
7989.json	org.eclipse.jgit.util.FS_Win32.Anonymous-f71c88fe-479a-4bf3-ba34-0c2a77b9da01.visitFileFailed(java.nio.file.Path, java.io.IOException)	noCall	noCall	true	77
7516.json	org.eclipse.jgit.api.LsRemoteCommand.setHeads(boolean)	75.json,null,null	org.eclipse.jgit.pgm.LsRemote.run(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads()	true	2579
9577.json	org.eclipse.jgit.lib.IndexDiff.getChanged()	null,null,6968.json,null,null,9570.json,null,null,6959.json,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.api.Status.getChanged(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple()	true	3176
4635.json	org.eclipse.jgit.internal.storage.file.LockFile.toString()	noCall	noCall	true	3176
9458.json	org.eclipse.jgit.lib.TagBuilder.getObjectType()	9468.json	org.eclipse.jgit.lib.TagBuilder.build()	true	3176
5036.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.credit(int)	5171.json,5016.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.credit(int),org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
2115.json	org.eclipse.jgit.transport.RemoteRefUpdate.getStatus()	null,null,2096.json,2097.json,null,null,2731.json,null,null,123.json,null,null,124.json,null,null,null,2095.json,null,null,1519.json	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic(),org.eclipse.jgit.transport.PushProcess.modifyUpdatesForDryRun(),org.eclipse.jgit.transport.PushProcess.updateTrackingRefs(),org.eclipse.jgit.transport.PushConnectionTest.testWrongOldIdDoesNotReplace(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand.copyStatusToResult(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions(),org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases(),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.PushProcessTest.testOneUpdateStatus(org.eclipse.jgit.transport.RemoteRefUpdate, org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RemoteRefUpdate.Status, java.lang.Boolean),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcessTest.MockPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.PushConnectionTest.commandOrder(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.transport.PushProcess.rejectAll(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions(),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
2281.json	org.eclipse.jgit.transport.InternalPushConnection.close()	noCall	noCall	true	1198
4711.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.seekDatabase(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	2692
10174.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.JschBugFixingConfig.getPort()	noCall	noCall	true	148
4500.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
2837.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getRetryAt()	noCall	noCall	true	872
8178.json	org.eclipse.jgit.util.io.CountingOutputStream.close()	null	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.close()	true	2410
2219.json	org.eclipse.jgit.transport.TransportHttp.setUseSmartHttp(boolean)	noCall	noCall	true	3070
2554.json	org.eclipse.jgit.transport.BaseReceivePack.setExpectDataAfterPackFooter(boolean)	noCall	noCall	true	2186
1243.json	org.eclipse.jgit.transport.TrackingRefUpdate.setResult(org.eclipse.jgit.lib.RefUpdate.Result)	2122.json	org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk)	true	2210
4359.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getCreatedFromInserter()	noCall	noCall	true	775
2135.json	org.eclipse.jgit.transport.PushCertificate.toTextWithSignature()	null,2140.json	org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificate.toString()	true	1061
4273.json	org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig)	6112.json	org.eclipse.jgit.storage.file.WindowCacheConfig.install()	true	3176
2314.json	org.eclipse.jgit.transport.WalkPushConnection.pickHEAD(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>)	2313.json	org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
403.json	org.eclipse.jgit.pgm.TextBuiltin.requiresRepository()	394.json	org.eclipse.jgit.pgm.Main.init(org.eclipse.jgit.pgm.TextBuiltin)	true	3176
9887.json	org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk)	9883.json	org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush()	true	102
6424.json	org.eclipse.jgit.blame.BlameResult.lastLength()	noCall	noCall	true	2567
68.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.isRepeatable()	noCall	noCall	true	1572
3514.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.index(java.io.OutputStream, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	3513.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2410
9410.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.notTimeUnit(java.lang.String, java.lang.String, java.lang.String, java.lang.String)	9408.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getTimeUnit(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long, java.util.concurrent.TimeUnit)	true	698
5879.json	org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS, org.eclipse.jgit.events.IndexChangedListener)	5878.json	org.eclipse.jgit.dircache.DirCache.lock(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.events.IndexChangedListener)	true	2446
7658.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.toString()	noCall	noCall	true	2059
3053.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.size()	3605.json,null	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.tryAddFirst(org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	297
5373.json	org.eclipse.jgit.revwalk.RevWalk.parseTag(org.eclipse.jgit.lib.AnyObjectId)	null,null	org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.parseTag(org.eclipse.jgit.lib.AnyObjectId)	true	2895
5020.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5013.json,5019.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
7638.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString()	null,null,null,7658.json,null,6050.json,null,null,null,null,null,6034.json,null,null,null,null,null,null,null,null,6024.json,null,null,9842.json,7764.json,7807.json	org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.treewalk.AbstractTreeIterator.toString(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryPath(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testCreateEmptyTreeIterator(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	3176
1668.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaCommit()	noCall	noCall	true	629
3117.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte[])	3042.json,3063.json,3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte, byte[], long, long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	true	297
92.json	org.eclipse.jgit.pgm.Status.run()	noCall	noCall	true	2100
3955.json	org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(java.lang.String, boolean)	null,4565.json,4568.json,3956.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.writeReflog(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.newRename(java.lang.String, java.lang.String)	true	3176
130.json	org.eclipse.jgit.pgm.Glog.createWalk()	noCall	noCall	true	3176
8183.json	org.eclipse.jgit.util.io.TeeInputStream.skipBuffer()	8180.json,8182.json,8179.json	org.eclipse.jgit.util.io.TeeInputStream.skip(long),org.eclipse.jgit.util.io.TeeInputStream.close(),org.eclipse.jgit.util.io.TeeInputStream.read()	true	2844
8692.json	org.eclipse.jgit.patch.HunkHeader.Anonymous-03c24250-5b79-46e0-ad52-59fa8a8f35a0.getId()	noCall	noCall	true	3176
905.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.setSrc(java.io.File)	noCall	noCall	true	2596
9454.json	org.eclipse.jgit.lib.CommitBuilder.build()	1034.json,null,9179.json,null,9456.json	org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.lib.CommitBuilder.toByteArray()	true	2745
5051.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.length()	5132.json,5113.json,5130.json,5128.json,5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
2748.json	org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.setRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	2730.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(org.eclipse.jgit.transport.Transport, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
9567.json	org.eclipse.jgit.lib.IndexDiff.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	null,7468.json	org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.testSymlinkWithEncodingDifference(),org.eclipse.jgit.api.StatusCommand.call()	true	2785
6571.json	org.eclipse.jgit.diff.DiffFormatter.getDiffTreeFilterFor(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2738
233.json	org.eclipse.jgit.pgm.Clone.checkingOut(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	noCall	noCall	true	409
7121.json	org.eclipse.jgit.api.RebaseResult.conflicts(java.util.List<java.lang.String>)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1653
10429.json	org.eclipse.jgit.http.server.FileSender.getTailChecksum()	null	org.eclipse.jgit.http.server.ObjectFileServlet.PackData.etag(org.eclipse.jgit.http.server.FileSender)	false	3070
8791.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.get(org.eclipse.jgit.lib.AnyObjectId)	8792.json,null,null,null,null,3298.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexId(org.eclipse.jgit.lib.ObjectId, long)	true	3176
9000.json	org.eclipse.jgit.lib.Repository.setGitwebDescription(java.lang.String)	null	org.eclipse.jgit.internal.storage.file.DescriptionTest.description()	true	572
7611.json	org.eclipse.jgit.treewalk.TreeWalk.popEntriesEqual()	7590.json	org.eclipse.jgit.treewalk.TreeWalk.next()	true	3176
6015.json	org.eclipse.jgit.dircache.DirCacheBuilder.bad(org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String)	6014.json,6013.json	org.eclipse.jgit.dircache.DirCacheBuilder.resort(),org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
3729.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.skipGarbagePack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	3723.json,3725.json,3722.json,3745.json,3720.json,3721.json,3728.json,3744.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsReader.openImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.hasImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSizeImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.resolveImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.dfs.DfsReader.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, java.util.Collection<T>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReader.FoundObject<T>>),org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	true	481
3820.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.setInvalid()	noCall	noCall	true	2410
181.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.Hash.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int)	noCall	noCall	true	2816
1258.json	org.eclipse.jgit.transport.TransportBundleStream.openFetch()	noCall	noCall	true	3176
9467.json	org.eclipse.jgit.lib.TagBuilder.setMessage(java.lang.String)	null,7299.json,null,null,null,null	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag()	true	3176
1292.json	org.eclipse.jgit.transport.RemoteConfig.setMirror(boolean)	noCall	noCall	true	3176
1125.json	org.eclipse.jgit.hooks.CommitMsgHook.canRun()	1124.json	org.eclipse.jgit.hooks.CommitMsgHook.call()	true	1195
8052.json	org.eclipse.jgit.util.FS_POSIX.discoverGitExe()	noCall	noCall	true	2717
1846.json	org.eclipse.jgit.transport.ReceiveCommand.isRefLogDisabled()	9334.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled(org.eclipse.jgit.transport.ReceiveCommand)	true	319
10113.json	org.eclipse.jgit.archive.TgzFormat.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	10112.json	org.eclipse.jgit.archive.TgzFormat.createArchiveOutputStream(java.io.OutputStream)	true	1206
5824.json	org.eclipse.jgit.ignore.internal.Strings.isDirectoryPattern(java.lang.String)	null	org.eclipse.jgit.ignore.BasicRuleTest.testDirectoryPattern()	true	634
900.json	org.eclipse.jgit.ant.tasks.GitAddTask.execute()	noCall	noCall	true	2575
7607.json	org.eclipse.jgit.treewalk.TreeWalk.isSubtree()	null,6023.json,4969.json,null,null,7608.json,6021.json,7568.json,null,null,945.json,7975.json,null,1006.json,null,7530.json,null,null,9911.json,null,null,null,7764.json,null,null,7774.json,null,6714.json,7370.json	org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk(),org.eclipse.jgit.treewalk.TreeWalk.isPostChildren(),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.treewalk.filter.PathSuffixFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>)	true	3176
4441.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.skipMe(java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	4444.json,4446.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	422
930.json	org.eclipse.jgit.merge.MergeStrategy.register(java.lang.String, org.eclipse.jgit.merge.MergeStrategy)	929.json	org.eclipse.jgit.merge.MergeStrategy.register(org.eclipse.jgit.merge.MergeStrategy)	true	3176
7993.json	org.eclipse.jgit.util.FS_Win32.runInShell(java.lang.String, java.lang.String[])	noCall	noCall	true	2681
40.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseCode()	noCall	noCall	true	1572
10148.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptPassword(java.lang.String)	noCall	noCall	true	2768
5989.json	org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.AnyObjectId)	null,null,4957.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6037.json,null,null,null,null,null,null,null,null,null,null,6981.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7018.json,null,7481.json,null,null,7530.json,6034.json,null,null,978.json,null,null,null,null,4959.json,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,null,977.json,null,null,null,6309.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-2a6372ae-6059-4c97-ab82-b3cd539d6461.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-d2bcfbca-c807-42c8-b450-e4f516025a0c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-1557e85b-61a0-4e02-8454-90207a52e0ab.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.transport.PushCertificateStore.Anonymous-fe79e128-9083-4b81-b2f4-6c80451b78fc.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-443acfed-3b78-43b0-a8e7-2b618fd40d2e.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleSyncTest.Anonymous-94445b78-0b3a-4040-8587-0da1f1b7f104.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.junit.TestRepository.file(java.lang.String, org.eclipse.jgit.revwalk.RevBlob),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-d392b7d4-b35f-42c0-8fae-c1f11f55f96b.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.RepositoryTestCase.createEntry(java.lang.String, org.eclipse.jgit.lib.FileMode, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-cc8252bb-2d91-42fd-82ba-33ba83b1f93a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CheckoutCommand.Anonymous-3bca28ea-811e-499e-a006-1212e97d737f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-f3734649-e37e-4aba-8ea2-e1beea84884f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-5f6e3364-e172-47c3-b620-a0f11100679e.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-066385ad-87a0-414e-a0c3-d529ce2dc736.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-f8a67438-7fdf-4222-81f8-bba3608db565.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-5d5ba15f-3722-424c-9b41-f433011c7499.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleInitTest.Anonymous-b441f1c0-872a-4919-8290-8c57038f9c56.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-d9954eb0-6932-4eee-8580-3b0ab6e2c4cf.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.MergerTest.addSubmoduleToIndex(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-38969a75-790c-492d-94e0-4ea156d38f71.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleUpdateTest.Anonymous-6f3b85b3-8750-4523-aa3e-104a4395e6da.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-9a386457-47b8-49fe-b594-d33b1bbb614a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.DirCacheCheckoutTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-88796950-43a3-4653-b09b-10b9738efc76.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.CommitBuilder.Anonymous-cba597cd-d9be-4c30-a634-c091776bcd6f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.diff.DiffEntryTest.Anonymous-e0e2f314-33c7-4613-be19-e2f98e6bbecd.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-b61394f9-d2eb-4051-bd55-b56f8e0eace4.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-a06be1ec-290a-4622-a628-9c3118079d72.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.Anonymous-b9b85d10-b9e7-45e5-a9d9-19f754156ab0.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-8a0fb3e5-2410-43f2-be72-ab99878a6f32.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-e7744f8b-b2bc-463c-82ef-d72e2aff38b9.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-75026e86-f81b-4f82-9d46-818e079bb14a.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-4c4f9ba4-cc90-4a4d-a369-2d6b2701da8c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.Anonymous-679fdefb-f411-473f-b306-8c2d2a9e5d47.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.lib.IndexDiffTest.Anonymous-5add3e4d-870d-4e6e-b369-cee482373695.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.MergerTest.Anonymous-4885835b-7585-4757-8c4e-2b41ffbee534.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-c5482093-b369-4a07-8469-1a285532c323.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.submodule.SubmoduleSyncTest.Anonymous-48bebf9b-5cee-4c03-8acd-c232d2972cab.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-2d7490f1-90cc-4363-942b-5d9c5f105eac.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCachePathEditTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.CommitBuilder.add(java.lang.String, org.eclipse.jgit.revwalk.RevBlob),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-e7ae5613-b0f2-4232-a458-9a45ef900508.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.api.AddCommandTest.addEntryToBuilder(java.lang.String, java.io.File, org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCacheBuilder, int),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-1eff1177-0101-4588-af3d-718d1a4aaba7.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.Anonymous-ae871623-73f1-4147-b893-159858c7d8de.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.Anonymous-4cee167d-eb08-46eb-b180-6372dc876a2d.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.Anonymous-bdeb72d3-3fea-44bd-9cbf-ad441e5fcf71.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-71bc2fad-08d5-4423-9bbc-74b13130c42f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.Anonymous-4560bf5f-aa19-4ff2-8eb2-daebcbdac2dd.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-3acfdc27-8e94-41d7-83c8-cfc147400505.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.junit.TestRepository.Anonymous-d04f31ac-4953-40d9-b01c-d1bfb4cff22f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.FileTreeIteratorTest.Anonymous-8e0b65d9-8af2-4c63-9eaf-f0e9d1afbfd0.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.IndexDiffTest.add(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
7637.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()	7530.json,null,6011.json,7829.json,null,4968.json,null,9570.json,6043.json,6009.json,6981.json,5252.json,9574.json	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryFileMode(),org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheBuilder.isTree(org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.lib.IndexDiff.isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	3176
9212.json	org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(byte[], int)	4482.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	true	2848
8298.json	org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar, java.util.Locale)	null,null,null,null,null,null,4811.json,null,null,null,null,null,null,null,4454.json,null,4813.json,null,null,8297.json,null	org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.util.GitDateParserTest.local(),org.eclipse.jgit.util.GitDateParserTest.rfc(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithoutRef(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit(),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.internal.storage.file.GC.getExpireDate(),org.eclipse.jgit.util.GitDateParserTest.shortWithSlash(),org.eclipse.jgit.util.GitDateParserTest.shortFmt(),org.eclipse.jgit.util.GitDateParserTest.defaultFmt(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef(),org.eclipse.jgit.util.GitDateParserTest.weeksAgo(),org.eclipse.jgit.util.GitDateParserTest.yesterday(),org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry(),org.eclipse.jgit.util.GitDateParserTest.iso(),org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate(),org.eclipse.jgit.util.GitDateParserTest.shortWithDots(),org.eclipse.jgit.util.GitDateParserTest.never(),org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar),org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse()	true	1659
9450.json	org.eclipse.jgit.lib.CommitBuilder.setMessage(java.lang.String)	null,null,7224.json,6309.json,null,null,2752.json,null,null,4931.json,null,7040.json,null,null,null,null,null,2851.json,null,2850.json,null,null,6979.json,213.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.junit.TestRepository.commit(int, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevCommit...),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.lib.ReflogConfigTest.commit(java.lang.String, long, int),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	true	3176
1916.json	org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
3334.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	3295.json,3300.json,3305.json,3293.json,3299.json,3341.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.deleteLog(java.lang.String, long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortAndWriteRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeLog(java.lang.String, long, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
9290.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.add(Q)	5367.json,4178.json,5375.json,4667.json,2938.json,5144.json,null,4666.json,5368.json,null,null,5366.json,5369.json,5490.json,2409.json,5094.json,null,5256.json,4432.json,4047.json,null,null,5365.json,null	org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObjectSet(),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.lib.AnyObjectId, int, int),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.revwalk.RevWalk.lookupTag(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.findOrInsert(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator(),org.eclipse.jgit.revwalk.RevWalk.lookupTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectSet(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent(),org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.scanLoose(),org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.load(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.revwalk.RevWalk.lookupBlob(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()	false	2645
9264.json	org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], byte, org.eclipse.jgit.util.MutableInteger)	5664.json,4059.json,4058.json,null	org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.TestObject.setType(java.lang.String)	true	3176
2343.json	org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String)	2348.json,null,2351.json,2350.json,2362.json	org.eclipse.jgit.transport.RefSpec.setSource(java.lang.String),org.eclipse.jgit.transport.RefSpecTest.isWildcardShouldWorkForWildcardSuffixAndComponent(),org.eclipse.jgit.transport.RefSpec.setSourceDestination(java.lang.String, java.lang.String),org.eclipse.jgit.transport.RefSpec.setDestination(java.lang.String),org.eclipse.jgit.transport.RefSpec.match(java.lang.String, java.lang.String)	true	3176
5389.json	org.eclipse.jgit.revwalk.RevWalk.allocFlag()	5561.json,5560.json,5388.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.MergeBaseGenerator.init(org.eclipse.jgit.revwalk.AbstractRevQueue),org.eclipse.jgit.revwalk.RevWalk.newFlag(java.lang.String)	true	3176
6345.json	org.eclipse.jgit.fnmatch.FileNameMatcher.append(java.lang.String)	null,2996.json,null,null,null,null	org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset(),org.eclipse.jgit.transport.OpenSshConfig.patternMatchesHost(java.lang.String, java.lang.String),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertFileNameMatch(java.lang.String, java.lang.String, char, boolean, boolean),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertMatch(java.lang.String, java.lang.String, boolean, boolean)	true	3176
4906.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String)	null,null,null,4915.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_DiscoversModified(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testExactRef_DiscoversModified(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(java.lang.String, boolean)	true	880
5327.json	org.eclipse.jgit.revwalk.RevObjectList.size()	5417.json,null,5418.json,null,null,null,5420.json,null,null,16.json,null,null,null,5416.json,128.json,5421.json	org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag, int, int),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.commit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevCommitList.clearFlag(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.noMoreCommits(),org.eclipse.jgit.revwalk.RevCommitList.indexOf(org.eclipse.jgit.revwalk.RevFlag, int),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks(),org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getRowCount(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit(),org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.pgm.Glog.walkLoop(),org.eclipse.jgit.revwalk.RevCommitList.lastIndexOf(org.eclipse.jgit.revwalk.RevFlag, int)	true	3176
2794.json	org.eclipse.jgit.internal.ketch.KetchReplica.delete(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	2793.json	org.eclipse.jgit.internal.ketch.KetchReplica.removeStaged(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	true	872
7025.json	org.eclipse.jgit.api.InitCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,358.json,null,null,null,null,null,null,null,904.json,6884.json	org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository(),org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir(),org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.testRandomPatterns(),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.InitCommandTest.testInitBareRepository(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.InitCommandTest.testInitRepository(),org.eclipse.jgit.ant.tasks.GitInitTask.execute(),org.eclipse.jgit.api.CloneCommand.init()	true	2743
3162.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.currentSize()	3338.json,3302.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.estimateBytes(long),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()	true	297
7103.json	org.eclipse.jgit.api.Git.remoteSetUrl()	null,null,83.json	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.pgm.Remote.run()	true	911
1660.json	org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.clear()	noCall	noCall	true	2768
353.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.createWalk()	378.json,352.json	org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
3924.json	org.eclipse.jgit.internal.storage.io.BlockSource.Anonymous-5df12ca9-2c50-4f3d-9fd9-e217a56c399a.read(long, int)	noCall	noCall	true	297
3572.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newRename(java.lang.String, java.lang.String)	noCall	noCall	true	2410
8281.json	org.eclipse.jgit.util.HttpSupport.encode(java.lang.StringBuilder, java.lang.String)	1694.json	org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	true	3176
368.json	org.eclipse.jgit.pgm.Log.ignoreLeadingSpace(boolean)	noCall	noCall	true	2899
5872.json	org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, byte[], int)	5871.json,null	org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEditor.Anonymous-7bda3175-148c-4447-89f7-78704a0137e3.compare(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit, org.eclipse.jgit.dircache.DirCacheEditor.PathEdit)	true	3176
4758.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile)	null,4734.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.handlePackError(java.io.IOException, org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedObject(org.eclipse.jgit.lib.AnyObjectId)	true	3176
9097.json	org.eclipse.jgit.lib.RepositoryCache.register(org.eclipse.jgit.lib.Repository)	null,null,null,null,null,null,null	org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCountWithRegisteredRepository(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpiredAndUsageCountNegative(),org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUnregisteringWhenExpired(),org.eclipse.jgit.lib.RepositoryCacheTest.testReconfigure(),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister()	true	3176
2781.json	org.eclipse.jgit.internal.ketch.KetchReplica.getCommitSpeed()	noCall	noCall	true	872
9034.json	org.eclipse.jgit.lib.PersonIdent.getWhen()	null,null,null,null,null,null,null,119.json,null,270.json,null,null,null,6218.json,272.json,3245.json,4827.json,null,8318.json,null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent(),org.eclipse.jgit.awtui.CommitGraphPane.DateCellRender.getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.pgm.Blame.date(int),org.eclipse.jgit.transport.PushCertificateStore.Anonymous-6686537f-17dc-4d77-a5fa-a9e915118d49.compare(org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.transport.PushCertificateStore.PendingCert),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.transport.PushCertificateStore.sortPending(java.util.List<org.eclipse.jgit.transport.PushCertificateStore.PendingCert>),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.iso(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent(),org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.timeof(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(org.eclipse.jgit.internal.storage.reftable.MergedReftable),org.eclipse.jgit.internal.storage.file.GC.listRefLogObjects(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.util.ChangeIdUtilTest.tick()	true	3176
8806.json	org.eclipse.jgit.lib.ConfigSnapshot.getSubsections(java.lang.String)	8885.json	org.eclipse.jgit.lib.Config.getSubsections(java.lang.String)	true	2260
5762.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.after(java.util.Date)	null,1904.json	org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter(),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int)	true	3176
7041.json	org.eclipse.jgit.api.PullResult.getFetchResult()	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict()	true	2802
9930.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.equals(java.lang.Object)	null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_DiffLength(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals_SameLength()	true	856
6470.json	org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	6440.json,6452.json,6456.json,6442.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	true	2567
8135.json	org.eclipse.jgit.util.StringUtils.toBoolean(java.lang.String)	null,9405.json,9404.json	org.eclipse.jgit.util.FS_POSIX.getAtomicFileCreationSupportOption(org.eclipse.jgit.storage.file.FileBasedConfig),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(org.eclipse.jgit.lib.Config, T[], java.lang.String, java.lang.String, java.lang.String, T),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getBoolean(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, boolean)	false	3070
5896.json	org.eclipse.jgit.dircache.DirCache.findEntry(java.lang.String)	5903.json,112.json,7350.json,null,null,null,null	org.eclipse.jgit.dircache.DirCache.getEntry(java.lang.String),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder()	true	3176
3862.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setRepositoryDescription(org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription)	3863.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	true	2410
3991.json	org.eclipse.jgit.internal.storage.file.RefDirectory.newSymbolicRef(org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String, java.lang.String)	3954.json,3977.json	org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	3059
9265.json	org.eclipse.jgit.lib.Constants.encodeASCII(long)	null,null,4885.json,null,4007.json,null,2398.json,null,3503.json,2410.json,null,6592.json	org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_Number13(),org.eclipse.jgit.junit.TestRepository.assertHash(org.eclipse.jgit.revwalk.RevObject, byte[]),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.writeHeader(java.io.OutputStream, int, long),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.util.sha1.SHA1Test.blob(byte[], org.eclipse.jgit.util.sha1.SHA1),org.eclipse.jgit.diff.DiffFormatter.writeRange(char, int, int)	true	3176
1172.json	org.eclipse.jgit.notes.LeafBucket.getTreeId()	noCall	noCall	true	2709
8883.json	org.eclipse.jgit.lib.Config.getTimeUnit(java.lang.String, java.lang.String, java.lang.String, long, java.util.concurrent.TimeUnit)	null,8748.json,null,null	org.eclipse.jgit.lib.ConfigTest.parseTime(java.lang.String, java.util.concurrent.TimeUnit),org.eclipse.jgit.lib.RepositoryCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ConfigTest.testTimeUnitInvalidWithSection(),org.eclipse.jgit.lib.ConfigTest.testTimeUnitDefaultValue()	true	698
6596.json	org.eclipse.jgit.diff.DiffFormatter.diff(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	6595.json	org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry)	true	2834
3564.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.exactRef(java.lang.String)	null,null,3571.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.newUpdate(java.lang.String, boolean)	true	1060
6476.json	org.eclipse.jgit.diff.HistogramDiff.diffNonCommon(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.HashedSequenceComparator<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.Edit)	noCall	noCall	true	2816
8515.json	org.eclipse.jgit.util.IntList.contains(int)	null	org.eclipse.jgit.util.IntListTest.testContains()	true	317
9607.json	org.eclipse.jgit.lib.AnyObjectId.copyRawTo(int[], int)	noCall	noCall	true	3176
2201.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.parse(java.lang.String)	noCall	noCall	true	2813
2730.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(org.eclipse.jgit.transport.Transport, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	2729.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
3510.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack()	3508.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginObject(int, long)	true	2410
282.json	org.eclipse.jgit.pgm.Fetch.nothin(boolean)	noCall	noCall	true	3176
9331.json	org.eclipse.jgit.lib.BatchRefUpdate.getPrefixes(java.lang.String)	9326.json,4497.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	1898
7316.json	org.eclipse.jgit.api.CheckoutResult.getStatus()	null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict()	true	2728
9594.json	org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	3262.json,1223.json,8791.json,9603.json,3258.json,9551.json,1249.json,2724.json,1371.json,2306.json,2787.json,6812.json,7195.json,4469.json,null,2839.json,null,2807.json,7405.json,8038.json,4470.json,null,1852.json,8794.json,1222.json,2743.json,160.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note),org.eclipse.jgit.lib.ObjectIdSubclassMap.get(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store),org.eclipse.jgit.transport.TrackingRefUpdate.Command.decode(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.internal.ketch.KetchReplica.equals(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.internal.ketch.LogIndex),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isReachable(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.util.RefMap.Ent.equals(java.lang.Object),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevObjectTest.testEquals(),org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.lib.ObjectIdSubclassMap.addIfAbsent(Q),org.eclipse.jgit.notes.NoteMapMerger.sameNote(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.pgm.debug.VerifyReftable.verify(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.internal.storage.reftable.RefCursor)	true	3176
7921.json	org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl()	7187.json,7227.json	org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.SubmoduleInitCommand.call()	true	2335
964.json	org.eclipse.jgit.merge.StrategyOneSided.OneSide.mergeImpl()	noCall	noCall	true	3176
1585.json	org.eclipse.jgit.transport.http.JDKHttpConnectionFactory.create(java.net.URL, java.net.Proxy)	noCall	noCall	true	1572
4459.json	org.eclipse.jgit.internal.storage.file.GcLog.write(java.lang.String)	4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	true	370
1103.json	org.eclipse.jgit.hooks.PreCommitHook.call()	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	1195
6812.json	org.eclipse.jgit.api.RevertCommand.call()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()	true	2715
7662.json	org.eclipse.jgit.treewalk.FileTreeIterator.entries()	noCall	noCall	true	3176
8345.json	org.eclipse.jgit.util.sha1.SHA1.digest()	null,null,4027.json,null,null,4017.json,7837.json,null	org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long),org.eclipse.jgit.util.sha1.SHA1Test.detectsShatteredByDefault()	true	468
1244.json	org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand()	1951.json,1970.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref)	true	2210
6672.json	org.eclipse.jgit.diff.HashedSequencePair.getComparator()	6779.json	org.eclipse.jgit.diff.LowLevelDiffAlgorithm.diffNonCommon(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	true	2820
9122.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.hashCode()	noCall	noCall	true	3176
4697.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackSize()	noCall	noCall	true	1561
4672.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.findPosition(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1922
1444.json	org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	1434.json	org.eclipse.jgit.transport.UploadPack.service()	false	3176
417.json	org.eclipse.jgit.pgm.TextBuiltin.resolve(java.lang.String)	noCall	noCall	true	3176
4612.json	org.eclipse.jgit.internal.storage.file.LockFile.lock()	null,null,216.json,4192.json,5890.json,4489.json,217.json,6089.json,4500.json,null,4456.json,null,null,4856.json,214.json,4849.json,null,4613.json,null,null,1958.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.PackLock.lock(java.lang.String),org.eclipse.jgit.dircache.DirCache.lock(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError(),org.eclipse.jgit.internal.storage.file.GcLog.lock(boolean),org.eclipse.jgit.junit.TestRepository.writeFile(java.io.File, byte[]),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.internal.storage.file.LockFile.lockForAppend(),org.eclipse.jgit.internal.storage.file.RefDirectory.lockPackedRefs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked(),org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	true	3176
8347.json	org.eclipse.jgit.util.sha1.SHA1.digest(org.eclipse.jgit.lib.MutableObjectId)	2398.json,2410.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	468
3574.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.create()	noCall	noCall	true	2410
4696.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.getPackFile()	null,null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyOpenPack(boolean),org.eclipse.jgit.transport.PackParserTest.test1(),org.eclipse.jgit.transport.PackParserTest.test2()	true	2692
9623.json	org.eclipse.jgit.lib.AnyObjectId.getName()	null,null,null,null,null,null,null,null,null,7391.json,7421.json,null,null,null,10399.json,null,null,7472.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7430.json,null,7400.json,null,null,null,null,1102.json,7405.json,null,null,7198.json,null,null,null,2662.json,1011.json,7409.json,null,null,2938.json,null,null,7438.json,6812.json,null,null,null,null,null,null,null,8962.json,null,null,null,null,null,null,null,1030.json,null,233.json,10429.json,null,null,null,7407.json,null,null,null,6814.json,null,null,null,null,1033.json,null,null,null,null,null,null,null,null,7429.json,null,6980.json,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.ResetCommandTest.assertReflogDisabled(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsPeel(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.updateHead(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.http.server.ServletUtils.etag(byte[]),org.eclipse.jgit.transport.UploadPackTest.testV2FetchOfsDelta(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommand.getShortBranchName(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefix(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchIncludeTag(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilterWhenNotAllowed(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenAndDone(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchNoProgress(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.RebaseCommand.getHeadName(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.revwalk.RevWalkShallowTest.createShallowFile(org.eclipse.jgit.lib.ObjectId...),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsMultipleCommands(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefs(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerStopsNegotiation(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchClientStopsNegotiation(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.assertEntry(java.lang.String, java.lang.String, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.lib.Repository.simplify(java.lang.String),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchThinPack(),org.eclipse.jgit.api.ResetCommandTest.assertReflog(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.merge.SquashMessageFormatter.format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.pgm.Clone.checkingOut(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.http.server.FileSender.getTailChecksum(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit(),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testSelectionOrderingWithChains(),org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchShallow(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchServerDoesNotStopNegotiation(),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsSymrefs(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchDeepenWithoutDone(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertAlternateObjects(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.api.CommitCommand.insertChangeId(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.transport.UploadPackTest.testV2LsRefsRefPrefixNoSlash(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter()	true	3176
1073.json	org.eclipse.jgit.errors.LargeObjectException.setObjectId(org.eclipse.jgit.lib.AnyObjectId)	4058.json,5377.json,5019.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2846
5721.json	org.eclipse.jgit.revwalk.filter.AuthorRevFilter.create(java.lang.String)	349.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addAuthorRevFilter(java.lang.String)	true	3176
5981.json	org.eclipse.jgit.dircache.DirCacheEntry.getLastModified()	7019.json,null,null,null,null,144.json,978.json,7830.json,6024.json,null,null,null,null,5993.json,7243.json,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.merge.MergerTest.checkConsistentLastModified(java.lang.String...),org.eclipse.jgit.dircache.DirCacheEntry.toString(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit()	true	3176
8665.json	org.eclipse.jgit.patch.FileHeader.p1(java.lang.String)	8661.json,8658.json,8660.json	org.eclipse.jgit.patch.FileHeader.parseNewName(int, int),org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int),org.eclipse.jgit.patch.FileHeader.parseOldName(int, int)	true	3176
4961.json	org.eclipse.jgit.internal.storage.reftree.RefTree.cleanupPeeledRef(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.lib.Ref)	4959.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command)	true	884
4634.json	org.eclipse.jgit.internal.storage.file.LockFile.unlock()	null,null,9880.json,null,null,3974.json,4458.json,null,4616.json,4849.json,4620.json,null,5891.json,4614.json,4627.json,null,1958.json,5895.json,4612.json,4621.json,4622.json,6089.json,4456.json,null,4856.json,4457.json,3961.json,null,4490.json,3987.json,null	org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.abort(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.packedRefsLockFailure(),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.GcLog.commit(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.internal.storage.file.LockFile.write(byte[]),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.storage.file.LockFile.Anonymous-c22d3445-d189-4160-9b07-8368d85b3fe3.close(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.dircache.DirCache.write(),org.eclipse.jgit.internal.storage.file.LockFile.copyCurrentContent(),org.eclipse.jgit.internal.storage.file.LockFile.commit(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPackedRefsLockFailure(),org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.dircache.DirCache.unlock(),org.eclipse.jgit.internal.storage.file.LockFile.lock(),org.eclipse.jgit.internal.storage.file.LockFile.getOutputStream(),org.eclipse.jgit.internal.storage.file.LockFile.requireLock(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.GcLog.lock(boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String),org.eclipse.jgit.internal.storage.file.GcLog.unlock(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.singleRefUpdateDoesNotRequirePackedRefsLock(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.unlock(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(java.io.File, int, org.eclipse.jgit.internal.storage.file.LockFile),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked()	true	3176
7693.json	org.eclipse.jgit.treewalk.filter.PathFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	5630.json	org.eclipse.jgit.revwalk.FollowFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
5184.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.newEncoder(java.io.OutputStream, long, int)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
6713.json	org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean)	null,6712.json,null,null,null	org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	2899
7371.json	org.eclipse.jgit.api.ArchiveCommand.call()	null,null,362.json,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1871
4438.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getFS()	noCall	noCall	true	2692
9254.json	org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2851
7392.json	org.eclipse.jgit.api.MergeCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	null,7391.json,null,7131.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.api.PullCommand.call()	true	2939
6132.json	org.eclipse.jgit.storage.pack.PackStatistics.getTotalObjects()	3636.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics)	true	1094
5435.json	org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlag)	1455.json,1361.json,5417.json,null,null,5139.json,1910.json,3018.json,4990.json,1364.json,1365.json,null,1374.json,null,1905.json,7260.json,1323.json,1359.json,1362.json,1915.json,1363.json,112.json,1377.json,1914.json,5463.json,331.json,1467.json,5617.json,null,1912.json,null,3024.json,1904.json,1376.json,5644.json,1454.json,1470.json	org.eclipse.jgit.transport.UploadPack.want(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.processBlob(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag, int, int),org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlag(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.Anonymous-9e2f4a4d-aeff-43c8-b1e6-ca2a9775d495.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.revwalk.AddUnseenToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.NotInBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.needs(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlag(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.transport.PacketLineIn.AckNackResult),org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.transport.BasePackFetchConnection.markAdvertised(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.AbstractRevQueue.add(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevFlag),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean),org.eclipse.jgit.transport.UploadPack.addCommonBase(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markUnshallow(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin(),org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet(),org.eclipse.jgit.internal.revwalk.AddToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.DepthGenerator.next(),org.eclipse.jgit.transport.UploadPack.parseWants(),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	true	3176
1484.json	org.eclipse.jgit.transport.HttpConfig.Anonymous-76f57d4a-cc8d-45f8-8078-651167dc50e2.get()	noCall	noCall	true	297
158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	155.json	org.eclipse.jgit.pgm.debug.VerifyReftable.run()	true	297
10269.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getInitParameterNames()	noCall	noCall	true	2438
6707.json	org.eclipse.jgit.diff.SubsequenceComparator.equals(org.eclipse.jgit.diff.Subsequence<S>, int, org.eclipse.jgit.diff.Subsequence<S>, int)	noCall	noCall	true	2830
4678.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getOptions()	4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	true	1922
4179.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Entry.getFlags()	null	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1922
7181.json	org.eclipse.jgit.api.GarbageCollectCommand.setPrunePreserved(boolean)	436.json	org.eclipse.jgit.pgm.Gc.run()	true	506
7376.json	org.eclipse.jgit.api.ArchiveCommand.setFormat(java.lang.String)	null,null,362.json,null,null	org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1871
7139.json	org.eclipse.jgit.api.PullCommand.setRecurseSubmodules(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode)	null	org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean)	true	444
3517.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.encodeTypeSize(int, long)	3516.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.beginObject(int, long)	true	2410
4109.json	org.eclipse.jgit.internal.storage.file.PackFile.getIndex()	null,4817.json,4834.json	org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.GC.getStatistics()	true	2142
6685.json	org.eclipse.jgit.diff.RenameDetector.isOverRenameLimit()	null	org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit()	true	2899
7930.json	org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte)	1157.json,null,9201.json,1704.json,1160.json,9344.json,9914.json,9919.json,9206.json,9981.json,null	org.eclipse.jgit.notes.NoteParser.parseFanoutCell(),org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt4_1(),org.eclipse.jgit.lib.AbbreviatedObjectId.isId(java.lang.String),org.eclipse.jgit.transport.URIish.parseHexByte(byte, byte),org.eclipse.jgit.notes.NoteParser.isHex(),org.eclipse.jgit.lib.ObjectId.isId(java.lang.String),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isId(java.lang.String),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.hexUInt64(byte[], int, int),org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte[], int, int),org.eclipse.jgit.lfs.lib.LongObjectId.isId(java.lang.String),org.eclipse.jgit.util.RawParseUtils_HexParseTest.assertNotHex(char)	true	3176
7252.json	org.eclipse.jgit.api.DescribeCommand.longDescription(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.lib.ObjectId)	7259.json,7260.json	org.eclipse.jgit.api.DescribeCommand.Candidate.describe(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.DescribeCommand.call()	true	1189
3288.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.finishFile()	3303.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()	true	297
4751.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	4449.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	2833
7529.json	org.eclipse.jgit.api.AddCommand.setWorkingTreeIterator(org.eclipse.jgit.treewalk.WorkingTreeIterator)	null,null	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategy(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator()	true	2880
5143.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject, int)	5142.json,5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2893
5566.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistoryInnerLoop(org.eclipse.jgit.revwalk.RevCommit, int)	5565.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistory(org.eclipse.jgit.revwalk.RevCommit, int)	true	3176
9576.json	org.eclipse.jgit.lib.IndexDiff.getAdded()	null,null,6968.json,null,null,6958.json,9570.json,null,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.Status.getAdded(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple()	true	3176
4456.json	org.eclipse.jgit.internal.storage.file.GcLog.lock(boolean)	4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	true	370
4931.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	4930.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	880
10230.json	org.eclipse.jgit.http.server.SmartOutputStream.overflow()	noCall	noCall	true	3011
7383.json	org.eclipse.jgit.api.MergeCommand.FastForwardMode.Merge.valueOf(org.eclipse.jgit.api.MergeCommand.FastForwardMode)	null	org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMerge()	true	1968
4524.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.initEntry()	noCall	noCall	true	3176
8427.json	org.eclipse.jgit.util.FS.discoverGitSystemConfig()	8428.json	org.eclipse.jgit.util.FS.getGitSystemConfig()	true	1115
407.json	org.eclipse.jgit.pgm.TextBuiltin.execute(java.lang.String[])	393.json,null,83.json	org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...),org.eclipse.jgit.pgm.Remote.run()	true	3176
5441.json	org.eclipse.jgit.revwalk.LIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	null	org.eclipse.jgit.revwalk.LIFORevQueueTest.testAddLargeBlocks()	true	3176
5377.json	org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.lib.ObjectLoader)	5375.json,5376.json	org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(org.eclipse.jgit.revwalk.RevObject)	true	2846
7508.json	org.eclipse.jgit.api.NameRevCommand.setMergeCost(int)	null	org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent()	true	1913
3441.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.lockFor(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3435.json,3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
5314.json	org.eclipse.jgit.attributes.FilterCommandRegistry.createFilterCommand(java.lang.String, org.eclipse.jgit.lib.Repository, java.io.InputStream, java.io.OutputStream)	6048.json,7807.json	org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, java.io.OutputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	628
4063.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.Anonymous-64a8ac4c-f7fa-4006-b259-d03d12a94c23.close()	noCall	noCall	true	2901
10231.json	org.eclipse.jgit.http.server.SmartOutputStream.close()	noCall	noCall	false	3011
1280.json	org.eclipse.jgit.transport.RemoteConfig.addFetchRefSpec(org.eclipse.jgit.transport.RefSpec)	null,null,null,null,null,null,null,null,7464.json,null,null,6885.json,null,null,null	org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags(),org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout(),org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(org.eclipse.jgit.api.Git, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.RemoteTest.setUp()	true	3176
4767.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.loadAlternates()	4765.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.myAlternates()	true	3176
8138.json	org.eclipse.jgit.util.StringUtils.join(java.util.Collection<java.lang.String>, java.lang.String, java.lang.String)	8137.json,1011.json,1014.json	org.eclipse.jgit.util.StringUtils.join(java.util.Collection<java.lang.String>, java.lang.String),org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.merge.MergeMessageFormatter.joinNames(java.util.List<java.lang.String>, java.lang.String, java.lang.String)	true	2773
5065.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.tryStealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)	5054.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask)	true	1887
7317.json	org.eclipse.jgit.api.CheckoutResult.getConflictList()	null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict()	true	2728
8296.json	org.eclipse.jgit.util.GitDateParser.getNewSimpleDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>)	8295.json	org.eclipse.jgit.util.GitDateParser.getDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)	true	1659
3456.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.setObjectChecker(org.eclipse.jgit.lib.ObjectChecker)	noCall	noCall	true	319
6406.json	org.eclipse.jgit.blame.ReverseWalk.next()	noCall	noCall	true	2567
4443.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
1901.json	org.eclipse.jgit.transport.BasePackFetchConnection.close()	2324.json,null,1900.json,null,null	org.eclipse.jgit.transport.InternalFetchConnection.close(),org.eclipse.jgit.transport.TransportGitSsh.SshFetchConnection.close(),org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.TransportLocal.ForkLocalFetchConnection.close(),org.eclipse.jgit.transport.TransportGitAnon.TcpFetchConnection.close()	true	2903
998.json	org.eclipse.jgit.merge.ResolveMerger.getModifiedFiles()	7237.json,7385.json	org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2841
10145.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.getPassword()	noCall	noCall	true	2768
8041.json	org.eclipse.jgit.util.FS_Win32_Cygwin.newInstance()	noCall	noCall	true	2645
9900.json	org.eclipse.jgit.lfs.BuiltinLFS.isAvailable()	noCall	noCall	true	98
1847.json	org.eclipse.jgit.transport.ReceiveCommand.getRefLogMessage()	9335.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage(org.eclipse.jgit.transport.ReceiveCommand)	true	319
9810.json	org.eclipse.jgit.lib.ObjectReader.getStreamFileThreshold()	3806.json,4140.json,4045.json,null,3532.json,4058.json,4034.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.getCachedBytes(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackLargeFile(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	2900
4926.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doLink(java.lang.String)	noCall	noCall	true	880
1321.json	org.eclipse.jgit.transport.BundleFetchConnection.setPackLockMessage(java.lang.String)	noCall	noCall	true	3176
1376.json	org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit)	1374.json,1375.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	true	3176
927.json	org.eclipse.jgit.merge.ThreeWayMerger.getBaseCommitId()	6812.json	org.eclipse.jgit.api.RevertCommand.call()	true	1649
8999.json	org.eclipse.jgit.lib.Repository.getGitwebDescription()	null	org.eclipse.jgit.internal.storage.file.DescriptionTest.description()	true	572
7190.json	org.eclipse.jgit.api.RenameBranchCommand.setOldName(java.lang.String)	null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch()	true	2800
4344.json	org.eclipse.jgit.internal.storage.file.WindowCursor.open(org.eclipse.jgit.lib.AnyObjectId, int)	4794.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.openStream()	true	2907
126.json	org.eclipse.jgit.pgm.Push.printUpdateLine(char, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	124.json	org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
2563.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowBranchDeletes(boolean)	noCall	noCall	true	3176
6340.json	org.eclipse.jgit.fnmatch.FileNameMatcher.parseHeads(java.lang.String, java.lang.Character)	6338.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createHeadsStartValues(java.lang.String, java.lang.Character)	true	3176
4338.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getDeltaBaseCache()	4140.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	2627
5574.json	org.eclipse.jgit.revwalk.PendingGenerator.outputType()	noCall	noCall	true	3176
1519.json	org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	1514.json	org.eclipse.jgit.transport.BasePackPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
1236.json	org.eclipse.jgit.transport.TagOpt.option()	1265.json,1237.json	org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.TagOpt.fromOption(java.lang.String)	true	3176
4511.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.findLevelOne(long)	4514.json,4513.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(long),org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectId(long)	true	1808
90.json	org.eclipse.jgit.pgm.UploadPack.requiresRepository()	noCall	noCall	true	3176
7806.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream)	7821.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream()	true	2851
8979.json	org.eclipse.jgit.lib.Repository.findRef(java.lang.String)	4864.json,6928.json,null,7219.json,null,null,null,7188.json,278.json,null,8961.json,null,1995.json,7471.json,6953.json,null,7221.json,430.json,null,null,7331.json,6863.json	org.eclipse.jgit.internal.storage.file.FileRepository.getReflogReader(java.lang.String),org.eclipse.jgit.api.PushCommand.add(java.lang.String),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.emptyRefDirectoryDeleted(),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.IndexedRepos.sha1(java.lang.String, java.lang.String),org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch(),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.Repository.resolve(java.lang.String),org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs(),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.lib.RefTest.testRefsUnderRefs(),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.DeleteTagCommand.call()	true	3176
1010.json	org.eclipse.jgit.merge.EolAwareOutputStream.write(byte[], int, int)	noCall	noCall	true	1166
8706.json	org.eclipse.jgit.patch.HunkHeader.copyLine(java.lang.StringBuilder, java.lang.String[], int[], int)	8705.json,8730.json	org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[]),org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[])	true	3176
248.json	org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>)	273.json,383.json,247.json	org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Diff.run()	true	2899
10118.json	org.eclipse.jgit.archive.TarFormat.createArchiveOutputStream(java.io.OutputStream)	noCall	noCall	true	2013
2918.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginWholeObject(long, int, long)	noCall	noCall	true	319
5874.json	org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	null,4949.json,1033.json	org.eclipse.jgit.transport.PushCertificateStore.newDirCache(),org.eclipse.jgit.internal.storage.reftree.RefTree.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int)	true	923
4346.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getObjectSize(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	2893
5890.json	org.eclipse.jgit.dircache.DirCache.lock()	null,208.json,5877.json	org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS)	true	3176
9105.json	org.eclipse.jgit.lib.RepositoryCache.reconfigure(org.eclipse.jgit.lib.RepositoryCacheConfig)	8749.json	org.eclipse.jgit.lib.RepositoryCacheConfig.install()	true	698
3458.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.Builder.build()	noCall	noCall	true	2410
902.json	org.eclipse.jgit.ant.tasks.GitInitTask.setDest(java.io.File)	noCall	noCall	true	2596
2729.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	noCall	noCall	true	872
9332.json	org.eclipse.jgit.lib.BatchRefUpdate.addPrefixesTo(java.lang.String, java.util.Collection<java.lang.String>)	9330.json,9331.json,4497.json	org.eclipse.jgit.lib.BatchRefUpdate.getTakenPrefixes(java.util.Collection<java.lang.String>),org.eclipse.jgit.lib.BatchRefUpdate.getPrefixes(java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	1898
322.json	org.eclipse.jgit.pgm.opt.CmdLineParser.getRevWalkGently()	408.json	org.eclipse.jgit.pgm.TextBuiltin.parseArguments(java.lang.String[])	true	3176
1669.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaTree()	noCall	noCall	true	629
7544.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.reset()	noCall	noCall	true	2839
4240.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.write(java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>, byte[])	null,null,4016.json,4718.json,5108.json,3514.json	org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.PackInserter.writePackIndex(java.io.File, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx(),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.DfsInserter.index(java.io.OutputStream, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	3176
5021.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.checkLoadable(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, long)	5020.json,5019.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	1990
1137.json	org.eclipse.jgit.notes.NoteMap.iterator()	null,null,null,null,7219.json,null,null	org.eclipse.jgit.notes.NoteMapMergerTest.countNotes(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.notes.NoteMapTest.testIteratorFlatTree(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_38(),org.eclipse.jgit.notes.NoteMapTest.testIteratorEmptyMap(),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_2_36(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFullyFannedOut()	true	2713
2013.json	org.eclipse.jgit.transport.Transport.setPushThin(boolean)	null,6911.json,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions()	true	3176
2912.json	org.eclipse.jgit.internal.ketch.KetchLeader.commitAsync(org.eclipse.jgit.internal.ketch.KetchReplica)	2910.json	org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	true	872
6547.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config)	noCall	noCall	true	676
8467.json	org.eclipse.jgit.util.FS.Attributes.getFile()	7672.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getFile()	true	1579
3778.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getNewPackStatistics()	noCall	noCall	true	2410
3847.json	org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.isLarge()	noCall	noCall	true	2410
4472.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectCount()	noCall	noCall	true	3176
5034.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.createWindow(int)	noCall	noCall	true	1886
6359.json	org.eclipse.jgit.fnmatch.WildCardHead.matches(char)	noCall	noCall	true	3176
3728.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, java.util.Collection<T>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReader.FoundObject<T>>)	3727.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.findAll(java.lang.Iterable<T>)	true	696
3400.json	org.eclipse.jgit.internal.storage.dfs.ReftableStack.open(org.eclipse.jgit.internal.storage.dfs.DfsReader, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReftable>)	3774.json,3686.json,3384.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	true	286
193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	noCall	noCall	true	856
9282.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.delay(long, java.util.concurrent.TimeUnit)	9274.json	org.eclipse.jgit.lib.BatchingProgressMonitor.beginTask(java.lang.String, int)	true	2658
8107.json	org.eclipse.jgit.util.TemporaryBuffer.switchToOverflow()	8106.json,8093.json	org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit(),org.eclipse.jgit.util.TemporaryBuffer.doFlush()	true	2909
3908.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableMap(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	null	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	true	286
3214.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.queueSize()	noCall	noCall	true	297
8594.json	org.eclipse.jgit.util.SystemReader.Default.getHostname()	noCall	noCall	true	3176
352.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	378.json	org.eclipse.jgit.pgm.Log.run()	true	3176
2820.json	org.eclipse.jgit.internal.ketch.KetchSystem.getTxnAccepted()	2784.json,2759.json,2762.json,2723.json,2788.json,2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.initialize(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
1714.json	org.eclipse.jgit.transport.URIish.getPath()	null,null,1806.json,null,null,null,null,null,null,1728.json,null,2050.json,null,null,null,null,null,2298.json,1724.json,null,1821.json,null,null,null,null,null,null,null,null,1495.json,null,null,1725.json,null,null,null,1871.json,null,null,null,null,1807.json,null,null,null,null,null,2152.json,null,null,null,2049.json,1881.json,null,1822.json,null,9871.json,null,null,1808.json,1731.json,null,1879.json,null,1820.json	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.TransportSftp.openPush(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-d5fbdced-de8a-4ee7-b6f4-e81b78ebaedc.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.junit.http.HttpTestCase.join(org.eclipse.jgit.transport.URIish, java.lang.String),org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ea91b67b-c28a-4bdb-ad18-6ecf605c4ee3.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode(),org.eclipse.jgit.transport.URIishTest.testStringConstructor(),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.TransportGitAnon.service(java.lang.String, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.TransportSftp.openFetch(),org.eclipse.jgit.transport.TransportGitSsh.cleanNotFound(org.eclipse.jgit.errors.NoRemoteRepositoryException, java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-6c9352ed-88ab-442d-b26b-caf914bc32ab.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.extractProjectName(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.TransportLocal.Anonymous-0daac936-dcdd-48d2-a7eb-6ea66e2fb3ba.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIish.getHumanishName(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.TransportGitSsh.commandFor(java.lang.String),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
67.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.getBuffer()	58.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getOutputStream()	true	1572
5246.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.getBaseSize(byte[])	null	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest()	true	2900
6240.json	org.eclipse.jgit.revplot.PlotCommit.getLane()	null,6251.json,null,6220.json,null,null	org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane(),org.eclipse.jgit.revplot.PlotCommitList.addBlockedPosition(java.util.BitSet, org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.lanePos(int),org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.getLanePos(),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.lanePos(java.util.Set<java.lang.Integer>)	true	3176
6760.json	org.eclipse.jgit.diff.ContentSource.Pair.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	6598.json,6654.json,null	org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetector.calculateModifyScore(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.diff.DiffEntry)	true	2838
2361.json	org.eclipse.jgit.transport.RefSpec.expandFromDestination(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	3176
2940.json	org.eclipse.jgit.internal.fsck.FsckError.CorruptObject.getId()	null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor()	true	319
2310.json	org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
10211.json	org.eclipse.jgit.transport.JschSession.JschProcess.waitFor()	noCall	noCall	true	2636
9120.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.getFile()	null,null,null,null,7048.json	org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey(),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	3176
3654.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onInflatedObjectData(org.eclipse.jgit.transport.PackedObjectInfo, int, byte[])	noCall	noCall	true	2410
1837.json	org.eclipse.jgit.transport.ReceiveCommand.getRefName()	4504.json,3262.json,2796.json,4502.json,3256.json,null,4936.json,null,2805.json,2869.json,9326.json,null,2606.json,4497.json,2621.json,1859.json,2762.json,null,null,1853.json,null,2797.json,2803.json,3260.json,null,2799.json,null,1973.json,2794.json,null,9333.json,4500.json,null,null,3257.json,2136.json,4501.json,2789.json,null,2139.json,null,2763.json,2764.json,2743.json,2795.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.pushAsync(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.internal.storage.reftree.Command.getRefName(),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.PushCertificateStore.commandsEqual(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.BaseReceivePack.recvCommands(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.transport.ReceiveCommand.toString(),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.PushConnectionTest.Anonymous-d48345e4-8e28-4c1e-a308-84cb1a573543.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.internal.ketch.KetchReplica.defer(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.byName(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.internal.ketch.KetchReplica.delete(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificateStore.buildMessage(org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.sendStatusReport(boolean, java.lang.Throwable, org.eclipse.jgit.transport.BaseReceivePack.Reporter),org.eclipse.jgit.transport.PushConnectionTest.Anonymous-3e23c89a-331a-44f3-9f62-70b435181033.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificate.toStringBuilder(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.copy(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushCertificate.commandsEqual(org.eclipse.jgit.transport.PushCertificate, org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.internal.ketch.LocalReplica.checkFailed(java.util.List<java.lang.String>, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	3176
1775.json	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.encrypt(java.io.OutputStream)	noCall	noCall	true	966
7390.json	org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.lib.Ref)	null,null,null,null,7392.json,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy)	true	2939
4176.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Anonymous-8d023433-ac20-42d9-a91f-3efe7cc36868.remove()	noCall	noCall	true	1922
8522.json	org.eclipse.jgit.util.IntList.toString()	null	org.eclipse.jgit.util.IntListTest.testToString()	true	3176
10360.json	org.eclipse.jgit.http.server.InfoRefsServlet.Anonymous-148ecf1e-d25a-481e-aac0-1a3f29574194.writeOne(java.lang.CharSequence)	noCall	noCall	true	3070
7533.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.getParent()	6049.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	2239
2845.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.internal.ketch.Proposal)	2844.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(java.util.List<org.eclipse.jgit.internal.ketch.Proposal>)	true	872
4098.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.refLockFor(java.lang.String)	7215.json	org.eclipse.jgit.api.StashDropCommand.call()	true	2272
1030.json	org.eclipse.jgit.merge.SquashMessageFormatter.format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref)	null,7385.json	org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.MergeCommand.call()	true	2187
3405.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.setFound()	3748.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean)	true	1893
4121.json	org.eclipse.jgit.internal.storage.file.PackFile.decompress(long, int, org.eclipse.jgit.internal.storage.file.WindowCursor)	4140.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	true	3176
160.json	org.eclipse.jgit.pgm.debug.VerifyReftable.verify(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.internal.storage.reftable.RefCursor)	157.json,156.json,158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	297
2396.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.lib.ProgressMonitor)	2395.json	org.eclipse.jgit.transport.PackParser.processDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
7369.json	org.eclipse.jgit.api.ArchiveCommand.lookupFormat(java.lang.String)	7368.json,7371.json	org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(java.lang.String),org.eclipse.jgit.api.ArchiveCommand.call()	true	1844
107.json	org.eclipse.jgit.pgm.CommandCatalog.scan(java.net.URL)	noCall	noCall	true	3176
911.json	org.eclipse.jgit.ant.tasks.GitCloneTask.setDest(java.io.File)	null	org.eclipse.jgit.ant.tasks.GitCloneTaskTest.before()	true	2596
1853.json	org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack)	noCall	noCall	true	3176
9614.json	org.eclipse.jgit.lib.AnyObjectId.formatHexByte(byte[], int, int)	9611.json,9613.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(byte[], int),org.eclipse.jgit.lib.AnyObjectId.toHexByteArray()	true	3176
2495.json	org.eclipse.jgit.transport.CredentialItem.CharArrayType.setValue(char[])	1641.json,1659.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
3550.json	org.eclipse.jgit.internal.storage.dfs.DfsPacksChangedEvent.getListenerType()	noCall	noCall	true	2410
7406.json	org.eclipse.jgit.api.RebaseCommand.writeMergeInfo(org.eclipse.jgit.revwalk.RevCommit, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)	7405.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit)	true	1426
3750.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.garbagePacksForSelectRepresentation()	3747.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	108
8030.json	org.eclipse.jgit.util.RefMap.SetIterator.peek()	8028.json,8029.json	org.eclipse.jgit.util.RefMap.SetIterator.hasNext(),org.eclipse.jgit.util.RefMap.SetIterator.next()	true	3060
7476.json	org.eclipse.jgit.api.CheckoutCommand.setAllPaths(boolean)	388.json,null,null	org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository()	true	2295
1142.json	org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectId)	null,null,null,null,1143.json,null,1144.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes(),org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty(),org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict(),org.eclipse.jgit.notes.NoteMap.remove(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.createLargeNoteMap(java.lang.String, java.lang.String, int, int),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38(),org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes()	true	2766
9982.json	org.eclipse.jgit.lfs.lib.LongObjectId.toString(org.eclipse.jgit.lfs.lib.LongObjectId)	null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.test009_toString(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test010_toString()	true	856
7756.json	org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	2859
3696.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	3697.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndRemove(org.eclipse.jgit.lib.Ref)	true	235
3356.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableInitialMaxUpdateIndex(long)	noCall	noCall	true	278
2927.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onPackFooter(byte[])	noCall	noCall	true	319
1877.json	org.eclipse.jgit.transport.TransportGitSsh.openFetch()	noCall	noCall	true	3176
3743.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getObjectSize(java.lang.Iterable<T>, boolean)	noCall	noCall	true	2410
5869.json	org.eclipse.jgit.ignore.IgnoreNode.toString()	null	org.eclipse.jgit.ignore.IgnoreNodeTest.testToString()	true	1289
1554.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readAlternates(java.lang.String)	2513.json,2254.json,2053.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getAlternates(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getAlternates(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getAlternates()	true	3176
2338.json	org.eclipse.jgit.transport.BasePackConnection.getPeerUserAgent()	noCall	noCall	true	1137
1535.json	org.eclipse.jgit.transport.BundleWriter.assume(org.eclipse.jgit.revwalk.RevCommit)	null	org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(java.lang.String, java.lang.String, org.eclipse.jgit.revwalk.RevCommit, boolean)	true	3176
8169.json	org.eclipse.jgit.util.io.LimitedInputStream.read(byte[], int, int)	noCall	noCall	true	1565
4883.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream)	4877.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean)	true	2907
3267.json	org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.close()	noCall	noCall	true	297
7452.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.getDir()	7453.json,7400.json,7410.json,7399.json,7428.json,7457.json,7454.json,7455.json,7436.json,7456.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.getRewrittenDir(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.RebaseCommand.RebaseState.getPath(java.lang.String),org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(java.lang.String),org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.api.RebaseCommand.RebaseState.getFile(java.lang.String)	true	1912
6670.json	org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)	6665.json,6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	true	2816
2294.json	org.eclipse.jgit.transport.TransportProtocol.getRequiredFields()	2298.json	org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	2645
8541.json	org.eclipse.jgit.util.RefList.find(java.lang.String)	null,3568.json,3939.json,3573.json,3587.json,3976.json,3945.json,8543.json,8017.json,8542.json,null,3961.json,3951.json,3948.json,null,4967.json,3969.json,8549.json,null,8016.json,null,3566.json,3588.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.isNameConflicting(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.put(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String),org.eclipse.jgit.util.RefList.get(java.lang.String),org.eclipse.jgit.util.RefMap.remove(java.lang.Object),org.eclipse.jgit.util.RefList.contains(java.lang.String),org.eclipse.jgit.util.RefListTest.testAddToMiddleOfListByInsertionPosition(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String),org.eclipse.jgit.util.RefListTest.testEmpty(),org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, int, java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.util.RefList.put(T),org.eclipse.jgit.util.RefListTest.testEmptyBuilder(),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefListTest.testFindContainsGet(),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.remove(java.lang.String)	true	3060
5112.json	org.eclipse.jgit.internal.storage.pack.PackWriter.endPhase(org.eclipse.jgit.lib.ProgressMonitor)	5120.json,5113.json,5150.json,5125.json,5117.json,5139.json,5124.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	2399
7498.json	org.eclipse.jgit.api.CheckoutCommand.checkOptions()	7496.json,7493.json,7494.json	org.eclipse.jgit.api.CheckoutCommand.setStage(org.eclipse.jgit.api.CheckoutCommand.Stage),org.eclipse.jgit.api.CheckoutCommand.setStartPoint(java.lang.String),org.eclipse.jgit.api.CheckoutCommand.setStartPoint(org.eclipse.jgit.revwalk.RevCommit)	true	2031
3584.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.cachePeeledState(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	3568.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref)	true	2410
1839.json	org.eclipse.jgit.transport.ReceiveCommand.getRef()	2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	3176
1512.json	org.eclipse.jgit.transport.BasePackPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	1511.json	org.eclipse.jgit.transport.BasePackPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	1908
7398.json	org.eclipse.jgit.api.MergeCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7266.json,7405.json,7131.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PullCommand.call()	true	870
6270.json	org.eclipse.jgit.gitrepo.RepoProject.inGroup(java.lang.String)	6325.json	org.eclipse.jgit.gitrepo.ManifestParser.inGroups(org.eclipse.jgit.gitrepo.RepoProject)	true	1111
2596.json	org.eclipse.jgit.transport.BaseReceivePack.getPackSize()	noCall	noCall	true	1561
151.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId)	145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	true	297
3345.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.unlock()	noCall	noCall	true	2410
2454.json	org.eclipse.jgit.transport.PackParser.InflaterStream.skip(long)	noCall	noCall	true	2741
8210.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.format(java.lang.String, java.lang.Object...)	302.json,112.json,203.json,434.json,178.json,167.json,144.json,248.json,126.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.pgm.Push.printUpdateLine(char, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	2093
4684.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry.getXorOffset()	4096.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)	true	1922
2297.json	org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish)	null	org.eclipse.jgit.transport.WalkEncryptionTest.Required.test_A1_ValidURI()	true	2645
10046.json	org.eclipse.jgit.lfs.server.s3.S3Config.getAccessKey()	10055.json,10023.json,10027.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationHeader(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, byte[])	true	843
4152.json	org.eclipse.jgit.internal.storage.file.PackFile.extFile(org.eclipse.jgit.internal.storage.pack.PackExt)	4112.json,4148.json,4107.json	org.eclipse.jgit.internal.storage.file.PackFile.shouldBeKept(),org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex(),org.eclipse.jgit.internal.storage.file.PackFile.idx()	true	1976
4967.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean)	4908.json,4906.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String)	true	880
6533.json	org.eclipse.jgit.diff.RawText.decode(int, int)	6532.json	org.eclipse.jgit.diff.RawText.getString(int, int, boolean)	true	2797
9068.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir()	202.json,396.json,177.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.pgm.debug.TextHashFunctions.run()	true	2907
9827.json	org.eclipse.jgit.lib.ObjectReader.Filter.close()	noCall	noCall	true	776
2383.json	org.eclipse.jgit.transport.PackParser.setObjectChecker(org.eclipse.jgit.lib.ObjectChecker)	2614.json,3453.json,1320.json,1916.json,2384.json,1380.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.PackParser.setObjectChecking(boolean),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.downloadPack(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3229.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.getRefName()	noCall	noCall	true	297
2655.json	org.eclipse.jgit.transport.RefAdvertiser.init(org.eclipse.jgit.lib.Repository)	null,2604.json	org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	false	3070
1359.json	org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>)	1355.json	org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
2022.json	org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	2722.json,1987.json,2729.json,1989.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.internal.ketch.RemoteGitReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	true	3176
9544.json	org.eclipse.jgit.lib.RefUpdate.update()	null,null,null,null,null,null,null,null,null,null,null,null,430.json,null,null,null,null,null,null,7388.json,null,9543.json,null,null,3609.json,null,null,null,null,null,null,null,null,null,null,7331.json,null,null,null,null,null,7214.json,null,null,null,null,null,null,7385.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.junit.RepositoryTestCase.createBranch(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1(),org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists(),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.lib.RefUpdate.forceUpdate(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.lib.RefTest.testReadLooseRef(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testCreateMissingObject(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists(),org.eclipse.jgit.merge.MergeMessageFormatterTest.setUp(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.api.StashDropCommand.updateRef(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testForceUpdateMissingObject(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.pgm.BranchTest.testListDetached(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange(),org.eclipse.jgit.lib.RefTest.writeNewRef(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked()	true	3176
5733.json	org.eclipse.jgit.revwalk.filter.OrRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[])	noCall	noCall	true	3176
6741.json	org.eclipse.jgit.diff.DiffConfig.isRenameDetectionEnabled()	6548.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean)	true	2838
5505.json	org.eclipse.jgit.revwalk.ObjectWalk.newTreeVisit(org.eclipse.jgit.revwalk.RevObject)	5490.json,null	org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.revwalk.ObjectWalk.enterTree(org.eclipse.jgit.revwalk.RevObject)	true	2493
2871.json	org.eclipse.jgit.internal.ketch.Proposal.asCommandList(org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	noCall	noCall	true	872
4610.json	org.eclipse.jgit.internal.storage.file.LockFile.unlock(java.io.File)	noCall	noCall	true	2343
8197.json	org.eclipse.jgit.util.io.TimeoutOutputStream.close()	null,null	org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Timeout(),org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Success()	true	3176
3865.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setGitDir(java.io.File)	noCall	noCall	true	2410
4208.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.hashCode()	noCall	noCall	true	2733
7226.json	org.eclipse.jgit.api.SubmoduleInitCommand.addPath(java.lang.String)	noCall	noCall	true	2355
970.json	org.eclipse.jgit.merge.StrategyRecursive.getName()	noCall	noCall	true	1933
14.json	org.eclipse.jgit.awtui.CommitGraphPane.configureHeader()	noCall	noCall	true	3176
3418.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getFillPercentage()	noCall	noCall	true	2410
4352.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.CachedPack)	noCall	noCall	true	2683
3635.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getPackStats()	noCall	noCall	true	2410
5341.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.resetToMiddle()	5679.json	org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
7626.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator, int)	7865.json,7625.json,7861.json,7864.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.combineDF(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	3176
9401.json	org.eclipse.jgit.lib.ObjectChecker.normalize(byte[], int, int)	9375.json	org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	1551
7709.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.isEmpty()	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.shouldBeRecursive()	true	1965
8497.json	org.eclipse.jgit.util.FileUtils.setLastModified(java.io.File, long)	8408.json	org.eclipse.jgit.util.FS.setLastModified(java.io.File, long)	true	988
4392.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeCRCs()	4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	true	3176
3866.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setObjectDirectory(java.io.File)	noCall	noCall	true	2410
9090.json	org.eclipse.jgit.lib.SymbolicRef.getStorage()	null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor()	true	3176
4683.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry.getBitmap()	4096.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)	true	1922
3365.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsExpiredGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long)	3363.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore()	true	713
5303.json	org.eclipse.jgit.attributes.Attributes.equals(java.lang.Object)	noCall	noCall	true	925
7511.json	org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	7502.json,7510.json	org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.api.NameRevCommand.addPrefix(java.lang.String, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)	true	1915
4876.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream)	noCall	noCall	true	2907
3779.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toPrune()	3771.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
6102.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitWindowSize(int)	null,null,null,null,null,null,6111.json,null	org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_512(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_4097(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_Limits1(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_0(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit()	true	3176
2356.json	org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String)	null,null,2358.json,null,null,null,1998.json,8834.json,null,null,null	org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.api.CloneCommand.calculateRefSpecs(java.lang.String),org.eclipse.jgit.transport.RefSpec.expandFromSource(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.Transport.findTrackingRefName(java.lang.String, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(java.lang.String, java.lang.String),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
215.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs()	212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	true	3176
3438.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scan(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3428.json,3436.json,3424.json,3437.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.contains(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hasBlock0(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
3834.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.exists()	3835.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean)	true	2410
6815.json	org.eclipse.jgit.api.RevertCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	6814.json	org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.AnyObjectId)	true	2715
4384.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readDouble()	noCall	noCall	true	1922
2591.json	org.eclipse.jgit.transport.BaseReceivePack.sendError(java.lang.String)	2592.json	org.eclipse.jgit.transport.BaseReceivePack.fatalError(java.lang.String)	true	3176
4490.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.unlock()	3961.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate)	true	3059
219.json	org.eclipse.jgit.pgm.debug.ShowCacheTree.run()	noCall	noCall	true	3176
3652.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginRefDelta(long, org.eclipse.jgit.lib.AnyObjectId, long)	noCall	noCall	true	2410
1957.json	org.eclipse.jgit.transport.FetchProcess.removeFetchHeadRecord(org.eclipse.jgit.lib.ObjectId)	1955.json	org.eclipse.jgit.transport.FetchProcess.reopenConnection()	true	3176
2170.json	org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean)	2169.json,2162.json	org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PacketLineIn, boolean),org.eclipse.jgit.transport.PushCertificateParser.parse(java.io.Reader)	true	1067
5851.json	org.eclipse.jgit.ignore.internal.PathMatcher.matches(int, java.lang.String, int, int, boolean, boolean)	5850.json	org.eclipse.jgit.ignore.internal.PathMatcher.iterate(java.lang.String, int, int, boolean, boolean)	true	1322
1151.json	org.eclipse.jgit.notes.NoteParser.parse(org.eclipse.jgit.lib.AbbreviatedObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectReader)	1147.json,1225.json,1208.json	org.eclipse.jgit.notes.NoteMap.load(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.load(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
4717.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack()	noCall	noCall	true	2692
7399.json	org.eclipse.jgit.api.RebaseCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7131.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7266.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRepositoryStateChecks(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange()	true	2756
2938.json	org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex)	3453.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	319
1141.json	org.eclipse.jgit.notes.NoteMap.getCachedBytes(org.eclipse.jgit.lib.AnyObjectId, int)	null	org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes()	true	2767
1924.json	org.eclipse.jgit.transport.Daemon.getPackConfig()	null	org.eclipse.jgit.transport.Daemon.Anonymous-9a88878e-0733-4707-968c-06a0eae94c5c.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
9884.json	org.eclipse.jgit.lfs.LfsPrePushHook.findLfsPointers(java.util.Set<org.eclipse.jgit.lfs.LfsPointer>, org.eclipse.jgit.revwalk.ObjectWalk)	9883.json	org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush()	true	102
9299.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.grow()	9290.json,9291.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.add(Q),org.eclipse.jgit.lib.ObjectIdOwnerMap.addIfAbsent(Q)	true	2645
7521.json	org.eclipse.jgit.api.LsRemoteCommand.execute()	7520.json,7519.json	org.eclipse.jgit.api.LsRemoteCommand.callAsMap(),org.eclipse.jgit.api.LsRemoteCommand.call()	true	1478
4567.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.rename(java.io.File, java.io.File)	4566.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate)	true	3059
9952.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(byte[], int)	null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToByte(),org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromStringByte()	true	856
4160.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(byte[], int, int)	noCall	noCall	true	1922
5685.json	org.eclipse.jgit.revwalk.FIFORevQueue.toString()	noCall	noCall	true	3176
6093.json	org.eclipse.jgit.storage.file.FileBasedConfig.isOutdated()	4854.json	org.eclipse.jgit.internal.storage.file.FileRepository.getConfig()	true	2981
6561.json	org.eclipse.jgit.diff.DiffFormatter.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7282.json,247.json	org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.pgm.Diff.run()	true	2838
4703.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginRefDelta(long, org.eclipse.jgit.lib.AnyObjectId, long)	noCall	noCall	true	2692
8968.json	org.eclipse.jgit.lib.Repository.resolveReflogCheckout(int)	null	org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	2152
1717.json	org.eclipse.jgit.transport.URIish.setRawPath(java.lang.String)	null	org.eclipse.jgit.transport.URIishTest.testGetSet()	true	2381
6762.json	org.eclipse.jgit.diff.Edit.getType()	null,6516.json,null,null,6778.json,null,null,null,6483.json,null,null,6518.json,6479.json,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.EditTest.testType_Insert(),org.eclipse.jgit.diff.Edit.toString(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.MyersDiff.calculateEdits(int, int, int, int),org.eclipse.jgit.diff.EditTest.testType_Replace(),org.eclipse.jgit.diff.EditTest.testType_Delete(),org.eclipse.jgit.diff.DiffAlgorithm.normalize(org.eclipse.jgit.diff.SequenceComparator<? super S>, org.eclipse.jgit.diff.EditList, S, S),org.eclipse.jgit.diff.HistogramDiff.State.diff(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.diff.EditTest.testCreateEmpty(),org.eclipse.jgit.diff.EditTest.testType_Empty()	true	3176
7100.json	org.eclipse.jgit.api.Git.remoteList()	null,83.json	org.eclipse.jgit.api.RemoteListCommandTest.testList(),org.eclipse.jgit.pgm.Remote.run()	true	911
4701.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	2692
9585.json	org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged()	null	org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged()	true	2748
5205.json	org.eclipse.jgit.internal.storage.pack.CachedPack.getDeltaCount()	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	2671
6031.json	org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)	6042.json,6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2308
146.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.printf(java.lang.String, java.lang.Object...)	150.json,147.json,149.json,151.json,152.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId)	true	297
7331.json	org.eclipse.jgit.api.CreateBranchCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7471.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchDash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchHEAD(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory()	true	2800
9168.json	org.eclipse.jgit.lib.ObjectInserter.Filter.Anonymous-e425f4da-f617-4648-a67a-8e1d43208a7a.getCreatedFromInserter()	noCall	noCall	true	775
4965.json	org.eclipse.jgit.internal.storage.reftree.RefTree.writeTree(org.eclipse.jgit.lib.ObjectInserter)	null,2851.json,167.json,null,2850.json,4931.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.write(org.eclipse.jgit.internal.storage.reftree.RefTree),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	884
9373.json	org.eclipse.jgit.lib.ObjectChecker.duplicateName(byte[], int, int)	9375.json	org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	3176
1037.json	org.eclipse.jgit.merge.Merger.nonNullRepo()	null,null,975.json,976.json,null,974.json	org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.doMerge(org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>),org.eclipse.jgit.merge.ResolveMerger.checkout(),org.eclipse.jgit.merge.ResolveMerger.cleanUp(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.mergeImpl()	true	431
288.json	org.eclipse.jgit.pgm.CommandRef.guessName(java.lang.Class<? extends org.eclipse.jgit.pgm.TextBuiltin>)	noCall	noCall	true	3176
2664.json	org.eclipse.jgit.transport.RefAdvertiser.isEmpty()	null,null,2604.json	org.eclipse.jgit.transport.RefAdvertiserTest.advertiser(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	3176
1988.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig)	noCall	noCall	true	3176
2515.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getPackNames()	noCall	noCall	true	3176
406.json	org.eclipse.jgit.pgm.TextBuiltin.init(org.eclipse.jgit.lib.Repository, java.lang.String)	377.json,394.json,268.json,246.json,83.json,404.json	org.eclipse.jgit.pgm.Log.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.Main.init(org.eclipse.jgit.pgm.TextBuiltin),org.eclipse.jgit.pgm.Show.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.Diff.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.pgm.TextBuiltin.initRaw(org.eclipse.jgit.lib.Repository, java.lang.String, java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	true	3176
7173.json	org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>)	noCall	noCall	true	2841
9206.json	org.eclipse.jgit.lib.AbbreviatedObjectId.hexUInt32(byte[], int, int)	9205.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromHexString(byte[], int, int)	true	3176
8462.json	org.eclipse.jgit.util.FS.Attributes.getCreationTime()	noCall	noCall	true	1579
9848.json	org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.setRepository(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	113
4661.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.ensureId()	4658.json,4660.json,4659.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.name(),org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.cloneEntry(),org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.toObjectId()	true	3176
5089.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setShallowPack(int, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2485
4330.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl()	noCall	noCall	true	3176
7668.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getLength()	noCall	noCall	true	3176
1834.json	org.eclipse.jgit.transport.ReceiveCommand.getOldSymref()	null,1853.json,3258.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.containsSymrefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref)	true	235
3401.json	org.eclipse.jgit.internal.storage.dfs.ReftableStack.files()	3607.json,3605.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toPruneTopOfStack(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	true	235
2124.json	org.eclipse.jgit.transport.PostUploadHookChain.newChain(java.util.List<? extends org.eclipse.jgit.transport.PostUploadHook>)	noCall	noCall	true	1094
2704.json	org.eclipse.jgit.transport.PushCertificateIdent.getEmailAddress()	null,null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.PushCertificateIdentTest.checkNameEmail(java.lang.String, java.lang.String, java.lang.String)	true	1088
1705.json	org.eclipse.jgit.transport.URIish.unescape(java.lang.String)	1717.json	org.eclipse.jgit.transport.URIish.setRawPath(java.lang.String)	true	2381
7880.json	org.eclipse.jgit.submodule.SubmoduleStatus.getType()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule()	true	2355
8035.json	org.eclipse.jgit.util.RefMap.Ent.getValue()	noCall	noCall	true	3060
6962.json	org.eclipse.jgit.api.Status.getModified()	null,null,null,null,null,null,null,null,null,null,null,null,null,94.json,96.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd()	true	2636
7429.json	org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit)	7428.json	org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	1426
2809.json	org.eclipse.jgit.internal.ketch.KetchReplica.getId(org.eclipse.jgit.lib.Ref)	2784.json,2804.json,2724.json,2805.json,2807.json	org.eclipse.jgit.internal.ketch.KetchReplica.initialize(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.internal.ketch.KetchReplica.readId(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	true	872
8677.json	org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	8676.json	org.eclipse.jgit.patch.Patch.parse(byte[], int, int)	true	3176
5241.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setPathHash(int)	5255.json,5144.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.add(org.eclipse.jgit.lib.AnyObjectId, int, int),org.eclipse.jgit.internal.storage.pack.PackWriter.addObject(org.eclipse.jgit.lib.AnyObjectId, int, int)	true	2893
1912.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin()	1908.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3130.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	3696.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	true	235
4829.json	org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects()	4817.json,4810.json	org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2142
6430.json	org.eclipse.jgit.blame.BlameGenerator.getResultPath()	6411.json	org.eclipse.jgit.blame.BlameResult.create(org.eclipse.jgit.blame.BlameGenerator)	true	2567
6536.json	org.eclipse.jgit.diff.RawText.isBinary(byte[])	6543.json,203.json,178.json,6625.json	org.eclipse.jgit.diff.RawText.load(org.eclipse.jgit.lib.ObjectLoader, int),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.diff.SimilarityIndex.hash(byte[], int, int)	true	2903
6418.json	org.eclipse.jgit.blame.BlameResult.getSourceAuthor(int)	118.json,119.json	org.eclipse.jgit.pgm.Blame.author(int),org.eclipse.jgit.pgm.Blame.date(int)	true	2567
7267.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	noCall	noCall	true	1496
7086.json	org.eclipse.jgit.api.Git.submoduleAdd()	null,6310.json,null,null,null,null	org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules()	true	2350
6425.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2567
2766.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.getState()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
6322.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNotInGroup()	6318.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument()	true	1412
4964.json	org.eclipse.jgit.internal.storage.reftree.RefTree.peeledPath(java.lang.String)	4961.json,4950.json,4959.json	org.eclipse.jgit.internal.storage.reftree.RefTree.cleanupPeeledRef(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command)	true	884
5943.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.startsWith(byte[], byte[], int)	5940.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts()	true	893
1019.json	org.eclipse.jgit.merge.MergeConfig.getConfigForCurrentBranch(org.eclipse.jgit.lib.Repository)	7387.json	org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration()	true	1577
7395.json	org.eclipse.jgit.api.MergeCommand.setCommit(boolean)	7405.json,278.json,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit()	true	1893
8517.json	org.eclipse.jgit.util.IntList.clear()	null,6490.json	org.eclipse.jgit.util.IntListTest.testClear(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int)	true	3176
1029.json	org.eclipse.jgit.merge.MergeConfig.MergeConfigSectionParser.hashCode()	noCall	noCall	true	1577
9426.json	org.eclipse.jgit.lib.ObjectDatabase.exists()	9071.json,7025.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.build(),org.eclipse.jgit.api.InitCommand.call()	true	3176
4393.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset32()	4390.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeImpl()	true	3176
10033.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeQueryString(java.util.Map<java.lang.String, java.lang.String>)	10023.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
9942.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.startsWith(org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId)	null,null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_33(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_15(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_16()	true	856
4516.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(int, int)	4514.json,4515.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(long),org.eclipse.jgit.internal.storage.file.PackIndexV2.findOffset(org.eclipse.jgit.lib.AnyObjectId)	true	1808
361.json	org.eclipse.jgit.pgm.AmazonS3Client.properties()	360.json	org.eclipse.jgit.pgm.AmazonS3Client.run()	true	3170
6389.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.beginResult(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	1511
224.json	org.eclipse.jgit.pgm.Version.requiresRepository()	noCall	noCall	true	2869
4116.json	org.eclipse.jgit.internal.storage.file.PackFile.iterator()	noCall	noCall	true	3176
118.json	org.eclipse.jgit.pgm.Blame.author(int)	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2493
2457.json	org.eclipse.jgit.transport.PackParser.InflaterStream.close()	noCall	noCall	true	2741
8921.json	org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader)	null	org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int)	true	3176
9618.json	org.eclipse.jgit.lib.AnyObjectId.toHexCharArray()	9622.json,9615.json	org.eclipse.jgit.lib.AnyObjectId.name(),org.eclipse.jgit.lib.AnyObjectId.copyTo(java.io.Writer)	true	3176
9146.json	org.eclipse.jgit.lib.RefRename.setRefLogMessage(java.lang.String)	noCall	noCall	true	3059
6012.json	org.eclipse.jgit.dircache.DirCacheBuilder.finish()	null,null,null,null,null,null,null,null,null,null,null,null,4966.json,null,null,945.json,null,1005.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,5874.json,null,null,6026.json,null,6309.json,null,null,null,6981.json,null,null,null,null,null	org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths(),org.eclipse.jgit.junit.TestRepository.tree(org.eclipse.jgit.dircache.DirCacheEntry...),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.parent(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty(),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.createTree(java.lang.String...),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.createTree(java.lang.String...)	true	3176
229.json	org.eclipse.jgit.pgm.Clone.requiresRepository()	noCall	noCall	true	3176
5528.json	org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)	5644.json,5655.json,5346.json,5575.json,null,5563.json	org.eclipse.jgit.revwalk.DepthGenerator.next(),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.PendingGenerator.next(),org.eclipse.jgit.revwalk.BoundaryGenerator.InitialGenerator.next(),org.eclipse.jgit.revwalk.MergeBaseGenerator._next()	true	3176
7393.json	org.eclipse.jgit.api.MergeCommand.setSquash(boolean)	null,278.json,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge()	true	2187
5244.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.select(org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	5148.json,211.json,210.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.pgm.debug.ShowPackDelta.getDelta(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.debug.ShowPackDelta.Anonymous-67496aee-5478-418e-b394-ba5fe2eba493.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2906
8237.json	org.eclipse.jgit.util.io.IsolatedOutputStream.checkClosed()	8232.json,8231.json	org.eclipse.jgit.util.io.IsolatedOutputStream.flush(),org.eclipse.jgit.util.io.IsolatedOutputStream.write(byte[], int, int)	true	573
1368.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	1366.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
9409.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.match(java.lang.String, java.lang.String...)	9408.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getTimeUnit(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, long, java.util.concurrent.TimeUnit)	true	698
9889.json	org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>)	9882.json	org.eclipse.jgit.lfs.LfsPrePushHook.call()	true	102
10048.json	org.eclipse.jgit.lfs.server.s3.S3Config.getExpirationSeconds()	10050.json,10053.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	843
3818.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getFileName()	3806.json,3804.json,3789.json,3803.json,3811.json,3825.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.packfileIsTruncated(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	328
1159.json	org.eclipse.jgit.notes.NoteParser.isTree()	1157.json,1153.json	org.eclipse.jgit.notes.NoteParser.parseFanoutCell(),org.eclipse.jgit.notes.NoteParser.parseTree()	true	2767
7225.json	org.eclipse.jgit.api.AddNoteCommand.setNotesRef(java.lang.String)	noCall	noCall	true	2618
1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2709
4404.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getWeight()	noCall	noCall	true	2906
6009.json	org.eclipse.jgit.dircache.DirCacheBuilder.isTree(org.eclipse.jgit.treewalk.CanonicalTreeParser)	6007.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	922
1940.json	org.eclipse.jgit.transport.Daemon.startClient(java.net.Socket)	null	org.eclipse.jgit.transport.Daemon.Acceptor.run()	true	3176
4377.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readBoolean()	noCall	noCall	true	1922
9435.json	org.eclipse.jgit.lib.CommitBuilder.getTreeId()	null,null,null,null,9454.json,167.json,null,null,4931.json	org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	3176
2897.json	org.eclipse.jgit.internal.ketch.KetchLeader.validVoterCounts()	2896.json	org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>)	true	872
7768.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.clone()	noCall	noCall	true	2739
1190.json	org.eclipse.jgit.notes.FanoutBucket.Anonymous-f354e771-6d1c-4be0-9a38-b9cf644e819b.next()	noCall	noCall	true	2766
2358.json	org.eclipse.jgit.transport.RefSpec.expandFromSource(org.eclipse.jgit.lib.Ref)	null,null,null,null,null,1960.json,null,1997.json	org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.FetchProcess.expandWildcard(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	3176
2318.json	org.eclipse.jgit.transport.ProgressSpinner.beginTask(java.lang.String, long, java.util.concurrent.TimeUnit)	2893.json,2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	true	906
8355.json	org.eclipse.jgit.util.IO.readFully(java.io.File)	null,null,6824.json,9845.json,9016.json,4190.json,null,null,null,4191.json,9752.json,9018.json,null,null,null,7424.json,null,null,null,null,null,9044.json,null,4855.json,null,null,null,null	org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.lfs.LfsBlobLoader.getCachedBytes(),org.eclipse.jgit.lib.Repository.readCommitMsgFile(java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntry(int),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-0c812d22-5fba-4c7c-9c35-6a5a653d9583.modifyCommitMessage(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.junit.JGitTestUtil.read(java.io.File),org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries(int),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean),org.eclipse.jgit.lib.Repository.readGitDirectoryFile(java.lang.String),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding(),org.eclipse.jgit.api.RebaseCommand.parseAuthor(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-367dec0d-e5ad-436e-a033-a086d7d191cc.modifyCommitMessage(java.lang.String),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-4edff3b0-f6f1-41a0-9462-925bc568dc9a.modifyCommitMessage(java.lang.String),org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces(),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(java.io.File, java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.getGitwebDescription(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.lib.IndexDiffTest.add(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String),org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM(),org.eclipse.jgit.storage.file.FileBasedConfig.readIncludedConfig(java.lang.String)	false	3176
4386.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUTF()	noCall	noCall	true	1922
6469.json	org.eclipse.jgit.blame.BlameGenerator.close()	6425.json,6444.json,6411.json,6446.json,6423.json,6422.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.blame.BlameGenerator.computeBlameResult(),org.eclipse.jgit.blame.BlameResult.create(org.eclipse.jgit.blame.BlameGenerator),org.eclipse.jgit.blame.BlameGenerator.done(),org.eclipse.jgit.blame.BlameResult.computeNext(),org.eclipse.jgit.blame.BlameResult.computeAll()	true	2567
4901.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getTxnNamespace()	2759.json,4976.json,167.json	org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.reftree.RefTreeNames.isRefTree(org.eclipse.jgit.lib.RefDatabase, java.lang.String),org.eclipse.jgit.pgm.debug.RebuildRefTree.run()	true	880
5656.json	org.eclipse.jgit.revwalk.TreeRevFilter.requiresCommitBody()	noCall	noCall	true	2673
1851.json	org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String)	2799.json,1858.json,3251.json,4938.json,null,2892.json,1828.json,9326.json,2621.json,9328.json,1850.json,1248.json,1857.json,2764.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.transport.ReceiveCommand.reject(java.io.IOException),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.reftree.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.ReceiveCommand.abort(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(java.time.Duration),org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String),org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	3176
9615.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(java.io.Writer)	9468.json	org.eclipse.jgit.lib.TagBuilder.build()	true	3176
5123.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	5120.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	2893
5201.json	org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.wasDeltaAttempted()	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2127
539.json	org.eclipse.jgit.junit.http.RecordingLogger.warn(java.lang.String, java.lang.Throwable)	noCall	noCall	true	3070
6567.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	6577.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2838
9836.json	org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, byte[], int)	5919.json	org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter)	true	2775
4489.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean)	noCall	noCall	true	3059
1040.json	org.eclipse.jgit.merge.Merger.merge(org.eclipse.jgit.lib.AnyObjectId...)	null,926.json,null,null,null,null,null,null,null,null,null,null,null,null,null,1225.json,null,null,null,7385.json	org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2(),org.eclipse.jgit.merge.ThreeWayMerger.merge(org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1(),org.eclipse.jgit.merge.SimpleMergeTest.testOurs(),org.eclipse.jgit.merge.SimpleMergeTest.testTheirs_noRepo(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict(),org.eclipse.jgit.merge.SimpleMergeTest.testOurs_noRepo(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange(),org.eclipse.jgit.merge.SimpleMergeTest.testTheirs(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories(),org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_noRepo(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok(),org.eclipse.jgit.api.MergeCommand.call()	true	3176
5524.json	org.eclipse.jgit.revwalk.FixUninterestingGenerator.outputType()	noCall	noCall	true	3176
3590.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setBlockLimit(long)	3599.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.resetCache(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	2410
6845.json	org.eclipse.jgit.api.FetchCommand.setRemoveDeletedRefs(boolean)	6835.json,286.json,null	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead()	true	2823
7178.json	org.eclipse.jgit.api.GarbageCollectCommand.setExpire(java.util.Date)	null,null,null,null	org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit()	true	2029
9924.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	null,null,null,null,null,null,null,9942.json,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testAbbreviate(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_33(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_15(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromLongObjectId(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.startsWith(org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_16()	true	856
132.json	org.eclipse.jgit.pgm.RevParse.run()	noCall	noCall	true	3176
5502.json	org.eclipse.jgit.revwalk.ObjectWalk.reset(int)	noCall	noCall	true	3176
8180.json	org.eclipse.jgit.util.io.TeeInputStream.skip(long)	noCall	noCall	true	2844
7939.json	org.eclipse.jgit.util.RawParseUtils.prevLF(byte[], int)	null,4190.json,null,null,null,null,4191.json,null,null,null,5554.json	org.eclipse.jgit.api.RebaseCommandTest.Anonymous-367dec0d-e5ad-436e-a033-a086d7d191cc.modifyCommitMessage(java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntry(int),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-0c812d22-5fba-4c7c-9c35-6a5a653d9583.modifyCommitMessage(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(java.io.File, java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries(int),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-4edff3b0-f6f1-41a0-9462-925bc568dc9a.modifyCommitMessage(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.revwalk.RevCommit.getFooterLines()	true	3176
60.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getRequestMethod()	noCall	noCall	true	1572
1956.json	org.eclipse.jgit.transport.FetchProcess.removeTrackingRefUpdate(org.eclipse.jgit.lib.ObjectId)	1955.json	org.eclipse.jgit.transport.FetchProcess.reopenConnection()	true	3176
7496.json	org.eclipse.jgit.api.CheckoutCommand.setStage(org.eclipse.jgit.api.CheckoutCommand.Stage)	null,null,null,null	org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch()	true	2031
4837.json	org.eclipse.jgit.internal.storage.file.GC.setPackExpireAgeMillis(long)	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansWithMerges(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndGetStats(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges(boolean),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapsForExcessiveBranches(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack()	true	801
5167.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[], int, int)	5166.json,5183.json,null	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(byte[]),org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int),org.eclipse.jgit.internal.storage.file.PackFileTest.delta(byte[], byte[])	true	2900
4487.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRefDatabase()	noCall	noCall	true	3059
7700.json	org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.shouldBeRecursive()	noCall	noCall	true	2839
942.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(org.eclipse.jgit.lib.Repository)	943.json	org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.newMerger(org.eclipse.jgit.lib.Repository, boolean)	true	3176
7596.json	org.eclipse.jgit.treewalk.TreeWalk.getObjectId(int)	null,null,null,9256.json,4969.json,null,null,null,null,7481.json,null,2839.json,2807.json,null,110.json,null,null,7896.json,7911.json,947.json,null,null,null,4829.json,9911.json,null,null,null,385.json,null,null,null	org.eclipse.jgit.merge.CherryPickTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.FileTreeIteratorTest.assertEntry(java.lang.String, java.lang.String, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.diff.DiffEntryTest.Anonymous-e0e2f314-33c7-4613-be19-e2f98e6bbecd.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.transport.PushCertificateStore.read(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.merge.SimpleMergeTest.assertCorrectId(org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.Anonymous-d04f31ac-4953-40d9-b01c-d1bfb4cff22f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.readFile(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
3369.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getNewPacks()	noCall	noCall	true	2410
5799.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter)	5794.json,null,null,null	org.eclipse.jgit.revwalk.filter.RevFilter.negate(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine()	true	3176
7731.json	org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[])	null,null,null,null,null,null,null,null	org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiSubPathDualNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathDualNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiPathDualNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiThreeSubPathNegate()	true	3176
6346.json	org.eclipse.jgit.fnmatch.FileNameMatcher.reset()	null,null,null	org.eclipse.jgit.fnmatch.FileNameMatcherTest.testReset(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCopyConstructor(),org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix()	true	3176
7471.json	org.eclipse.jgit.api.CheckoutCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,909.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,388.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7434.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.StatusTest.checkoutTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.pgm.StatusTest.detachHead(org.eclipse.jgit.api.Git),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckout(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.checkoutMasterBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContentRequired(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository()	true	2756
1759.json	org.eclipse.jgit.transport.SideBandProgressMonitor.send(java.lang.StringBuilder)	1753.json,1754.json,1757.json,1756.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int),org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int),org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int, int, int),org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int, int, int)	true	2658
4444.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	4443.json,4444.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	3176
7287.json	org.eclipse.jgit.api.DiffCommand.setShowNameAndStatusOnly(boolean)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
10385.json	org.eclipse.jgit.http.server.GitSmartHttpTools.isUploadPack(java.lang.String)	noCall	noCall	true	2391
2636.json	org.eclipse.jgit.transport.ReceivePack.setPreReceiveHook(org.eclipse.jgit.transport.PreReceiveHook)	null,300.json,null,null	org.eclipse.jgit.pgm.Daemon.Anonymous-cef066f2-21cb-465b-97c2-fe772de45ed1.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.transport.PushConnectionTest.Anonymous-3e23c89a-331a-44f3-9f62-70b435181033.create(java.lang.Object, org.eclipse.jgit.lib.Repository)	true	3176
473.json	org.eclipse.jgit.junit.MockSystemReader.getTimeZone()	472.json,null	org.eclipse.jgit.junit.MockSystemReader.getTimezone(long),org.eclipse.jgit.junit.TestRepository.getTimeZone()	true	2425
6516.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	null,923.json,null,6514.json,6456.json,null,null,6596.json,null,6455.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.testOne(org.eclipse.jgit.pgm.debug.DiffAlgorithms.Test, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S),org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB(),org.eclipse.jgit.diff.MyersDiff.main(java.lang.String[]),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.AbstractDiffTestCase.diff(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA(),org.eclipse.jgit.diff.DiffFormatter.diff(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText),org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff(),org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2820
7365.json	org.eclipse.jgit.api.ArchiveCommand.replace(java.util.concurrent.ConcurrentMap<K, V>, K, V, V)	7367.json,7366.json	org.eclipse.jgit.api.ArchiveCommand.unregisterFormat(java.lang.String),org.eclipse.jgit.api.ArchiveCommand.registerFormat(java.lang.String, org.eclipse.jgit.api.ArchiveCommand.Format<?>)	true	1516
3124.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.newRef(java.lang.String)	3098.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef()	true	297
8349.json	org.eclipse.jgit.util.sha1.SHA1.reset()	null,4027.json,null,null,9173.json,4017.json,2398.json,2410.json	org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.lib.ObjectInserter.digest(),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	468
2052.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getURI()	noCall	noCall	true	3176
46.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setRequestMethod(java.lang.String)	noCall	noCall	true	1572
5649.json	org.eclipse.jgit.revwalk.RevFlagSet.Anonymous-70013e89-d01f-4684-bfd5-19c362c284a1.hasNext()	noCall	noCall	true	3176
1000.json	org.eclipse.jgit.merge.ResolveMerger.getMergeResults()	null,6812.json,7385.json	org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2841
389.json	org.eclipse.jgit.pgm.Main.Anonymous-87dcfa78-5061-47ac-b258-fb90cff503c8.newThread(java.lang.Runnable)	noCall	noCall	true	364
4149.json	org.eclipse.jgit.internal.storage.file.PackFile.getReverseIdx()	4147.json,4148.json,4118.json	org.eclipse.jgit.internal.storage.file.PackFile.findEndOffset(long),org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex(),org.eclipse.jgit.internal.storage.file.PackFile.findObjectForOffset(long)	true	3176
9140.json	org.eclipse.jgit.lib.UserConfig.stripInvalidCharacters(java.lang.String)	9137.json,9139.json	org.eclipse.jgit.lib.UserConfig.getNameInternal(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.lib.UserConfig.getEmailInternal(org.eclipse.jgit.lib.Config, java.lang.String)	true	1389
3113.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.decodeBlockLen(int)	3050.json,3112.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlockLen(long),org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	true	297
9262.json	org.eclipse.jgit.lib.Constants.typeString(int)	5245.json,110.json,9468.json,5559.json,null,2411.json,9842.json,5439.json,1371.json,null,9470.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.lib.TagBuilder.build(),org.eclipse.jgit.revwalk.RevCommit.toString(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.compressStandardFormat(int, byte[]),org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.revwalk.RevObject.toString(),org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.lib.TagBuilder.toString()	true	3176
6060.json	org.eclipse.jgit.dircache.DirCacheIterator.back(int)	null,null	org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127()	true	3176
2751.json	org.eclipse.jgit.internal.ketch.ElectionRound.getTerm()	2910.json	org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	true	872
5972.json	org.eclipse.jgit.dircache.DirCacheEntry.isSkipWorkTree()	null,7699.json	org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int, java.lang.String, boolean, boolean, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	2840
3542.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.isLarge()	noCall	noCall	true	1397
1647.json	org.eclipse.jgit.transport.DaemonClient.getOutputStream()	1801.json,null,null	org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, java.lang.String, java.util.Collection<java.lang.String>),org.eclipse.jgit.transport.Daemon.Anonymous-877d5170-d55d-47c6-bb03-61a3912bd36a.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>),org.eclipse.jgit.transport.Daemon.Anonymous-adeefff8-c989-4e7d-a4a4-bbc0e9b84c59.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>)	true	3176
7195.json	org.eclipse.jgit.api.CherryPickCommand.call()	7405.json,null,null,null,7404.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2795
8523.json	org.eclipse.jgit.util.RelativeDateFormatter.format(java.util.Date)	8318.json,null	org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.util.RelativeDateFormatterTest.assertFormat(long, long, java.lang.String)	true	2589
1446.json	org.eclipse.jgit.transport.UploadPack.sendMessage(java.lang.String)	noCall	noCall	true	1845
5080.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isUseCachedPacks()	noCall	noCall	true	2683
5236.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setExtendedFlags(int)	noCall	noCall	true	2851
9901.json	org.eclipse.jgit.lfs.BuiltinLFS.applySmudgeFilter(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.attributes.Attribute)	noCall	noCall	true	98
6174.json	org.eclipse.jgit.storage.pack.PackConfig.getDeltaSearchMemoryLimit()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	2893
4144.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	4745.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2893
5930.json	org.eclipse.jgit.dircache.DirCacheTree.toString()	noCall	noCall	true	2002
6800.json	org.eclipse.jgit.events.ListenerList.addListener(java.lang.Class<T>, T)	6797.json,6799.json,6796.json,6798.json	org.eclipse.jgit.events.ListenerList.addIndexChangedListener(org.eclipse.jgit.events.IndexChangedListener),org.eclipse.jgit.events.ListenerList.addConfigChangedListener(org.eclipse.jgit.events.ConfigChangedListener),org.eclipse.jgit.events.ListenerList.addWorkingTreeModifiedListener(org.eclipse.jgit.events.WorkingTreeModifiedListener),org.eclipse.jgit.events.ListenerList.addRefsChangedListener(org.eclipse.jgit.events.RefsChangedListener)	true	2907
2103.json	org.eclipse.jgit.transport.AdvertiseRefsHookChain.newChain(java.util.List<? extends org.eclipse.jgit.transport.AdvertiseRefsHook>)	noCall	noCall	true	2292
2545.json	org.eclipse.jgit.transport.BaseReceivePack.getRevWalk()	1853.json,1889.json,2892.json	org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	false	3176
8275.json	org.eclipse.jgit.util.LongMap.put(long, V)	null,null,3051.json,null,2409.json,null,null,null,null	org.eclipse.jgit.util.LongMapTest.testRemoveOne(),org.eclipse.jgit.util.LongMapTest.testRemoveCollision1(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long),org.eclipse.jgit.util.LongMapTest.testRemoveCollision2(),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.util.LongMapTest.testSmallMap(),org.eclipse.jgit.util.LongMapTest.testLargeMap(),org.eclipse.jgit.util.LongMapTest.testReplaceMaxValue(),org.eclipse.jgit.util.LongMapTest.testInsertMinValue()	true	3176
1167.json	org.eclipse.jgit.notes.LeafBucket.Anonymous-e34b0e3e-7706-4b97-99da-acddcc453fd7.remove()	noCall	noCall	true	2766
2916.json	org.eclipse.jgit.internal.ketch.KetchLeader.toString()	noCall	noCall	true	872
5385.json	org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevObject)	5374.json,null,null,5372.json,203.json,5616.json,7512.json,1360.json,null,7196.json,6812.json,5482.json,1376.json,6452.json,272.json,6456.json,null,1374.json,5481.json,null,7511.json,7385.json	org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackWriterTest.setupRepoForShallowFetch(),org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.revwalk.DepthWalk.ObjectWalk.markRoot(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.NameRevCommand.minCommitTime(),org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude(),org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.WalkFetchConnection.pushLocalCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue),org.eclipse.jgit.api.MergeCommand.call()	true	3176
1219.json	org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
58.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getOutputStream()	noCall	noCall	true	1572
6377.json	org.eclipse.jgit.blame.Candidate.takeBlame(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.blame.Candidate)	6456.json,6455.json	org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
6141.json	org.eclipse.jgit.storage.pack.PackStatistics.getDepth()	noCall	noCall	true	1094
304.json	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate)	302.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult)	true	3176
5644.json	org.eclipse.jgit.revwalk.DepthGenerator.next()	noCall	noCall	true	2485
7602.json	org.eclipse.jgit.treewalk.TreeWalk.getPathLength()	7530.json,null,7698.json	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.PathFilter.isDone(org.eclipse.jgit.treewalk.TreeWalk)	true	2669
7730.json	org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter, org.eclipse.jgit.treewalk.filter.TreeFilter)	null,7040.json,null,null,6570.json,7270.json,385.json,6571.json,7731.json,7732.json,352.json	org.eclipse.jgit.revwalk.TreeRevFilterTest.treeFilter(java.lang.String),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.filter(java.lang.String),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.filter(java.lang.String),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.diff.DiffFormatter.getDiffTreeFilterFor(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.treewalk.filter.AndTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
5296.json	org.eclipse.jgit.attributes.Attributes.isUnset(java.lang.String)	5300.json,8148.json,8150.json	org.eclipse.jgit.attributes.Attributes.canBeContentMerged(),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	925
201.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.requiresRepository()	noCall	noCall	true	2799
9553.json	org.eclipse.jgit.lib.RefUpdate.safeParseNew(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId)	9551.json	org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store)	true	3176
6138.json	org.eclipse.jgit.storage.pack.PackStatistics.getThinPackBytes()	noCall	noCall	true	1094
899.json	org.eclipse.jgit.ant.tasks.GitAddTask.getPath()	900.json	org.eclipse.jgit.ant.tasks.GitAddTask.execute()	false	2575
10379.json	org.eclipse.jgit.http.server.GitSmartHttpTools.writePacket(org.eclipse.jgit.transport.PacketLineOut, java.lang.String)	noCall	noCall	false	2285
916.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(org.eclipse.jgit.merge.MergeChunk)	915.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge()	true	1171
1200.json	org.eclipse.jgit.notes.FanoutBucket.append(org.eclipse.jgit.notes.Note)	1179.json,1176.json	org.eclipse.jgit.notes.LeafBucket.split(),org.eclipse.jgit.notes.LeafBucket.append(org.eclipse.jgit.notes.Note)	true	2766
9227.json	org.eclipse.jgit.lib.FileMode.fromBits(int)	5976.json,7636.json,8666.json,7594.json,144.json,7595.json,null,9375.json	org.eclipse.jgit.dircache.DirCacheEntry.getFileMode(),org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode(),org.eclipse.jgit.patch.FileHeader.parseFileMode(int, int),org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.treewalk.TreeWalk.getFileMode(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[])	true	3176
9508.json	org.eclipse.jgit.lib.RefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	noCall	noCall	true	3176
1184.json	org.eclipse.jgit.notes.FanoutBucket.setBucket(int, org.eclipse.jgit.lib.ObjectId)	1216.json,1156.json	org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.FanoutBucket, int, org.eclipse.jgit.notes.NoteBucket),org.eclipse.jgit.notes.NoteParser.parseFanoutTree()	true	2767
7767.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.shouldBeRecursive()	noCall	noCall	true	2739
2260.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.readAdvertisedImpl(java.io.BufferedReader)	2222.json	org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	true	3176
8091.json	org.eclipse.jgit.util.TemporaryBuffer.write(int)	null,null,null,8358.json,null,9838.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites(),org.eclipse.jgit.transport.PackParserTest.testTinyThinPack(),org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob(),org.eclipse.jgit.util.IO.readWholeStream(java.io.InputStream, int),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.util.TemporaryBufferTest.testOneByte(),org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy(),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_SingleWrite(),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize(),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnAppendByte(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchBeforeAppendByte(),org.eclipse.jgit.util.TemporaryBufferTest.testHeap(),org.eclipse.jgit.patch.EGitPatchHistoryTest.CommitReader.read(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.util.TemporaryBufferTest.testHeapWithEstimatedSize(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()	true	3176
2516.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.open(java.lang.String)	noCall	noCall	true	3176
6955.json	org.eclipse.jgit.api.DeleteBranchCommand.setForce(boolean)	null	org.eclipse.jgit.api.BranchCommandTest.testDelete()	true	2800
6441.json	org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2567
277.json	org.eclipse.jgit.pgm.Merge.ffonly(boolean)	noCall	noCall	true	2031
1906.json	org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>)	1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
6573.json	org.eclipse.jgit.diff.DiffFormatter.detectRenames(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2899
4799.json	org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.StoredBitmap.getFlags()	4682.json,null,4178.json,null,4174.json,4177.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7c01fee1-3c2d-4791-ae44-c0f415eb6d04.iterator(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-f5f5e630-ec34-42cd-9111-dc3539965e81.next(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Anonymous-5b730c7b-1d55-4270-93c3-b09a40794b13.hasNext(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.iterator()	true	1922
5436.json	org.eclipse.jgit.revwalk.RevObject.add(org.eclipse.jgit.revwalk.RevFlagSet)	null,null	org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet(),org.eclipse.jgit.revwalk.RevObjectTest.testAddRevFlagSet()	true	3176
10157.json	org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host)	null,10153.json	org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int)	true	2387
2048.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-9eff4f9c-3976-428e-91d6-de5dd6404f30.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
2402.json	org.eclipse.jgit.transport.PackParser.reverse(org.eclipse.jgit.transport.PackParser.UnresolvedDelta)	2403.json	org.eclipse.jgit.transport.PackParser.firstChildOf(org.eclipse.jgit.transport.PackedObjectInfo)	true	3176
4347.json	org.eclipse.jgit.internal.storage.file.WindowCursor.newObjectToPack(org.eclipse.jgit.lib.AnyObjectId, int)	noCall	noCall	true	2907
4158.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.write(int)	noCall	noCall	true	1922
1649.json	org.eclipse.jgit.transport.PreUploadHook.Anonymous-447bfd27-8767-426b-a840-daea7229584f.onBeginNegotiateRound(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, int)	noCall	noCall	true	2627
2413.json	org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo)	2412.json	org.eclipse.jgit.transport.PackParser.checkObjectCollision()	true	367
1755.json	org.eclipse.jgit.transport.SideBandProgressMonitor.format(java.lang.StringBuilder, java.lang.String, int)	1753.json,1754.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onUpdate(java.lang.String, int),org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int)	true	2658
9963.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.name()	9889.json,10089.json,9964.json,null,9862.json,null,null,null,null,null,null,null,9864.json,null,null,null,null,9962.json,9858.json,9982.json,null,null,null,null,9895.json,null	org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.lib.AnyLongObjectId.getName(),org.eclipse.jgit.lfs.server.fs.UploadTest.testLargeFileUpload(),org.eclipse.jgit.lfs.LfsPointer.encode(java.io.OutputStream),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test001_toString(),org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromString(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test011_toString(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testZeroId(),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.lfs.server.fs.UploadTest.testCorruptUpload(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringInvalid(),org.eclipse.jgit.lfs.LfsPointer.toString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testIsId(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test002_toString(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(java.nio.file.Path),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.toString(),org.eclipse.jgit.lfs.Lfs.getMediaFile(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.lib.LongObjectId.toString(org.eclipse.jgit.lfs.lib.LongObjectId),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringByte(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.getContent(org.eclipse.jgit.lfs.lib.AnyLongObjectId, java.nio.file.Path),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromStringWrongLength(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(org.eclipse.jgit.lfs.lib.AnyLongObjectId, java.lang.String),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.server.fs.UploadTest.testUpload()	true	856
4096.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)	4095.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	true	1922
3892.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getCurrentReftables()	noCall	noCall	true	286
10095.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getUrl()	noCall	noCall	true	113
2267.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpPushConnection.doPush(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	noCall	noCall	true	3070
6743.json	org.eclipse.jgit.diff.DiffConfig.getRenameLimit()	noCall	noCall	true	2899
6458.json	org.eclipse.jgit.blame.BlameGenerator.getSourceAuthor()	6427.json	org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
8203.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.close()	noCall	noCall	true	2093
912.json	org.eclipse.jgit.ant.tasks.GitCloneTask.setBare(boolean)	null	org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository()	true	2596
8902.json	org.eclipse.jgit.lib.Config.setBoolean(java.lang.String, java.lang.String, java.lang.String, boolean)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,9847.json,1267.json,4849.json,null,null,null,null,null,null,6309.json,null,null,null,null,null,null,null,2236.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyWorktree(org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState, java.lang.String, java.lang.String),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.call(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, boolean, boolean),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.ignore.CGitIgnoreTest.initRepo(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithNonSupportingServer(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.setBare(java.io.File, boolean),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.pgm.CleanTest.testCleanRequiresForceConfig(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.lib.RefTest.testRemoteNames(),org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilterWhenNotAllowed(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContentRequired(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.setLogAllRefUpdates(boolean),org.eclipse.jgit.transport.UploadPackTest.testV2FetchFilter(),org.eclipse.jgit.transport.UploadPackTest.testV2CapabilitiesAllowFilter(),org.eclipse.jgit.attributes.CGitAttributesTest.initRepo(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup()	true	3176
957.json	org.eclipse.jgit.merge.MergeResult.setContainsConflicts(boolean)	null,null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	true	1413
6162.json	org.eclipse.jgit.storage.pack.PackConfig.isDeltaBaseAsOffset()	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()	true	2874
4468.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.clear()	null,4467.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.close(),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.remove(org.eclipse.jgit.lib.AnyObjectId)	true	2833
6839.json	org.eclipse.jgit.api.FetchCommand.setRemote(java.lang.String)	null,null,null,286.json,null,null,null,null,null,null,null,null,null,null,null,null,null,6885.json,7131.json	org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.transport.TestProtocolTest.testFetch(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.PullCommand.call()	true	2823
1701.json	org.eclipse.jgit.transport.AmazonS3.ListParser.ignorableWhitespace(char[], int, int)	noCall	noCall	true	3176
354.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.walkLoop()	352.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
7297.json	org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists()	7298.json	org.eclipse.jgit.api.SubmoduleAddCommand.call()	true	2355
63.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setHostnameVerifier(javax.net.ssl.HostnameVerifier)	noCall	noCall	true	1572
5669.json	org.eclipse.jgit.revwalk.RevTag.guessEncoding()	5668.json,5667.json	org.eclipse.jgit.revwalk.RevTag.getShortMessage(),org.eclipse.jgit.revwalk.RevTag.getFullMessage()	true	880
3335.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.beginBlock(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	3334.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
7757.json	org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.shouldBeRecursive()	noCall	noCall	true	2859
8899.json	org.eclipse.jgit.lib.Config.getBaseState()	8917.json,8898.json,8918.json	org.eclipse.jgit.lib.Config.newState(),org.eclipse.jgit.lib.Config.getState(),org.eclipse.jgit.lib.Config.newState(java.util.List<org.eclipse.jgit.lib.ConfigLine>)	true	3176
6897.json	org.eclipse.jgit.api.CloneCommand.setRemote(java.lang.String)	null,null,null,230.json	org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.pgm.Clone.run()	true	2686
6459.json	org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter()	6427.json	org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
6376.json	org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader)	6440.json,6452.json,6456.json,6454.json,6442.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	true	2567
7973.json	org.eclipse.jgit.util.LfsFactory.getInstallCommand()	noCall	noCall	true	94
4022.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.seek(long)	4030.json,4042.json,4034.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.setInput(long, java.util.zip.Inflater, byte[]),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.openStream(),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	171
5951.json	org.eclipse.jgit.dircache.DirCacheEditor.insertEdit(org.eclipse.jgit.dircache.DirCacheEditor.DeleteTree)	5949.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int)	true	893
4376.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.skipBytes(int)	noCall	noCall	true	1922
1035.json	org.eclipse.jgit.merge.RecursiveMerger.mockAuthor(java.util.List<org.eclipse.jgit.revwalk.RevCommit>)	1034.json	org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)	true	1402
54.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getContentLength()	noCall	noCall	true	1572
1085.json	org.eclipse.jgit.errors.RevisionSyntaxException.toString()	noCall	noCall	true	3176
8910.json	org.eclipse.jgit.lib.Config.copy(org.eclipse.jgit.lib.ConfigSnapshot, java.util.List<java.lang.String>)	8909.json	org.eclipse.jgit.lib.Config.replaceStringList(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	3176
98.json	org.eclipse.jgit.pgm.Status.printList(java.util.Collection<java.lang.String>)	96.json	org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	true	2100
1806.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	3176
10128.json	org.eclipse.jgit.archive.Tbz2Format.equals(java.lang.Object)	noCall	noCall	true	1521
1026.json	org.eclipse.jgit.merge.MergeConfig.getMergeOptions(java.lang.String, org.eclipse.jgit.lib.Config)	noCall	noCall	true	1577
2645.json	org.eclipse.jgit.transport.ReceivePack.autoGc()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	596
9511.json	org.eclipse.jgit.lib.RefComparator.compareTo(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	8030.json,3972.json,9508.json,8031.json	org.eclipse.jgit.util.RefMap.SetIterator.peek(),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.lib.RefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefMap.SetIterator.resolveLoose(org.eclipse.jgit.lib.Ref)	true	3060
5765.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.between(long, long)	5764.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.between(java.util.Date, java.util.Date)	true	3176
5941.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.lastSlash(byte[])	5940.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts()	true	893
4027.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack()	null	org.eclipse.jgit.internal.storage.file.PackInserter.flush()	true	221
6544.json	org.eclipse.jgit.diff.HashedSequence.size()	noCall	noCall	true	2820
8191.json	org.eclipse.jgit.util.io.TimeoutOutputStream.getTimeout()	noCall	noCall	true	3176
8171.json	org.eclipse.jgit.util.io.LimitedInputStream.skip(long)	noCall	noCall	true	1565
6850.json	org.eclipse.jgit.api.FetchCommand.setRefSpecs(org.eclipse.jgit.transport.RefSpec...)	null,null,null,null,null,null	org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.transport.TestProtocolTest.testFetch()	true	2823
1961.json	org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
8128.json	org.eclipse.jgit.util.ProcessResult.isExecutedWithError()	1120.json	org.eclipse.jgit.hooks.GitHook.doRun()	true	1195
9012.json	org.eclipse.jgit.lib.Repository.writeOrigHead(org.eclipse.jgit.lib.ObjectId)	7413.json,null,7428.json,7008.json	org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.ResetCommand.call()	true	2201
8679.json	org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int)	8677.json	org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	true	3176
8589.json	org.eclipse.jgit.util.SystemReader.Default.Anonymous-1cae4f47-f4e5-4798-8efe-3a9d6adfcc1a.isOutdated()	noCall	noCall	true	2717
3669.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.writePackIndex()	3646.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
10284.json	org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(java.lang.String)	10254.json	org.eclipse.jgit.http.server.glue.MetaServlet.serveRegex(java.lang.String)	true	2438
5760.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.before(java.util.Date)	null	org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter()	true	3176
5711.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.hasAll(org.eclipse.jgit.revwalk.RevFlag...)	noCall	noCall	true	3176
10280.json	org.eclipse.jgit.http.server.glue.ServletBinderImpl.getServlet()	10272.json,10248.json	org.eclipse.jgit.http.server.glue.RegexPipeline.Binder.create(),org.eclipse.jgit.http.server.glue.SuffixPipeline.Binder.create()	true	3070
6095.json	org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitOpenFiles()	null,4288.json,6111.json	org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.checkLimits(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.internal.storage.file.WindowCache.lockCount(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
5512.json	org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(int)	null,5575.json,5563.json	org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO(),org.eclipse.jgit.revwalk.PendingGenerator.next(),org.eclipse.jgit.revwalk.MergeBaseGenerator._next()	true	3176
10270.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getServletContext()	noCall	noCall	true	2438
8428.json	org.eclipse.jgit.util.FS.getGitSystemConfig()	8590.json	org.eclipse.jgit.util.SystemReader.Default.openSystemConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS)	true	1112
4730.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.toString()	noCall	noCall	true	3176
6634.json	org.eclipse.jgit.diff.SimilarityIndex.count(int)	null	org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingSmallObject()	true	2899
115.json	org.eclipse.jgit.pgm.Blame.parseLineRangeOption()	112.json	org.eclipse.jgit.pgm.Blame.run()	true	2493
6411.json	org.eclipse.jgit.blame.BlameResult.create(org.eclipse.jgit.blame.BlameGenerator)	112.json,6444.json	org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.blame.BlameGenerator.computeBlameResult()	true	2567
2217.json	org.eclipse.jgit.transport.TransportHttp.toURL(org.eclipse.jgit.transport.URIish)	2269.json,2218.json	org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.TransportHttp.setURI(org.eclipse.jgit.transport.URIish)	true	297
10035.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeResourcePath(java.net.URL)	10034.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalRequest(java.net.URL, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	843
7890.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String, org.eclipse.jgit.util.FS)	7888.json,7889.json,7799.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(java.io.File, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	162
4239.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.createVersion(java.io.OutputStream, int)	4237.json,4016.json,4718.json,5108.json,3514.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.createOldestPossible(java.io.OutputStream, java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.file.PackInserter.writePackIndex(java.io.File, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx(),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.DfsInserter.index(java.io.OutputStream, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	3176
7661.json	org.eclipse.jgit.treewalk.FileTreeIterator.enterSubtree()	null	org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	true	20
6018.json	org.eclipse.jgit.dircache.DirCacheCheckout.getToBeDeleted()	7471.json,7422.json	org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead()	true	2844
4742.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	4447.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2893
4930.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	4927.json,4985.json,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	880
2910.json	org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica)	2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
5734.json	org.eclipse.jgit.revwalk.filter.OrRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>)	noCall	noCall	true	3176
990.json	org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int, int, int)	null,null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes)	true	2373
3888.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getReftables()	3686.json,3694.json,null,3364.json,null,null,null,null,3768.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.stack(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exists(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readReftablesBefore(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()	true	286
7859.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()	7868.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()	true	3176
6703.json	org.eclipse.jgit.diff.RenameDetector.id(org.eclipse.jgit.diff.DiffEntry)	6700.json	org.eclipse.jgit.diff.RenameDetector.populateMap(java.util.List<org.eclipse.jgit.diff.DiffEntry>, org.eclipse.jgit.lib.ProgressMonitor)	true	2886
1929.json	org.eclipse.jgit.transport.Daemon.setReceivePackFactory(org.eclipse.jgit.transport.resolver.ReceivePackFactory<org.eclipse.jgit.transport.DaemonClient>)	300.json	org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon)	true	2672
9173.json	org.eclipse.jgit.lib.ObjectInserter.digest()	4027.json,4877.json,4007.json,4017.json,3503.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.finishPack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream)	true	2907
9560.json	org.eclipse.jgit.lib.IndexDiff.StageState.fromMask(int)	9575.json	org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int)	true	1878
10268.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.Anonymous-eca5d9ea-4dad-4ff1-b0b2-6ca10bbdb856.nextElement()	noCall	noCall	true	2438
5543.json	org.eclipse.jgit.revwalk.RevCommit.getParents()	3024.json,1363.json,null,null,null,null,3018.json,4990.json,7260.json,7434.json,6979.json,1375.json	org.eclipse.jgit.internal.revwalk.AddToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.revwalk.AddUnseenToBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.NotInBitmapFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	true	3176
7022.json	org.eclipse.jgit.api.ResetCommand.resetCherryPick()	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	2622
3547.json	org.eclipse.jgit.internal.storage.dfs.DfsOutputStream.write(int)	noCall	noCall	true	2410
10242.json	org.eclipse.jgit.http.server.glue.UrlPipeline.destroy(java.util.Set<java.lang.Object>)	10287.json	org.eclipse.jgit.http.server.glue.MetaFilter.destroy()	true	3070
9661.json	org.eclipse.jgit.lib.RefDatabase.findRef(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String)	6292.json	org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.sha1(java.lang.String, java.lang.String)	true	1493
2496.json	org.eclipse.jgit.transport.CredentialItem.CharArrayType.setValueNoCopy(char[])	446.json,9.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.CharArrayType),org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[])	true	2768
7062.json	org.eclipse.jgit.api.Git.tagList()	null,null,363.json,null	org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoCommitsInRepository()	true	2485
8684.json	org.eclipse.jgit.patch.Patch.warn(byte[], int, java.lang.String)	8703.json,8682.json	org.eclipse.jgit.patch.HunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
2538.json	org.eclipse.jgit.transport.BaseReceivePack.FirstLine.getLine()	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	2285
1208.json	org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.load(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	1203.json,1204.json,null,1188.json,null	org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.iterator(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.getNote(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
77.json	org.eclipse.jgit.pgm.LsRemote.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	75.json	org.eclipse.jgit.pgm.LsRemote.run()	true	3176
1942.json	org.eclipse.jgit.transport.Daemon.openRepository(org.eclipse.jgit.transport.DaemonClient, java.lang.String)	1801.json	org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, java.lang.String, java.util.Collection<java.lang.String>)	true	3176
2378.json	org.eclipse.jgit.transport.PackParser.setCheckEofAfterPackFooter(boolean)	2614.json,null,null,null,null,null	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage(),org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead()	true	2567
5098.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	null	org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	671
2313.json	org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>)	2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
5813.json	org.eclipse.jgit.ignore.FastIgnoreRule.dirOnly()	null	org.eclipse.jgit.ignore.BasicRuleTest.test()	true	1322
7881.json	org.eclipse.jgit.submodule.SubmoduleStatus.getPath()	null,null,null,null,6861.json,null,null	org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.api.SubmoduleStatusCommand.call(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule()	true	2355
8012.json	org.eclipse.jgit.util.LongList.grow()	8008.json	org.eclipse.jgit.util.LongList.add(long)	true	3167
258.json	org.eclipse.jgit.pgm.Show.ignoreSpaceAtEol(boolean)	noCall	noCall	true	2154
5210.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setCachedDelta(org.eclipse.jgit.internal.storage.pack.DeltaCache.Ref)	5016.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
3668.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndThinPack()	noCall	noCall	true	2410
2125.json	org.eclipse.jgit.transport.PostUploadHookChain.onPostUpload(org.eclipse.jgit.storage.pack.PackStatistics)	noCall	noCall	true	1094
2610.json	org.eclipse.jgit.transport.ReceivePack.enableCapabilities()	noCall	noCall	true	2104
6640.json	org.eclipse.jgit.diff.SimilarityIndex.growAt(int)	6641.json	org.eclipse.jgit.diff.SimilarityIndex.grow()	true	2766
5672.json	org.eclipse.jgit.revwalk.RevTag.disposeBody()	noCall	noCall	true	3176
409.json	org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(org.eclipse.jgit.pgm.opt.CmdLineParser)	noCall	noCall	true	3176
2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	2304.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	1908
2227.json	org.eclipse.jgit.transport.TransportHttp.setAdditionalHeaders(java.util.Map<java.lang.String, java.lang.String>)	noCall	noCall	true	1507
4700.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onBeginWholeObject(long, int, long)	noCall	noCall	true	2692
5679.json	org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	5809.json,null	org.eclipse.jgit.revwalk.TopoSortGenerator.next(),org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront()	true	3176
3808.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getDeltaHeader(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	3811.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getObjectSize(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	true	2410
4939.json	org.eclipse.jgit.internal.storage.reftree.Command.getResult()	4930.json,4943.json,null,null,null,4985.json,null,2890.json,null,null,4934.json,2882.json,null,null,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.Command.toString(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateParentRef(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateSubdirectory(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId(),org.eclipse.jgit.internal.ketch.Proposal.toString(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyThenReadMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists(),org.eclipse.jgit.internal.storage.reftree.Command.abort(java.lang.Iterable<org.eclipse.jgit.internal.storage.reftree.Command>, java.lang.String),org.eclipse.jgit.internal.ketch.Proposal.success(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testUpdateMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testTagIsPeeled(),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	884
10056.json	org.eclipse.jgit.lfs.server.s3.S3Repository.assertNotEmpty(java.lang.String, java.lang.String)	10055.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config)	true	843
3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	3824.json,3428.json,null,3672.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getOrLoadBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	2410
8707.json	org.eclipse.jgit.patch.HunkHeader.skipLine(java.lang.String[], int[], int)	8705.json,8730.json	org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[]),org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[])	true	3176
7017.json	org.eclipse.jgit.api.ResetCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	138
7424.json	org.eclipse.jgit.api.RebaseCommand.parseAuthor()	7423.json	org.eclipse.jgit.api.RebaseCommand.continueRebase()	true	2739
2723.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	2722.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
8252.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.read(byte[], int, int)	8251.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.read()	true	2108
9304.json	org.eclipse.jgit.lib.BatchRefUpdate.setAllowNonFastForwards(boolean)	null,null,1951.json,null,null,4933.json,2762.json,null,null,null,null,null,null,null,null,null,3696.json,null,2625.json,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusNoMessage(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.packedRefsLockFailure(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.addMissingObject(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.atomicUpdateRespectsInProcessLock(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.simpleForce(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonExistentRef(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.fileDirectoryConflict(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.conflictThanksToDelete(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.updateToMissingObject(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefWrongOldValue(),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDefaultIdent(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.singleRefUpdateDoesNotRequirePackedRefsLock(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.noRefLog(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneNonExistentRef()	true	2210
5233.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isExtendedFlag(int)	3404.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.isFound()	true	2851
7722.json	org.eclipse.jgit.treewalk.filter.ByteArraySet.toArray()	null	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.toString()	true	1965
1828.json	org.eclipse.jgit.transport.ReceiveCommand.abort(java.lang.Iterable<org.eclipse.jgit.transport.ReceiveCommand>)	3255.json,3251.json,3256.json,3254.json,2623.json,null,4927.json,2764.json,3257.json,2728.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.failPendingCommands(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.RemoteGitReplica.abort(java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	884
6279.json	org.eclipse.jgit.gitrepo.RepoProject.clearLinkFiles()	6324.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	true	418
2727.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.asUpdateMap(java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	2723.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>)	true	872
2155.json	org.eclipse.jgit.transport.PostReceiveHookChain.newChain(java.util.List<? extends org.eclipse.jgit.transport.PostReceiveHook>)	noCall	noCall	true	2374
7119.json	org.eclipse.jgit.api.RebaseResult.result(org.eclipse.jgit.api.RebaseResult.Status, org.eclipse.jgit.revwalk.RevCommit)	7402.json,7425.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	true	1653
9058.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.isMustExist()	9071.json,6113.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.build(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.build()	true	2671
9869.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish)	9868.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.discoverLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	100
4862.json	org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges()	4861.json	org.eclipse.jgit.internal.storage.file.FileRepository.scanForRepoChanges()	true	2460
370.json	org.eclipse.jgit.pgm.Log.ignoreAllSpace(boolean)	noCall	noCall	true	2899
3896.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.newPack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, long)	3382.json,3775.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.initOutDesc(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase)	true	499
7562.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.next(int)	null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing()	true	3176
3380.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.newPackWriter()	3374.json,3372.json,3373.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
9934.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(org.eclipse.jgit.lfs.lib.AnyLongObjectId, org.eclipse.jgit.lfs.lib.AnyLongObjectId)	9944.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.equals(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	856
1604.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getOutputStream()	noCall	noCall	true	1572
5673.json	org.eclipse.jgit.revwalk.RewriteGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	noCall	noCall	true	3176
4988.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	5150.json,null	org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testSelectionOrderingWithChains()	true	963
1849.json	org.eclipse.jgit.transport.ReceiveCommand.isForceRefLog()	9337.json	org.eclipse.jgit.lib.BatchRefUpdate.isForceRefLog(org.eclipse.jgit.transport.ReceiveCommand)	true	253
7045.json	org.eclipse.jgit.api.PullResult.isSuccessful()	null,null	org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet()	true	2497
1742.json	org.eclipse.jgit.transport.TransferConfig.isAllowReachableSha1InWant()	1421.json	org.eclipse.jgit.transport.UploadPack.setTransferConfig(org.eclipse.jgit.transport.TransferConfig)	true	1097
5359.json	org.eclipse.jgit.revwalk.RevWalk.setRewriteParents(boolean)	null,null,9883.json,null,null,353.json	org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting(),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.createWalk()	true	1497
3061.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.getReflogEntry()	noCall	noCall	true	297
5181.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOfArray(int, int)	5179.json,5178.json,5180.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(int[]),org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(byte[]),org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(long[])	true	2893
2284.json	org.eclipse.jgit.transport.SshTransport.getSession()	2051.json	org.eclipse.jgit.transport.TransportSftp.newSftp()	true	2636
4191.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries(int)	4189.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getReverseEntries()	true	3176
6041.json	org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String)	6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2844
6820.json	org.eclipse.jgit.api.RevertCommand.getUnmergedPaths()	noCall	noCall	true	2364
6891.json	org.eclipse.jgit.api.CloneCommand.parseCommit(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref)	6887.json	org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	true	2686
9011.json	org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.lib.ObjectId)	6812.json,6979.json,7023.json	org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.ResetCommand.resetRevert()	true	1989
1225.json	org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry)	1211.json	org.eclipse.jgit.notes.NoteMapMerger.merge(int, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2709
5424.json	org.eclipse.jgit.revwalk.RevCommitList.fillTo(int)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,128.json,null,null,null,null	org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1(),org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2(),org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4(),org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll(),org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927(),org.eclipse.jgit.pgm.Glog.walkLoop(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.createCommitList(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents(),org.eclipse.jgit.revplot.PlotCommitListTest.testMerged(),org.eclipse.jgit.revplot.PlotCommitListTest.testLinear()	true	3176
6489.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.forceKIntoRange(int)	6501.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int)	true	3169
1422.json	org.eclipse.jgit.transport.UploadPack.isSideBand()	noCall	noCall	false	2285
2774.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.str(org.eclipse.jgit.lib.ObjectId)	2773.json,2869.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String)	true	872
5952.json	org.eclipse.jgit.dircache.DirCacheEditor.inDir(org.eclipse.jgit.dircache.DirCacheEntry, byte[], int)	5949.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int)	true	893
2846.json	org.eclipse.jgit.internal.ketch.ProposalRound.nullToEmpty(java.lang.String)	2845.json	org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.internal.ketch.Proposal)	true	872
376.json	org.eclipse.jgit.pgm.Log.noPrefix(boolean)	noCall	noCall	true	2838
4045.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.getCachedBytes()	noCall	noCall	true	221
1468.json	org.eclipse.jgit.transport.UploadPack.okToGiveUp()	null,null	org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.UploadPack.fetchV2()	true	3176
6689.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	6688.json	org.eclipse.jgit.diff.RenameDetector.compute()	true	2899
1363.json	org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject)	1360.json	org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId)	true	3176
510.json	org.eclipse.jgit.junit.http.AppServer.getSecurePort()	506.json,557.json	org.eclipse.jgit.junit.http.AppServer.setUp(),org.eclipse.jgit.junit.http.SimpleHttpServer.start()	true	297
1785.json	org.eclipse.jgit.transport.SideBandInputStream.doProgressLine(java.lang.String)	1784.json	org.eclipse.jgit.transport.SideBandInputStream.progress(java.lang.String)	true	3176
3483.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.size()	noCall	noCall	true	2410
9605.json	org.eclipse.jgit.lib.AnyObjectId.copyRawTo(java.nio.ByteBuffer)	noCall	noCall	true	3176
4329.json	org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.canStore(org.eclipse.jgit.transport.PackedObjectInfo)	4238.json,4330.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.oldestPossibleFormat(java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl()	true	3176
1808.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-0daac936-dcdd-48d2-a7eb-6ea66e2fb3ba.open(org.eclipse.jgit.transport.URIish)	noCall	noCall	true	1785
5019.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.index(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5013.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
940.json	org.eclipse.jgit.merge.MergeChunk.getConflictState()	916.json,7173.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(org.eclipse.jgit.merge.MergeChunk),org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>)	true	3076
3009.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.util.List<java.lang.String>, java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.HostEntry.Replacer)	3011.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.lang.String, java.io.File)	true	289
2653.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.writeOne(java.lang.CharSequence)	noCall	noCall	true	3070
9115.json	org.eclipse.jgit.lib.RepositoryCache.lockFor(org.eclipse.jgit.lib.RepositoryCache.Key)	null,9107.json	org.eclipse.jgit.lib.RepositoryCache.unregisterAndCloseRepository(org.eclipse.jgit.lib.RepositoryCache.Key),org.eclipse.jgit.lib.RepositoryCache.openRepository(org.eclipse.jgit.lib.RepositoryCache.Key, boolean)	true	3176
5411.json	org.eclipse.jgit.revwalk.RevWalk.createCommit(org.eclipse.jgit.lib.AnyObjectId)	5369.json,5367.json,5375.json	org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader)	true	3176
6408.json	org.eclipse.jgit.blame.ReverseWalk.ReverseCommit.addChild(org.eclipse.jgit.blame.ReverseWalk.ReverseCommit)	6406.json	org.eclipse.jgit.blame.ReverseWalk.next()	true	2567
4948.json	org.eclipse.jgit.internal.storage.reftree.RefTree.newEmptyTree()	null,168.json,null,null,null,null,null,null,null,4928.json,2851.json,null,2901.json,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateParentRef(),org.eclipse.jgit.pgm.debug.RebuildRefTree.rebuild(org.eclipse.jgit.lib.RefDatabase),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyCannotCreateSubdirectory(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldId(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyThenReadMaster(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyAlreadyExists(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testEmptyTree(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testUpdateMaster(),org.eclipse.jgit.internal.ketch.KetchLeader.initialize(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testApplyWrongOldIdButAlreadyCurrentIsNoOp(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testTagIsPeeled()	true	884
7462.json	org.eclipse.jgit.api.RemoteAddCommand.setName(java.lang.String)	null,83.json,null	org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd()	true	911
10204.json	org.eclipse.jgit.transport.JschSession.JschProcess.setupStreams()	noCall	noCall	true	2636
4172.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getObjectCount()	noCall	noCall	true	1922
4915.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newUpdate(java.lang.String, boolean)	null,null,4916.json,null,null,null	org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newRename(java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead()	true	880
7044.json	org.eclipse.jgit.api.PullResult.getFetchedFrom()	noCall	noCall	true	2802
4598.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.Anonymous-4caf4baa-1e60-4732-88de-3fc22cd1fc57.hasNext()	noCall	noCall	true	1922
9188.json	org.eclipse.jgit.lib.MutableObjectId.setByte(int, int)	null,null,1193.json,null,null,null,null,1214.json	org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.notes.LeafBucketTest.id(int),org.eclipse.jgit.notes.FanoutBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.id(int),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.id(int),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.lib.ObjectIdTest.testSetByte(),org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2775
3792.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader)	3748.json,3375.json,3849.json,3791.json,null	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
1692.json	org.eclipse.jgit.transport.AmazonS3.maxAttempts(java.lang.String, java.lang.String)	1699.json,1686.json,1687.json,1690.json,1683.json	org.eclipse.jgit.transport.AmazonS3.ListParser.list(),org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	true	3176
9867.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	9866.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String)	true	102
6979.json	org.eclipse.jgit.api.CommitCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7414.json,null,6812.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7423.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7385.json,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,301.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6309.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7402.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7195.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranchThatAlreadyExists(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.pgm.ConfigTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.pgm.MergeTest.setUp(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_7(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.EolRepositoryTest.gitCommit(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CleanTest.testCleanLeaveDirs(),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.ReflogTest.testSingleCommit(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_8(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSelf(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.StatusTest.makeInitialCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_3(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6_f2_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.pgm.FetchTest.testFetchForceUpdate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.pgm.CleanTest.testCleanDeleteDirs(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.pgm.TextBuiltinTest.testCleanDeleteDirs(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_4(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testWrongParams(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranch(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.DescribeCommandTest.modify(java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.pgm.BranchTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.TagTest.setUp(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutHead(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2953
3263.json	org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.next()	noCall	noCall	true	297
1527.json	org.eclipse.jgit.transport.FetchResult.addSubmodule(java.lang.String, org.eclipse.jgit.transport.FetchResult)	6835.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult)	true	463
2138.json	org.eclipse.jgit.transport.PushCertificate.equals(java.lang.Object)	noCall	noCall	true	1067
7836.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.computeLength(java.io.InputStream)	7802.json,7833.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader)	true	2851
9423.json	org.eclipse.jgit.lib.ObjectIdRef.getStorage()	null,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()	true	3176
1842.json	org.eclipse.jgit.transport.ReceiveCommand.setRefLogMessage(java.lang.String, boolean)	null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideRefLogMessage()	true	319
4519.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.iterator()	noCall	noCall	true	3176
2452.json	org.eclipse.jgit.transport.PackParser.InflaterStream.release()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2741
8850.json	org.eclipse.jgit.lib.ObjectLoader.cloneArray(byte[])	8845.json,8844.json	org.eclipse.jgit.lib.ObjectLoader.getBytes(int),org.eclipse.jgit.lib.ObjectLoader.getBytes()	true	2846
7919.json	org.eclipse.jgit.submodule.SubmoduleWalk.getHead()	7230.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	2355
6701.json	org.eclipse.jgit.diff.RenameDetector.path(org.eclipse.jgit.diff.DiffEntry)	6699.json	org.eclipse.jgit.diff.RenameDetector.bestPathMatch(org.eclipse.jgit.diff.DiffEntry, java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2886
9891.json	org.eclipse.jgit.lfs.LfsPrePushHook.parseObjects(com.google.gson.stream.JsonReader)	9890.json	org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>)	true	102
6176.json	org.eclipse.jgit.storage.pack.PackConfig.getDeltaCacheSize()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	2893
2651.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.append(int)	null	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	722
10152.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptKeyboardInteractive(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean[])	noCall	noCall	true	2768
10098.json	org.eclipse.jgit.lfs.server.LfsObject.getSize()	noCall	noCall	true	675
7130.json	org.eclipse.jgit.api.PullCommand.setRebase(org.eclipse.jgit.lib.BranchConfig.BranchRebaseMode)	noCall	noCall	true	634
301.json	org.eclipse.jgit.pgm.Commit.run()	noCall	noCall	true	2951
1871.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ea91b67b-c28a-4bdb-ad18-6ecf605c4ee3.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	3176
3573.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.isNameConflicting(java.lang.String)	noCall	noCall	true	2410
3849.json	org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream()	noCall	noCall	true	2410
7247.json	org.eclipse.jgit.api.DescribeCommand.setTarget(org.eclipse.jgit.lib.ObjectId)	null,274.json,7248.json,null	org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.api.DescribeCommand.setTarget(java.lang.String),org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, java.lang.String...)	true	1717
3377.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.isHead(org.eclipse.jgit.lib.Ref)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
7235.json	org.eclipse.jgit.api.StashApplyCommand.ignoreRepositoryState(boolean)	7401.json	org.eclipse.jgit.api.RebaseCommand.autoStashApply()	true	1648
8877.json	org.eclipse.jgit.lib.Config.getBoolean(java.lang.String, java.lang.String, java.lang.String, boolean)	6844.json,6048.json,1494.json,null,null,null,7619.json,null,null,6111.json,9905.json	org.eclipse.jgit.api.FetchCommand.isRemoveDeletedRefs(),org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, java.io.OutputStream),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues(),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommandDefinition(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection(),org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lfs.BuiltinLFS.isEnabled(org.eclipse.jgit.lib.Repository)	true	3176
8295.json	org.eclipse.jgit.util.GitDateParser.getDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)	8299.json	org.eclipse.jgit.util.GitDateParser.parse_simple(java.lang.String, org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)	true	2112
504.json	org.eclipse.jgit.junit.http.AppServer.createConstraintMapping()	noCall	noCall	false	292
6033.json	org.eclipse.jgit.dircache.DirCacheCheckout.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	717
5828.json	org.eclipse.jgit.ignore.internal.Strings.isComplexWildcard(java.lang.String)	5830.json,5827.json	org.eclipse.jgit.ignore.internal.Strings.checkWildCards(java.lang.String),org.eclipse.jgit.ignore.internal.Strings.isWildCard(java.lang.String)	true	1322
2062.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String)	2062.json,2061.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readAdvertisedRefs()	true	3176
8563.json	org.eclipse.jgit.util.Paths.stripTrailingSeparator(java.lang.String)	null,4969.json	org.eclipse.jgit.util.PathsTest.testStripTrailingSeparator(),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	883
157.json	org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	155.json	org.eclipse.jgit.pgm.debug.VerifyReftable.run()	true	297
5324.json	org.eclipse.jgit.revwalk.RevObjectList.add(int, E)	noCall	noCall	true	3176
1289.json	org.eclipse.jgit.transport.RemoteConfig.getTagOpt()	null,null,1265.json,null,2022.json	org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	true	3176
3485.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.setReadAheadBytes(int)	noCall	noCall	true	1143
7332.json	org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId()	7331.json	org.eclipse.jgit.api.CreateBranchCommand.call()	true	2800
4765.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.myAlternates()	null,null,null,null,4440.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedSizeFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseSizeFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.myAlternates(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPackedFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedInSelfOrAlternate(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.FileRepository.getAdditionalHaves(java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasLooseInSelfOrAlternate(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	3176
7303.json	org.eclipse.jgit.api.TagCommand.getName()	noCall	noCall	true	2844
9863.json	org.eclipse.jgit.lfs.LfsPointer.parseLfsPointer(java.io.InputStream)	9911.json,9908.json,9886.json	org.eclipse.jgit.lfs.lib.LfsPointerFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.lfs.LfsBlobFilter.smudgeLfsBlob(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.lfs.LfsPrePushHook.loadLfsPointer(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	628
6867.json	org.eclipse.jgit.api.ListBranchCommand.setListMode(org.eclipse.jgit.api.ListBranchCommand.ListMode)	null,null,null,null,null,null,431.json,null,null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.pgm.Branch.list(),org.eclipse.jgit.api.GitConstructionTest.testWrap(),org.eclipse.jgit.api.GitConstructionTest.testOpen(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2800
4333.json	org.eclipse.jgit.internal.storage.file.ByteWindow.copy(long, byte[], int, int)	4351.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copy(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int, int)	true	3176
4492.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.toResultString(org.eclipse.jgit.lib.RefUpdate.Result)	4491.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	3176
2830.json	org.eclipse.jgit.internal.ketch.KetchSystem.DefaultExecutorHolder.Anonymous-2a72402c-81bf-416a-8382-ed3a0f9ed375.newThread(java.lang.Runnable)	noCall	noCall	true	872
5993.json	org.eclipse.jgit.dircache.DirCacheEntry.toString()	noCall	noCall	true	2403
7056.json	org.eclipse.jgit.api.Git.log()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7429.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip(),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	2953
1310.json	org.eclipse.jgit.transport.PreReceiveHookChain.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	noCall	noCall	true	2374
7863.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7860.json,7859.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin(),org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()	true	3176
8825.json	org.eclipse.jgit.lib.BranchConfig.BranchRebaseMode.toConfigValue()	noCall	noCall	true	1426
7402.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1674
4589.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.cardinality()	noCall	noCall	true	1922
2225.json	org.eclipse.jgit.transport.TransportHttp.smartPush(java.lang.String, org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream)	2224.json	org.eclipse.jgit.transport.TransportHttp.openPush()	true	1137
6630.json	org.eclipse.jgit.diff.SimilarityIndex.common(org.eclipse.jgit.diff.SimilarityIndex, org.eclipse.jgit.diff.SimilarityIndex)	6629.json	org.eclipse.jgit.diff.SimilarityIndex.common(org.eclipse.jgit.diff.SimilarityIndex)	true	2899
1827.json	org.eclipse.jgit.transport.ReceiveCommand.filter(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.transport.ReceiveCommand.Result)	null,3253.json,2624.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.getPending(),org.eclipse.jgit.transport.BaseReceivePack.filterCommands(org.eclipse.jgit.transport.ReceiveCommand.Result)	true	3176
4182.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getOldId()	noCall	noCall	true	3176
1337.json	org.eclipse.jgit.transport.PacketLineOut.setFlushOnEnd(boolean)	null,2600.json,null	org.eclipse.jgit.transport.BaseReceivePack.close(),org.eclipse.jgit.transport.BaseReceivePack.init(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.transport.BaseReceivePack.enableCapabilities()	true	2671
6920.json	org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(org.eclipse.jgit.transport.RefLeaseSpec...)	null	org.eclipse.jgit.api.PushCommandTest.testPushWithLease()	true	486
8009.json	org.eclipse.jgit.util.LongList.set(int, long)	6501.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int)	true	3167
6263.json	org.eclipse.jgit.gitrepo.RepoProject.getName()	6318.json,6309.json	org.eclipse.jgit.gitrepo.ManifestParser.endDocument(),org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1111
6699.json	org.eclipse.jgit.diff.RenameDetector.bestPathMatch(org.eclipse.jgit.diff.DiffEntry, java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6698.json	org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2886
9204.json	org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String)	null,null,null,null,null,null,null,null,null,1225.json,null,8970.json,null,null,null,9755.json,null,null,null,1147.json,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test5_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test6_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test7_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test17_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test8_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test9_FromString(),org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_DiffLength(),org.eclipse.jgit.lib.Repository.resolveAbbreviation(java.lang.String),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_SameLength(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Full(),org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8(),org.eclipse.jgit.notes.NoteMap.load(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test4_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short4(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testFull_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test3_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test1_FromString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testEquals_Short8(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.test2_FromString()	true	3176
3318.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.maxUpdateIndex()	3638.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.noTables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs()	true	297
4851.json	org.eclipse.jgit.internal.storage.file.FileRepository.getObjectDatabase()	null,null,null,null,null,null,4805.json,null,null,null,null,4809.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4810.json,null,null,null,null,null,4817.json,null,null,null,null,null,null,null,null,null,null,null,4834.json,null,null,null,null,6113.json,4831.json	org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.GcTestCase.lastModified(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackInserterTest.assertPacksOnly(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.setUp(),org.eclipse.jgit.internal.storage.file.GC.deleteTempPacksIdx(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFile(),org.eclipse.jgit.internal.storage.file.PackInserterTest.newInserter(),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.diff.RawTextLoadTest.textFor(byte[], int),org.eclipse.jgit.internal.storage.file.GC.tooManyPacks(),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.fullPackFileName(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.GC.prunePreserved(),org.eclipse.jgit.internal.storage.file.GC.deleteOrphans(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.getSinglePack(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.PackWriterTest.setUp(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated(boolean),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveAndPruneOldPacks(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFileCorrupt(),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertAlternateObjects(org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.path(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.internal.storage.file.GC.getStatistics(),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.PackInserterTest.assertNoObjects(),org.eclipse.jgit.internal.storage.file.AlternatesTest.setAlternate(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.internal.storage.file.FileRepository),org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.storage.file.FileRepositoryBuilder.build(),org.eclipse.jgit.internal.storage.file.GC.nameFor(java.lang.String, java.lang.String)	true	3176
5632.json	org.eclipse.jgit.revwalk.FollowFilter.clone()	noCall	noCall	true	2899
5994.json	org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry)	7039.json,7040.json	org.eclipse.jgit.api.StashCreateCommand.Anonymous-e7156db4-ec89-4adb-b5b9-ef300ba66a48.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.StashCreateCommand.call()	true	3176
5015.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.deltaSizeLimit(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5013.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
9439.json	org.eclipse.jgit.lib.CommitBuilder.getCommitter()	null,null,9454.json,2850.json	org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	3176
6623.json	org.eclipse.jgit.diff.SimilarityIndex.hash(org.eclipse.jgit.lib.ObjectLoader)	6654.json,null,6622.json	org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetector.calculateModifyScore(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.SimilarityIndex.create(org.eclipse.jgit.lib.ObjectLoader)	true	2899
4103.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.encode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String)	4101.json,4102.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean)	true	2272
7418.json	org.eclipse.jgit.api.RebaseCommand.parseSquashFixupSequenceCount(java.lang.String)	7412.json,null	org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.api.RebaseCommandTest.testParseSquashFixupSequenceCount()	true	1677
7795.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.hasId()	noCall	noCall	true	2838
2309.json	org.eclipse.jgit.transport.WalkPushConnection.safeDelete(java.lang.String)	2308.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
9292.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.size()	null,null,null,4679.json,2404.json,null,null,4052.json,null	org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBitmapCount(),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getBitmapCount(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()	true	2645
9906.json	org.eclipse.jgit.lfs.BuiltinLFS.isEnabled(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.attributes.Attribute)	9901.json,9902.json	org.eclipse.jgit.lfs.BuiltinLFS.applySmudgeFilter(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.attributes.Attribute),org.eclipse.jgit.lfs.BuiltinLFS.applyCleanFilter(org.eclipse.jgit.lib.Repository, java.io.InputStream, long, org.eclipse.jgit.attributes.Attribute)	true	98
4185.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.getComment()	4187.json,4186.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.parseCheckout(),org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.toString()	true	3176
2919.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	319
8484.json	org.eclipse.jgit.util.FileUtils.createNewFile(java.io.File)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6825.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile(),org.eclipse.jgit.api.AddCommandTest.testAddFolder(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOk(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(),org.eclipse.jgit.util.FileUtilsTest.testMkdirs(),org.eclipse.jgit.api.ApplyCommand.getFile(java.lang.String, boolean),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.util.FileUtilsTest.testMkdir(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.util.FileUtilsTest.testDeleteFile(),org.eclipse.jgit.util.FileUtilsTest.testCreateNewFile(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursive(),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOkButIgnoreFail(),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile(),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmpty()	true	2703
5530.json	org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[])	null,null,null,null,null,5375.json,null,5529.json,5384.json,5528.json,null,null,null,null,null,null,5527.json,null,null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevWalk.Anonymous-5cb19d3f-31cb-4673-ab61-f1f79a3183b6.next(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.revwalk.RevWalk.parseNew(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_WeirdHeaderOnlyCommit(),org.eclipse.jgit.revwalk.RevCommit.parseBody(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean),org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevCommitParseTest.create(java.lang.String),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.FooterLineTest.parse(java.lang.String),org.eclipse.jgit.revwalk.RevCommit.parse(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incorrectUtf8Name()	true	3176
6282.json	org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(java.lang.String)	6326.json,6281.json	org.eclipse.jgit.gitrepo.ManifestParser.isNestedReferencefile(org.eclipse.jgit.gitrepo.RepoProject.ReferenceFile),org.eclipse.jgit.gitrepo.RepoProject.isAncestorOf(org.eclipse.jgit.gitrepo.RepoProject)	true	1412
7556.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.getEntryObjectId()	null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId()	true	3176
1285.json	org.eclipse.jgit.transport.RemoteConfig.addPushRefSpec(org.eclipse.jgit.transport.RefSpec)	null,null	org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate()	true	3176
8289.json	org.eclipse.jgit.util.HttpSupport.DummyX509TrustManager.checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)	noCall	noCall	true	2692
4186.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.toString()	noCall	noCall	true	3176
3415.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getInstance()	null,3510.json,null,null,3646.json,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.resetCache(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables()	true	2410
2903.json	org.eclipse.jgit.internal.ketch.KetchLeader.runLeader()	2902.json,null	org.eclipse.jgit.internal.ketch.KetchLeader.scheduleLeader(),org.eclipse.jgit.internal.ketch.KetchLeader.Anonymous-5d02c506-be0a-4a6b-b4a9-6de0a5953fd8.run()	true	872
6584.json	org.eclipse.jgit.diff.DiffFormatter.quotePath(java.lang.String)	6600.json,6599.json,6602.json	org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatGitDiffFirstHeaderLine(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry.ChangeType, java.lang.String, java.lang.String),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry)	true	2899
950.json	org.eclipse.jgit.merge.MergeResult.add(int, int, int, org.eclipse.jgit.merge.MergeChunk.ConflictState)	923.json	org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S)	true	3076
5848.json	org.eclipse.jgit.ignore.internal.PathMatcher.simpleMatch(java.lang.String, boolean, boolean)	5847.json	org.eclipse.jgit.ignore.internal.PathMatcher.matches(java.lang.String, boolean, boolean)	true	1322
5655.json	org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
2567.json	org.eclipse.jgit.transport.BaseReceivePack.setAtomic(boolean)	2644.json,null,null	org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.PushOptionsTest.Anonymous-d5dd560d-a618-4544-b058-ed12bf22629f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.PushOptionsTest.setUp()	true	767
6168.json	org.eclipse.jgit.storage.pack.PackConfig.getCutDeltaChains()	6209.json,5117.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)	true	1892
2053.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.getAlternates()	noCall	noCall	true	3176
1958.json	org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
926.json	org.eclipse.jgit.merge.ThreeWayMerger.merge(org.eclipse.jgit.lib.AnyObjectId...)	null,null,null,null,null,null,null,null,null,6812.json,null,7195.json,7237.json,null,null,null,null,null,null,null	org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState)	true	3176
8669.json	org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)	8659.json,8663.json,8717.json,8682.json,8677.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.FileHeader.parseTraditionalHeaders(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.patch.Patch.parseFile(byte[], int, int)	true	3176
1163.json	org.eclipse.jgit.notes.LeafBucket.get(int)	1219.json	org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int)	true	2709
7168.json	org.eclipse.jgit.api.MergeResult.getMergedCommits()	null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree()	true	2852
8076.json	org.eclipse.jgit.util.ChangeIdUtil.isEmptyLine(java.lang.String)	8075.json	org.eclipse.jgit.util.ChangeIdUtil.indexOfChangeId(java.lang.String, java.lang.String)	true	1935
3860.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setReaderOptions(org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions)	3863.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	true	2410
7066.json	org.eclipse.jgit.api.Git.fetch()	null,null,null,286.json,null,null,null,null,null,null,null,7265.json,null,null,null,null,null,null	org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.transport.TestProtocolTest.testMinimalNegotiation(),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.transport.TestProtocolTest.testFullNegotiation(),org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.transport.TestProtocolTest.testFetch()	true	2823
2603.json	org.eclipse.jgit.transport.BaseReceivePack.unlockPack()	2629.json,2644.json	org.eclipse.jgit.transport.BaseReceivePack.release(),org.eclipse.jgit.transport.ReceivePack.service()	true	3176
6671.json	org.eclipse.jgit.diff.HistogramDiffIndex.tableBits(int)	noCall	noCall	true	2816
10283.json	org.eclipse.jgit.http.server.glue.MetaFilter.serve(java.lang.String)	10253.json	org.eclipse.jgit.http.server.glue.MetaServlet.serve(java.lang.String)	true	2438
7996.json	org.eclipse.jgit.util.QuotedString.dequote(java.lang.String)	null	org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_User()	true	3176
6181.json	org.eclipse.jgit.storage.pack.PackConfig.setBigFileThreshold(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
2642.json	org.eclipse.jgit.transport.ReceivePack.receive(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)	null,425.json,2280.json,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.receive(org.eclipse.jgit.transport.ReceivePack, org.eclipse.jgit.util.TemporaryBuffer.Heap, org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.pgm.ReceivePack.run(),org.eclipse.jgit.transport.InternalPushConnection.Anonymous-9faa373a-b723-4388-8da5-ccfafc7367d7.run(),org.eclipse.jgit.transport.Daemon.Anonymous-adeefff8-c989-4e7d-a4a4-bbc0e9b84c59.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>)	true	3176
2002.json	org.eclipse.jgit.transport.Transport.getTagOpt()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
3266.json	org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getReflogEntry()	noCall	noCall	true	297
9083.json	org.eclipse.jgit.lib.InflaterCache.release(java.util.zip.Inflater)	4360.json,4063.json,4064.json,null,3764.json,3114.json,2452.json	org.eclipse.jgit.internal.storage.file.WindowCursor.close(),org.eclipse.jgit.internal.storage.file.UnpackedObject.Anonymous-64a8ac4c-f7fa-4006-b259-d03d12a94c23.close(),org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, long, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.PackInserter.close(),org.eclipse.jgit.internal.storage.dfs.DfsReader.close(),org.eclipse.jgit.internal.storage.reftable.BlockReader.inflateBuf(org.eclipse.jgit.internal.storage.io.BlockSource, long, int, int),org.eclipse.jgit.transport.PackParser.InflaterStream.release()	true	3176
7799.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(java.io.File, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	7798.json,7675.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.treewalk.FileTreeIterator.idSubmodule(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	2410
9096.json	org.eclipse.jgit.lib.RepositoryCache.open(org.eclipse.jgit.lib.RepositoryCache.Key, boolean)	1617.json,9095.json	org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String),org.eclipse.jgit.lib.RepositoryCache.open(org.eclipse.jgit.lib.RepositoryCache.Key)	true	3176
8106.json	org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit()	8091.json,8092.json,8094.json	org.eclipse.jgit.util.TemporaryBuffer.write(int),org.eclipse.jgit.util.TemporaryBuffer.write(byte[], int, int),org.eclipse.jgit.util.TemporaryBuffer.copy(java.io.InputStream)	true	3176
300.json	org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	872
8928.json	org.eclipse.jgit.lib.Config.StringReader.reset()	8922.json,8921.json,null,8924.json	org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader),org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int),org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader)	true	3176
4599.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.Anonymous-c87b7fcc-9672-433c-862b-517bc4060758.next()	noCall	noCall	true	1922
3973.json	org.eclipse.jgit.internal.storage.file.RefDirectory.copy(java.lang.String, int, int)	3972.json	org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader)	true	3176
5249.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[])	3806.json,4140.json,5248.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[])	true	3176
1720.json	org.eclipse.jgit.transport.URIish.getPass()	null,2186.json,1806.json,null,null,null,null,null,1728.json,null,null,null,10153.json,null,null,2298.json,1724.json,null,null,null,null,null,null,null,2506.json,null,1725.json,1820.json,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.HttpAuthMethod.authorize(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	3176
5250.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[])	209.json	org.eclipse.jgit.pgm.debug.ShowPackDelta.run()	true	2893
4030.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.setInput(long, java.util.zip.Inflater, byte[])	4029.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.inflate(long, int)	true	221
1070.json	org.eclipse.jgit.errors.CorruptObjectException.getErrorType()	null,2411.json,2926.json	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.internal.fsck.FsckPackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[])	true	892
5120.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor)	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	2893
5444.json	org.eclipse.jgit.revwalk.LIFORevQueue.everbodyHasFlag(int)	noCall	noCall	true	3176
7515.json	org.eclipse.jgit.api.LsRemoteCommand.setRemote(java.lang.String)	75.json,6292.json,null	org.eclipse.jgit.pgm.LsRemote.run(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.sha1(java.lang.String, java.lang.String),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository()	true	2579
9359.json	org.eclipse.jgit.lib.ObjectChecker.setIgnore(java.util.Set<org.eclipse.jgit.lib.ObjectChecker.ErrorType>)	1739.json	org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)	true	892
9374.json	org.eclipse.jgit.lib.ObjectChecker.checkTree(byte[])	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9842.json,null,null,null,null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero(),org.eclipse.jgit.lib.ObjectCheckerTest.testNullSha1InTreeEntry(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree3(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree5(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting7(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_Tree(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_File(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting5(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingDotDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames8(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2(),org.eclipse.jgit.lib.ObjectCheckerTest.checkOneName(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsGitTilde11(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree4(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTree6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting8(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting2(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomething(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeSorting4(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTreeNameIsDotGitDotDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidEmptyTree(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSomethingSpaceSomething(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGitOtherPlatform(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot()	true	3176
5853.json	org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher.matches(java.lang.String, int, int)	noCall	noCall	true	1299
3512.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.maybeGetTemporaryBuffer(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	3513.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	89
7465.json	org.eclipse.jgit.api.StatusCommand.setIgnoreSubmodules(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1314
1968.json	org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId)	1966.json	org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec)	true	3176
1791.json	org.eclipse.jgit.transport.SignedPushConfig.setCertNonceSlopLimit(int)	noCall	noCall	true	1088
7415.json	org.eclipse.jgit.api.RebaseCommand.stripCommentLines(java.lang.String)	7414.json	org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine)	true	1677
8535.json	org.eclipse.jgit.util.RefList.Anonymous-76a9194e-4c9b-4e57-a39e-63cd5cf2d5b6.next()	noCall	noCall	true	3060
3294.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeRef(org.eclipse.jgit.lib.Ref)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs()	true	297
6137.json	org.eclipse.jgit.storage.pack.PackStatistics.getTotalBytes()	6151.json,3636.json	org.eclipse.jgit.storage.pack.PackStatistics.getTransferRate(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics)	true	1094
5556.json	org.eclipse.jgit.revwalk.RevCommit.getFooterLines(org.eclipse.jgit.revwalk.FooterKey)	2752.json,5555.json	org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.revwalk.RevCommit.getFooterLines(java.lang.String)	true	3176
8429.json	org.eclipse.jgit.util.FS.setGitSystemConfig(java.io.File)	noCall	noCall	true	1112
1528.json	org.eclipse.jgit.transport.FetchResult.submoduleResults()	null,null,null,302.json,286.json,null,null,null,null,null	org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenOnDemandAndRevisionNotChanged(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenSubmoduleConfigurationSetToNo(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenSubmoduleConfigurationSetToYes(boolean),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenFetchConfigurationSetToNo(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenOnDemandAndRevisionChanged(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenFetchConfigurationSetToYes(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenNo(boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenYes(boolean)	true	463
8239.json	org.eclipse.jgit.util.io.IsolatedOutputStream.checkedGet(java.util.concurrent.Future<java.lang.Void>)	8238.json	org.eclipse.jgit.util.io.IsolatedOutputStream.execute(java.util.concurrent.Callable<java.lang.Void>)	true	573
3388.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryDescription.hashCode()	noCall	noCall	true	2410
9361.json	org.eclipse.jgit.lib.ObjectChecker.setAllowLeadingZeroFileMode(boolean)	null	org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero()	true	1551
5493.json	org.eclipse.jgit.revwalk.ObjectWalk.checkConnectivity()	null,1959.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.transport.FetchProcess.askForIsComplete()	true	3176
9603.json	org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.lib.AnyObjectId)	null,2109.json,3258.json,null,7833.json,151.json,5425.json,4498.json,2621.json,null,4906.json,1956.json,1518.json,4827.json,2850.json,7434.json,1906.json,6979.json,null,9604.json,2094.json,3254.json,null,null,9333.json,null,null,6582.json,null,null,6234.json,null,2851.json,6031.json,null,null,3058.json,2910.json,4935.json,null,6862.json,6889.json,1964.json,3974.json,null,9570.json,152.json,6043.json,6033.json,null,9327.json,6452.json,1853.json,4946.json,6456.json,null,1215.json,2901.json,3970.json,7405.json,null,null,null,6042.json,6309.json,null,2752.json,1966.json,167.json,4931.json,4501.json,4908.json,null,304.json,2139.json,7230.json,1130.json,1957.json,3977.json,9553.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.transport.RemoteRefUpdate.isDelete(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.lib.ObjectCheckerTest.Anonymous-455427e6-7072-4e1d-aa63-c3f86cf6c07e.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revwalk.RevCommitList.fillTo(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String),org.eclipse.jgit.transport.FetchProcess.removeTrackingRefUpdate(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.listRefLogObjects(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.lib.AnyObjectId.equals(java.lang.Object),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.PushCertificateStore.save(org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.revwalk.RevObjectTest.testEquals(),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject(),org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.lib.ObjectCheckerTest.set(org.eclipse.jgit.lib.ObjectId...),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.revplot.PlotCommit.addChild(org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.storage.reftree.Command.toRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.hasDanglingHead(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.api.CloneCommand.findBranchToCheckout(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.FetchProcess.expandFetchTags(),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.transport.PushCertificateStore.commandsEqual(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.idEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects(),org.eclipse.jgit.lib.BatchRefUpdate.isMissing(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.storage.reftree.Command.check(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha(),org.eclipse.jgit.notes.NoteMapMerger.equals(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.notes.NoteBucket),org.eclipse.jgit.internal.ketch.KetchLeader.initialize(),org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(java.lang.String),org.eclipse.jgit.lib.RefTest.checkContainsRef(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.transport.PushCertificate.commandsEqual(org.eclipse.jgit.transport.PushCertificate, org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.notes.DefaultNoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.transport.FetchProcess.removeFetchHeadRecord(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String),org.eclipse.jgit.lib.RefUpdate.safeParseNew(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId)	true	3176
10295.json	org.eclipse.jgit.http.server.glue.MetaFilter.register(org.eclipse.jgit.http.server.glue.ServletBinderImpl)	10284.json,10283.json,10285.json	org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(java.lang.String),org.eclipse.jgit.http.server.glue.MetaFilter.serve(java.lang.String),org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(java.util.regex.Pattern)	true	3070
4677.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getTags()	4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	false	1922
3300.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.deleteLog(java.lang.String, long)	3245.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(org.eclipse.jgit.internal.storage.reftable.MergedReftable)	true	297
7579.json	org.eclipse.jgit.treewalk.TreeWalk.setPostOrderTraversal(boolean)	null,null,null,null,null	org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testInitialize_TogglePostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testResetDoesNotAffectPostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree()	true	3176
5494.json	org.eclipse.jgit.revwalk.ObjectWalk.getPathString()	340.json	org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject)	true	3176
1659.json	org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	2768
1927.json	org.eclipse.jgit.transport.Daemon.setUploadPackFactory(org.eclipse.jgit.transport.resolver.UploadPackFactory<org.eclipse.jgit.transport.DaemonClient>)	noCall	noCall	true	2672
3942.json	org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(java.lang.String)	null,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_EmptyDatabase(),org.eclipse.jgit.internal.storage.file.RefDirectory.hasDanglingHead(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_FetchHead()	true	941
8666.json	org.eclipse.jgit.patch.FileHeader.parseFileMode(int, int)	8659.json,8667.json,8721.json,8662.json,8722.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.FileHeader.parseIndexLine(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseModeLine(int, int),org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode(int, int)	true	3176
4469.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.contains(org.eclipse.jgit.lib.AnyObjectId)	4465.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.isUnpacked(org.eclipse.jgit.lib.AnyObjectId)	true	2833
1606.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getRequestMethod()	noCall	noCall	true	1572
8575.json	org.eclipse.jgit.util.BlockList.add(int, T)	null,null,null	org.eclipse.jgit.util.BlockListTest.testAddToEnd(),org.eclipse.jgit.util.BlockListTest.testAddRejectsBadIndexes(),org.eclipse.jgit.util.BlockListTest.testAddSlowPath()	true	2651
4049.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getObject(int)	noCall	noCall	true	1922
65.json	org.eclipse.jgit.transport.http.apache.HttpClientConnectionFactory.create(java.net.URL)	noCall	noCall	true	1572
468.json	org.eclipse.jgit.junit.MockSystemReader.Anonymous-688937b7-7f34-48f0-be0f-f64cca33c5dc.read(java.util.concurrent.TimeUnit)	noCall	noCall	true	565
2162.json	org.eclipse.jgit.transport.PushCertificateParser.parse(java.io.Reader)	2160.json	org.eclipse.jgit.transport.PushCertificateParser.fromReader(java.io.Reader)	true	1067
6654.json	org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	6652.json	org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
150.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String)	145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	true	297
2937.json	org.eclipse.jgit.internal.fsck.FsckPackParser.getCorruptObjects()	3453.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	319
3118.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte[], int, int, int)	3117.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.seekKey(byte[])	true	297
10324.json	org.eclipse.jgit.http.server.GitFilter.setAsIsFileService(org.eclipse.jgit.http.server.resolver.AsIsFileService)	noCall	noCall	true	2438
5072.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isDeltaBaseAsOffset()	5043.json,null,null	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeFileHeader(int, long),org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()	true	3176
7809.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getOptions()	7832.json,7853.json,7829.json,7830.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry)	true	2851
3636.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics)	3772.json,3382.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	2410
7094.json	org.eclipse.jgit.api.Git.stashApply()	null,null,null,null,null,null,7401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2293
4105.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, byte[])	4101.json,4102.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean)	true	3059
5369.json	org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.AnyObjectId, int)	null,5664.json,1362.json,null,1377.json,3375.json,null,null	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
8919.json	org.eclipse.jgit.lib.Config.clear()	9477.json	org.eclipse.jgit.lib.StoredConfig.clear()	true	3176
7912.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath()	7266.json,null,null,null,6862.json,null,null,null,null,null,null,null,6835.json,null,null	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef()	true	2355
320.json	org.eclipse.jgit.pgm.opt.CmdLineParser.getRepository()	321.json,331.json	org.eclipse.jgit.pgm.opt.CmdLineParser.getRevWalk(),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean)	false	3176
9073.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupGitDir()	9070.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setup()	true	2907
9144.json	org.eclipse.jgit.lib.RefRename.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)	noCall	noCall	true	3059
5897.json	org.eclipse.jgit.dircache.DirCache.findEntry(byte[], int)	null,5896.json,5904.json	org.eclipse.jgit.dircache.DirCacheBasicTest.testFindOnEmpty(),org.eclipse.jgit.dircache.DirCache.findEntry(java.lang.String),org.eclipse.jgit.dircache.DirCache.getEntriesWithin(java.lang.String)	true	3176
7039.json	org.eclipse.jgit.api.StashCreateCommand.Anonymous-e7156db4-ec89-4adb-b5b9-ef300ba66a48.apply(org.eclipse.jgit.dircache.DirCacheEntry)	noCall	noCall	true	2293
10121.json	org.eclipse.jgit.archive.TarFormat.suffixes()	noCall	noCall	true	1830
8204.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.println(java.lang.String)	98.json,388.json,193.json,302.json,274.json,203.json,230.json,178.json,89.json,154.json,232.json,231.json,352.json,132.json,124.json,156.json,363.json,382.json,380.json,270.json,143.json,278.json,209.json,272.json,250.json,146.json,301.json,136.json,83.json,233.json,85.json,287.json,99.json,123.json,358.json,411.json,134.json,248.json,386.json,360.json,316.json,84.json,220.json,100.json,167.json,223.json,297.json,96.json,97.json,218.json,435.json,212.json,95.json,437.json	org.eclipse.jgit.pgm.Status.printList(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.pgm.debug.LfsStore.run(),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig),org.eclipse.jgit.pgm.debug.ReadReftable.write(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.Clone.cloningSubmodule(java.lang.String),org.eclipse.jgit.pgm.Clone.initializedSubmodules(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.pgm.RevParse.run(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.pgm.debug.ReadDirCache.run(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.pgm.debug.ShowPackDelta.run(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.MergeBase.run(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.printf(java.lang.String, java.lang.Object...),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.pgm.debug.WriteReftable.printf(java.lang.String, java.lang.Object...),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.pgm.Clone.checkingOut(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>),org.eclipse.jgit.pgm.Fetch.fetchingSubmodule(java.lang.String),org.eclipse.jgit.pgm.Status.printList(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.debug.MakeCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.pgm.Reflog.run(),org.eclipse.jgit.pgm.AmazonS3Client.run(),org.eclipse.jgit.pgm.opt.CmdLineParser.printToErrorWriter(java.lang.String),org.eclipse.jgit.pgm.Remote.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree),org.eclipse.jgit.pgm.Status.printUnmerged(java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.Version.run(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.pgm.Status.printSectionHeader(java.lang.String, java.lang.Object...),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run(),org.eclipse.jgit.pgm.Status.printPorcelainLine(char, char, java.lang.String),org.eclipse.jgit.pgm.Clean.run()	true	2093
4187.json	org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.parseCheckout()	noCall	noCall	true	2470
3688.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exactRef(java.lang.String)	null	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getRef(java.lang.String)	true	235
8728.json	org.eclipse.jgit.patch.CombinedHunkHeader.parseBody(org.eclipse.jgit.patch.Patch, int)	noCall	noCall	true	3176
4827.json	org.eclipse.jgit.internal.storage.file.GC.listRefLogObjects(org.eclipse.jgit.lib.Ref, long)	4817.json,4810.json	org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2142
6733.json	org.eclipse.jgit.diff.DiffEntry.getId(org.eclipse.jgit.diff.DiffEntry.Side)	6598.json	org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	true	2838
2009.json	org.eclipse.jgit.transport.Transport.setObjectChecker(org.eclipse.jgit.lib.ObjectChecker)	2007.json	org.eclipse.jgit.transport.Transport.setCheckFetchedObjects(boolean)	true	1293
8538.json	org.eclipse.jgit.util.RefList.asList()	null	org.eclipse.jgit.util.RefListTest.testEmptyBuilder()	true	3060
5900.json	org.eclipse.jgit.dircache.DirCache.nextEntry(byte[], int, int)	5948.json,5904.json	org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.dircache.DirCache.getEntriesWithin(java.lang.String)	true	3176
5292.json	org.eclipse.jgit.attributes.Attributes.remove(java.lang.String)	5315.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes()	true	925
9580.json	org.eclipse.jgit.lib.IndexDiff.getModified()	null,null,null,6968.json,null,6962.json,null,9570.json,null,null,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.api.Status.getModified(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple()	true	3176
1960.json	org.eclipse.jgit.transport.FetchProcess.expandWildcard(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
5999.json	org.eclipse.jgit.dircache.DirCacheEntry.encodeTS(int, long)	5980.json,5983.json	org.eclipse.jgit.dircache.DirCacheEntry.setCreationTime(long),org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(long)	true	3176
7364.json	org.eclipse.jgit.api.ArchiveCommand.UnsupportedFormatException.getFormat()	noCall	noCall	true	1844
7166.json	org.eclipse.jgit.api.MergeResult.getNewHead()	null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.DescribeCommandTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2939
278.json	org.eclipse.jgit.pgm.Merge.run()	noCall	noCall	true	2630
4892.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor)	4352.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.CachedPack)	true	2683
10367.json	org.eclipse.jgit.http.server.NoCacheFilter.destroy()	noCall	noCall	true	3070
8051.json	org.eclipse.jgit.util.FS_POSIX.readUmask()	8050.json	org.eclipse.jgit.util.FS_POSIX.umask()	true	1295
9431.json	org.eclipse.jgit.lib.ObjectDatabase.has(org.eclipse.jgit.lib.AnyObjectId)	4875.json,4343.json,null,8955.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int, boolean),org.eclipse.jgit.internal.storage.file.WindowCursor.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible(),org.eclipse.jgit.lib.Repository.hasObject(org.eclipse.jgit.lib.AnyObjectId)	true	2907
7227.json	org.eclipse.jgit.api.SubmoduleInitCommand.call()	null,null,null,null,6888.json,null,null,null	org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl()	true	2355
6863.json	org.eclipse.jgit.api.DeleteTagCommand.call()	null,null,null,null,null,363.json	org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run()	true	2485
546.json	org.eclipse.jgit.junit.http.RecordingLogger.isDebugEnabled()	noCall	noCall	true	3070
9133.json	org.eclipse.jgit.lib.UserConfig.isAuthorNameImplicit()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	2643
3420.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getMissCount()	null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks()	true	2410
7589.json	org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()	null,1006.json,385.json,7764.json,null,6714.json,9570.json,7760.json	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.TreeFilter.AnyDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
9322.json	org.eclipse.jgit.lib.BatchRefUpdate.getPushOptions()	noCall	noCall	true	688
1662.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeCommit()	noCall	noCall	true	629
7766.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.workingTree(org.eclipse.jgit.treewalk.TreeWalk)	7764.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	2739
5071.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setClientShallowCommits(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	null	org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	1091
5674.json	org.eclipse.jgit.revwalk.RewriteGenerator.outputType()	noCall	noCall	true	3176
2503.json	org.eclipse.jgit.transport.TransportAmazonS3.Anonymous-59f01865-f76b-4c7e-b227-d409fa0c8060.getRequiredFields()	noCall	noCall	true	2645
1802.json	org.eclipse.jgit.transport.DaemonService.isEnabledFor(org.eclipse.jgit.lib.Repository)	1801.json	org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, java.lang.String, java.util.Collection<java.lang.String>)	true	3176
1917.json	org.eclipse.jgit.transport.BasePackFetchConnection.onReceivePack()	1916.json	org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	2280
9492.json	org.eclipse.jgit.lib.RebaseTodoLine.Action.parse(java.lang.String)	null,9755.json	org.eclipse.jgit.api.RebaseCommandTest.countPicks(),org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int)	true	2756
5431.json	org.eclipse.jgit.revwalk.RevObject.getId()	null,null,7484.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1908.json,null,null,null,null,null,null,272.json,6234.json,null,null,null,null,null,1536.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7385.json,null,null,null,null,7428.json,null,null,null,339.json,null,9257.json,null,5691.json,null,null,null,null,null,null,null,null,null,340.json,null,null,null,null,6812.json,null,null,4814.json,null,null,null,null,6979.json,null,null,null,380.json,null,null,null,null,null,null,null,250.json,null,null,null,null,null,null,null,null,null,null,null,null,7195.json,null,null,null,9885.json,null,null,null,null,7332.json,null,null,6887.json,null,null,null,null,1362.json,null,null,null,6309.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CheckoutCommand.getStartPointObjectId(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth1(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth1(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHardAndCount(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.revplot.PlotCommitListTest.testMerged(),org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.api.DescribeCommandTest.modify(java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revplot.PlotCommit.addChild(org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth1(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowIsMinimalDepth2(),org.eclipse.jgit.api.BranchCommandTest.testDelete(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.pgm.StatusTest.mergeTestBranchInMaster(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.revplot.PlotCommitListTest.testLinear(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.lib.BlobBasedConfig.asTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches(),org.eclipse.jgit.pgm.RevList.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.internal.storage.file.GC.removeReferenced(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>, org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.revplot.PlotCommitListTest.CommitListAssert.commit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.transport.UploadPackTest.Anonymous-9d19ac99-df2a-4ed0-97ef-a2bed4d6788f.create(java.lang.Object, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.MergeBase.run(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.revwalk.RevObjectTest.testId(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName(),org.eclipse.jgit.lfs.LfsPrePushHook.getObjectSize(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowAncestorDepth2(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentId(java.lang.String, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testShallowFetchShallowParentDepth2()	true	3176
10112.json	org.eclipse.jgit.archive.TgzFormat.createArchiveOutputStream(java.io.OutputStream)	noCall	noCall	true	1839
7185.json	org.eclipse.jgit.api.SubmoduleSyncCommand.addPath(java.lang.String)	noCall	noCall	true	2355
399.json	org.eclipse.jgit.pgm.Main.configureHttpProxy()	391.json,null	org.eclipse.jgit.pgm.Main.run(java.lang.String[]),org.eclipse.jgit.pgm.ProxyPropertiesDumper.main(java.lang.String[])	true	3176
261.json	org.eclipse.jgit.pgm.Show.ignoreAllSpace(boolean)	noCall	noCall	true	2154
3647.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.getPackDescription()	noCall	noCall	true	2410
1663.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumWholeTree()	noCall	noCall	true	629
2633.json	org.eclipse.jgit.transport.ReceivePack.getPushOptions()	null,null,null,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()	true	688
8596.json	org.eclipse.jgit.util.SystemReader.Default.getTimezone(long)	noCall	noCall	true	3176
108.json	org.eclipse.jgit.pgm.CommandCatalog.load(java.lang.String)	107.json	org.eclipse.jgit.pgm.CommandCatalog.scan(java.net.URL)	true	3176
5560.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.init(org.eclipse.jgit.revwalk.AbstractRevQueue)	5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	true	3176
3149.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setRestartInterval(int)	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
1765.json	org.eclipse.jgit.transport.WalkEncryption.error(java.lang.Throwable)	1775.json,null,1777.json,null	org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.encrypt(java.io.OutputStream),org.eclipse.jgit.transport.WalkEncryption.JetS3tV2.decrypt(java.io.InputStream),org.eclipse.jgit.transport.WalkEncryption.SymmetricEncryption.validate(java.net.HttpURLConnection, java.lang.String),org.eclipse.jgit.transport.WalkEncryption.JetS3tV2.encrypt(java.io.OutputStream)	true	3176
1681.json	org.eclipse.jgit.transport.AmazonS3.httpNow()	1694.json	org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>)	true	3176
6474.json	org.eclipse.jgit.diff.HistogramDiff.setFallbackAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm)	null,null,null,null,null,200.json	org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB(),org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA(),org.eclipse.jgit.diff.HistogramDiffTest.algorithm(),org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.Anonymous-d145f885-6a22-42bc-8587-b583c85a2a87.create(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.Anonymous-a26fae55-4da7-405f-9b5f-a0e081f4bf42.create()	true	2816
8338.json	org.eclipse.jgit.util.sha1.SHA1.recompress(int)	8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	true	466
5172.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.cache(byte[], int, int)	noCall	noCall	true	2893
5510.json	org.eclipse.jgit.revwalk.DateRevQueue.peek()	null,5460.json,5575.json,1375.json,null	org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO(),org.eclipse.jgit.revwalk.StartGenerator.next(),org.eclipse.jgit.revwalk.PendingGenerator.next(),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int),org.eclipse.jgit.revwalk.DateRevQueueTest.testEmpty()	true	3176
122.json	org.eclipse.jgit.pgm.Push.run()	noCall	noCall	true	3176
1204.json	org.eclipse.jgit.notes.FanoutBucket.LazyNoteBucket.estimateSize(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	noCall	noCall	true	2766
6538.json	org.eclipse.jgit.diff.RawText.isBinary(byte[], int)	8254.json,8188.json,8163.json,8155.json,6536.json,6537.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.fillBuffer(),org.eclipse.jgit.util.io.AutoCRLFOutputStream.decideMode(),org.eclipse.jgit.util.io.AutoLFOutputStream.decideMode(),org.eclipse.jgit.util.io.AutoLFInputStream.fillBuffer(),org.eclipse.jgit.diff.RawText.isBinary(byte[]),org.eclipse.jgit.diff.RawText.isBinary(java.io.InputStream)	true	2903
4813.json	org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate()	4805.json	org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	801
6169.json	org.eclipse.jgit.storage.pack.PackConfig.setCutDeltaChains(boolean)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	1892
7967.json	org.eclipse.jgit.util.LfsFactory.setInstance(org.eclipse.jgit.util.LfsFactory)	9899.json	org.eclipse.jgit.lfs.BuiltinLFS.register()	true	98
6668.json	org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long)	6665.json,6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	true	2816
1174.json	org.eclipse.jgit.notes.LeafBucket.treeSize(int)	1173.json	org.eclipse.jgit.notes.LeafBucket.build()	true	2766
4115.json	org.eclipse.jgit.internal.storage.file.PackFile.close()	null,null,null,null,4758.json,4762.json,4805.json,4761.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.closeAllPackHandles(java.io.File),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.close(),org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.ObjectDirectory.reuseMap(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
6644.json	org.eclipse.jgit.diff.SimilarityRenameDetector.setRenameScore(int)	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
7865.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.combineDF(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7859.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.min()	true	3176
2915.json	org.eclipse.jgit.internal.ketch.KetchLeader.shutdown()	noCall	noCall	true	872
2858.json	org.eclipse.jgit.internal.ketch.LogIndex.nextIndex(org.eclipse.jgit.lib.AnyObjectId)	2812.json	org.eclipse.jgit.internal.ketch.Round.runAsync(org.eclipse.jgit.lib.AnyObjectId)	true	872
9821.json	org.eclipse.jgit.lib.ObjectReader.Filter.open(java.lang.Iterable<T>, boolean)	noCall	noCall	true	2851
8198.json	org.eclipse.jgit.util.io.TimeoutOutputStream.beginWrite()	8193.json,8196.json,8195.json,8197.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(int),org.eclipse.jgit.util.io.TimeoutOutputStream.flush(),org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[], int, int),org.eclipse.jgit.util.io.TimeoutOutputStream.close()	true	3176
8175.json	org.eclipse.jgit.util.io.CountingOutputStream.write(int)	noCall	noCall	true	2410
10084.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	856
7630.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte[], int, int, int, int)	7629.json,7628.json,7626.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte[], int, int, int),org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(byte[]),org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator, int)	true	2685
6017.json	org.eclipse.jgit.dircache.DirCacheCheckout.getConflicts()	null,null,7471.json,7020.json,null,7438.json,7385.json	org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.getConflicts(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommand.call()	true	2844
6773.json	org.eclipse.jgit.diff.Edit.extendA()	8701.json,null	org.eclipse.jgit.patch.HunkHeader.toEditList(),org.eclipse.jgit.diff.EditTest.testExtendA()	true	3176
3020.json	org.eclipse.jgit.internal.revwalk.AddUnseenToBitmapFilter.requiresCommitBody()	noCall	noCall	true	1922
3398.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.lruPushHead(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry)	3396.json,3393.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.moveToHead(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, byte[])	true	1126
5155.json	org.eclipse.jgit.internal.storage.pack.PackWriter.State.estimateBytesUsed()	noCall	noCall	true	2399
9562.json	org.eclipse.jgit.lib.IndexDiff.ProgressReportingFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	noCall	noCall	true	2697
1421.json	org.eclipse.jgit.transport.UploadPack.setTransferConfig(org.eclipse.jgit.transport.TransferConfig)	noCall	noCall	true	1803
1469.json	org.eclipse.jgit.transport.UploadPack.okToGiveUpImp()	1468.json	org.eclipse.jgit.transport.UploadPack.okToGiveUp()	true	3176
8629.json	org.eclipse.jgit.util.time.MonotonicSystemClock.propose()	noCall	noCall	true	565
4687.json	org.eclipse.jgit.internal.storage.file.BitSet.clear()	4178.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId)	true	1922
6946.json	org.eclipse.jgit.api.errors.FilterFailedException.getReturnCode()	null,null,null	org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2()	true	925
7202.json	org.eclipse.jgit.api.CherryPickCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	7405.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	1496
7999.json	org.eclipse.jgit.util.QuotedString.BourneStyle.dequote(byte[], int, int)	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.util.QuotedStringBourneStyleTest.assertDequote(java.lang.String, java.lang.String),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareA(),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_Empty1(),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_SoleSq(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareA(),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_Empty2(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.assertDequote(java.lang.String, java.lang.String),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_Empty1(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_SoleSq(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_Empty2()	true	3176
9245.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.endTask()	null,null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testMethodsOkOnMainThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testFailsMethodsOnBackgroundThread(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b21ae44e-1ca9-452d-abbd-ba4b124efb4a.run()	true	2893
3694.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.exists()	noCall	noCall	true	235
8319.json	org.eclipse.jgit.util.Base64.encode3to4(byte[], int, int, byte[], int)	8321.json	org.eclipse.jgit.util.Base64.encodeBytes(byte[], int, int)	true	3176
4600.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.Anonymous-8b63db6b-e95e-4d3b-8e3c-6d432f09c6db.remove()	noCall	noCall	true	1922
3733.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-b1474c89-36b5-493f-b944-72035ad7e5ec.open()	noCall	noCall	true	2410
2153.json	org.eclipse.jgit.transport.TransportGitAnon.TcpPushConnection.close()	noCall	noCall	true	3176
5482.json	org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject)	2619.json,9887.json,1959.json,5139.json,4810.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.transport.FetchProcess.askForIsComplete(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
7902.json	org.eclipse.jgit.submodule.SubmoduleWalk.setTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7886.json,7884.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository)	true	2355
5082.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isUseBitmaps()	noCall	noCall	true	1922
2923.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onBeginRefDelta(long, org.eclipse.jgit.lib.AnyObjectId, long)	noCall	noCall	true	319
9311.json	org.eclipse.jgit.lib.BatchRefUpdate.setForceRefLog(boolean)	null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInUpdate()	true	253
10179.json	org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String)	null,null,null,10197.json,null,null,null,null,null,null,null,10153.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts(),org.eclipse.jgit.transport.OpenSshConfigTest.testEqualsSign(),org.eclipse.jgit.transport.OpenSshConfig.getConfig(java.lang.String),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttemptsDefault(),org.eclipse.jgit.transport.OpenSshConfigTest.testDefaultBlock(),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_invalidConnectionAttempts(),org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes(),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_badConnectionAttempts(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthenticationsDefault(),org.eclipse.jgit.transport.OpenSshConfigTest.testMissingArgument(),org.eclipse.jgit.transport.OpenSshConfigTest.testHomeDirUserReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testNoConfig(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookupsWithModification(),org.eclipse.jgit.transport.OpenSshConfigTest.testHostnameReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testLocalhostFQDNReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookups(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode(),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiHost(),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testPattern(),org.eclipse.jgit.transport.OpenSshConfigTest.testIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive(),org.eclipse.jgit.transport.OpenSshConfigTest.testRemoteUserReplacement(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeDefault(),org.eclipse.jgit.transport.OpenSshConfigTest.testHostCaseInsensitive(),org.eclipse.jgit.transport.OpenSshConfigTest.testNegatedPattern(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_DoesNotMatch(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications()	true	3176
6301.json	org.eclipse.jgit.gitrepo.RepoCommand.setRecordRemoteBranch(boolean)	null,null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup()	true	979
9283.json	org.eclipse.jgit.lib.BatchingProgressMonitor.Task.run()	noCall	noCall	true	2658
6660.json	org.eclipse.jgit.diff.SimilarityRenameDetector.encodeFile(int)	6659.json	org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int)	true	2899
8010.json	org.eclipse.jgit.util.LongList.fillTo(int, long)	noCall	noCall	true	3167
3839.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.notifyIndexChanged(boolean)	noCall	noCall	true	2410
9606.json	org.eclipse.jgit.lib.AnyObjectId.copyRawTo(byte[], int)	5106.json,null,4017.json,7799.json,3190.json,9835.json,3279.json,5045.json,3063.json,5911.json,6062.json,null,4719.json,4330.json,5989.json	org.eclipse.jgit.internal.storage.pack.PackWriter.computeName(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject(),org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(java.io.File, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.key(int, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, int, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId, boolean),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeId(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.dircache.DirCacheTree.write(byte[], java.io.OutputStream),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.internal.storage.file.PackIndexWriterV1.writeImpl(),org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.AnyObjectId)	true	3176
3947.json	org.eclipse.jgit.internal.storage.file.RefDirectory.upcast(org.eclipse.jgit.util.RefList<? extends org.eclipse.jgit.lib.Ref>)	3945.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3059
8357.json	org.eclipse.jgit.util.IO.readFully(java.io.File, int)	8355.json,9127.json	org.eclipse.jgit.util.IO.readFully(java.io.File),org.eclipse.jgit.lib.RepositoryCache.FileKey.readFirstLine(java.io.File)	true	3176
3445.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getStatVals(java.util.concurrent.atomic.AtomicReference<java.util.concurrent.atomic.AtomicLong[]>)	3423.json,3417.json,3419.json,3420.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getEvictions(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getCurrentSize(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getHitCount(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getMissCount()	true	194
2928.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	319
2492.json	org.eclipse.jgit.transport.CredentialItem.StringType.setValue(java.lang.String)	445.json,9.json,1641.json,1659.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.StringType),org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[]),org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
5954.json	org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.setReplace(boolean)	null,4959.json	org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command)	true	893
4038.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.Anonymous-ccef0517-8d4b-4609-9bc1-e18ca6013d0f.read()	noCall	noCall	true	171
1603.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setFixedLengthStreamingMode(int)	noCall	noCall	true	1572
3927.json	org.eclipse.jgit.internal.storage.io.BlockSource.from(java.nio.channels.FileChannel)	3923.json	org.eclipse.jgit.internal.storage.io.BlockSource.from(java.io.FileInputStream)	true	297
7194.json	org.eclipse.jgit.api.RmCommand.delete(java.io.File)	7193.json	org.eclipse.jgit.api.RmCommand.call()	true	2756
9377.json	org.eclipse.jgit.lib.ObjectChecker.idFor(int, byte[])	9365.json,9371.json,9374.json,9369.json	org.eclipse.jgit.lib.ObjectChecker.check(int, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTag(byte[]),org.eclipse.jgit.lib.ObjectChecker.checkTree(byte[]),org.eclipse.jgit.lib.ObjectChecker.checkCommit(byte[])	true	892
5483.json	org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort)	2619.json,5139.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2493
7020.json	org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId)	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	2669
9801.json	org.eclipse.jgit.lib.ObjectReader.Anonymous-3a45b941-3f98-425f-851f-375139561652.getSize()	noCall	noCall	true	2851
1145.json	org.eclipse.jgit.notes.NoteMap.writeTree(org.eclipse.jgit.lib.ObjectInserter)	null,null,null,null,7224.json,null,null,null,null,null	org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent(),org.eclipse.jgit.notes.NoteMapTest.commitNoteMap(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent(),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes(),org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict(),org.eclipse.jgit.notes.NoteMapMergerTest.createLargeNoteMap(java.lang.String, java.lang.String, int, int),org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes()	true	2766
9418.json	org.eclipse.jgit.lib.ObjectIdRef.getName()	null,9425.json,null,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRef.toString(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown(),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled.peel(org.eclipse.jgit.lib.ObjectIdRef)	true	3176
6243.json	org.eclipse.jgit.revplot.PlotCommitList.clear()	noCall	noCall	true	3174
356.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.show(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.revwalk.RevObject)	354.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.walkLoop()	true	3176
9349.json	org.eclipse.jgit.lib.ObjectId.fromRaw(int[])	noCall	noCall	true	3176
6719.json	org.eclipse.jgit.diff.DiffEntry.pair(org.eclipse.jgit.diff.DiffEntry.ChangeType, org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int)	null,null,6645.json,6705.json,null,null,null,6706.json,null,6698.json	org.eclipse.jgit.diff.RenameDetector.rejoinModifies(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.exactRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange(),org.eclipse.jgit.diff.RenameDetector.exactCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
1981.json	org.eclipse.jgit.transport.Transport.getTransportProtocols()	null	org.eclipse.jgit.transport.TransportTest.testSpi()	true	2645
9244.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isCancelled()	null,null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.Anonymous-b9da345b-7dab-4ee9-8b52-579a4d122ccf.run(),org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2893
8645.json	org.eclipse.jgit.patch.FileHeader.getScriptText()	null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange()	true	3176
2894.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner)	2892.json	org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	872
8413.json	org.eclipse.jgit.util.FS.userHome()	8591.json,null,null,4236.json,null,null,2287.json,null,2506.json,10178.json,null,null,7991.json,8052.json,null	org.eclipse.jgit.util.SystemReader.Default.openUserConfig(org.eclipse.jgit.lib.Config, org.eclipse.jgit.util.FS),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load(),org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.restoreGitRepo(java.io.InputStream, java.io.File, java.lang.String),org.eclipse.jgit.transport.NetRC.getDefaultFile(),org.eclipse.jgit.util.FSTest.testReadPipeCommandStartFailure(),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.transport.OpenSshConfig.get(org.eclipse.jgit.util.FS),org.eclipse.jgit.util.FSTest.testReadPipePosixCommandFailure(),org.eclipse.jgit.storage.file.FileBasedConfig.readIncludedConfig(java.lang.String),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.util.FS_POSIX.discoverGitExe(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked()	false	3176
4913.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.isNameConflicting(java.lang.String)	null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testIsNameConflicting()	true	880
7572.json	org.eclipse.jgit.treewalk.TreeWalk.getOperationType()	5321.json	org.eclipse.jgit.attributes.AttributesHandler.attributesNode(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser)	true	849
2169.json	org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PacketLineIn, boolean)	null,null,null,null,null,null,2606.json	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.disabledParserStillRequiresCorrectSyntax(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1202
7824.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int)	7824.json,7823.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int)	true	2881
9307.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage()	9335.json,4933.json,4931.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	2210
10085.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	noCall	noCall	true	856
3643.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.equals(java.lang.Object)	3904.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Set<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>)	true	2410
4385.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLine()	noCall	noCall	true	1922
3523.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.writePackFooter()	3505.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush()	true	2410
4867.json	org.eclipse.jgit.internal.storage.file.FileRepository.AttributesNodeProviderImpl.getGlobalAttributesNode()	noCall	noCall	true	935
1536.json	org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	null,null	org.eclipse.jgit.transport.BundleWriterTest.makeBundleWithCallback(java.lang.String, java.lang.String, org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader()	true	3176
9294.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.Anonymous-0b4ec0fb-38f5-4c3c-8ce6-482de059d8d0.hasNext()	noCall	noCall	true	2645
2326.json	org.eclipse.jgit.transport.SideBandOutputStream.flushBuffer()	null,2327.json	org.eclipse.jgit.transport.BaseReceivePack.close(),org.eclipse.jgit.transport.SideBandOutputStream.flush()	true	3176
10253.json	org.eclipse.jgit.http.server.glue.MetaServlet.serve(java.lang.String)	noCall	noCall	true	3070
7497.json	org.eclipse.jgit.api.CheckoutCommand.getResult()	null,null,null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch()	true	2728
8616.json	org.eclipse.jgit.util.SystemReader.getSimpleDateFormat(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.util.GitDateParserTest.local(),org.eclipse.jgit.util.GitDateParserTest.rfc(),org.eclipse.jgit.util.GitDateParserTest.weeksAgo(),org.eclipse.jgit.util.GitDateParserTest.iso(),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.util.GitDateParserTest.shortWithDots(),org.eclipse.jgit.util.GitDateParserTest.shortWithSlash(),org.eclipse.jgit.util.GitDateParserTest.shortFmt(),org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse(),org.eclipse.jgit.util.GitDateParserTest.defaultFmt()	true	2296
413.json	org.eclipse.jgit.pgm.TextBuiltin.getOutputWriter()	null	org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...)	true	262
515.json	org.eclipse.jgit.junit.http.AppServer.assertAlreadySetUp()	508.json,509.json,510.json	org.eclipse.jgit.junit.http.AppServer.getURI(),org.eclipse.jgit.junit.http.AppServer.getPort(),org.eclipse.jgit.junit.http.AppServer.getSecurePort()	true	3070
9303.json	org.eclipse.jgit.lib.BatchRefUpdate.isAllowNonFastForwards()	4503.json,3255.json,3261.json,4927.json,9333.json,4499.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	2210
5175.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.copyEntries(org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner)	noCall	noCall	true	2893
8412.json	org.eclipse.jgit.util.FS.resolve(java.io.File, java.lang.String)	1822.json,1821.json,1807.json,4769.json,null,7992.json,9125.json,4236.json,9075.json,1808.json,9077.json,9044.json,9078.json,8042.json,null,7991.json,4181.json,87.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-6c9352ed-88ab-442d-b26b-caf914bc32ab.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-d5fbdced-de8a-4ee7-b6f4-e81b78ebaedc.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load(),org.eclipse.jgit.util.FS_Win32.userHomeImpl(),org.eclipse.jgit.lib.RepositoryCache.FileKey.isGitRepository(java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals(),org.eclipse.jgit.transport.TransportLocal.Anonymous-0daac936-dcdd-48d2-a7eb-6ea66e2fb3ba.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig(),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.util.FS_Win32_Cygwin.resolve(java.io.File, java.lang.String),org.eclipse.jgit.storage.file.FileBasedConfig.readIncludedConfig(java.lang.String),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load(),org.eclipse.jgit.pgm.Config.list()	true	3176
3872.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getObjectCount()	noCall	noCall	true	2410
3527.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getOrLoadBlock(long)	3526.json,3524.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.setInput(long, java.util.zip.Inflater),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.read(long, byte[], int, int)	true	1397
7273.json	org.eclipse.jgit.api.LogCommand.addRange(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	null,7429.json	org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit)	true	2953
2855.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter)	2849.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertProposals(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
6914.json	org.eclipse.jgit.api.PushCommand.setReceivePack(java.lang.String)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
8875.json	org.eclipse.jgit.lib.Config.getLong(java.lang.String, java.lang.String, java.lang.String, long)	3599.json,3561.json,9406.json,6111.json,null	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getInt(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, int),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ConfigTest.assertReadLong(long, java.lang.String)	true	3176
7172.json	org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, int[][])	noCall	noCall	true	2841
4605.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.getObject(int)	null,4599.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.iterator(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.Anonymous-c87b7fcc-9672-433c-862b-517bc4060758.next()	true	1922
10166.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getJSch(org.eclipse.jgit.transport.OpenSshConfig.Host, org.eclipse.jgit.util.FS)	10153.json,10163.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.OpenSshConfig.Host, java.lang.String, java.lang.String, int, org.eclipse.jgit.util.FS)	true	3176
1447.json	org.eclipse.jgit.transport.UploadPack.getMessageOutputStream()	noCall	noCall	true	1845
5987.json	org.eclipse.jgit.dircache.DirCacheEntry.setLength(long)	null,7530.json,null,null,5910.json,6045.json,null,null,7040.json,6981.json,null,null,977.json	org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.Anonymous-b9b85d10-b9e7-45e5-a9d9-19f754156ab0.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.lib.DirCacheCheckoutTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.IndexDiffTest.Anonymous-5add3e4d-870d-4e6e-b369-cee482373695.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.lib.IndexDiffTest.add(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long)	true	2848
253.json	org.eclipse.jgit.pgm.internal.CLIText.format(java.lang.String)	132.json,331.json	org.eclipse.jgit.pgm.RevParse.run(),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean)	false	278
5859.json	org.eclipse.jgit.ignore.internal.IMatcher.Anonymous-d770d20f-ed2b-41c3-a8ea-38fcb87f75bb.matches(java.lang.String, boolean, boolean)	noCall	noCall	true	1322
10047.json	org.eclipse.jgit.lfs.server.s3.S3Config.getSecretKey()	10055.json,10041.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	843
7285.json	org.eclipse.jgit.api.DiffCommand.setOldTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
5171.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.credit(int)	noCall	noCall	true	2893
6490.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int)	6485.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.calculate(int, int, int, int)	true	3169
7547.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.next(int)	null,null,null,null,null,null,1156.json,null,null,1154.json,null,null,null,null,null,1153.json	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.notes.NoteParser.parseFanoutTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName(),org.eclipse.jgit.notes.NoteParser.parseLeafTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo(),org.eclipse.jgit.notes.NoteParser.parseTree()	true	3176
6826.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader)	6824.json	org.eclipse.jgit.api.ApplyCommand.call()	true	2288
2372.json	org.eclipse.jgit.transport.PackParser.isCheckObjectCollisions()	2398.json,2410.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	1102
1107.json	org.eclipse.jgit.hooks.Hooks.postCommit(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	635
6126.json	org.eclipse.jgit.storage.pack.PackStatistics.getUninterestingObjects()	noCall	noCall	true	1094
2189.json	org.eclipse.jgit.transport.HttpAuthMethod.getType()	2185.json,null,2229.json,2269.json	org.eclipse.jgit.transport.HttpAuthMethod.scanResponse(org.eclipse.jgit.transport.http.HttpConnection, java.util.Collection<org.eclipse.jgit.transport.HttpAuthMethod.Type>),org.eclipse.jgit.transport.HttpAuthMethod.Negotiate.configureRequest(org.eclipse.jgit.transport.http.HttpConnection),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	1481
8004.json	org.eclipse.jgit.util.LongList.size()	3063.json,null,3058.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.valueSize(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.valueType(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	3167
7609.json	org.eclipse.jgit.treewalk.TreeWalk.enterSubtree()	null,null,null,6023.json,null,null,null,null,6021.json,7568.json,null,null,945.json,7975.json,null,1006.json,null,7530.json,null,null,null,1377.json,null,7590.json,null,null,null,null,6714.json,7370.json,null	org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk(),org.eclipse.jgit.treewalk.ForPathTest.testFindObjects(),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.treewalk.TreeWalk.next(),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	3176
6521.json	org.eclipse.jgit.diff.Subsequence.b(S, org.eclipse.jgit.diff.Edit)	6516.json,6478.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2820
7528.json	org.eclipse.jgit.api.AddCommand.addFilepattern(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,79.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6979.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,900.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testEmptyGitAttributeFile(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.StatusTest.createUnmergedFile(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testReplaceFileByPartOfDirectory(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.pgm.Add.run(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategy(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testCheckinCheckoutDifferences(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.api.AddCommandTest.testReplaceFileWithDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_13(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.AddCommandTest.testAttributesConflictingMatch(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryWithFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoAttributes(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.AddCommandTest.testCleanFilter(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testRules(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testIncorrectAttributeFileName(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly2(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_4(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.AddCommandTest.testAddFolder(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testHierarchyBothIterator(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.EolRepositoryTest.gitAdd(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.pgm.RmTest.multiplePathsShouldBeRemoved(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.AddCommandTest.testCommandInjection(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndAdd(java.lang.String, java.lang.String...),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.StatusTest.addFilesToIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoMatchingAttributes(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_10(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2888
7953.json	org.eclipse.jgit.util.RawParseUtils.endOfFooterLineKey(byte[], int)	5554.json	org.eclipse.jgit.revwalk.RevCommit.getFooterLines()	true	3176
9371.json	org.eclipse.jgit.lib.ObjectChecker.checkTag(byte[])	null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTagHasNoTaggerHeader(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag()	true	3176
6853.json	org.eclipse.jgit.api.FetchCommand.setDryRun(boolean)	6835.json,286.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run()	true	2816
4395.json	org.eclipse.jgit.internal.storage.file.ByteArrayWindow.copy(int, byte[], int, int)	noCall	noCall	true	3176
6678.json	org.eclipse.jgit.diff.RenameDetector.Anonymous-67ca3550-6b87-4609-a4ca-548c8c9da4ce.sortOf(org.eclipse.jgit.diff.DiffEntry.ChangeType)	noCall	noCall	true	2899
1195.json	org.eclipse.jgit.notes.FanoutBucket.contractIfTooSmall(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	null,1214.json	org.eclipse.jgit.notes.FanoutBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
8569.json	org.eclipse.jgit.util.BlockList.clear()	null,null	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.clearBitmaps(),org.eclipse.jgit.util.BlockListTest.testAddToEnd()	true	2651
3241.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.addAll(java.util.List<? extends org.eclipse.jgit.internal.storage.reftable.Reftable>)	3774.json,3384.json,3606.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
2827.json	org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository)	2826.json	org.eclipse.jgit.internal.ketch.KetchSystem.createLeader(org.eclipse.jgit.lib.Repository)	true	872
6868.json	org.eclipse.jgit.api.ListBranchCommand.setContains(java.lang.String)	null,431.json	org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.pgm.Branch.list()	true	1607
8269.json	org.eclipse.jgit.util.RawCharUtil.isWhitespace(byte)	6607.json,null,8271.json,null,8270.json,null,6608.json	org.eclipse.jgit.diff.RawTextComparator.Anonymous-837c468d-c71c-4269-bf45-53142f360ba5.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-497c94c9-3c5a-4578-a72c-a78d99537be0.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.util.RawCharUtil.trimLeadingWhitespace(byte[], int, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-7f273e49-3d63-407e-b953-45f07386f2b1.hashRegion(byte[], int, int),org.eclipse.jgit.util.RawCharUtil.trimTrailingWhitespace(byte[], int, int),org.eclipse.jgit.util.RawCharUtilTest.testIsWhitespace(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-94cf0709-aacd-414d-8c95-5eb192abead5.hashRegion(byte[], int, int)	true	2904
9249.json	org.eclipse.jgit.lib.TextProgressMonitor.format(java.lang.StringBuilder, java.lang.String, int)	9247.json,9248.json	org.eclipse.jgit.lib.TextProgressMonitor.onUpdate(java.lang.String, int),org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int)	true	2658
8514.json	org.eclipse.jgit.util.IntList.size()	6028.json,null,null,null,6528.json,6530.json,null,null,null,955.json,3169.json,null,6619.json,null,952.json,null,null,null	org.eclipse.jgit.dircache.DirCacheCheckout.filterOut(java.util.ArrayList<java.lang.String>, org.eclipse.jgit.util.IntList),org.eclipse.jgit.util.IntListTest.testClear(),org.eclipse.jgit.util.IntListTest.testAdd_LargeGroup(),org.eclipse.jgit.util.RawParseUtils_LineMapTest.asInts(org.eclipse.jgit.util.IntList),org.eclipse.jgit.diff.RawText.size(),org.eclipse.jgit.diff.RawText.isMissingNewlineAtEnd(),org.eclipse.jgit.util.IntListTest.testFillTo0(),org.eclipse.jgit.util.IntListTest.testFillTo1(),org.eclipse.jgit.util.IntListTest.testSet(),org.eclipse.jgit.merge.MergeResult.iterator(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.util.IntListTest.testAdd_ZeroCapacity(),org.eclipse.jgit.diff.RawTextComparator.findForwardLine(org.eclipse.jgit.util.IntList, int, int),org.eclipse.jgit.util.IntListTest.testEmpty_SpecificCapacity(),org.eclipse.jgit.merge.MergeResult.Anonymous-8c977b18-b519-4c1a-8b5e-dcdc7e08c99d.hasNext(),org.eclipse.jgit.util.IntListTest.testEmpty_DefaultCapacity(),org.eclipse.jgit.util.IntListTest.testFillTo100(),org.eclipse.jgit.util.IntListTest.testAdd_SmallGroup()	true	3176
7207.json	org.eclipse.jgit.api.CherryPickCommand.toString()	noCall	noCall	true	609
3651.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onBeginOfsDelta(long, long, long)	noCall	noCall	true	2410
6101.json	org.eclipse.jgit.storage.file.WindowCacheConfig.getPackedGitWindowSize()	4287.json,6111.json	org.eclipse.jgit.internal.storage.file.WindowCache.tableSize(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
6523.json	org.eclipse.jgit.diff.Subsequence.toBase(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.Subsequence<S>, org.eclipse.jgit.diff.Subsequence<S>)	6516.json,6478.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2820
994.json	org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()	null,null,null,7195.json,null,7237.json,null,null,6812.json,null,null	org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ThreeCommonPredecessors(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState)	true	2841
1899.json	org.eclipse.jgit.transport.BasePackFetchConnection.getPackLocks()	noCall	noCall	true	3176
921.json	org.eclipse.jgit.merge.MergeFormatterPass.writeLine(org.eclipse.jgit.diff.RawText, int)	915.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge()	true	1171
3954.json	org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String)	4494.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String)	true	3059
6165.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaCompress(boolean)	3772.json,6173.json,null,3375.json,6209.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchWindowSize(int),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas()	true	2893
2509.json	org.eclipse.jgit.transport.TransportAmazonS3.openPush()	noCall	noCall	true	3176
5100.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getObjectWalk()	5099.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	488
6167.json	org.eclipse.jgit.storage.pack.PackConfig.setMaxDeltaDepth(int)	6209.json,7179.json,null	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.configureGc(org.eclipse.jgit.internal.storage.file.GC, boolean)	true	3176
1094.json	org.eclipse.jgit.hooks.PrePushHook.getStdinArgs()	noCall	noCall	true	950
5564.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.next()	5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	true	3176
3048.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.initLogIndex()	3039.json,3040.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allLogs(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekLog(java.lang.String, long)	true	297
2710.json	org.eclipse.jgit.transport.PushCertificateIdent.toString()	noCall	noCall	true	1088
9055.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setBare()	9078.json,7025.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.api.InitCommand.call()	true	2907
4848.json	org.eclipse.jgit.internal.storage.file.FileRepository.loadRepoConfig()	4854.json	org.eclipse.jgit.internal.storage.file.FileRepository.getConfig()	true	2981
3431.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.addToClock(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref, int)	3435.json,3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
5308.json	org.eclipse.jgit.attributes.Attribute.hashCode()	noCall	noCall	true	1249
5087.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setIgnoreMissingUninteresting(boolean)	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean)	true	3176
1003.json	org.eclipse.jgit.merge.ResolveMerger.setDirCache(org.eclipse.jgit.dircache.DirCache)	noCall	noCall	true	2841
3260.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3259.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
1235.json	org.eclipse.jgit.notes.Note.toString()	noCall	noCall	true	2767
9112.json	org.eclipse.jgit.lib.RepositoryCache.getKeys()	9101.json	org.eclipse.jgit.lib.RepositoryCache.getRegisteredKeys()	true	1083
210.json	org.eclipse.jgit.pgm.debug.ShowPackDelta.Anonymous-67496aee-5478-418e-b394-ba5fe2eba493.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	noCall	noCall	true	2893
5490.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject()	null,null,5493.json,null,null,5139.json,9884.json,null,null,5640.json,4814.json,2619.json,null,null,354.json,null,null	org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.countObjects(),org.eclipse.jgit.revwalk.ObjectWalk.checkConnectivity(),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.revwalk.ObjectWalkTest.testNoCommits(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.lfs.LfsPrePushHook.findLfsPointers(java.util.Set<org.eclipse.jgit.lfs.LfsPointer>, org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob(),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob(),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.internal.storage.file.GC.removeReferenced(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>, org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.revwalk.ObjectWalkTest.testCull(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.pgm.RevWalkTextBuiltin.walkLoop(),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2(),org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1()	true	3176
4706.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onObjectHeader(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	2692
5218.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getChainLength()	5119.json	org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	1892
8862.json	org.eclipse.jgit.lib.NullProgressMonitor.start(int)	noCall	noCall	true	3176
5929.json	org.eclipse.jgit.dircache.DirCacheTree.slash(byte[], int)	5924.json	org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
437.json	org.eclipse.jgit.pgm.Clean.run()	noCall	noCall	true	649
4682.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps()	4095.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	true	1922
3218.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.skipShadowedRefs(java.lang.String)	null	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.next()	true	297
1240.json	org.eclipse.jgit.transport.TrackingRefUpdate.getNewObjectId()	304.json,null,1956.json,null	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.FetchProcess.removeTrackingRefUpdate(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate()	true	3176
7469.json	org.eclipse.jgit.api.StatusCommand.setWorkingTreeIt(org.eclipse.jgit.treewalk.WorkingTreeIterator)	noCall	noCall	true	2636
5920.json	org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter)	5919.json	org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter)	true	3176
5639.json	org.eclipse.jgit.revwalk.BitmapWalker.findObjects(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean)	null,5140.json,5150.json	org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWantsUsingBitmap(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.BitmapIndex, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(org.eclipse.jgit.revwalk.BitmapWalker, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor)	true	1922
6819.json	org.eclipse.jgit.api.RevertCommand.getFailingResult()	null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()	true	2392
4343.json	org.eclipse.jgit.internal.storage.file.WindowCursor.has(org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null	org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain(),org.eclipse.jgit.internal.storage.file.PackFileTest.testConfigurableStreamFileThreshold(),org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject()	true	2907
534.json	org.eclipse.jgit.junit.http.RecordingLogger.clear()	506.json,507.json	org.eclipse.jgit.junit.http.AppServer.setUp(),org.eclipse.jgit.junit.http.AppServer.tearDown()	true	3070
2133.json	org.eclipse.jgit.transport.PushCertificate.getSignature()	null,null,null,null	org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1202
1390.json	org.eclipse.jgit.transport.OperationResult.getPeerUserAgent()	noCall	noCall	true	1137
9273.json	org.eclipse.jgit.lib.BatchingProgressMonitor.start(int)	noCall	noCall	true	2658
8393.json	org.eclipse.jgit.util.FS.detect()	null,2284.json,null,7835.json	org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.SshTransport.getSession(),org.eclipse.jgit.treewalk.WorkingTreeIterator.readContentAsNormalizedString(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	2645
2445.json	org.eclipse.jgit.transport.PackParser.DeltaChain.remove()	2401.json	org.eclipse.jgit.transport.PackParser.removeBaseById(org.eclipse.jgit.lib.AnyObjectId)	true	3176
2577.json	org.eclipse.jgit.transport.BaseReceivePack.setMaxCommandDiscardBytes(long)	noCall	noCall	true	484
8167.json	org.eclipse.jgit.util.io.LimitedInputStream.mark(int)	noCall	noCall	true	1565
8240.json	org.eclipse.jgit.util.io.IsolatedOutputStream.interrupted(java.lang.InterruptedException)	8239.json	org.eclipse.jgit.util.io.IsolatedOutputStream.checkedGet(java.util.concurrent.Future<java.lang.Void>)	true	573
7944.json	org.eclipse.jgit.util.RawParseUtils.author(byte[], int)	5546.json,5722.json	org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent(),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	true	3176
6010.json	org.eclipse.jgit.dircache.DirCacheBuilder.enterTree(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.lib.ObjectReader)	6007.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	922
3952.json	org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(org.eclipse.jgit.lib.Ref)	3951.json	org.eclipse.jgit.internal.storage.file.RefDirectory.peel(org.eclipse.jgit.lib.Ref)	true	2903
5902.json	org.eclipse.jgit.dircache.DirCache.getEntry(int)	null,null,null,null,null,null,null,null,144.json,null,null,null,5949.json,null,null,6062.json,4966.json,7350.json,null,null,null,null,112.json,null,null,null,null,null,null,null,null,9585.json,5948.json,6006.json	org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.internal.storage.reftree.RefTree.copy(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int, java.lang.String, boolean, boolean, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedOptionalExtension(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged(),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, int)	true	3176
3757.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.inflate(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, byte[], boolean)	3798.json,3808.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress(long, int, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getDeltaHeader(org.eclipse.jgit.internal.storage.dfs.DfsReader, long)	true	2410
4207.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(java.lang.Object)	noCall	noCall	true	2733
6187.json	org.eclipse.jgit.storage.pack.PackConfig.getCompressionLevel()	5137.json,6209.json,6210.json,5022.json	org.eclipse.jgit.internal.storage.pack.PackWriter.deflater(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.deflater()	true	2893
4945.json	org.eclipse.jgit.internal.storage.reftree.Command.checkRef(org.eclipse.jgit.dircache.DirCacheEntry)	4960.json	org.eclipse.jgit.internal.storage.reftree.RefTree.checkRef(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.internal.storage.reftree.Command)	true	884
1370.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase)	1366.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
1590.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setRequestProperty(java.lang.String, java.lang.String)	noCall	noCall	true	1572
7685.json	org.eclipse.jgit.treewalk.filter.TreeFilter.negate()	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSinglePathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreeMixSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathNegate(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testNegateIsUnwrap(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiSubPathDualNegate(),org.eclipse.jgit.treewalk.filter.TreeFilterTest.testNotALL_IncludesNothing(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSingleSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathDualNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiPathDualNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiThreeSubPathNegate()	true	3176
10289.json	org.eclipse.jgit.http.server.glue.MetaFilter.Anonymous-23707db5-7391-45b7-a9ed-f556917b6f89.contains(java.lang.Object)	noCall	noCall	true	3070
1693.json	org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String)	1686.json,1687.json,1690.json,1683.json	org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	true	3176
3473.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.Out.write(byte[], int, int)	noCall	noCall	true	2410
6813.json	org.eclipse.jgit.api.RevertCommand.include(org.eclipse.jgit.lib.Ref)	6815.json	org.eclipse.jgit.api.RevertCommand.include(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	true	2715
7776.json	org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter, org.eclipse.jgit.treewalk.filter.TreeFilter)	7777.json,7778.json	org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>)	true	3176
8358.json	org.eclipse.jgit.util.IO.readWholeStream(java.io.InputStream, int)	null,null,7802.json,null,7805.json	org.eclipse.jgit.util.sha1.SHA1Test.read(java.lang.String, int),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.readStream(org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(byte[], int, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	false	2851
1060.json	org.eclipse.jgit.nls.NLS.get(java.lang.Class<T>)	1058.json	org.eclipse.jgit.nls.NLS.getBundleFor(java.lang.Class<T>)	true	3012
7058.json	org.eclipse.jgit.api.Git.pull()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.Anonymous-5a6e0e32-96a5-4f50-9fac-bdec7f11f8e5.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-3c208212-5e7c-48fe-a641-86b030460beb.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.PullCommandTest.Anonymous-7ca0dea0-8520-4ab7-9d92-af55548c2785.call(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.PullCommandTest.Anonymous-ffdc4223-e9f8-4e6a-895a-abdaee11a6b0.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-02bb4bdb-2184-42b3-a7c5-5ea70746737e.call(),org.eclipse.jgit.api.PullCommandTest.Anonymous-6f97b37a-d54c-4488-928d-41cde8c97e9c.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.PullCommandTest.Anonymous-e9930402-2c69-457e-9032-acb71fed2e24.call(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1(),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.PullCommandTest.Anonymous-ddb95b4f-f737-46a1-934b-9ab678dde88d.call(),org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.Anonymous-9a723ca1-6c79-46f4-8744-f32ad4d26897.call(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.execute(org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode, boolean),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig()	true	2802
3060.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.getUpdateIndex()	noCall	noCall	true	297
6107.json	org.eclipse.jgit.storage.file.WindowCacheConfig.getStreamFileThreshold()	4273.json,6111.json	org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2900
1868.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-fd199df3-f956-4499-9d2b-3b7b2dcb3124.getRequiredFields()	noCall	noCall	true	2645
9288.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.get(org.eclipse.jgit.lib.AnyObjectId)	4682.json,null,5148.json,4178.json,null,4666.json,5368.json,5384.json,4796.json,5366.json,4034.json,5105.json,9289.json,5120.json,2409.json,5370.json,5104.json,2401.json,4672.json,5374.json,5367.json,null,null,5369.json,5490.json,3532.json,null,5256.json,null,null,5365.json,null	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getCompressedBitmaps(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-7c01fee1-3c2d-4791-ae44-c0f415eb6d04.iterator(),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.sortByOffsetAndIndex(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.revwalk.RevWalk.lookupTag(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean),org.eclipse.jgit.internal.storage.file.BasePackBitmapIndex.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.lookupTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.pack.PackWriter.get(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMap.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.revwalk.RevWalk.lookupOrNull(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PackParser.removeBaseById(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.findPosition(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.lookupCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.Anonymous-5cb19d3f-31cb-4673-ab61-f1f79a3183b6.next(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.MutableBitmapIndex.findPosition(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.Anonymous-f5f5e630-ec34-42cd-9111-dc3539965e81.next(),org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.revwalk.RevWalk.lookupBlob(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()	true	2645
3824.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getOrLoadBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3761.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long)	true	2410
6283.json	org.eclipse.jgit.gitrepo.RepoProject.equals(java.lang.Object)	noCall	noCall	true	1412
7257.json	org.eclipse.jgit.api.DescribeCommand.getObjectIdFromRef(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	354
1238.json	org.eclipse.jgit.transport.TrackingRefUpdate.getRemoteName()	304.json,302.json,null,null,null	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate()	true	3176
5690.json	org.eclipse.jgit.revwalk.RevWalkUtils.find(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	5689.json,7385.json	org.eclipse.jgit.revwalk.RevWalkUtils.count(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommand.call()	true	2187
343.json	org.eclipse.jgit.pgm.Reset.selectMode(org.eclipse.jgit.api.ResetCommand.ResetType, org.eclipse.jgit.api.ResetCommand.ResetType)	342.json	org.eclipse.jgit.pgm.Reset.run()	true	2669
1155.json	org.eclipse.jgit.notes.NoteParser.parseObjectId(org.eclipse.jgit.lib.MutableObjectId)	1154.json	org.eclipse.jgit.notes.NoteParser.parseLeafTree()	true	2767
3422.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getHitRatio()	noCall	noCall	true	2410
3464.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.listPacks()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.streamKeyReusesBlocks(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects(),org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheTest.weirdBlockSize(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible()	true	2410
2233.json	org.eclipse.jgit.transport.TransportHttp.handleSslFailure(java.lang.Throwable)	2229.json,2269.json	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	270
8787.json	org.eclipse.jgit.lib.ConfigLine.toString()	noCall	noCall	true	2418
5357.json	org.eclipse.jgit.revwalk.RevWalk.getTreeFilter()	5460.json	org.eclipse.jgit.revwalk.StartGenerator.next()	true	3176
518.json	org.eclipse.jgit.junit.http.AccessEvent.clone(java.util.Map)	noCall	noCall	true	3070
6676.json	org.eclipse.jgit.diff.RenameDetector.Anonymous-0c34688c-f441-4db4-80fe-34d03ed3f24e.compare(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry)	noCall	noCall	true	2901
1428.json	org.eclipse.jgit.transport.UploadPack.getStatistics()	noCall	noCall	true	2673
2732.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.newFromConfig(org.eclipse.jgit.lib.Config, java.lang.String)	2827.json	org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository)	true	872
1801.json	org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, java.lang.String, java.util.Collection<java.lang.String>)	1648.json	org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket)	true	3176
6656.json	org.eclipse.jgit.diff.SimilarityRenameDetector.score(long)	6645.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
9559.json	org.eclipse.jgit.lib.IndexDiff.StageState.hasTheirs()	null	org.eclipse.jgit.lib.IndexDiffTest.testStageState()	true	1878
8085.json	org.eclipse.jgit.util.NB.decodeUInt32(byte[], int)	2406.json,8086.json,4486.json,4373.json,4477.json,null,null,4139.json,3044.json,4525.json,4516.json,5886.json,4517.json	org.eclipse.jgit.transport.PackParser.readPackHeader(),org.eclipse.jgit.util.NB.decodeUInt64(byte[], int),org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.next(),org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedInt(),org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset(long),org.eclipse.jgit.internal.storage.file.XInputStream.readUInt32(),org.eclipse.jgit.util.NBTest.testDecodeUInt32(),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter(),org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.next(),org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(int, int),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.internal.storage.file.PackIndexV2.findCRC32(org.eclipse.jgit.lib.AnyObjectId)	true	3176
6171.json	org.eclipse.jgit.storage.pack.PackConfig.setSinglePack(boolean)	null,6209.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testSinglePackForAllRefs(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	361
8328.json	org.eclipse.jgit.util.RawCharSequence.toString()	noCall	noCall	true	3176
8708.json	org.eclipse.jgit.patch.HunkHeader.toString()	noCall	noCall	true	2375
1829.json	org.eclipse.jgit.transport.ReceiveCommand.isTransactionAborted(org.eclipse.jgit.transport.ReceiveCommand)	noCall	noCall	true	320
3608.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.packOnlyContainsReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	3605.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	true	235
9287.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.clear()	null,5401.json,null	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.clearBitmaps(),org.eclipse.jgit.revwalk.RevWalk.dispose(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear()	true	2645
7803.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.safeClose(java.io.InputStream)	7804.json,7818.json,7802.json,7800.json,7805.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isBinary(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength(),org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(byte[], int, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	2851
5815.json	org.eclipse.jgit.ignore.FastIgnoreRule.getResult()	5868.json	org.eclipse.jgit.ignore.IgnoreNode.checkIgnored(java.lang.String, boolean)	true	1322
8727.json	org.eclipse.jgit.patch.CombinedHunkHeader.parseHeader()	noCall	noCall	true	3176
9109.json	org.eclipse.jgit.lib.RepositoryCache.unregisterRepository(org.eclipse.jgit.lib.RepositoryCache.Key)	null,9100.json	org.eclipse.jgit.lib.RepositoryCache.unregisterAndCloseRepository(org.eclipse.jgit.lib.RepositoryCache.Key),org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.RepositoryCache.Key)	true	3176
5054.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.stealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask)	5061.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.call()	true	1887
7191.json	org.eclipse.jgit.api.RmCommand.addFilepattern(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.RmCommandTest.testRemove(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.pgm.Rm.run(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_3(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2756
9006.json	org.eclipse.jgit.lib.Repository.readMergeHeads()	null,6983.json,6984.json	org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads(),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.CommitCommand.isMergeDuringRebase(org.eclipse.jgit.lib.RepositoryState)	true	2943
5473.json	org.eclipse.jgit.revwalk.AbstractRevQueue.AlwaysEmptyQueue.anybodyHasFlag(int)	noCall	noCall	true	3176
3397.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.lruRemove(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry)	3396.json,3394.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.moveToHead(org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.releaseMemory()	true	1126
1357.json	org.eclipse.jgit.transport.WalkFetchConnection.setPackLockMessage(java.lang.String)	noCall	noCall	true	3176
3101.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.Anonymous-a7ed36e1-5160-4474-bb5f-cbac301528c7.getOldId()	noCall	noCall	true	297
6649.json	org.eclipse.jgit.diff.SimilarityRenameDetector.isTableOverflow()	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2766
9343.json	org.eclipse.jgit.lib.ObjectId.zeroId()	null,3258.json,7831.json,null,null,null,null,2306.json,null,null,2621.json,null,4967.json,null,null,null,null,1518.json,4827.json,2839.json,1906.json,null,null,2794.json,null,2094.json,null,3254.json,null,null,null,9375.json,null,null,null,null,null,null,null,2851.json,null,null,null,3262.json,null,3131.json,null,7556.json,null,null,null,null,null,9327.json,null,null,null,7215.json,null,null,4928.json,null,null,2807.json,1102.json,null,141.json,null,6042.json,null,null,null,2752.json,167.json,null,null,null,null,null,2604.json,2743.json,null,null,2109.json,null,9551.json,null,null,null,4498.json,null,null,null,null,null,null,null,null,null,2850.json,6979.json,null,4565.json,null,4979.json,null,null,null,9333.json,null,7596.json,null,6582.json,1968.json,null,3609.json,null,null,null,null,null,1515.json,null,null,null,null,null,null,2843.json,null,null,null,null,1970.json,null,null,4935.json,7224.json,null,null,null,null,1853.json,null,2901.json,null,null,null,null,4909.json,null,null,null,null,6309.json,null,2809.json,null,6980.json,4931.json,null,3130.json,304.json,null,null,null,null,null,null,9553.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnSameRefInOneUpdate(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInUpdate(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogCustomIdent(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.packedRefsLockFailure(),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing(),org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.listRefLogObjects(org.eclipse.jgit.lib.Ref, long),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnEmptyRef(),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.create(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.delete(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.nonExistentRef(),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.updateToMissingObject(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicDisabled(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDelete(),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefWrongOldValue(),org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInCommand(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.revwalk.FooterLineTest.parse(java.lang.String),org.eclipse.jgit.transport.PushConnectionTest.commandOrder(),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideDisableRefLog(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toId(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectory.hasDanglingHead(),org.eclipse.jgit.treewalk.EmptyTreeIterator.getEntryObjectId(),org.eclipse.jgit.transport.PushCertificateStore.updateRef(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.addMissingObject(),org.eclipse.jgit.lib.BatchRefUpdate.isMissing(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneRefLockFailure(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnDifferentRefsInOneUpdate(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.atomicUpdateRespectsInProcessLock(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.pgm.debug.WriteReftable.parseId(java.lang.String),org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnSameRefInTwoUpdates(),org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.fileDirectoryConflict(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDefaultIdent(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveTwoCertsOnDifferentRefsInTwoUpdates(),org.eclipse.jgit.transport.PushCertificateStoreTest.changeRefFileToDirectory(),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusNoMessage(),org.eclipse.jgit.transport.RemoteRefUpdate.isDelete(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader(),org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store),org.eclipse.jgit.transport.AtomicPushTest.commands(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithSomeMatchingRefs(),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefs(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testEntryObjectId(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.lib.ObjectIdSerializerTest.serializeZeroId(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.conflictThanksToDelete(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogFileDirectoryConflict(),org.eclipse.jgit.transport.PushCertificateStore.save(org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.treewalk.TreeWalk.getObjectId(int),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType(),org.eclipse.jgit.diff.DiffFormatter.writeGitLinkText(org.eclipse.jgit.lib.AbbreviatedObjectId),org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange(),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.transport.UploadPack.fetchV2(),org.eclipse.jgit.transport.PushCertificateStoreTest.getBeforeSaveDoesNotIncludePending(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.getTxnCommitted(),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.dircache.DirCachePathEditTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.command(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.transport.PushCertificateStoreTest.putMatchingWithNoMatchingRefsInBatchOnNonEmptyRef(),org.eclipse.jgit.transport.PushOptionsTest.commands(boolean),org.eclipse.jgit.internal.ketch.StageBuilder.stage(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.oneNonExistentRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules(),org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.transport.PushConnectionTest.limitCommandBytes(),org.eclipse.jgit.internal.storage.reftree.Command.toRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.api.AddNoteCommand.commitNoteMap(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.notes.NoteMap, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.ObjectInserter, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.refLogNotWrittenWithoutConfigOption(),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.internal.ketch.KetchLeader.initialize(),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.idOf(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.transport.PushCertificateStoreTest.lockFailure(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideRefLogMessage(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.internal.ketch.KetchReplica.getId(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.api.CommitCommand.insertChangeId(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusWithMessage(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.toCommand(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.junit.TestRepository.CommitBuilder.insertChangeId(org.eclipse.jgit.lib.CommitBuilder),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveInBatch(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.noRefLog(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.lib.RefUpdate.safeParseNew(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId)	false	3176
4569.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.getPackBitmapIndex()	4169.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.newPackBitmapIndex(org.eclipse.jgit.lib.BitmapIndex, org.eclipse.jgit.internal.storage.file.PackBitmapIndex)	true	1922
1955.json	org.eclipse.jgit.transport.FetchProcess.reopenConnection()	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
3355.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setReftableInitialMinUpdateIndex(long)	noCall	noCall	true	278
9316.json	org.eclipse.jgit.lib.BatchRefUpdate.setPushCertificate(org.eclipse.jgit.transport.PushCertificate)	4933.json,2625.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.BaseReceivePack.executeCommands()	true	1088
3874.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.hasObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	noCall	noCall	true	2410
7640.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathLength()	4972.json,6011.json,4975.json	org.eclipse.jgit.internal.storage.reftree.Scanner.curElementHasPeelSuffix(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.internal.storage.reftree.Scanner.refName(org.eclipse.jgit.treewalk.CanonicalTreeParser, boolean)	true	2685
8901.json	org.eclipse.jgit.lib.Config.setLong(java.lang.String, java.lang.String, java.lang.String, long)	8900.json,null	org.eclipse.jgit.lib.Config.setInt(java.lang.String, java.lang.String, java.lang.String, int),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion()	true	3176
8485.json	org.eclipse.jgit.util.FileUtils.createSymLink(java.io.File, java.lang.String)	8438.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.util.FS.createSymLink(java.io.File, java.lang.String),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.junit.JGitTestUtil.writeLink(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir()	true	1864
8086.json	org.eclipse.jgit.util.NB.decodeUInt64(byte[], int)	null,3100.json,4525.json,4516.json	org.eclipse.jgit.util.NBTest.testDecodeUInt64(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogUpdateIndex(),org.eclipse.jgit.internal.storage.file.PackIndexV2.EntriesIteratorV2.next(),org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(int, int)	true	3176
3384.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	3383.json,3382.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	278
8971.json	org.eclipse.jgit.lib.Repository.incrementOpen()	null,7298.json,2826.json,null,1617.json,null,null,9107.json,2825.json,null,561.json,null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.internal.ketch.KetchSystem.createLeader(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.TestProtocol.TransportInternal.openPush(),org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-ede6ccfa-bcf5-4cc2-bd1e-a0589cf0fb28.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves(),org.eclipse.jgit.lib.RepositoryCache.openRepository(org.eclipse.jgit.lib.RepositoryCache.Key, boolean),org.eclipse.jgit.internal.ketch.KetchSystem.Anonymous-e24e276b-94bc-4fc8-8125-3f534ea51816.openRepository(),org.eclipse.jgit.transport.TestProtocol.TransportInternal.openFetch(),org.eclipse.jgit.junit.http.SimpleHttpServer.smart(java.lang.String),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository)	false	3176
2539.json	org.eclipse.jgit.transport.BaseReceivePack.FirstLine.getCapabilities()	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	2285
3594.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.setConcurrencyLevel(int)	3599.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	599
4157.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeLong(long)	noCall	noCall	true	1922
2821.json	org.eclipse.jgit.internal.ketch.KetchSystem.getTxnCommitted()	2784.json,2759.json,2762.json,2723.json,2792.json,2804.json,2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.initialize(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.prepareTxnCommitted(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
5084.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isIndexDisabled()	5113.json,5108.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream)	true	1887
5860.json	org.eclipse.jgit.ignore.internal.IMatcher.Anonymous-0e88bc0a-a7ae-41d3-9419-b8465ae4255f.matches(java.lang.String, int, int)	noCall	noCall	true	1322
4951.json	org.eclipse.jgit.internal.storage.reftree.RefTree.readRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	4953.json,4950.json	org.eclipse.jgit.internal.storage.reftree.RefTree.resolve(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Ref, int),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	true	884
1118.json	org.eclipse.jgit.hooks.GitHook.getOutputStream()	1120.json	org.eclipse.jgit.hooks.GitHook.doRun()	true	1195
3286.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.padBetweenBlocksToNextBlock()	3334.json,3339.json,3305.json,3341.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
6315.json	org.eclipse.jgit.gitrepo.ManifestParser.read(java.io.InputStream)	null,6316.json,6309.json,null	org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParserWithMissingFetchOnRemote(),org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParser()	true	1509
8446.json	org.eclipse.jgit.util.FS.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[])	noCall	noCall	true	1223
5996.json	org.eclipse.jgit.dircache.DirCacheEntry.isExtended()	6001.json,5892.json,5960.json	org.eclipse.jgit.dircache.DirCacheEntry.getExtendedFlags(),org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream),org.eclipse.jgit.dircache.DirCacheEntry.write(java.io.OutputStream)	true	2840
9494.json	org.eclipse.jgit.lib.RebaseTodoLine.setAction(org.eclipse.jgit.lib.RebaseTodoLine.Action)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9753.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-ea685447-8337-406f-99b3-f9f19d9bc37b.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-1b4f9b83-cb19-46b7-9c44-b93dc4ab6838.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-17de1ade-4456-4dc2-a28c-cc32270857b4.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-307c0c01-3f3b-4a35-b1bd-27cb1fc69561.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-d21af853-cbbf-4a22-9ccc-015d0dcc08ed.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-35c0aa8e-83b5-4456-b0eb-413d4572ee5b.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-a6c51ae1-aa5a-450e-ab1e-270396f36106.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-46f6de92-b536-42e0-8e39-800afa9d8123.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-f8a8eacb-339c-4c40-b663-6413cf871c2d.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-e0e4ff07-266a-4440-bfab-9fea1255ba94.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-5efb313e-f7c5-4d4a-994a-e2efccc13377.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-71ba5985-9345-4df2-a44b-ad0ea5ccf6c3.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-33d3a2d2-9da8-417c-af7c-7e5165749015.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-06fa6d8c-764b-44c5-b8d5-78088339e398.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-bbfc62b5-8681-4c59-be61-b16ed420e4c8.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-ed0fa6ae-a868-48a8-aa5b-fa283cfb62ec.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-59affb19-2a55-41e6-8abc-1104e476dca8.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-5200a748-21a1-4fcb-8e55-5d105797570a.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-5578eb30-34b5-4a9a-beb8-19bf15b2ba12.prepareSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit()	true	1683
4291.json	org.eclipse.jgit.internal.storage.file.WindowCache.hit(org.eclipse.jgit.internal.storage.file.WindowCache.Ref)	4290.json,4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.scan(org.eclipse.jgit.internal.storage.file.WindowCache.Entry, org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
2626.json	org.eclipse.jgit.transport.ReceivePack.Anonymous-725355fb-5063-4e95-8ca5-42acb185d87f.sendString(java.lang.String)	noCall	noCall	true	3176
960.json	org.eclipse.jgit.merge.StrategyOneSided.getName()	noCall	noCall	true	3176
7238.json	org.eclipse.jgit.api.StashApplyCommand.setApplyIndex(boolean)	noCall	noCall	true	1956
6859.json	org.eclipse.jgit.api.FetchCommand.setForceUpdate(boolean)	286.json,null	org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch()	true	90
6298.json	org.eclipse.jgit.gitrepo.RepoCommand.setGroups(java.lang.String)	109.json,null	org.eclipse.jgit.pgm.Repo.run(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups()	true	1509
10133.json	org.eclipse.jgit.archive.ZipFormat.suffixes()	noCall	noCall	true	1830
545.json	org.eclipse.jgit.junit.http.RecordingLogger.info(java.lang.String)	noCall	noCall	true	3070
2833.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getState()	2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
9990.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromHexString(byte[], int)	9989.json,9988.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromString(java.lang.String),org.eclipse.jgit.lfs.lib.LongObjectId.fromString(byte[], int)	true	856
4673.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getObject(int)	noCall	noCall	true	1922
326.json	org.eclipse.jgit.pgm.opt.CmdLineParser.printSingleLineUsage(java.io.Writer, java.util.ResourceBundle)	411.json	org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	true	893
10344.json	org.eclipse.jgit.http.server.RepositoryFilter.destroy()	noCall	noCall	true	3070
3937.json	org.eclipse.jgit.internal.storage.file.RefDirectory.clearReferences()	3938.json,3936.json	org.eclipse.jgit.internal.storage.file.RefDirectory.refresh(),org.eclipse.jgit.internal.storage.file.RefDirectory.close()	true	3059
4910.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getAdditionalRefs()	null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetAdditionalRefs(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testGetRefs_EmptyDatabase(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead()	true	880
274.json	org.eclipse.jgit.pgm.Describe.run()	noCall	noCall	true	1704
2836.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getErrorMessage()	2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
111.json	org.eclipse.jgit.pgm.Blame.ignoreAllSpace(boolean)	noCall	noCall	true	2493
5686.json	org.eclipse.jgit.revwalk.RevTree.getType()	5687.json,null	org.eclipse.jgit.revwalk.RevTree.parseHeaders(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes()	true	3176
9964.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.getName()	9872.json,null,10058.json,10090.json,null,10051.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.toRequest(java.lang.String, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownloadNotFound(),org.eclipse.jgit.lfs.server.s3.S3Repository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.TransferHandler.Download.addObjectInfo(org.eclipse.jgit.lfs.server.Response.Body, org.eclipse.jgit.lfs.server.LfsObject),org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	false	856
7442.json	org.eclipse.jgit.api.RebaseCommand.setUpstreamName(java.lang.String)	7131.json	org.eclipse.jgit.api.PullCommand.call()	true	2123
2599.json	org.eclipse.jgit.transport.BaseReceivePack.hasError()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	2218
3670.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.getPackDescription()	3607.json,3904.json,3371.json,3776.json,3779.json,null,3385.json,3605.json,null,null,3768.json,null	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toPruneTopOfStack(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Set<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.toPrune(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getSourcePacks(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toPrune(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.hasGcReftable(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableComparator()	true	286
8147.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.wrapOutputStream(java.io.OutputStream, org.eclipse.jgit.lib.CoreConfig.EolStreamType)	null,null,6045.json	org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.EolStreamTypeUtilTest.testCheckout(org.eclipse.jgit.lib.CoreConfig.EolStreamType, org.eclipse.jgit.lib.CoreConfig.EolStreamType, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	824
7012.json	org.eclipse.jgit.api.ResetCommand.setMode(org.eclipse.jgit.api.ResetCommand.ResetType)	null,7413.json,null,null,null,null,7040.json,342.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.api.RebaseCommand.resetSoftToParent(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.EolRepositoryTest.gitResetHard(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2669
506.json	org.eclipse.jgit.junit.http.AppServer.setUp()	null,557.json	org.eclipse.jgit.lfs.server.fs.LfsServerTest.setup(),org.eclipse.jgit.junit.http.SimpleHttpServer.start()	true	3070
1511.json	org.eclipse.jgit.transport.BasePackPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	noCall	noCall	true	3176
8333.json	org.eclipse.jgit.util.sha1.SHA1.update(byte[])	null,null,null,4007.json,7837.json,null,3503.json,2410.json,null,null,2398.json,null,null	org.eclipse.jgit.util.sha1.SHA1Test.test0(),org.eclipse.jgit.util.sha1.SHA1Test.test1(),org.eclipse.jgit.util.sha1.SHA1Test.test2(),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.util.sha1.SHA1Test.detectsShatteredByDefault(),org.eclipse.jgit.util.sha1.SHA1Test.blob(byte[], org.eclipse.jgit.util.sha1.SHA1)	true	468
6834.json	org.eclipse.jgit.api.FetchCommand.getRecurseMode(java.lang.String)	6835.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult)	true	463
1246.json	org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	2210
9877.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(byte[], int, int)	9898.json	org.eclipse.jgit.lfs.CleanFilter.run()	true	856
5724.json	org.eclipse.jgit.revwalk.filter.AuthorRevFilter.PatternSearch.clone()	noCall	noCall	true	3176
4345.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getShallowCommits()	noCall	noCall	true	2026
4380.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readShort()	noCall	noCall	true	1922
7356.json	org.eclipse.jgit.api.CleanCommand.setDryRun(boolean)	null,null,null,null,437.json	org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.pgm.Clean.run()	true	2567
6155.json	org.eclipse.jgit.storage.pack.PackConfig.setReuseDeltas(boolean)	3772.json,null,null,null,3375.json,6209.json,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas()	true	3176
3717.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getBitmapIndex()	noCall	noCall	true	1922
7301.json	org.eclipse.jgit.api.TagCommand.processOptions(org.eclipse.jgit.lib.RepositoryState)	7299.json	org.eclipse.jgit.api.TagCommand.call()	true	2844
542.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.String, java.lang.Throwable)	noCall	noCall	true	3070
6222.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.computeDotSize(int)	6220.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int)	true	3176
9397.json	org.eclipse.jgit.lib.ObjectChecker.toLower(byte)	9390.json,9388.json,9394.json	org.eclipse.jgit.lib.ObjectChecker.isGit(byte[], int),org.eclipse.jgit.lib.ObjectChecker.checkNotWindowsDevice(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectChecker.isGitTilde1(byte[], int, int)	true	1551
10186.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getPreferredAuthentications()	null,null,10157.json,null	org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthenticationsDefault(),org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications()	true	3176
7676.json	org.eclipse.jgit.treewalk.FileTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	noCall	noCall	true	608
4759.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(org.eclipse.jgit.internal.storage.file.PackFile[], org.eclipse.jgit.internal.storage.file.PackFile)	4758.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile)	true	3176
5570.json	org.eclipse.jgit.revwalk.RevBlob.getType()	5571.json,null	org.eclipse.jgit.revwalk.RevBlob.parseHeaders(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes()	true	3176
1965.json	org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref)	1951.json,1964.json,1963.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.FetchProcess.expandFetchTags(),org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags()	true	3176
8863.json	org.eclipse.jgit.lib.NullProgressMonitor.beginTask(java.lang.String, int)	noCall	noCall	true	3176
6477.json	org.eclipse.jgit.diff.HistogramDiff.State.diffRegion(org.eclipse.jgit.diff.Edit)	6476.json	org.eclipse.jgit.diff.HistogramDiff.diffNonCommon(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.HashedSequenceComparator<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.Edit)	true	1416
2829.json	org.eclipse.jgit.internal.ketch.KetchSystem.getLocalName(org.eclipse.jgit.lib.Config)	2827.json	org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository)	true	872
8614.json	org.eclipse.jgit.util.SystemReader.getTimeZone()	null,null,null,8596.json,null,3367.json,null,8300.json,null,8318.json	org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef(),org.eclipse.jgit.util.GitDateParserTest.weeksAgo(),org.eclipse.jgit.util.SystemReader.Default.getTimezone(long),org.eclipse.jgit.util.GitDateParserTest.yesterday(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.dayStartInMillis(long),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.util.GitDateParser.parse_relative(java.lang.String, java.util.Calendar),org.eclipse.jgit.util.GitDateParserTest.never(),org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent)	true	2425
6193.json	org.eclipse.jgit.storage.pack.PackConfig.getIndexVersion()	5107.json,3361.json,6209.json,6210.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getIndexVersion(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	2874
419.json	org.eclipse.jgit.pgm.TextBuiltin.die(java.lang.String, java.lang.Throwable)	388.json,274.json,205.json,361.json	org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.init(),org.eclipse.jgit.pgm.AmazonS3Client.properties()	true	3170
2857.json	org.eclipse.jgit.internal.ketch.LogIndex.unknown(org.eclipse.jgit.lib.AnyObjectId)	2901.json	org.eclipse.jgit.internal.ketch.KetchLeader.initialize()	true	872
7245.json	org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	7244.json	org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree)	true	1480
10058.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	10057.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	843
3683.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.getReftableConfig()	noCall	noCall	true	235
8479.json	org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File, java.nio.file.CopyOption...)	8478.json,9898.json,null,6824.json,null,4719.json,7215.json,null,4567.json,6045.json,4627.json	org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File),org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.util.FileUtilsTest.testAtomicMove(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.rename(java.io.File, java.io.File),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.internal.storage.file.LockFile.commit()	true	1028
2529.json	org.eclipse.jgit.transport.PackedObjectInfo.getType()	2938.json	org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex)	true	319
9325.json	org.eclipse.jgit.lib.BatchRefUpdate.addProposedTimestamp(org.eclipse.jgit.util.time.ProposedTimestamp)	2762.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp)	true	565
6188.json	org.eclipse.jgit.storage.pack.PackConfig.setCompressionLevel(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
6651.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compactDstList(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6645.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
4842.json	org.eclipse.jgit.internal.storage.file.GC.setBackground(boolean)	4870.json	org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor)	true	370
3867.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.addAlternateObjectDirectory(java.io.File)	noCall	noCall	true	2410
8525.json	org.eclipse.jgit.util.RelativeDateFormatter.round(long, long)	8523.json	org.eclipse.jgit.util.RelativeDateFormatter.format(java.util.Date)	true	2589
8627.json	org.eclipse.jgit.util.time.MonotonicSystemClock.Anonymous-f86bea6f-5b74-4dbd-b797-32fb76639768.read(java.util.concurrent.TimeUnit)	noCall	noCall	true	565
8812.json	org.eclipse.jgit.lib.ConfigSnapshot.first(java.util.List<org.eclipse.jgit.lib.ConfigLine>, int, java.lang.String, java.lang.String, java.lang.String)	8811.json	org.eclipse.jgit.lib.ConfigSnapshot.find(java.util.List<org.eclipse.jgit.lib.ConfigLine>, java.lang.String, java.lang.String, java.lang.String)	true	2266
1067.json	org.eclipse.jgit.errors.MissingObjectException.getObjectId()	null,null,null,null,5120.json,3452.json,null,null,1454.json,5139.json,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.UploadPack.verifyClientShallow(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.transport.UploadPack.parseWants(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2851
7016.json	org.eclipse.jgit.api.ResetCommand.getRefOrHEAD()	7010.json,7008.json	org.eclipse.jgit.api.ResetCommand.resolveRefToCommitId(),org.eclipse.jgit.api.ResetCommand.call()	true	1731
105.json	org.eclipse.jgit.pgm.CommandCatalog.toSortedArray(java.util.Collection<org.eclipse.jgit.pgm.CommandRef>)	103.json,104.json	org.eclipse.jgit.pgm.CommandCatalog.all(),org.eclipse.jgit.pgm.CommandCatalog.common()	true	3176
1360.json	org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId)	1355.json,1368.json	org.eclipse.jgit.transport.WalkFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
6662.json	org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.lib.FileMode)	6652.json	org.eclipse.jgit.diff.SimilarityRenameDetector.buildMatrix(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
5033.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.makeNext(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	5012.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	1886
3555.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.getDeltaBaseCacheLimit()	3561.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config)	true	2410
3826.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.read(org.eclipse.jgit.internal.storage.dfs.ReadableChannel, java.nio.ByteBuffer)	null,3825.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	1144
204.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.isFile(org.eclipse.jgit.treewalk.TreeWalk, int)	203.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository)	true	2799
9451.json	org.eclipse.jgit.lib.CommitBuilder.setEncoding(java.lang.String)	null	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii()	true	2851
2582.json	org.eclipse.jgit.transport.BaseReceivePack.setAllowQuiet(boolean)	noCall	noCall	true	1117
8140.json	org.eclipse.jgit.util.StringUtils.replaceLineBreaksWithSpace(java.lang.String)	5549.json,5668.json,null	org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.revwalk.RevTag.getShortMessage(),org.eclipse.jgit.util.StringUtilsTest.testReplaceLineBreaks()	true	1822
6090.json	org.eclipse.jgit.storage.file.FileBasedConfig.clear()	null	org.eclipse.jgit.storage.file.FileBasedConfig.load()	true	2733
6832.json	org.eclipse.jgit.api.ShowNoteCommand.setNotesRef(java.lang.String)	noCall	noCall	true	2618
5374.json	org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.AnyObjectId)	4504.json,5372.json,1041.json,9887.json,7502.json,1959.json,2842.json,1360.json,null,4498.json,2621.json,null,5373.json,null,null,6983.json,3569.json,1906.json,363.json,1359.json,6217.json,2094.json,3254.json,null,1908.json,4911.json,null,5371.json,209.json,5640.json,3952.json,2619.json,null,4810.json,7331.json,null,3262.json,9554.json,4935.json,5139.json,4982.json,7506.json,9327.json,3347.json,1903.json,269.json,null,7511.json,1373.json,1914.json,7512.json,null,7503.json,1852.json,5691.json,218.json,9553.json,null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.peeledRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.Merger.merge(boolean, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.lfs.LfsPrePushHook.excludeRemoteRefs(org.eclipse.jgit.revwalk.ObjectWalk),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.transport.FetchProcess.askForIsComplete(),org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersReferencedBlobs(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testObjectFilterCanFilterOutBlob(),org.eclipse.jgit.revwalk.RevWalk.parseTag(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.doPeel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.parse(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.debug.ShowPackDelta.run(),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringTreeFiltersSubtrees(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.RefUpdate.safeParseOld(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.reftree.Command.toRef(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId, java.lang.String, java.lang.String, boolean),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.newRef(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.NameRevCommand.addAnnotatedTags(),org.eclipse.jgit.lib.BatchRefUpdate.isMissing(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.transport.BasePackFetchConnection.maxTimeWanted(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue),org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.markAdvertised(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.NameRevCommand.minCommitTime(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.NameRevCommand.add(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.computeNewRefs(),org.eclipse.jgit.lib.RefUpdate.safeParseNew(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine()	true	3176
8701.json	org.eclipse.jgit.patch.HunkHeader.toEditList()	null,null,null,8657.json,null,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.patch.FileHeader.toEditList(),org.eclipse.jgit.patch.EditListTest.testHunkHeader(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify()	true	3176
3423.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getEvictions()	noCall	noCall	true	2410
6752.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-9aff5e93-24ed-4ddf-9c76-d07833134ebb.getSize()	noCall	noCall	true	2838
9991.json	org.eclipse.jgit.lfs.lib.LongObjectId.toObjectId()	noCall	noCall	true	856
9360.json	org.eclipse.jgit.lib.ObjectChecker.setIgnore(org.eclipse.jgit.lib.ObjectChecker.ErrorType, boolean)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9361.json	org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testAcceptTreeModeWithZero(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testNullSha1InTreeEntry(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_Tree(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1_File(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot(),org.eclipse.jgit.lib.ObjectChecker.setAllowLeadingZeroFileMode(boolean)	true	892
1441.json	org.eclipse.jgit.transport.UploadPack.refIdSet(java.util.Collection<org.eclipse.jgit.lib.Ref>)	null,null,1434.json,null,null	org.eclipse.jgit.transport.UploadPack.ReachableCommitRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.TipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.service(),org.eclipse.jgit.transport.UploadPack.ReachableCommitTipRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.fetchV2()	true	1803
5319.json	org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(org.eclipse.jgit.attributes.AttributesNode, java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes)	null,5317.json,5316.json,null,null,5318.json	org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesHandler.mergeInfoAttributes(java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.AttributesHandler.mergeGlobalAttributes(java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.AttributesNodeTest.assertAttribute(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(java.lang.String, int, boolean, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	true	1249
2366.json	org.eclipse.jgit.transport.RefSpec.hashCode()	noCall	noCall	true	3176
7560.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.first()	null,null,null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testNextDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testAtEOF()	true	3176
8559.json	org.eclipse.jgit.util.RefList.Builder.sort()	null,148.json,3972.json,3945.json	org.eclipse.jgit.util.RefListTest.testBuilder_AddThenSort(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote(),org.eclipse.jgit.internal.storage.file.RefDirectory.parsePackedRefs(java.io.BufferedReader),org.eclipse.jgit.internal.storage.file.RefDirectory.getRefs(java.lang.String)	true	3060
6306.json	org.eclipse.jgit.gitrepo.RepoCommand.setAuthor(org.eclipse.jgit.lib.PersonIdent)	noCall	noCall	true	1495
8711.json	org.eclipse.jgit.patch.CombinedFileHeader.getOldMode()	null,null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
1754.json	org.eclipse.jgit.transport.SideBandProgressMonitor.onEndTask(java.lang.String, int)	noCall	noCall	true	2658
8905.json	org.eclipse.jgit.lib.Config.unset(java.lang.String, java.lang.String, java.lang.String)	1269.json,null,null	org.eclipse.jgit.transport.RemoteConfig.unset(org.eclipse.jgit.lib.Config, java.lang.String),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave()	true	3176
1473.json	org.eclipse.jgit.transport.UploadPack.findSymrefs(org.eclipse.jgit.transport.RefAdvertiser, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	null,null	org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String)	true	1296
9095.json	org.eclipse.jgit.lib.RepositoryCache.open(org.eclipse.jgit.lib.RepositoryCache.Key)	null,null,null,null,4770.json	org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.io.File)	true	3176
4486.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.IndexV1Iterator.next()	noCall	noCall	true	3176
401.json	org.eclipse.jgit.pgm.Rm.run()	noCall	noCall	true	3176
3304.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishRefAndObjSections()	3301.json,3303.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.beginLog(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()	true	297
1401.json	org.eclipse.jgit.transport.UploadPack.getAdvertisedRefs()	null	org.eclipse.jgit.transport.UploadPack.ReachableCommitRequestValidator.checkWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2671
5128.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	5127.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream)	true	3176
8450.json	org.eclipse.jgit.util.FS.findHook(org.eclipse.jgit.lib.Repository, java.lang.String)	null,8448.json,null,1121.json	org.eclipse.jgit.util.HookTest.testFindPostCommitHook(),org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.util.HookTest.testFindHook(),org.eclipse.jgit.hooks.GitHook.isNativeHookPresent()	true	1223
6487.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.getX(int, int)	null,null	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.BackwardEditPaths.meets(int, int, int, long),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.ForwardEditPaths.meets(int, int, int, long)	true	3169
8564.json	org.eclipse.jgit.util.Paths.compare(byte[], int, int, int, byte[], int, int, int)	5949.json,7630.json,null,null,9375.json,1150.json	org.eclipse.jgit.dircache.DirCacheEditor.deleteOverlappingSubtree(org.eclipse.jgit.dircache.DirCacheEntry, int),org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte[], int, int, int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.Anonymous-2476c284-27d7-4fec-b2c3-ee5a66700ea4.compare(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.util.PathsTest.testPathCompare(),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte[], int, int, org.eclipse.jgit.lib.FileMode)	true	882
9276.json	org.eclipse.jgit.lib.BatchingProgressMonitor.endTask()	157.json,9274.json,158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.lib.BatchingProgressMonitor.beginTask(java.lang.String, int),org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	3176
6880.json	org.eclipse.jgit.api.CloneCommand.call()	null,null,null,null,230.json,null,null,null,null,null,null,null,null,null,7265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,914.json,null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2686
5551.json	org.eclipse.jgit.revwalk.RevCommit.getEncodingName()	null,null,null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incorrectUtf8Name()	true	880
4849.json	org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean)	null	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.createRepository(boolean, boolean)	true	3176
4850.json	org.eclipse.jgit.internal.storage.file.FileRepository.getObjectsDirectory()	4809.json,null,null,null,4810.json,4834.json	org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.internal.storage.file.GcTemporaryFilesTest.setUp(),org.eclipse.jgit.api.GitConstructionTest.testOpen(),org.eclipse.jgit.internal.storage.file.GC.tooManyLooseObjects(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.GC.getStatistics()	true	3176
4708.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onStoreStream(byte[], int, int)	noCall	noCall	true	2692
3546.json	org.eclipse.jgit.internal.storage.dfs.DfsOutputStream.blockSize()	3784.json,3782.json,3510.json,3783.json,3648.json,3382.json,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.configureReftable(org.eclipse.jgit.internal.storage.reftable.ReftableConfig, org.eclipse.jgit.internal.storage.dfs.DfsOutputStream),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginPack(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onPackHeader(long),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2410
7266.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call()	null,null,null,null,6888.json,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule()	true	2355
2754.json	org.eclipse.jgit.internal.ketch.ElectionRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp)	2749.json	org.eclipse.jgit.internal.ketch.ElectionRound.start()	true	565
5767.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.requiresCommitBody()	noCall	noCall	true	2673
8729.json	org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.io.OutputStream[])	noCall	noCall	true	3176
1966.json	org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec)	1965.json,1961.json,1960.json	org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.FetchProcess.expandWildcard(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>)	true	3176
2328.json	org.eclipse.jgit.transport.SideBandOutputStream.write(byte[], int, int)	noCall	noCall	true	3176
1888.json	org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.UploadPack)	noCall	noCall	true	2292
177.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.run()	noCall	noCall	true	2816
6603.json	org.eclipse.jgit.diff.DiffFormatter.findCombinedEnd(java.util.List<org.eclipse.jgit.diff.Edit>, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
9099.json	org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	794
1995.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	2036.json,2037.json,1996.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	486
8714.json	org.eclipse.jgit.patch.CombinedFileHeader.getOldId(int)	8723.json,null,null,null,8713.json	org.eclipse.jgit.patch.CombinedHunkHeader.Anonymous-cddfe0db-6237-42c9-9cbd-b62873dc6aad.getId(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.CombinedFileHeader.getOldId()	true	3176
4114.json	org.eclipse.jgit.internal.storage.file.PackFile.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2848
378.json	org.eclipse.jgit.pgm.Log.run()	noCall	noCall	true	2838
10150.json	org.eclipse.jgit.transport.CredentialsProviderUserInfo.promptYesNo(java.lang.String)	noCall	noCall	true	2768
460.json	org.eclipse.jgit.junit.MockSystemReader.getProperty(java.lang.String)	null,null,null	org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir()	true	3141
9444.json	org.eclipse.jgit.lib.CommitBuilder.setParentId(org.eclipse.jgit.lib.AnyObjectId)	9448.json,7040.json,null,null,null,null,2851.json,2752.json,167.json,2850.json,4931.json	org.eclipse.jgit.lib.CommitBuilder.addParentId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	3176
5975.json	org.eclipse.jgit.dircache.DirCacheEntry.getRawMode()	6026.json,null,6045.json,4952.json,5940.json,144.json,7830.json,6005.json,null,null,5976.json,6062.json,4946.json,null,4950.json,5948.json,4945.json,null	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.internal.storage.reftree.RefTree.toRef(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String),org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.dircache.DirCacheEntry.getFileMode(),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.internal.storage.reftree.Command.check(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertEqual(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.CGitIndexRecord, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.internal.storage.reftree.Command.checkRef(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit()	true	3176
8067.json	org.eclipse.jgit.util.FS_POSIX.createNewFile(java.io.File)	noCall	noCall	true	199
3771.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor)	null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.compact()	true	2410
8742.json	org.eclipse.jgit.patch.FormatError.getLineText()	null,null,8743.json,null,null,null,null,null,null	org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld(),org.eclipse.jgit.patch.EGitPatchHistoryTest.PatchReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.patch.FormatError.toString(),org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld(),org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles(),org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew()	true	3176
9232.json	org.eclipse.jgit.lib.FileMode.getObjectType()	null,110.json,1362.json,null,6598.json,6753.json,9842.json,1377.json,5252.json,9375.json,7193.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.open(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-792c270f-880a-45ac-9ad3-821aa66de5df.getType(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.lib.ObjectChecker.checkTree(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.api.RmCommand.call()	true	3176
3281.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(byte[])	3280.json,3188.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeVarintString(java.lang.String),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
6375.json	org.eclipse.jgit.blame.Candidate.copy(org.eclipse.jgit.revwalk.RevCommit)	6456.json,6448.json	org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.reverseResult(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
1412.json	org.eclipse.jgit.transport.UploadPack.setAdvertiseRefsHook(org.eclipse.jgit.transport.AdvertiseRefsHook)	noCall	noCall	true	2292
2043.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-20c03cc9-4f0c-4894-9464-7a9676e78ee1.getName()	noCall	noCall	true	2645
8655.json	org.eclipse.jgit.patch.FileHeader.getForwardBinaryHunk()	null,null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
5571.json	org.eclipse.jgit.revwalk.RevBlob.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)	5572.json	org.eclipse.jgit.revwalk.RevBlob.parseBody(org.eclipse.jgit.revwalk.RevWalk)	true	2846
7035.json	org.eclipse.jgit.api.StashCreateCommand.setIncludeUntracked(boolean)	null,null,null,null,null,null	org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded()	true	1480
10131.json	org.eclipse.jgit.archive.ZipFormat.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	10130.json	org.eclipse.jgit.archive.ZipFormat.createArchiveOutputStream(java.io.OutputStream)	true	2013
5046.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.objectHeader(long, int, byte[])	5045.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long)	true	1887
3603.json	org.eclipse.jgit.internal.storage.dfs.PackInputStream.close()	noCall	noCall	true	2410
31.json	org.eclipse.jgit.awtui.AWTPlotRenderer.laneColor(org.eclipse.jgit.awtui.SwingCommitList.SwingLane)	noCall	noCall	true	3176
5752.json	org.eclipse.jgit.revwalk.filter.MessageRevFilter.create(java.lang.String)	351.json,null	org.eclipse.jgit.pgm.RevWalkTextBuiltin.addCMessageRevFilter(java.lang.String),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine()	true	3176
10399.json	org.eclipse.jgit.http.server.ServletUtils.etag(byte[])	noCall	noCall	false	3070
4140.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long)	4113.json	org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2906
2744.json	org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String)	2743.json	org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand)	true	872
6275.json	org.eclipse.jgit.gitrepo.RepoProject.addCopyFiles(java.util.Collection<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>)	null	org.eclipse.jgit.gitrepo.RepoCommand.addSubmoduleBare(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, java.util.Set<java.lang.String>, java.lang.String)	true	1111
1821.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-d5fbdced-de8a-4ee7-b6f4-e81b78ebaedc.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
7696.json	org.eclipse.jgit.treewalk.filter.PathFilter.clone()	5632.json	org.eclipse.jgit.revwalk.FollowFilter.clone()	true	3176
6229.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.laneC(org.eclipse.jgit.revplot.PlotLane)	6220.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.paintCommit(org.eclipse.jgit.revplot.PlotCommit<TLane>, int)	true	3176
5968.json	org.eclipse.jgit.dircache.DirCacheEntry.setAssumeValid(boolean)	null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.AddEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.api.AddCommandTest.assumeUnchanged(java.lang.String)	true	3176
4637.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.findNextOffset(long, long)	4147.json,null,3812.json,3375.json,null	org.eclipse.jgit.internal.storage.file.PackFile.findEndOffset(long),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffsetWrongOffset(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset()	true	3176
4349.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean)	noCall	noCall	true	2906
4835.json	org.eclipse.jgit.internal.storage.file.GC.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	4870.json,null,null,7182.json	org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.DoRepack.call(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack(),org.eclipse.jgit.api.GarbageCollectCommand.call()	true	2142
9872.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.toRequest(java.lang.String, org.eclipse.jgit.lfs.LfsPointer...)	9889.json,9895.json	org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	102
1276.json	org.eclipse.jgit.transport.RemoteConfig.getPushURIs()	1991.json,85.json,2827.json,null,null,null,null,null,6875.json,null,null,null,1265.json,null,1990.json	org.eclipse.jgit.transport.Transport.doesNotExist(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>),org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.RemoteTest.testSetUrl(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfAppliedToUri(),org.eclipse.jgit.pgm.RemoteTest.testSetUrlPush(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNoPushUrl(),org.eclipse.jgit.api.RemoteSetUrlCommand.call(),org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf(),org.eclipse.jgit.transport.RemoteConfigTest.pushInsteadOfNotAppliedToPushUri(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf(),org.eclipse.jgit.transport.Transport.getURIs(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	true	3176
5498.json	org.eclipse.jgit.revwalk.ObjectWalk.getPathLength()	5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2685
6403.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.remove(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	1515
486.json	org.eclipse.jgit.junit.StrictWorkMonitor.endTask()	noCall	noCall	true	1848
226.json	org.eclipse.jgit.pgm.Version.getBundleVersion()	223.json	org.eclipse.jgit.pgm.Version.run()	true	1702
5534.json	org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit)	5533.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, int)	true	1550
6578.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree)	273.json,383.json	org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit)	true	2838
3358.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setCoalesceGarbageLimit(long)	null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageNoCoalescence()	true	1919
8571.json	org.eclipse.jgit.util.BlockList.set(int, T)	null,8575.json,8576.json	org.eclipse.jgit.util.BlockListTest.testSet(),org.eclipse.jgit.util.BlockList.add(int, T),org.eclipse.jgit.util.BlockList.remove(int)	true	2651
4962.json	org.eclipse.jgit.internal.storage.reftree.RefTree.refName(java.lang.String)	4954.json,2807.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId)	true	884
5654.json	org.eclipse.jgit.revwalk.TreeRevFilter.clone()	noCall	noCall	true	3176
4087.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.releaseMemory()	4086.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int)	true	3176
2263.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.duplicateAdvertisement(java.lang.String)	2260.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.readAdvertisedImpl(java.io.BufferedReader)	true	3176
2339.json	org.eclipse.jgit.transport.BasePackConnection.duplicateAdvertisement(java.lang.String)	2333.json	org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl()	true	3176
5671.json	org.eclipse.jgit.revwalk.RevTag.getTagName()	null,null,null,null,null,270.json	org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag)	true	3176
1689.json	org.eclipse.jgit.transport.AmazonS3.beginPut(java.lang.String, java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	2518.json,1687.json,360.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.pgm.AmazonS3Client.run()	true	3176
1880.json	org.eclipse.jgit.transport.TransportGitSsh.checkExecFailure(int, java.lang.String, java.lang.String)	noCall	noCall	true	3059
3188.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.writeValue(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	noCall	noCall	true	297
152.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId)	145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	true	297
57.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setFixedLengthStreamingMode(int)	noCall	noCall	true	1572
4092.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeHeader(int, int, byte[])	4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	true	1922
3772.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	3771.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor)	true	278
7907.json	org.eclipse.jgit.submodule.SubmoduleWalk.getPath()	null,null,null,null,6862.json,null,null,9570.json,null,null,6835.json,7265.json,7187.json,null,null,7266.json,null,null,null,null,null,null,null,7227.json,7228.json	org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.assertSubmoduleIsInitialized(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNoSubmodules(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call()	true	2355
9327.json	org.eclipse.jgit.lib.BatchRefUpdate.isMissing(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ObjectId)	9326.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
8329.json	org.eclipse.jgit.util.sha1.UbcCheck.check(int[])	8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	true	466
3671.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.open(org.eclipse.jgit.internal.storage.dfs.DfsReader)	null,null,null,null,3400.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.dfs.ReftableStack.open(org.eclipse.jgit.internal.storage.dfs.DfsReader, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsReftable>)	true	286
5038.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.resize(byte[], int)	5172.json,5037.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.cache(byte[], int, int),org.eclipse.jgit.internal.storage.pack.DeltaCache.cache(byte[], int, int)	true	2893
3823.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.blockSize(org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	3802.json,3825.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.newCopyBuffer(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	1144
5433.json	org.eclipse.jgit.revwalk.RevObject.hasAny(org.eclipse.jgit.revwalk.RevFlagSet)	null,null,7260.json	org.eclipse.jgit.revwalk.filter.RevFlagFilter.HasAny.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevObjectTest.testHasAnyFlag(),org.eclipse.jgit.api.DescribeCommand.call()	true	3176
284.json	org.eclipse.jgit.pgm.Fetch.recurseSubmodules(java.lang.String)	noCall	noCall	true	364
5342.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.resetToEnd()	5441.json,5679.json	org.eclipse.jgit.revwalk.LIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
9882.json	org.eclipse.jgit.lfs.LfsPrePushHook.call()	noCall	noCall	true	102
6927.json	org.eclipse.jgit.api.PushCommand.add(org.eclipse.jgit.lib.Ref)	6928.json	org.eclipse.jgit.api.PushCommand.add(java.lang.String)	true	2644
7838.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry.encodeName(java.nio.charset.CharsetEncoder)	7827.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.init(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry[])	true	3176
9007.json	org.eclipse.jgit.lib.Repository.writeMergeHeads(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>)	null,7021.json,7406.json,6979.json,7385.json,7436.json	org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads(),org.eclipse.jgit.api.ResetCommand.resetMerge(),org.eclipse.jgit.api.RebaseCommand.writeMergeInfo(org.eclipse.jgit.revwalk.RevCommit, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2875
2241.json	org.eclipse.jgit.transport.TransportHttp.httpOpen(java.lang.String, java.net.URL, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding)	2259.json,2229.json,2268.json,2222.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.openStream(),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	true	3070
9309.json	org.eclipse.jgit.lib.BatchRefUpdate.setRefLogMessage(java.lang.String, boolean)	null,1951.json,null,null,null,4985.json,null,null,null,null,4933.json,2762.json,2625.json,null,null,null,4918.json,null,null	org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusNoMessage(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogFileDirectoryConflict(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideRefLogMessage(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInUpdate(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogCustomIdent(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDelete(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusWithMessage(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.refLogNotWrittenWithoutConfigOption(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.forceRefLogInCommand(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogDefaultIdent(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogAppendStatusFastForward(),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.reflogOnLockFailure(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.overrideDisableRefLog()	true	2210
1852.json	org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk)	3255.json,1951.json,4927.json,4499.json,9326.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	2210
5396.json	org.eclipse.jgit.revwalk.RevWalk.finishDelayedFreeFlags()	5349.json,5400.json	org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalk.reset(int)	true	3176
4899.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getBootstrap()	null,null,4933.json,2759.json,2762.json,4928.json,167.json	org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.pgm.debug.RebuildRefTree.run()	true	880
6917.json	org.eclipse.jgit.api.PushCommand.getProgressMonitor()	noCall	noCall	true	2805
6774.json	org.eclipse.jgit.diff.Edit.extendB()	8701.json,null	org.eclipse.jgit.patch.HunkHeader.toEditList(),org.eclipse.jgit.diff.EditTest.testExtendB()	true	3176
2523.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.loose(org.eclipse.jgit.lib.Ref)	2522.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String)	true	3176
4860.json	org.eclipse.jgit.internal.storage.file.FileRepository.openPack(java.io.File)	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy()	true	3176
1049.json	org.eclipse.jgit.merge.StrategyResolve.newMerger(org.eclipse.jgit.lib.Repository, boolean)	noCall	noCall	true	2841
5000.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.CommitSelectionHelper.getCommitCount()	4988.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	963
9003.json	org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String)	7195.json,7021.json,null,7406.json,6812.json,6979.json,7022.json,7023.json,7385.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.ResetCommand.resetMerge(),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.api.RebaseCommand.writeMergeInfo(org.eclipse.jgit.revwalk.RevCommit, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.ResetCommand.resetCherryPick(),org.eclipse.jgit.api.ResetCommand.resetRevert(),org.eclipse.jgit.api.MergeCommand.call()	true	2875
5801.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
9986.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(long[])	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawLongs()	true	856
10049.json	org.eclipse.jgit.lfs.server.s3.S3Config.isDisableSslVerify()	10053.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	843
235.json	org.eclipse.jgit.pgm.Diff.setAlgorithm(org.eclipse.jgit.diff.DiffAlgorithm.SupportedAlgorithm)	noCall	noCall	true	2784
8299.json	org.eclipse.jgit.util.GitDateParser.parse_simple(java.lang.String, org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)	8298.json	org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, java.util.Calendar, java.util.Locale)	true	2112
4805.json	org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	4817.json	org.eclipse.jgit.internal.storage.file.GC.repack()	true	2142
5810.json	org.eclipse.jgit.ignore.FastIgnoreRule.isMatch(java.lang.String, boolean)	null,null,null,null,null,null	org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.matchAsDir(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.assertCgitAndJgitMatch(java.lang.String, org.eclipse.jgit.ignore.FastIgnoreRule, org.eclipse.jgit.ignore.CGitVsJGitRandomIgnorePatternTest.CGitIgnoreRule, java.lang.String),org.eclipse.jgit.ignore.FastIgnoreRuleTest.testSimpleRules(),org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.assertFileNameMatch(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.match(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.IgnoreRuleSpecialCasesTest.assertMatch(java.lang.String, java.lang.String, boolean, java.lang.Boolean...)	true	1322
8961.json	org.eclipse.jgit.lib.Repository.resolve(java.lang.String)	null,null,null,7484.json,null,null,null,null,null,247.json,null,null,178.json,null,null,null,null,6835.json,null,null,null,null,null,null,null,null,null,7270.json,null,null,null,null,null,null,null,null,7131.json,null,null,null,null,null,null,null,7422.json,null,null,null,null,null,7236.json,null,null,null,null,null,null,7248.json,435.json,null,null,7436.json,7399.json,null,7799.json,null,null,7441.json,null,null,null,null,null,null,null,null,null,null,null,null,null,417.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7331.json,null,null,null,null,null,null,7407.json,9570.json,null,null,7237.json,7350.json,null,null,null,null,null,null,null,null,null,null,4829.json,1995.json,null,null,7423.json,null,null,null,null,7282.json,null,203.json,230.json,null,null,null,null,null,null,null,430.json,null,null,null,7010.json,278.json,null,null,null,6866.json,null,7412.json,null,null,null,null,null,null,214.json,null,null,null,269.json,null,null,null,null,null,null,331.json,null,null,null,null,388.json,null,null,null,null,7438.json,null,null,null,352.json,null,null,null,null,6979.json,null,null,null,null,null,null,7919.json,null,null,7471.json,null,null,null,null,null,null,null,null,6862.json,7401.json,6953.json,null,null,null,7332.json,null,null,null,7299.json,112.json,null,6309.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob(),org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.CheckoutCommand.getStartPointObjectId(),org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput(),org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef(),org.eclipse.jgit.api.DiffCommandTest.getTreeIterator(java.lang.String),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.merge.SimpleMergeTest.testOurs_noRepo(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent(),org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.setUp(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok(),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.PullCommand.call(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce(),org.eclipse.jgit.merge.SimpleMergeTest.testTheirs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.StashApplyCommand.getStashId(),org.eclipse.jgit.pgm.BranchTest.testListDetached(),org.eclipse.jgit.api.ResetCommandTest.testMixedReset(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.api.DescribeCommand.setTarget(java.lang.String),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenOnDemandAndRevisionChanged(boolean),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(java.io.File, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFileFromRepo(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.setUpstream(java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob(),org.eclipse.jgit.api.EolRepositoryTest.gitCheckout(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs(),org.eclipse.jgit.pgm.TextBuiltin.resolve(java.lang.String),org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.ResetCommandTest.testHardReset(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.junit.TestRepository.reset(java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.lib.RefTest.testGetShortRef(),org.eclipse.jgit.lib.RefTest.testRefsUnderRefs(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward(),org.eclipse.jgit.lib.RepositoryResolveTest.assertUnparseable(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag(),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.testHardResetReflogDisabled(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.SimpleMergeTest.testOurs(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.RefTest.testGetShortExactRef(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.resolve(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.api.RebaseCommandTest.getStashedDiff(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentId(java.lang.String, java.lang.String),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked(),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.merge.SimpleMergeTest.testTheirs_noRepo(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.ResetCommandTest.inHead(java.lang.String),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.ResetCommand.resolveRefToCommitId(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname(),org.eclipse.jgit.lib.RepositoryResolveTest.testTree(),org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean),org.eclipse.jgit.lib.RepositoryResolveTest.testDistance(),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.assertNoHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.updateRef(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit(),org.eclipse.jgit.gitrepo.RepoCommandTest.IndexedRepos.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay(),org.eclipse.jgit.submodule.SubmoduleWalk.getHead(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.lib.RefTest.testReadLooseRef(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting(),org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergeMessageFormatterTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.SubmoduleStatusCommand.getStatus(org.eclipse.jgit.submodule.SubmoduleWalk),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.api.ResetCommandTest.testSoftReset(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_noRepo(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	false	3176
1297.json	org.eclipse.jgit.transport.PushResult.setRemoteUpdates(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	2093.json	org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
9937.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.getSecondByte()	null,10089.json	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testGetByte(),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	856
8228.json	org.eclipse.jgit.util.io.StreamCopyThread.run()	noCall	noCall	true	3176
3825.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
7377.json	org.eclipse.jgit.api.ArchiveCommand.setFormatOptions(java.util.Map<java.lang.String, java.lang.Object>)	null	org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile()	true	1206
2770.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.getCommitted()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
7286.json	org.eclipse.jgit.api.DiffCommand.setNewTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
227.json	org.eclipse.jgit.pgm.Version.getBundleVersion(java.net.URL)	226.json	org.eclipse.jgit.pgm.Version.getBundleVersion()	true	1702
965.json	org.eclipse.jgit.merge.StrategyOneSided.OneSide.getResultTreeId()	noCall	noCall	true	3176
451.json	org.eclipse.jgit.junit.MockSystemReader.MockConfig.isOutdated()	noCall	noCall	true	2979
7945.json	org.eclipse.jgit.util.RawParseUtils.committer(byte[], int)	5695.json,5530.json,5547.json	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.revwalk.RevCommit.getCommitterIdent()	true	3176
9479.json	org.eclipse.jgit.lib.SubmoduleConfig.FetchRecurseSubmodulesMode.matchConfigValue(java.lang.String)	null,284.json,null	org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseMatch(),org.eclipse.jgit.pgm.Fetch.recurseSubmodules(java.lang.String),org.eclipse.jgit.lib.SubmoduleConfigTest.fetchRecurseNoMatch()	true	463
8954.json	org.eclipse.jgit.lib.Repository.getFS()	null,null,null,null,4236.json,null,null,null,null,null,1811.json,null,null,1815.json,null,null,87.json,null,null,7896.json,null,null,null,9102.json,null,null,9869.json,null,7351.json,null,9097.json,null,4181.json,4810.json,null,null,null,null,null,null,null,null,2284.json,null,7422.json,null,null,null,null,null,null,null,null,null,null,2506.json,null,null,6826.json,null,null,null,null,null,null,null,5878.json,7799.json,null,null,4805.json,null,null,null,null,null,7298.json,6045.json,null,null,null,null,7888.json,null,9098.json,7807.json,null,null,5875.json,1807.json,null,null,null,null,null,null,null,null,4849.json,7350.json,null,null,null,112.json,null,null,6026.json,null,null,9099.json,6027.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.internal.storage.file.GcTestCase.lastModified(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.merge.MergerTest.writeSubmodule(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.transport.TransportLocal.openRepo(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.transport.TransportLocal.spawn(java.lang.String),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.pgm.Config.list(),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered(),org.eclipse.jgit.api.ResetCommandTest.inIndex(java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_TempIndex(),org.eclipse.jgit.lib.RepositoryCache.isCached(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule(),org.eclipse.jgit.lib.RepositoryCache.register(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.transport.SshTransport.getSession(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.dircache.DirCache.lock(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.events.IndexChangedListener),org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(java.io.File, org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenNew(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.lib.RepositoryCache.close(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.api.BlameCommand.call(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutGitlink(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile(),org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule()	true	2928
8636.json	org.eclipse.jgit.util.time.ProposedTimestamp.instant()	8637.json,8640.json	org.eclipse.jgit.util.time.ProposedTimestamp.timestamp(),org.eclipse.jgit.util.time.ProposedTimestamp.toString()	true	565
2613.json	org.eclipse.jgit.transport.BaseReceivePack.needPack()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	3176
424.json	org.eclipse.jgit.pgm.ReceivePack.requiresRepository()	noCall	noCall	true	3176
5990.json	org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(byte[], int)	7019.json,7244.json,6011.json,7243.json,947.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int)	true	3176
975.json	org.eclipse.jgit.merge.ResolveMerger.checkout()	1005.json	org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean)	true	2841
1547.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	2308.json,1548.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeFile(java.lang.String, byte[])	true	3176
6004.json	org.eclipse.jgit.dircache.DirCacheEntry.getMaximumInfoLength(boolean)	5886.json	org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream)	true	2840
2368.json	org.eclipse.jgit.transport.RefSpec.eq(java.lang.String, java.lang.String)	2367.json	org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object)	true	3176
8565.json	org.eclipse.jgit.util.Paths.compareSameName(byte[], int, int, byte[], int, int, int)	9373.json,5940.json,null	org.eclipse.jgit.lib.ObjectChecker.duplicateName(byte[], int, int),org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts(),org.eclipse.jgit.util.PathsTest.testPathCompare()	true	882
3119.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.skipValue()	3063.json,3118.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte[], int, int, int),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
2488.json	org.eclipse.jgit.transport.CredentialItem.isValueSecure()	445.json,446.json,9.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.StringType),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.CharArrayType),org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[])	true	2768
2854.json	org.eclipse.jgit.internal.ketch.ProposalRound.success()	noCall	noCall	true	872
281.json	org.eclipse.jgit.pgm.Fetch.nofsck(boolean)	noCall	noCall	true	3176
5651.json	org.eclipse.jgit.revwalk.RevFlagSet.Anonymous-30a97f36-f4f1-4c1d-a48d-311b6eb257f1.remove()	noCall	noCall	true	3176
5199.json	org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getFormat()	5201.json,5148.json,4405.json	org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.wasDeltaAttempted(),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.getDeltaBase()	true	2906
8468.json	org.eclipse.jgit.util.FS.Attributes.exists()	noCall	noCall	true	1579
3447.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref.get()	3439.json,3789.json,3792.json,3791.json,3438.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scanRef(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getReverseIdx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scan(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
9601.json	org.eclipse.jgit.lib.AnyObjectId.startsWith(org.eclipse.jgit.lib.AbbreviatedObjectId)	null,null,null,null,null,null,null,null	org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_8(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_9(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1()	true	3176
2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	4698.json,2614.json,3646.json,2393.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor)	true	2692
4609.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ones(int)	null,4590.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.iterator(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.removeAllOrNone(org.eclipse.jgit.internal.storage.file.PackBitmapIndex)	true	1922
9496.json	org.eclipse.jgit.lib.RebaseTodoLine.createInvalidCommentException(java.lang.String)	9495.json	org.eclipse.jgit.lib.RebaseTodoLine.setComment(java.lang.String)	true	1683
6062.json	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean)	6060.json,6061.json	org.eclipse.jgit.dircache.DirCacheIterator.back(int),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry()	true	3176
3498.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.checkExisting(boolean)	null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting()	true	739
6887.json	org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	6880.json	org.eclipse.jgit.api.CloneCommand.call()	true	2686
7604.json	org.eclipse.jgit.treewalk.TreeWalk.isPathPrefix(byte[], int)	7530.json,null,null	org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.include(org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Single.include(org.eclipse.jgit.treewalk.TreeWalk)	true	3176
8836.json	org.eclipse.jgit.lib.CoreConfig.getCompression()	noCall	noCall	true	3176
6501.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int)	6485.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.calculate(int, int, int, int)	true	3169
6980.json	org.eclipse.jgit.api.CommitCommand.insertChangeId(org.eclipse.jgit.lib.ObjectId)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	2642
9395.json	org.eclipse.jgit.lib.ObjectChecker.isNormalizedGit(byte[], int, int)	9382.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1269
5985.json	org.eclipse.jgit.dircache.DirCacheEntry.getLength()	7019.json,null,null,null,null,null,null,null,144.json,978.json,5964.json,7830.json,null,null,null,5993.json,7243.json,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntry.isSmudged(),org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.dircache.DirCacheEntry.toString(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit()	true	3176
2287.json	org.eclipse.jgit.transport.NetRC.getDefaultFile()	noCall	noCall	true	1408
3784.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.configureReftable(org.eclipse.jgit.internal.storage.reftable.ReftableConfig, org.eclipse.jgit.internal.storage.dfs.DfsOutputStream)	3386.json,3604.json,null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor)	true	278
6548.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean)	6547.json,6546.json	org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config),org.eclipse.jgit.diff.DiffFormatter.setRepository(org.eclipse.jgit.lib.Repository)	true	676
3852.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.contains(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3758.json,3428.json,3424.json,3761.json,3663.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.quickCopy(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long, long),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hasBlock0(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	true	2410
5722.json	org.eclipse.jgit.revwalk.filter.AuthorRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	null,null	org.eclipse.jgit.revwalk.filter.AuthorRevFilter.SubStringSearch.text(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.filter.AuthorRevFilter.PatternSearch.text(org.eclipse.jgit.revwalk.RevCommit)	true	3176
2024.json	org.eclipse.jgit.transport.Transport.setDryRun(boolean)	6836.json,6911.json	org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.api.PushCommand.call()	true	3176
2889.json	org.eclipse.jgit.internal.ketch.Proposal.notifyState(org.eclipse.jgit.internal.ketch.Proposal.State)	2883.json,2882.json,2900.json,2848.json	org.eclipse.jgit.internal.ketch.Proposal.abort(),org.eclipse.jgit.internal.ketch.Proposal.success(),org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	872
5579.json	org.eclipse.jgit.revwalk.RevFlag.toString()	null	org.eclipse.jgit.revwalk.RevFlag.StaticRevFlag.getRevWalk()	true	3176
7321.json	org.eclipse.jgit.api.SubmoduleDeinitResult.getPath()	null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.alreadyClosedSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	164
1998.json	org.eclipse.jgit.transport.Transport.findTrackingRefName(java.lang.String, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	1995.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	3176
7335.json	org.eclipse.jgit.api.CreateBranchCommand.isValidBranchName(java.lang.String)	7334.json	org.eclipse.jgit.api.CreateBranchCommand.processOptions()	true	2
3676.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.open()	3674.json,3672.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.size(),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.read(long, int)	true	286
5398.json	org.eclipse.jgit.revwalk.RevWalk.resetRetain(org.eclipse.jgit.revwalk.RevFlagSet)	1470.json	org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	true	3176
5312.json	org.eclipse.jgit.attributes.FilterCommandRegistry.isRegistered(java.lang.String)	6045.json,7807.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	628
9509.json	org.eclipse.jgit.lib.RefComparator.sort(java.util.Collection<org.eclipse.jgit.lib.Ref>)	81.json,2662.json,null,432.json	org.eclipse.jgit.pgm.ShowRef.getSortedRefs(),org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.assertContains(org.eclipse.jgit.revwalk.RevCommit, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.pgm.Branch.addRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>, java.lang.String)	true	3176
9020.json	org.eclipse.jgit.lib.Repository.readRebaseTodo(java.lang.String, boolean)	null,null,7399.json,7402.json,7427.json,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo(),org.eclipse.jgit.api.RebaseCommandTest.testEmptyRebaseTodo(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.popSteps(int),org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand(),org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile()	true	1683
1894.json	org.eclipse.jgit.transport.RefLeaseSpec.toString()	noCall	noCall	true	486
474.json	org.eclipse.jgit.junit.MockSystemReader.getLocale()	476.json,475.json	org.eclipse.jgit.junit.MockSystemReader.getDateTimeInstance(int, int),org.eclipse.jgit.junit.MockSystemReader.getSimpleDateFormat(java.lang.String)	true	2425
9859.json	org.eclipse.jgit.lfs.Lfs.createTmpFile()	noCall	noCall	true	628
3291.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.setMaxUpdateIndex(long)	null,null,null,null,3259.json,null,null,null,null,135.json,null,null,null,3386.json,null,null,3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>, long),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.missedUpdate(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.withReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
2112.json	org.eclipse.jgit.transport.RemoteRefUpdate.getSrcRef()	null,null,null,null,124.json,1102.json,null	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking()	true	3176
3588.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.remove(java.lang.String)	3579.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.removed(java.lang.String)	true	2410
4506.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockFailure(org.eclipse.jgit.transport.ReceiveCommand, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null,4500.json,4497.json,4501.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	320
10180.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.mapKey(java.lang.String)	10194.json,null	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getValues(java.lang.String),org.eclipse.jgit.transport.OpenSshConfig.HostEntry.findValue(java.lang.String)	true	289
9087.json	org.eclipse.jgit.lib.SymbolicRef.getLeaf()	9092.json,null,9091.json,9089.json,null	org.eclipse.jgit.lib.SymbolicRef.isPeeled(),org.eclipse.jgit.lib.SymbolicRefTest.testConstructor(),org.eclipse.jgit.lib.SymbolicRef.getPeeledObjectId(),org.eclipse.jgit.lib.SymbolicRef.getObjectId(),org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()	true	3059
3451.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.check(org.eclipse.jgit.lib.ProgressMonitor)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMissingObject(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testHealthyRepo(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor()	true	319
50.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getContentType()	noCall	noCall	true	1572
10090.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	10084.json,10085.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	true	856
3257.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
1487.json	org.eclipse.jgit.transport.HttpConfig.getPostBuffer()	null,null,null,2269.json,null,null,null,null,null,null,null	org.eclipse.jgit.transport.HttpConfigTest.testMatchWithPrefixUriInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithOnlySchemeInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidUriInConfig(),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidAndValidUriInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithUser(),org.eclipse.jgit.transport.HttpConfigTest.testMatchLonger(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithHostEndingInSlash(),org.eclipse.jgit.transport.HttpConfigTest.testDefault(),org.eclipse.jgit.transport.HttpConfigTest.testMatchSuccess(),org.eclipse.jgit.transport.HttpConfigTest.testMatchCaseSensitivity()	true	273
4960.json	org.eclipse.jgit.internal.storage.reftree.RefTree.checkRef(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.internal.storage.reftree.Command)	null,4959.json,null	org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-4c4f9ba4-cc90-4a4d-a369-2d6b2701da8c.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.storage.reftree.RefTree.Anonymous-3acfdc27-8e94-41d7-83c8-cfc147400505.apply(org.eclipse.jgit.dircache.DirCacheEntry)	true	884
532.json	org.eclipse.jgit.junit.http.MockServletConfig.getServletName()	noCall	noCall	true	3070
8271.json	org.eclipse.jgit.util.RawCharUtil.trimLeadingWhitespace(byte[], int, int)	6607.json,null,null,null,6608.json	org.eclipse.jgit.diff.RawTextComparator.Anonymous-837c468d-c71c-4269-bf45-53142f360ba5.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-f801d2cd-376f-48f0-83b4-030fc95f475b.equals(org.eclipse.jgit.diff.RawText, int, org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.diff.RawTextComparator.Anonymous-a1d462c9-eded-445c-a697-41a39ec1854a.hashRegion(byte[], int, int),org.eclipse.jgit.util.RawCharUtilTest.testTrimLeadingWhitespace(),org.eclipse.jgit.diff.RawTextComparator.Anonymous-94cf0709-aacd-414d-8c95-5eb192abead5.hashRegion(byte[], int, int)	true	2904
8940.json	org.eclipse.jgit.lib.ObjectIdSerializer.readWithoutMarker(java.io.InputStream)	8939.json,null	org.eclipse.jgit.lib.ObjectIdSerializer.read(java.io.InputStream),org.eclipse.jgit.lib.ObjectIdSerializerTest.writeAndReadBackFromTempFile(org.eclipse.jgit.lib.ObjectId)	true	88
3262.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
183.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.Line.hashCode()	noCall	noCall	true	2816
5933.json	org.eclipse.jgit.dircache.DirCacheBuildIterator.stopWalk()	noCall	noCall	true	3176
4007.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream)	null,null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.insertLargeInputStreamBypassesCheckExisting(),org.eclipse.jgit.internal.storage.file.PackInserterTest.insertSmallInputStreamRespectsCheckExisting(),org.eclipse.jgit.internal.storage.file.PackInserterTest.largeBlob()	true	221
8699.json	org.eclipse.jgit.patch.HunkHeader.getNewLineCount()	null,null,null,8708.json,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.HunkHeader.toString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
4745.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getPackedSizeFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2893
9847.json	org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.call()	noCall	noCall	true	113
8238.json	org.eclipse.jgit.util.io.IsolatedOutputStream.execute(java.util.concurrent.Callable<java.lang.Void>)	8235.json,8232.json,8231.json	org.eclipse.jgit.util.io.IsolatedOutputStream.cleanClose(),org.eclipse.jgit.util.io.IsolatedOutputStream.flush(),org.eclipse.jgit.util.io.IsolatedOutputStream.write(byte[], int, int)	true	573
5107.json	org.eclipse.jgit.internal.storage.pack.PackWriter.getIndexVersion()	3783.json,5108.json,3382.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeIndex(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter),org.eclipse.jgit.internal.storage.pack.PackWriter.writeIndex(java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	1922
3725.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.openImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AnyObjectId)	3723.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	696
5881.json	org.eclipse.jgit.dircache.DirCache.editor()	null,null,null,null,null,null,null,null,null,null,null,7479.json,null,null,null,7481.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,4954.json,null,null,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.lib.IndexDiffTest.removeFromIndex(java.lang.String),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.rm(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.merge.MergerTest.addSubmoduleToIndex(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.junit.TestRepository.CommitBuilder.edit(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
9959.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.toHexCharArray()	9956.json,9963.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.io.Writer),org.eclipse.jgit.lfs.lib.AnyLongObjectId.name()	true	856
9066.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.util.Collection<java.io.File>)	noCall	noCall	true	2907
10053.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	843
8415.json	org.eclipse.jgit.util.FS.setUserHome(java.io.File)	null	org.eclipse.jgit.storage.file.FileBasedConfigTest.testIncludeWithTilde()	true	2645
3305.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeObjBlocks()	3304.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishRefAndObjSections()	true	297
7215.json	org.eclipse.jgit.api.StashDropCommand.call()	null,null,null,null,null,null,null	org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits()	true	2272
2622.json	org.eclipse.jgit.transport.BaseReceivePack.anyRejects()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	1310
1102.json	org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>)	2034.json	org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	950
6350.json	org.eclipse.jgit.fnmatch.CharacterHead.matches(char)	noCall	noCall	true	3176
7140.json	org.eclipse.jgit.api.PullCommand.getRebaseMode(java.lang.String, org.eclipse.jgit.lib.Config)	7131.json	org.eclipse.jgit.api.PullCommand.call()	true	1426
241.json	org.eclipse.jgit.pgm.Diff.abbrev(int)	noCall	noCall	true	2899
3520.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.writeNoHash(byte[], int, int)	3519.json,3523.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.write(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.writePackFooter()	true	2410
4440.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.myAlternates()	4444.json,4446.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2907
6011.json	org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser)	6007.json	org.eclipse.jgit.dircache.DirCacheBuilder.addTree(byte[], int, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	3176
391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	null,390.json	org.eclipse.jgit.pgm.CLIGitCommand.run(java.lang.String),org.eclipse.jgit.pgm.Main.main(java.lang.String[])	true	2794
5893.json	org.eclipse.jgit.dircache.DirCache.commit()	null,null,null,null,null,5944.json,null,null,null,null,208.json,null,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.dircache.BaseDirCacheEditor.commit(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.AddCommandTest.assumeUnchanged(java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyCommit_RealIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyReadEmpty_RealIndex(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildEmpty(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode()	true	3176
6522.json	org.eclipse.jgit.diff.Subsequence.toBase(org.eclipse.jgit.diff.Edit, org.eclipse.jgit.diff.Subsequence<S>, org.eclipse.jgit.diff.Subsequence<S>)	6523.json	org.eclipse.jgit.diff.Subsequence.toBase(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.Subsequence<S>, org.eclipse.jgit.diff.Subsequence<S>)	true	2820
8017.json	org.eclipse.jgit.util.RefMap.remove(java.lang.Object)	null	org.eclipse.jgit.util.RefMapTest.testRemove()	true	3060
4929.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	4979.json,4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	880
3443.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.newCounters()	noCall	noCall	true	194
1269.json	org.eclipse.jgit.transport.RemoteConfig.unset(org.eclipse.jgit.lib.Config, java.lang.String)	1267.json,1266.json,1268.json	org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, boolean, boolean),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, int, int)	true	3176
3700.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.removed(java.lang.String)	noCall	noCall	true	235
4013.json	org.eclipse.jgit.internal.storage.file.PackInserter.newPackParser(java.io.InputStream)	noCall	noCall	true	221
10172.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.JschBugFixingConfig.getHostname()	noCall	noCall	true	148
6618.json	org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.Edit)	null,null,null,null	org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol(),org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd(),org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartEnd_EmptyLine(),org.eclipse.jgit.diff.RawTextTest.testComparatorReduceCommonStartButLastLineNoEol_2()	true	2820
3619.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getPackSource()	null,3452.json,null,null,null,null,3605.json,null,3768.json,null,3366.json,null,null,null,null,null,null,3750.json,3381.json,null,3365.json,null,null,3491.json,3363.json,3790.json,null,3385.json,null,null,null,null,null,3749.json,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsReader.Anonymous-cda10879-e0a4-4db4-8b33-7a8202285458.compare(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsPackFile),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.compareTo(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbage(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.leavesNonGcReftablesIfNotConfigured(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateCompactPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateUnreachableGarbagePackSize(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.countPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource),org.eclipse.jgit.internal.storage.dfs.DfsReader.garbagePacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.estimateGcPackSize(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource...),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsExpiredGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithGarbageAndGarbagePacksPurged(),org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.wasDeltaAttempted(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.isGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testRacyNoReusePrefersSmaller(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.hasGcReftable(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcPackSizesWithGcAndGcRestPacks(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.prunesNonGcReftables(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.testEstimateGcPackSizeWithAnExistingGcPack(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndRereferencingGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.category(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.DfsReader.sortPacksForSelectRepresentation(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithNoGarbage(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testEstimateGcRestPackSizeInNewRepo(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.testCollectionWithPureGarbageAndGarbagePacksPurged()	true	2127
8798.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.Anonymous-b88ab2df-2dbd-4da6-8cf1-4739a076a487.next()	noCall	noCall	true	3176
9520.json	org.eclipse.jgit.lib.RefUpdate.getRef()	4565.json,4984.json,9549.json,3344.json,4489.json,3959.json,7388.json,6309.json,4493.json,3609.json,3961.json,3954.json,1853.json,9519.json,7300.json,4102.json,4494.json,6979.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doLink(java.lang.String),org.eclipse.jgit.lib.RefUpdate.delete(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.tryLock(boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.stored(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot),org.eclipse.jgit.api.MergeCommand.updateHead(java.lang.StringBuilder, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.storedSymbolicRef(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate, org.eclipse.jgit.internal.storage.file.FileSnapshot, java.lang.String),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.lib.RefUpdate.getName(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.api.CommitCommand.call()	true	3176
7210.json	org.eclipse.jgit.api.StashDropCommand.setAll(boolean)	null	org.eclipse.jgit.api.StashDropCommandTest.dropAll()	true	2272
4985.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result)	4983.json,4984.json,4981.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	880
4056.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.readBitmap(java.io.DataInput)	noCall	noCall	true	1922
1273.json	org.eclipse.jgit.transport.RemoteConfig.getURIs()	null,null,85.json,null,null,null,null,6875.json,null,1265.json,null,1990.json,null,null,null,1991.json,null,2827.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI(),org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>),org.eclipse.jgit.pgm.RemoteTest.testVerboseList(),org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf(),org.eclipse.jgit.transport.RemoteConfigTest.testUnknown(),org.eclipse.jgit.pgm.RemoteTest.testSetUrlPush(),org.eclipse.jgit.api.RemoteSetUrlCommand.call(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.pgm.RemoteTest.testUpdate(),org.eclipse.jgit.transport.Transport.getURIs(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.Transport.doesNotExist(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI(),org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.RemoteTest.testSetUrl(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI(),org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.transport.RemoteConfigTest.testRemoveOnlyURI(),org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI(),org.eclipse.jgit.transport.RemoteConfigTest.testAddURI(),org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf()	true	3176
5.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.install()	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	1145
8483.json	org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File, boolean)	8482.json,9898.json,4612.json,null,6825.json,4849.json,null,6045.json,null,null,6027.json	org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File),org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.internal.storage.file.LockFile.lock(),org.eclipse.jgit.util.FileUtilsTest.testMkdirs(),org.eclipse.jgit.api.ApplyCommand.getFile(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.junit.JGitTestUtil.write(java.io.File, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.getFile(java.lang.String...),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutGitlink(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry)	true	2735
5141.json	org.eclipse.jgit.internal.storage.pack.PackWriter.pruneEdgesFromObjectList(java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	5117.json,5118.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	2683
5317.json	org.eclipse.jgit.attributes.AttributesHandler.mergeInfoAttributes(java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes)	5315.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes()	true	849
8913.json	org.eclipse.jgit.lib.Config.fromText(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.HttpConfigTest.testMatchWithOnlySchemeInConfig(),org.eclipse.jgit.lib.ConfigTest.parse(java.lang.String, org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidUriInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithHostEndingInSlash(),org.eclipse.jgit.transport.HttpConfigTest.testMatchSuccess(),org.eclipse.jgit.transport.HttpConfigTest.testMatchCaseSensitivity(),org.eclipse.jgit.lib.RepositoryCacheConfigTest.testFromConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithPrefixUriInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithInvalidAndValidUriInConfig(),org.eclipse.jgit.transport.HttpConfigTest.testMatchWithUser(),org.eclipse.jgit.transport.HttpConfigTest.testMatchLonger(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.transport.RemoteConfigTest.readConfig(java.lang.String),org.eclipse.jgit.lib.BranchConfigTest.parse(java.lang.String)	true	3176
3432.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsBlock)	3527.json,3521.json,3659.json,3663.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getOrLoadBlock(long),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.flushBlock(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.flushBlock(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.readDatabase(byte[], int, int)	true	2410
7493.json	org.eclipse.jgit.api.CheckoutCommand.setStartPoint(java.lang.String)	null,388.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint(),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository()	true	2756
2850.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	2849.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertProposals(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
9557.json	org.eclipse.jgit.lib.IndexDiff.StageState.hasBase()	null	org.eclipse.jgit.lib.IndexDiffTest.testStageState()	true	1878
3107.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueId()	3098.json,3106.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readLogEntry()	true	297
2001.json	org.eclipse.jgit.transport.Transport.setOptionUploadPack(java.lang.String)	7521.json,2022.json	org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig)	true	3176
3578.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.stored(org.eclipse.jgit.lib.Ref)	3349.json,3347.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	2410
9857.json	org.eclipse.jgit.lfs.Lfs.getLfsObjDir()	9858.json	org.eclipse.jgit.lfs.Lfs.getMediaFile(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	628
1356.json	org.eclipse.jgit.transport.WalkFetchConnection.getPackLocks()	noCall	noCall	true	3176
6447.json	org.eclipse.jgit.blame.BlameGenerator.result(org.eclipse.jgit.blame.Candidate)	6445.json,6452.json,6456.json,6448.json,6455.json	org.eclipse.jgit.blame.BlameGenerator.next(),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.reverseResult(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
9495.json	org.eclipse.jgit.lib.RebaseTodoLine.setComment(java.lang.String)	9753.json,null	org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int),org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment()	true	1683
6918.json	org.eclipse.jgit.api.PushCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
9528.json	org.eclipse.jgit.lib.RefUpdate.setForceUpdate(boolean)	null,null,null,null,null,null,null,null,null,null,6953.json,1853.json,430.json,null,null,null,null,null,4565.json,null,null,null,null,9333.json,null,215.json,null,null,7212.json,null,null,null,7471.json,null,7300.json,435.json,null,null,null,6863.json	org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.Anonymous-30d562ce-b7da-46d2-932c-facb3fd40d50.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce(),org.eclipse.jgit.junit.TestRepository.delete(java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.deleteAllRefs(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.StashDropCommand.createRefUpdate(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHeadInBareRepo(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.api.DeleteTagCommand.call()	true	3176
8784.json	org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String)	8907.json,8809.json	org.eclipse.jgit.lib.Config.unsetSection(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean)	true	3054
6940.json	org.eclipse.jgit.api.errors.CheckoutConflictException.getConflictingPaths()	278.json,388.json,null,null,7399.json,null,null,null,null	org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree()	true	2939
5109.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeBitmapIndex(java.io.OutputStream)	null,3382.json	org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, long)	true	1922
7702.json	org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter.toString()	noCall	noCall	true	2839
5965.json	org.eclipse.jgit.dircache.DirCacheEntry.idBuffer()	5990.json,5988.json,5919.json,5989.json,6054.json	org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(byte[], int),org.eclipse.jgit.dircache.DirCacheEntry.getObjectId(),org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheIterator.idBuffer()	true	3176
995.json	org.eclipse.jgit.merge.ResolveMerger.setCommitNames(java.lang.String[])	7195.json,7237.json,null,6812.json,7385.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2841
4625.json	org.eclipse.jgit.internal.storage.file.LockFile.setFSync(boolean)	4491.json,4494.json,3974.json,null	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean)	true	2766
3287.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.estimatePadBetweenBlocks(int)	3302.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()	true	297
8518.json	org.eclipse.jgit.util.IntList.add(int)	null,null,6026.json,null,null,null,3169.json,null,7943.json,null,6490.json,950.json,8519.json,null,8520.json,7941.json,null	org.eclipse.jgit.util.IntListTest.testClear(),org.eclipse.jgit.util.IntListTest.testAdd_LargeGroup(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.util.IntListTest.testToString(),org.eclipse.jgit.util.IntListTest.testFillTo1(),org.eclipse.jgit.util.IntListTest.testSet(),org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.util.IntListTest.testAdd_ZeroCapacity(),org.eclipse.jgit.util.RawParseUtils.lineMapOrNull(byte[], int, int),org.eclipse.jgit.util.IntListTest.testContains(),org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int),org.eclipse.jgit.merge.MergeResult.add(int, int, int, org.eclipse.jgit.merge.MergeChunk.ConflictState),org.eclipse.jgit.util.IntList.set(int, int),org.eclipse.jgit.util.IntListTest.testFillTo100(),org.eclipse.jgit.util.IntList.fillTo(int, int),org.eclipse.jgit.util.RawParseUtils.lineMap(byte[], int, int),org.eclipse.jgit.util.IntListTest.testAdd_SmallGroup()	true	3176
7407.json	org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit)	7405.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit)	true	1426
8470.json	org.eclipse.jgit.util.FS.normalize(java.io.File)	noCall	noCall	true	1578
7089.json	org.eclipse.jgit.api.Git.submoduleStatus()	null	org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision()	true	2350
4980.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.unlock()	noCall	noCall	true	880
8750.json	org.eclipse.jgit.lib.Ref.Storage.isLoose()	4816.json,3961.json,3951.json,2310.json	org.eclipse.jgit.internal.storage.file.GC.packRefs(),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	true	3176
8823.json	org.eclipse.jgit.lib.ConfigSnapshot.CaseFoldingSet.iterator()	noCall	noCall	true	2260
6647.json	org.eclipse.jgit.diff.SimilarityRenameDetector.getLeftOverSources()	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
16.json	org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.getRowCount()	noCall	noCall	true	3176
2607.json	org.eclipse.jgit.transport.BaseReceivePack.discardCommands()	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	484
323.json	org.eclipse.jgit.pgm.opt.CmdLineParser.MyOptionDef.toString()	noCall	noCall	true	2548
4946.json	org.eclipse.jgit.internal.storage.reftree.Command.check(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.Ref)	4945.json	org.eclipse.jgit.internal.storage.reftree.Command.checkRef(org.eclipse.jgit.dircache.DirCacheEntry)	true	884
5339.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.peek()	noCall	noCall	true	3176
6879.json	org.eclipse.jgit.api.CloneCommand.getDirectory()	null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryDefaultDirectory()	true	289
8615.json	org.eclipse.jgit.util.SystemReader.getLocale()	null,null,null,null,null,null,8300.json,4811.json,null,null,null,null,null,null,null,4454.json,null,4813.json,null,null,null	org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo(),org.eclipse.jgit.util.GitDateParserTest.local(),org.eclipse.jgit.util.GitDateParserTest.rfc(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithoutRef(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit(),org.eclipse.jgit.util.GitDateParserTest.now(),org.eclipse.jgit.util.GitDateParser.parse_relative(java.lang.String, java.util.Calendar),org.eclipse.jgit.internal.storage.file.GC.getExpireDate(),org.eclipse.jgit.util.GitDateParserTest.shortWithSlash(),org.eclipse.jgit.util.GitDateParserTest.shortFmt(),org.eclipse.jgit.util.GitDateParserTest.defaultFmt(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef(),org.eclipse.jgit.util.GitDateParserTest.weeksAgo(),org.eclipse.jgit.util.GitDateParserTest.yesterday(),org.eclipse.jgit.internal.storage.file.GcLog.getLogExpiry(),org.eclipse.jgit.util.GitDateParserTest.iso(),org.eclipse.jgit.internal.storage.file.GC.getPackExpireDate(),org.eclipse.jgit.util.GitDateParserTest.shortWithDots(),org.eclipse.jgit.util.GitDateParserTest.never(),org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse()	true	2425
5817.json	org.eclipse.jgit.ignore.FastIgnoreRule.toString()	null	org.eclipse.jgit.ignore.BasicRuleTest.test()	true	1322
5191.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.valOf(long)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
3804.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.packfileIsTruncated()	null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	1144
5980.json	org.eclipse.jgit.dircache.DirCacheEntry.setCreationTime(long)	null	org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean)	true	2414
9008.json	org.eclipse.jgit.lib.Repository.readCherryPickHead()	null	org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution()	true	2622
7969.json	org.eclipse.jgit.util.LfsFactory.applyCleanFilter(org.eclipse.jgit.lib.Repository, java.io.InputStream, long, org.eclipse.jgit.attributes.Attribute)	null	org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes)	true	98
6052.json	org.eclipse.jgit.dircache.DirCacheIterator.createEmptyTreeIterator()	noCall	noCall	true	3176
2578.json	org.eclipse.jgit.transport.BaseReceivePack.setMaxObjectSizeLimit(long)	noCall	noCall	true	2391
8876.json	org.eclipse.jgit.lib.Config.getBoolean(java.lang.String, java.lang.String, boolean)	112.json,null,4869.json,2645.json,1494.json,4753.json,3156.json,null,null,7400.json,null,9078.json,null,null,6209.json,null,null,9866.json,null,null,null,437.json,3970.json,9870.json	org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.lib.ConfigTest.testReadMultipleValuesForName(),org.eclipse.jgit.internal.storage.file.FileRepository.shouldAutoDetach(),org.eclipse.jgit.transport.ReceivePack.autoGc(),org.eclipse.jgit.transport.HttpConfig.init(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.internal.storage.reftable.ReftableConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.lib.ConfigTest.testIncludeCaseInsensitiveKey(),org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue(),org.eclipse.jgit.lib.ConfigTest.testIncludeCaseInsensitiveSection(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigTest.testIncludeIsNoop(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2(),org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsContentConnection(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.Protocol.Action, java.lang.String)	true	3176
9014.json	org.eclipse.jgit.lib.Repository.readSquashCommitMsg()	null,null,null,null,null,null,6983.json,7008.json	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.lib.SquashCommitMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.ResetCommand.call()	true	2187
6728.json	org.eclipse.jgit.diff.DiffEntry.getScore()	null,null,null,6452.json,null,6456.json,null,null,null,6600.json,null,248.json	org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.pgm.Diff.nameStatus(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	3176
4756.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits()	4439.json,null,null	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getShallowCommits(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFile(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFileCorrupt()	true	2026
5922.json	org.eclipse.jgit.dircache.DirCacheTree.nameLength()	5921.json,6062.json,5920.json,5924.json	org.eclipse.jgit.dircache.DirCacheTree.appendName(java.lang.StringBuilder),org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheTree.computeSize(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheTree.validate(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, int)	true	3176
7102.json	org.eclipse.jgit.api.Git.remoteRemove()	null,83.json	org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.pgm.Remote.run()	true	911
6331.json	org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.matches(char)	noCall	noCall	true	3176
4479.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.findCRC32(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	3176
8400.json	org.eclipse.jgit.util.FS.supportsSymlinks()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,4849.json,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.beforeMethod(),org.eclipse.jgit.util.FileUtilsTest.testCreateSymlink(),org.eclipse.jgit.pgm.ConfigTest.testListConfig(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.setUp(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.symlinks.SymlinksTest.beforeMethod(),org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.beforeMethod(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.util.FileUtilsTest.testCreateSymlinkOverrideExisting(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree()	true	1864
302.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult)	302.json,286.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run()	true	3176
1810.json	org.eclipse.jgit.transport.TransportLocal.createReceivePack(org.eclipse.jgit.lib.Repository)	null,1813.json,null,null,null,null,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.transport.TransportLocal.openPush(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.transport.TransportLocal.Anonymous-7c26e0a4-c89d-4f41-b008-34d73506ec27.create(java.lang.Void, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-3284e204-865e-4c07-b757-5c0cb202cf48.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-ede6ccfa-bcf5-4cc2-bd1e-a0589cf0fb28.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	2977
8828.json	org.eclipse.jgit.lib.BranchConfig.getRemoteTrackingBranch()	null,null,null,null	org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch(),org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase(),org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec(),org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping()	true	2336
2826.json	org.eclipse.jgit.internal.ketch.KetchSystem.createLeader(org.eclipse.jgit.lib.Repository)	2756.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.startLeader(java.lang.String, org.eclipse.jgit.lib.Repository)	true	872
7765.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.copyUntrackedFolders(java.lang.String)	7764.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	2403
446.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.CharArrayType)	444.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...)	true	2768
9881.json	org.eclipse.jgit.lfs.LfsPrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>)	noCall	noCall	true	102
2237.json	org.eclipse.jgit.transport.TransportHttp.updateSslVerifyUser(boolean)	2234.json	org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	260
89.json	org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig)	87.json	org.eclipse.jgit.pgm.Config.list()	true	2209
8134.json	org.eclipse.jgit.util.StringUtils.compareWithCase(java.lang.String, java.lang.String)	8816.json	org.eclipse.jgit.lib.ConfigSnapshot.compare2(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	2266
5287.json	org.eclipse.jgit.attributes.AttributesNode.getRules()	7550.json,7552.json,5319.json,4236.json,7847.json,4181.json,6065.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryAttributesNode(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.CanonicalTreeParser.loadAttributes(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(org.eclipse.jgit.attributes.AttributesNode, java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryAttributesNode.load(),org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load(),org.eclipse.jgit.dircache.DirCacheIterator.LazyLoadingAttributesNode.load(org.eclipse.jgit.lib.ObjectReader)	true	1249
1086.json	org.eclipse.jgit.errors.MissingBundlePrerequisiteException.format(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>)	noCall	noCall	true	3176
5425.json	org.eclipse.jgit.revwalk.RevCommitList.fillTo(org.eclipse.jgit.revwalk.RevCommit, int)	null,null,null	org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit(),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit()	true	2211
5097.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	null,1536.json,null,2308.json,3374.json,1518.json,3373.json,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean),org.eclipse.jgit.transport.BundleWriter.writeBundle(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack()	true	2490
9076.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig()	9078.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.guessWorkTreeOrFail()	true	2907
1489.json	org.eclipse.jgit.transport.HttpConfig.getFollowRedirects()	2229.json,2269.json,null	org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest(),org.eclipse.jgit.transport.HttpConfigTest.testDefault()	true	273
1036.json	org.eclipse.jgit.merge.Merger.getRepository()	null,null	org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes)	true	3176
3777.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.getNewPacks()	3771.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compact(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
4718.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.writeIdx()	4698.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
2300.json	org.eclipse.jgit.transport.TransportProtocol.open(org.eclipse.jgit.transport.URIish)	1822.json,1994.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-6c9352ed-88ab-442d-b26b-caf914bc32ab.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.transport.URIish)	true	2187
8792.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.contains(org.eclipse.jgit.lib.AnyObjectId)	null,null,2619.json,null,null,null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects()	true	3012
1680.json	org.eclipse.jgit.transport.AmazonS3.remove(java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	1695.json	org.eclipse.jgit.transport.AmazonS3.authorize(java.net.HttpURLConnection)	true	3176
4401.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newWhole(org.eclipse.jgit.internal.storage.file.PackFile, long, long)	4146.json	org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2906
2059.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.writeFile(java.lang.String, byte[])	noCall	noCall	true	3176
6198.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapContiguousCommitCount(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	963
6796.json	org.eclipse.jgit.events.ListenerList.addWorkingTreeModifiedListener(org.eclipse.jgit.events.WorkingTreeModifiedListener)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs()	true	299
2848.json	org.eclipse.jgit.internal.ketch.ProposalRound.start()	noCall	noCall	true	872
1296.json	org.eclipse.jgit.transport.PushResult.getRemoteUpdate(java.lang.String)	null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushNonAtomic(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions(),org.eclipse.jgit.transport.PushProcessTest.testPushResult(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease()	true	3176
7188.json	org.eclipse.jgit.api.RenameBranchCommand.call()	null,null,null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues()	true	2800
974.json	org.eclipse.jgit.merge.ResolveMerger.mergeImpl()	noCall	noCall	true	2841
8582.json	org.eclipse.jgit.util.BlockList.newBlock()	8574.json	org.eclipse.jgit.util.BlockList.add(T)	true	2651
8637.json	org.eclipse.jgit.util.time.ProposedTimestamp.timestamp()	noCall	noCall	true	565
9535.json	org.eclipse.jgit.lib.RefUpdate.setForceRefLog(boolean)	null,9333.json,null,null	org.eclipse.jgit.api.StashCreateCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.StashListCommandTest.newStashUpdate(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.updateStashRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String)	true	253
3197.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.valueType()	noCall	noCall	true	297
2076.json	org.eclipse.jgit.transport.BaseConnection.setMessageWriter(java.io.Writer)	2075.json	org.eclipse.jgit.transport.BaseConnection.getMessageWriter()	true	3011
106.json	org.eclipse.jgit.pgm.CommandCatalog.catalogs()	noCall	noCall	true	3176
10303.json	org.eclipse.jgit.http.server.IsLocalFilter.isLocal(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	3070
3104.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.Anonymous-a6bbdda4-1d3c-42dd-a172-c0e57635f0dc.getComment()	noCall	noCall	true	297
7048.json	org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	null,7047.json,null	org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.Git.open(java.io.File),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention()	true	2626
8288.json	org.eclipse.jgit.util.HttpSupport.DummyX509TrustManager.checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)	noCall	noCall	true	2692
8735.json	org.eclipse.jgit.patch.BinaryHunk.getType()	null,null	org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta()	true	3176
7938.json	org.eclipse.jgit.util.RawParseUtils.prev(byte[], int, char)	7939.json	org.eclipse.jgit.util.RawParseUtils.prevLF(byte[], int)	true	3176
6208.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapInactiveBranchAgeInDays(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	963
4888.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.shortInput(long)	4883.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream)	true	2907
2293.json	org.eclipse.jgit.transport.TransportProtocol.getSchemes()	null,2298.json	org.eclipse.jgit.transport.TransportTest.testSpi(),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	2645
6422.json	org.eclipse.jgit.blame.BlameResult.computeAll()	6425.json,6444.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.blame.BlameGenerator.computeBlameResult()	true	2567
8234.json	org.eclipse.jgit.util.io.IsolatedOutputStream.tryCleanClose()	8233.json	org.eclipse.jgit.util.io.IsolatedOutputStream.close()	true	573
7009.json	org.eclipse.jgit.api.ResetCommand.parseCommit(org.eclipse.jgit.lib.ObjectId)	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	1731
285.json	org.eclipse.jgit.pgm.Fetch.noRecurseSubmodules(boolean)	noCall	noCall	true	364
5295.json	org.eclipse.jgit.attributes.Attributes.isSet(java.lang.String)	8148.json,8150.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	925
9002.json	org.eclipse.jgit.lib.Repository.readMergeCommitMsg()	null,null,null,null,null,null,null,null,null,null,null,null,6983.json	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk)	true	2943
4933.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand)	4932.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	880
9819.json	org.eclipse.jgit.lib.ObjectReader.Filter.open(org.eclipse.jgit.lib.AnyObjectId, int)	null	org.eclipse.jgit.merge.MergerTest.BigReadForbiddenReader.open(org.eclipse.jgit.lib.AnyObjectId, int)	true	776
1122.json	org.eclipse.jgit.hooks.PostCommitHook.call()	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	635
7092.json	org.eclipse.jgit.api.Git.stashList()	null,null,null,null	org.eclipse.jgit.api.StashListCommandTest.noStashRef(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog()	true	2332
4629.json	org.eclipse.jgit.internal.storage.file.LockFile.saveStatInformation()	4633.json,4627.json	org.eclipse.jgit.internal.storage.file.LockFile.createCommitSnapshot(),org.eclipse.jgit.internal.storage.file.LockFile.commit()	true	3176
3560.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setStreamPackBufferSize(int)	3561.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config)	true	1144
5068.json	org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-8ab99793-bf45-427a-9205-9311d5e68f9b.remove()	noCall	noCall	true	2399
3579.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.removed(java.lang.String)	3348.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	true	2410
4834.json	org.eclipse.jgit.internal.storage.file.GC.getStatistics()	null,null,null,null,null,null,null,null,null,null,null,null,null,7182.json,null,null,null,null,null,7183.json,null,null	org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansWithMerges(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs(boolean),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndGetStats(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack(boolean),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapsForExcessiveBranches(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.api.GarbageCollectCommand.call(),org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne(boolean),org.eclipse.jgit.api.GarbageCollectCommand.getStatistics(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack()	true	2142
6926.json	org.eclipse.jgit.api.PushCommand.setPushTags()	122.json	org.eclipse.jgit.pgm.Push.run()	true	2644
6981.json	org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	2647
7636.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode()	7019.json,null,6034.json,1158.json,6753.json,7244.json,7831.json,null,null,null,null,6024.json,7040.json,7832.json,6981.json,7018.json,9842.json,5252.json,6032.json,7243.json,null,977.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.open(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.notes.NoteParser.storeNonNote(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-792c270f-880a-45ac-9ad3-821aa66de5df.getType(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testEntryFileMode(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.merge.ResolveMerger.add(byte[], org.eclipse.jgit.treewalk.CanonicalTreeParser, int, long, long)	true	3176
4084.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig)	4273.json	org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig)	true	3176
4987.json	org.eclipse.jgit.internal.storage.pack.IntSet.add(int)	null,5252.json	org.eclipse.jgit.internal.storage.pack.IntSetTest.testAdd(),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
5253.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.modeForType(int)	5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
2282.json	org.eclipse.jgit.transport.SshTransport.setSshSessionFactory(org.eclipse.jgit.transport.SshSessionFactory)	1876.json	org.eclipse.jgit.transport.TransportGitSsh.initSshSessionFactory()	true	3176
2604.json	org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	false	3176
1710.json	org.eclipse.jgit.transport.URIish.getHost()	null,1806.json,1709.json,null,null,1883.json,null,null,null,1728.json,null,null,null,null,2151.json,null,1641.json,2298.json,1724.json,null,null,null,null,null,2827.json,null,null,2236.json,1495.json,null,null,1725.json,1871.json,null,null,null,null,null,null,2152.json,null,10153.json,null,null,null,null,null,null,1731.json,null,null,1820.json	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.TransportLocal.Anonymous-a49d8848-e668-442f-9e98-b53c1e9118f2.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.isRemote(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.exec(java.lang.String, int),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.TransportGitAnon.openConnection(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIish.hashCode(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.internal.ketch.KetchSystem.createReplicas(org.eclipse.jgit.internal.ketch.KetchLeader, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.TransportHttp.updateSslVerify(org.eclipse.jgit.lib.StoredConfig, boolean),org.eclipse.jgit.transport.HttpConfig.findMatch(java.util.Set<java.lang.String>, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIish.equals(java.lang.Object),org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ea91b67b-c28a-4bdb-ad18-6ecf605c4ee3.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode(),org.eclipse.jgit.transport.URIishTest.testStringConstructor(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.TransportGitAnon.service(java.lang.String, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.JschConfigSessionFactoryTest.createSession(java.lang.String),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIish.getHumanishName(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
1555.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	2520.json,2061.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readAdvertisedRefs(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readAdvertisedRefs()	true	3176
9830.json	org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevTree)	noCall	noCall	true	2775
5888.json	org.eclipse.jgit.dircache.DirCache.formatExtensionName(byte[])	5887.json,5886.json	org.eclipse.jgit.dircache.DirCache.skipOptionalExtension(java.io.InputStream, java.security.MessageDigest, byte[], long),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream)	true	3049
5313.json	org.eclipse.jgit.attributes.FilterCommandRegistry.getRegisteredFilterCommands()	noCall	noCall	true	628
6902.json	org.eclipse.jgit.api.CloneCommand.setCloneSubmodules(boolean)	230.json,null,null,null	org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules()	true	2350
5335.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.canUnpop()	5441.json,5679.json	org.eclipse.jgit.revwalk.LIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
9452.json	org.eclipse.jgit.lib.CommitBuilder.setEncoding(java.nio.charset.Charset)	null	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii()	true	3176
4639.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.binarySearch(long)	4638.json,4636.json,4637.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.findPostion(long),org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObject(long),org.eclipse.jgit.internal.storage.file.PackReverseIndex.findNextOffset(long, long)	true	1805
4923.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.unlock()	noCall	noCall	true	880
7438.json	org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit)	7405.json,7428.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	2756
1267.json	org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, boolean, boolean)	1265.json	org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config)	true	3176
1284.json	org.eclipse.jgit.transport.RemoteConfig.getPushRefSpecs()	null,null,null,null,1265.json,null,null,2022.json,6911.json	org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RemoteConfigTest.testUnknown(),org.eclipse.jgit.transport.Transport.applyConfig(org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.api.PushCommand.call()	true	3176
140.json	org.eclipse.jgit.pgm.debug.WriteReftable.max(java.util.List<org.eclipse.jgit.pgm.debug.WriteReftable.LogEntry>)	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
5161.json	org.eclipse.jgit.internal.storage.pack.PackExt.getBit()	null,4729.json,5162.json,3615.json,3616.json,4761.json,4153.json	org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openPack(java.io.File),org.eclipse.jgit.internal.storage.pack.PackExt.toString(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.addFileExt(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.hasFileExt(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList),org.eclipse.jgit.internal.storage.file.PackFile.hasExt(org.eclipse.jgit.internal.storage.pack.PackExt)	true	1927
9979.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.toObjectId()	null	org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testToObjectId()	true	856
6643.json	org.eclipse.jgit.diff.SimilarityIndex.countOf(long)	6637.json,6634.json,6631.json	org.eclipse.jgit.diff.SimilarityIndex.add(int, int),org.eclipse.jgit.diff.SimilarityIndex.count(int),org.eclipse.jgit.diff.SimilarityIndex.common(long[], int, long[], int)	true	2899
1451.json	org.eclipse.jgit.transport.UploadPack.getPeerUserAgent()	noCall	noCall	true	1137
1090.json	org.eclipse.jgit.errors.LockFailedException.getFile()	null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPackedRefsLockFailure()	true	2365
10045.json	org.eclipse.jgit.lfs.server.s3.S3Config.getStorageClass()	10055.json,10051.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	true	843
7537.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	6569.json,7282.json,null,247.json,null,7614.json,7535.json,7585.json,7539.json,7895.json,null,7586.json	org.eclipse.jgit.diff.DiffFormatter.makeIteratorFromTreeOrNull(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.api.DiffCommandTest.getTreeIterator(java.lang.String),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.treewalk.TreeWalk.parserFor(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParser.resetRoot(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.treewalk.CanonicalTreeParser.createSubtreeIterator0(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.submodule.SubmoduleWalk.setRootTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.lib.AnyObjectId...)	false	3176
8053.json	org.eclipse.jgit.util.FS_POSIX.isCaseSensitive()	noCall	noCall	true	2134
25.json	org.eclipse.jgit.awtui.AwtAuthenticator.promptPasswordAuthentication()	noCall	noCall	true	3176
10266.json	org.eclipse.jgit.http.server.glue.NoParameterFilterConfig.getInitParameter(java.lang.String)	noCall	noCall	true	2438
9024.json	org.eclipse.jgit.lib.EmptyProgressMonitor.start(int)	noCall	noCall	true	2093
1587.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getURL()	noCall	noCall	true	1572
9922.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.isComplete()	null,null,null,null,null,null,null,null,null,null,null,null,9923.json,null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test9_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test5_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test15_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test6_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test17_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test7_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test8_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test16_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test33_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test1_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.toLongObjectId(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test4_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test3_FromString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.test2_FromString()	true	856
6217.json	org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.compare(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	noCall	noCall	true	3176
5503.json	org.eclipse.jgit.revwalk.ObjectWalk.addObject(org.eclipse.jgit.revwalk.RevObject)	5481.json,5482.json	org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.ObjectWalk.markUninteresting(org.eclipse.jgit.revwalk.RevObject)	true	3176
2232.json	org.eclipse.jgit.transport.TransportHttp.CredentialItems.items()	2234.json	org.eclipse.jgit.transport.TransportHttp.trustInsecureSslConnection(java.lang.Throwable)	true	270
4155.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeShort(int)	noCall	noCall	true	1922
9832.json	org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId)	null,9829.json,null,null,null,null,null,null,null,null,null,null,null,null,9831.json,null,null,9830.json,null	org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_CreateBadTree(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevBlob),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified()	true	2775
1531.json	org.eclipse.jgit.transport.HMACSHA1NonceGenerator.toHex(byte[])	1529.json	org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, long)	true	1189
5151.json	org.eclipse.jgit.internal.storage.pack.PackWriter.reuseDeltaFor(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2657
9053.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addAlternateObjectDirectories(java.io.File[])	noCall	noCall	true	2907
9843.json	org.eclipse.jgit.lfs.LfsBlobLoader.getType()	9846.json	org.eclipse.jgit.lfs.LfsBlobLoader.openStream()	true	98
3674.json	org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.size()	noCall	noCall	true	286
2737.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getMaxRetry(java.util.concurrent.TimeUnit)	noCall	noCall	true	872
9558.json	org.eclipse.jgit.lib.IndexDiff.StageState.hasOurs()	null	org.eclipse.jgit.lib.IndexDiffTest.testStageState()	true	1878
7105.json	org.eclipse.jgit.api.Git.toString()	noCall	noCall	true	1393
7667.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getName()	noCall	noCall	true	3176
184.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.Line.equals(java.lang.Object)	noCall	noCall	true	2816
7519.json	org.eclipse.jgit.api.LsRemoteCommand.call()	null,75.json,null,null,null	org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.pgm.LsRemote.run(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads()	true	2579
8335.json	org.eclipse.jgit.util.sha1.SHA1.compress(byte[], int)	8344.json,8332.json,8334.json	org.eclipse.jgit.util.sha1.SHA1.finish(),org.eclipse.jgit.util.sha1.SHA1.update(byte),org.eclipse.jgit.util.sha1.SHA1.update(byte[], int, int)	true	468
7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,7400.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.api.RebaseCommand.autoStash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2293
7193.json	org.eclipse.jgit.api.RmCommand.call()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.RmCommandTest.testRemove(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashCreateCommandTest.indexDelete(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.pgm.Rm.run(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoOverWriteUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_3(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2756
345.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableDateOrder(boolean)	noCall	noCall	true	3176
9370.json	org.eclipse.jgit.lib.ObjectChecker.checkCommit(org.eclipse.jgit.lib.AnyObjectId, byte[])	null,9366.json,9369.json	org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.lib.ObjectChecker.check(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.lib.ObjectChecker.checkCommit(byte[])	true	3176
5472.json	org.eclipse.jgit.revwalk.AbstractRevQueue.AlwaysEmptyQueue.next()	noCall	noCall	true	3176
3226.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.add(org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry)	3228.json,3213.json,3227.json,3212.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.skipShadowed(java.lang.String, long),org.eclipse.jgit.internal.storage.reftable.MergedReftable.seekLog(java.lang.String, long),org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.next(),org.eclipse.jgit.internal.storage.reftable.MergedReftable.allLogs()	true	297
4897.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.initNamespace(java.lang.String)	noCall	noCall	true	880
9088.json	org.eclipse.jgit.lib.SymbolicRef.getTarget()	9087.json,null,null	org.eclipse.jgit.lib.SymbolicRef.getLeaf(),org.eclipse.jgit.lib.SymbolicRefTest.testConstructor(),org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()	true	3059
4774.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateRepository.close()	noCall	noCall	true	3176
1546.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteFile(java.lang.String)	1549.json,2308.json,2309.json,1550.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRef(java.lang.String),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.WalkPushConnection.safeDelete(java.lang.String),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.deleteRefLog(java.lang.String)	true	3176
9274.json	org.eclipse.jgit.lib.BatchingProgressMonitor.beginTask(java.lang.String, int)	157.json,158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	3176
6027.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkoutGitlink(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry)	6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	true	125
7904.json	org.eclipse.jgit.submodule.SubmoduleWalk.reset()	noCall	noCall	true	2355
3781.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.toInclude(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.DfsReader)	null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.addObjectsToPack(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	1881
5047.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDelta(long, byte[], int)	5045.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long)	true	1887
9575.json	org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int)	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	1878
96.json	org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status)	93.json	org.eclipse.jgit.pgm.Status.printStatus(org.eclipse.jgit.api.Status)	true	1648
6858.json	org.eclipse.jgit.api.FetchCommand.isForceUpdate()	6837.json	org.eclipse.jgit.api.FetchCommand.applyOptions(java.util.List<org.eclipse.jgit.transport.RefSpec>)	true	90
2832.json	org.eclipse.jgit.internal.ketch.ReplicaSnapshot.getReplica()	2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	true	872
4474.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.findLevelOne(long)	4477.json,4476.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.getOffset(long),org.eclipse.jgit.internal.storage.file.PackIndexV1.getObjectId(long)	true	1808
1922.json	org.eclipse.jgit.transport.Daemon.getTimeout()	1648.json,null,null	org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket),org.eclipse.jgit.transport.Daemon.Anonymous-9a88878e-0733-4707-968c-06a0eae94c5c.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.Daemon.Anonymous-5c6dde27-6f03-413e-abe5-3ff82e0f92a7.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository)	true	3176
6588.json	org.eclipse.jgit.diff.DiffFormatter.isEndOfLineMissing(org.eclipse.jgit.diff.RawText, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	2920
5531.json	org.eclipse.jgit.revwalk.RevCommit.getType()	null,5559.json,null	org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.revwalk.RevCommit.toString(),org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes()	true	3176
305.json	org.eclipse.jgit.pgm.AbstractFetchCommand.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId)	304.json	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate)	true	2848
6213.json	org.eclipse.jgit.revplot.PlotWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean)	130.json	org.eclipse.jgit.pgm.Glog.createWalk()	true	3176
7794.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.walksIgnoredDirectories()	null	org.eclipse.jgit.treewalk.FileTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	true	20
129.json	org.eclipse.jgit.pgm.Glog.show(org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
2598.json	org.eclipse.jgit.transport.BaseReceivePack.hasCommands()	2644.json,2606.json	org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	2218
3381.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.estimateGcPackSize(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource, org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource...)	3372.json,3373.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor)	true	499
6606.json	org.eclipse.jgit.diff.DiffFormatter.end(org.eclipse.jgit.diff.Edit, int, int)	6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
8644.json	org.eclipse.jgit.patch.FileHeader.getEndOffset()	null,null,null,6585.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
1608.json	org.eclipse.jgit.transport.http.JDKHttpConnection.connect()	noCall	noCall	true	1572
7947.json	org.eclipse.jgit.util.RawParseUtils.encoding(byte[], int)	7948.json	org.eclipse.jgit.util.RawParseUtils.parseEncodingName(byte[])	true	3176
6300.json	org.eclipse.jgit.gitrepo.RepoCommand.setTargetBranch(java.lang.String)	null	org.eclipse.jgit.gitrepo.RepoCommandTest.testTargetBranch()	true	1493
4442.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId)	noCall	noCall	true	2848
966.json	org.eclipse.jgit.merge.StrategyOneSided.OneSide.getBaseCommitId()	noCall	noCall	true	1649
4972.json	org.eclipse.jgit.internal.storage.reftree.Scanner.curElementHasPeelSuffix(org.eclipse.jgit.treewalk.AbstractTreeIterator)	4968.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	880
142.json	org.eclipse.jgit.pgm.debug.WriteReftable.LogEntry.compare(org.eclipse.jgit.pgm.debug.WriteReftable.LogEntry, org.eclipse.jgit.pgm.debug.WriteReftable.LogEntry)	noCall	noCall	true	297
8643.json	org.eclipse.jgit.patch.FileHeader.getStartOffset()	null,null,null,6585.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
8712.json	org.eclipse.jgit.patch.CombinedFileHeader.getOldMode(int)	null,null,8711.json,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.CombinedFileHeader.getOldMode(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
932.json	org.eclipse.jgit.merge.MergeStrategy.get()	noCall	noCall	true	3176
1523.json	org.eclipse.jgit.transport.BasePackPushConnection.CheckingSideBandOutputStream.write(byte[], int, int)	noCall	noCall	true	705
3987.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(java.io.File, int, org.eclipse.jgit.internal.storage.file.LockFile)	null,3986.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectory.delete(java.io.File, int)	true	730
1611.json	org.eclipse.jgit.transport.http.JDKHttpConnection.configure(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom)	noCall	noCall	true	1572
3372.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	2410
7228.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.call()	null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.repositoryWithNoSubmodules(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.runDeinit(org.eclipse.jgit.api.SubmoduleDeinitCommand)	true	164
7584.json	org.eclipse.jgit.treewalk.TreeWalk.reset()	271.json,110.json,null,null,6570.json,7423.json,null,6758.json,null,7193.json,7904.json	org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testResetDoesNotAffectPostOrder(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.reset()	true	3176
2196.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.uri(java.net.URL)	null	org.eclipse.jgit.transport.HttpAuthMethod.Digest.configureRequest(org.eclipse.jgit.transport.http.HttpConnection)	true	2735
7057.json	org.eclipse.jgit.api.Git.merge()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,278.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.pgm.StatusTest.mergeTestBranchInMaster(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.revplot.AbstractPlotRendererTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.DescribeCommandTest.merge(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithChangeId(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting()	true	2939
2296.json	org.eclipse.jgit.transport.TransportProtocol.getDefaultPort()	noCall	noCall	true	2645
6160.json	org.eclipse.jgit.storage.pack.PackConfig.isPrunePreserved()	null	org.eclipse.jgit.internal.storage.file.GC.prunePreserved()	true	506
6779.json	org.eclipse.jgit.diff.LowLevelDiffAlgorithm.diffNonCommon(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S)	noCall	noCall	true	2800
3653.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndDelta()	noCall	noCall	true	2410
7214.json	org.eclipse.jgit.api.StashDropCommand.updateRef(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.ObjectId)	7215.json	org.eclipse.jgit.api.StashDropCommand.call()	true	2272
7551.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader)	7550.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryAttributesNode(org.eclipse.jgit.lib.ObjectReader)	true	923
3086.json	org.eclipse.jgit.internal.storage.reftable.BlockSizeTooSmallException.getMinimumBlockSize()	null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.nameTooLongDoesNotWrite()	true	297
8834.json	org.eclipse.jgit.lib.BranchConfig.findRemoteTrackingBranch(java.lang.String, java.lang.String)	8827.json,8828.json	org.eclipse.jgit.lib.BranchConfig.getTrackingBranch(),org.eclipse.jgit.lib.BranchConfig.getRemoteTrackingBranch()	true	2123
8283.json	org.eclipse.jgit.util.HttpSupport.response(java.net.HttpURLConnection)	1699.json,1686.json,1691.json,1687.json,1690.json,1683.json	org.eclipse.jgit.transport.AmazonS3.ListParser.list(),org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.error(java.lang.String, java.lang.String, java.net.HttpURLConnection),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	true	3176
6999.json	org.eclipse.jgit.api.CommitCommand.setNoVerify(boolean)	7195.json,7402.json,7414.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine)	true	1223
9622.json	org.eclipse.jgit.lib.AnyObjectId.name()	null,null,7402.json,null,null,null,154.json,null,2621.json,null,2291.json,1366.json,null,305.json,null,null,null,7440.json,null,null,1906.json,null,null,null,1359.json,null,null,null,null,null,null,382.json,1908.json,120.json,2413.json,null,null,null,null,null,null,null,null,null,null,null,null,1182.json,4186.json,null,null,null,8344.json,null,null,null,null,null,5559.json,null,1373.json,null,7428.json,null,null,null,2730.json,null,null,null,null,385.json,null,null,null,7436.json,null,null,null,null,null,null,1360.json,null,null,null,6812.json,null,null,null,null,null,null,null,4771.json,null,null,null,9623.json,null,null,null,2414.json,1515.json,null,null,null,null,null,213.json,null,null,null,null,null,null,null,null,null,null,null,null,null,7237.json,4719.json,8975.json,null,null,null,1362.json,1915.json,1377.json,1235.json,null,null,2136.json,7408.json,5490.json,77.json,4829.json,1967.json,null,null,null,9470.json,1361.json,null,null,null,null,null,null,4944.json,1086.json,null,null,null,4139.json,2411.json,null,null,430.json,null,9345.json,null,null,null,null,null,null,1368.json,1370.json,null,null,null,null,null,null,null,null,null,null,1859.json,null,null,125.json,269.json,null,null,null,null,null,null,null,2308.json,5439.json,82.json,null,null,null,1181.json,null,null,null,null,2862.json,null,9457.json,null,7439.json,9842.json,null,null,null,null,5245.json,null,1180.json,1371.json,9621.json,1367.json,null,132.json,5150.json,null,7434.json,null,null,null,null,1043.json,110.json,null,null,5504.json,null,null,7196.json,null,null,209.json,null,5561.json,250.json,null,301.json,null,2123.json,null,null,null,2484.json,144.json,null,null,null,null,null,null,1033.json,null,161.json,null,1072.json,1323.json,null,4658.json,6309.json,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob(),org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.internal.storage.file.AlternatesTest.assertCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.pgm.debug.ReadReftable.write(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_FetchHead(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.transport.FetchHeadRecord.write(java.io.Writer),org.eclipse.jgit.transport.WalkFetchConnection.downloadObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.UploadPackTest.testV2FetchRequestPolicyReachableCommit(),org.eclipse.jgit.pgm.AbstractFetchCommand.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.internal.storage.file.PackInserter.flush(),org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1(),org.eclipse.jgit.transport.BasePackFetchConnection.sendWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted(),org.eclipse.jgit.transport.WalkFetchConnection.queueWants(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.transport.BasePackFetchConnection.negotiate(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.pgm.Blame.abbreviate(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage(),org.eclipse.jgit.junit.TestRepository.reset(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize(),org.eclipse.jgit.revwalk.FooterLineTest.parse(java.lang.String),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream(),org.eclipse.jgit.transport.PushConnectionTest.invalidCommand(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.notes.NotesMergeConflictException.name(org.eclipse.jgit.notes.NonNoteEntry),org.eclipse.jgit.internal.storage.file.ReflogEntryImpl.toString(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack(),org.eclipse.jgit.util.sha1.SHA1.finish(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchRequestPolicyTip(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack4(boolean),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3(),org.eclipse.jgit.revwalk.RevCommit.toString(),org.eclipse.jgit.transport.UploadPack.processShallow(java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectId>, boolean),org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.junit.http.HttpTestCase.push(org.eclipse.jgit.junit.TestRepository, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents(),org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef(),org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(org.eclipse.jgit.transport.Transport, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchRequestPolicyAny(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobNoneFilter(),org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilter(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii(),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revwalk.RevTagParseTest.testOneType(int),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag(),org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.lib.SymbolicRefTest.testToString(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeLooseRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test025_computeSha1NoStore(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_2_36(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writeLooseRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithBitmap(),org.eclipse.jgit.lib.AnyObjectId.getName(),org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage(),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack(),org.eclipse.jgit.lib.ObjectIdTest.testSetByte(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph(),org.eclipse.jgit.transport.UploadPackTest.testFetchParentOfShallowCommit(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.writeBlob(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromSymref(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testSelectionOrderingWithChains(),org.eclipse.jgit.junit.http.HttpTestCase.loose(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite(),org.eclipse.jgit.util.sha1.SHA1Test.shatteredCollision(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.lib.Repository.getFullBranch(),org.eclipse.jgit.lib.ObjectIdRefTest.testToString(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2(),org.eclipse.jgit.transport.PacketLineInTest.testReadACK_NAK(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.BasePackFetchConnection.markCommon(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.transport.PacketLineIn.AckNackResult),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.notes.Note.toString(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision(),org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD(),org.eclipse.jgit.transport.PushCertificate.toStringBuilder(),org.eclipse.jgit.api.RebaseCommand.writeCurrentCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.pgm.LsRemote.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing(),org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38(),org.eclipse.jgit.lib.TagBuilder.toString(),org.eclipse.jgit.transport.WalkFetchConnection.processBlob(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize(),org.eclipse.jgit.lib.ObjectIdTest.test002_toString(),org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.transport.PushCertificateStoreTest.command(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.reftree.Command.append(java.lang.StringBuilder, org.eclipse.jgit.lib.Ref, java.lang.String),org.eclipse.jgit.errors.MissingBundlePrerequisiteException.format(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.transport.PackParser.verifySafeObject(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.merge.SimpleMergeTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.lib.ObjectId.toString(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.notes.NoteMapTest.testEditFlat(),org.eclipse.jgit.transport.UploadPack.negotiate(org.eclipse.jgit.storage.pack.PackStatistics.Accumulator),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.transport.WalkFetchConnection.downloadPackedObject(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream(),org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat(),org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname(),org.eclipse.jgit.lib.RepositoryResolveTest.testTree(),org.eclipse.jgit.transport.RefAdvertiserTest.advertiser(),org.eclipse.jgit.api.BranchCommandTest.testDelete(),org.eclipse.jgit.junit.TestRepository.nameFor(org.eclipse.jgit.internal.storage.file.ObjectDirectory, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree(),org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut(),org.eclipse.jgit.transport.ReceiveCommand.toString(),org.eclipse.jgit.lib.ObjectIdTest.test001_toString(),org.eclipse.jgit.lib.ObjectIdTest.test011_toString(),org.eclipse.jgit.pgm.Push.safeAbbreviate(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFullyFannedOut(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject(),org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes(),org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writePackedRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.notes.NoteMapMergerTest.setUp(),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.revwalk.RevObject.toString(),org.eclipse.jgit.pgm.ShowRef.show(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes(),org.eclipse.jgit.api.DescribeCommandTest.assertNameStartsWith(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.notes.NotesMergeConflictException.noteData(org.eclipse.jgit.notes.Note),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFlatTree(),org.eclipse.jgit.lib.RepositoryResolveTest.testDistance(),org.eclipse.jgit.notes.NoteMapTest.testIteratorFanoutTree2_38(),org.eclipse.jgit.internal.ketch.LogIndex.toString(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.lib.CommitBuilder.toString(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testIsId(),org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.pgm.StatusTest.detachHead(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack1(),org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.notes.NotesMergeConflictException.noteOn(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note),org.eclipse.jgit.transport.WalkFetchConnection.verifyAndInsertLooseObject(org.eclipse.jgit.lib.AnyObjectId, byte[]),org.eclipse.jgit.lib.AnyObjectId.toString(),org.eclipse.jgit.transport.WalkFetchConnection.alreadyHave(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent(),org.eclipse.jgit.pgm.RevParse.run(),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.UploadPackTest.testV2FetchRequestPolicyReachableCommitTip(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self(),org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1(),org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.api.DescribeCommandTest.branch(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.fullPackFileName(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit(),org.eclipse.jgit.pgm.debug.ShowPackDelta.run(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2(),org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.MergeBase.run(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii(),org.eclipse.jgit.transport.RemoteRefUpdate.toString(),org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting(),org.eclipse.jgit.transport.UploadPackTest.testFetchUnreachableBlobWithBitmap(),org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD(),org.eclipse.jgit.transport.WantNotValidException.msg(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.transport.UploadPackTest.testFetchReachableBlobWithoutBitmap(),org.eclipse.jgit.junit.TestRepositoryTest.resetFromDetachedHead(),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.transport.UploadPackTest.testFetchWithNonSupportingServer(),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.pgm.debug.VerifyReftable.id(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.errors.LargeObjectException.getObjectName(),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.name(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.transport.UploadPackTest.testV2FetchRequestPolicyAdvertised(),org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict(),org.eclipse.jgit.transport.UploadPack.verifyClientShallow(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed(),org.eclipse.jgit.merge.CherryPickTest.commit(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.lib.ObjectId[]),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup()	true	3176
8267.json	org.eclipse.jgit.util.io.TimeoutInputStream.endRead()	8262.json,8265.json,8264.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(),org.eclipse.jgit.util.io.TimeoutInputStream.skip(long),org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[], int, int)	true	3176
3976.json	org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	null,3942.json,null,3955.json,3969.json	org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.RefDirectory.exactRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.getRef(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.newUpdate(java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, int, java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	true	3059
6104.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitMMAP(boolean)	null,6111.json	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
3029.json	org.eclipse.jgit.internal.storage.reftable.RefCursor.wasDeleted()	3058.json,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneIdRef(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneDeletedRef(),org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedRefCursor.next()	true	297
6564.json	org.eclipse.jgit.diff.DiffFormatter.getPathFilter()	noCall	noCall	true	2838
8438.json	org.eclipse.jgit.util.FS.createSymLink(java.io.File, java.lang.String)	null,null,4849.json,8401.json,null,null,null,6045.json,null,null	org.eclipse.jgit.util.FileUtilsTest.testCreateSymlink(),org.eclipse.jgit.util.FileUtilsTest.testCreateSymlinkOverrideExisting(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.util.FS_Win32.detectSymlinkSupport(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget()	true	1864
1152.json	org.eclipse.jgit.notes.NoteParser.parse()	1151.json	org.eclipse.jgit.notes.NoteParser.parse(org.eclipse.jgit.lib.AbbreviatedObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
9226.json	org.eclipse.jgit.lib.FileMode.Anonymous-674cc8cc-e10e-4760-888f-38f1d9d0c17d.equals(int)	noCall	noCall	true	3176
8487.json	org.eclipse.jgit.util.FileUtils.createTempDir(java.lang.String, java.lang.String, java.io.File)	null	org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String)	true	1493
8332.json	org.eclipse.jgit.util.sha1.SHA1.update(byte)	4007.json,null,2398.json,7837.json,null,3503.json,2410.json,null,4889.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.lib.ObjectInserter.idFor(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long),org.eclipse.jgit.lib.ObjectInserter.idFor(int, byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.util.sha1.SHA1Test.blob(byte[], org.eclipse.jgit.util.sha1.SHA1),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.SHA1OutputStream.write(int)	true	468
8672.json	org.eclipse.jgit.patch.Patch.addError(org.eclipse.jgit.patch.FormatError)	8685.json,8684.json	org.eclipse.jgit.patch.Patch.error(byte[], int, java.lang.String),org.eclipse.jgit.patch.Patch.warn(byte[], int, java.lang.String)	true	3176
3293.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortAndWriteRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>)	null,135.json,null,3068.json,3386.json,null,3259.json,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>, long),org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables()	true	297
1900.json	org.eclipse.jgit.transport.BasePackFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	1896.json,2265.json	org.eclipse.jgit.transport.BasePackFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream),org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	true	3176
1946.json	org.eclipse.jgit.transport.UserAgent.get()	2241.json,null,2604.json,2337.json	org.eclipse.jgit.transport.TransportHttp.httpOpen(java.lang.String, java.net.URL, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser),org.eclipse.jgit.transport.BasePackConnection.addUserAgentCapability(java.lang.StringBuilder)	true	1137
10070.json	org.eclipse.jgit.lfs.server.internal.LfsGson.fromJson(java.io.Reader, java.lang.Class<T>)	noCall	noCall	false	184
2311.json	org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate)	2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
1805.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-feb51a20-a75b-4251-b2ce-0b93ee1fbcb2.getSchemes()	noCall	noCall	true	2645
412.json	org.eclipse.jgit.pgm.TextBuiltin.getErrorWriter()	null,316.json	org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...),org.eclipse.jgit.pgm.opt.CmdLineParser.printToErrorWriter(java.lang.String)	true	885
7798.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idSubmodule(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	7796.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()	true	2410
1093.json	org.eclipse.jgit.errors.CorruptPackIndexException.getErrorType()	3452.json	org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError)	true	319
1991.json	org.eclipse.jgit.transport.Transport.doesNotExist(org.eclipse.jgit.transport.RemoteConfig)	1985.json,1983.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	true	3176
7868.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()	noCall	noCall	true	893
2868.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.done(org.eclipse.jgit.lib.Repository)	null,2721.json,null,2760.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.Anonymous-cf7dcb13-a265-4d33-bc49-d2ae661afcbd.run(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
3723.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.open(org.eclipse.jgit.lib.AnyObjectId, int)	3532.json,3849.json,3539.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream()	true	2410
2905.json	org.eclipse.jgit.internal.ketch.KetchLeader.getTerm()	2852.json	org.eclipse.jgit.internal.ketch.ProposalRound.message(org.eclipse.jgit.internal.ketch.Proposal)	true	872
2558.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowCreates()	2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	3176
8736.json	org.eclipse.jgit.patch.BinaryHunk.getSize()	null,null	org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta()	true	3176
2276.json	org.eclipse.jgit.transport.TransportHttp.Service.HttpExecuteStream.skip(long)	noCall	noCall	true	3070
5590.json	org.eclipse.jgit.revwalk.BlockObjQueue.BlockFreeList.newBlock()	null	org.eclipse.jgit.revwalk.BlockObjQueue.add(org.eclipse.jgit.revwalk.RevObject)	true	3176
978.json	org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry)	null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes)	true	2145
4925.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	880
441.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.install()	noCall	noCall	true	3141
5257.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit.isReuseWalker()	5150.json	org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor)	true	1922
1286.json	org.eclipse.jgit.transport.RemoteConfig.removePushRefSpec(org.eclipse.jgit.transport.RefSpec)	noCall	noCall	true	3176
176.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.requiresRepository()	noCall	noCall	true	2816
4836.json	org.eclipse.jgit.internal.storage.file.GC.setExpireAgeMillis(long)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansWithMerges(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapsForExcessiveBranches(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned()	true	2142
8814.json	org.eclipse.jgit.lib.ConfigSnapshot.sorted()	8809.json,8810.json	org.eclipse.jgit.lib.ConfigSnapshot.getNamesInternal(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.ConfigSnapshot.get(java.lang.String, java.lang.String, java.lang.String)	true	2266
1396.json	org.eclipse.jgit.transport.UploadPack.FirstLine.getLine()	2041.json	org.eclipse.jgit.transport.UploadPack.recvWants()	true	2285
984.json	org.eclipse.jgit.merge.ResolveMerger.isIndexDirty()	null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes)	true	2641
205.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.init()	203.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository)	true	2799
7311.json	org.eclipse.jgit.api.TagCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject)	null,null,null,null,null,null,null,null,null,363.json	org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.Tag.run()	true	2844
9121.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.open(boolean)	91.json,null,425.json,null	org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting(),org.eclipse.jgit.pgm.ReceivePack.run(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenNew()	true	3176
6549.json	org.eclipse.jgit.diff.DiffFormatter.setContext(int)	null,null,7282.json,null,240.json,262.json,null,371.json,null,null,null	org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10(),org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3(),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5(),org.eclipse.jgit.pgm.Diff.unified(int),org.eclipse.jgit.pgm.Show.unified(int),org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100(),org.eclipse.jgit.pgm.Log.unified(int),org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0(),org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails(),org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1()	true	3176
8032.json	org.eclipse.jgit.util.RefMap.SetIterator.toEntry(org.eclipse.jgit.lib.Ref)	8030.json	org.eclipse.jgit.util.RefMap.SetIterator.peek()	true	3060
8093.json	org.eclipse.jgit.util.TemporaryBuffer.doFlush()	10319.json,10424.json	org.eclipse.jgit.http.server.UploadPackServlet.Anonymous-e642b138-4a89-4fb1-ad8e-9c7bdcac97f2.flush(),org.eclipse.jgit.http.server.ReceivePackServlet.Anonymous-20e0c0b7-6626-43cf-a3ad-6ee50393bfc6.flush()	false	2909
7447.json	org.eclipse.jgit.api.RebaseCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	7266.json,7131.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.PullCommand.call()	true	1496
213.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph()	212.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run()	true	3176
8077.json	org.eclipse.jgit.util.ChangeIdUtil.trimRight(java.lang.String)	8075.json	org.eclipse.jgit.util.ChangeIdUtil.indexOfChangeId(java.lang.String, java.lang.String)	true	1935
5629.json	org.eclipse.jgit.revwalk.FollowFilter.getPath()	6575.json,6570.json,5657.json,6574.json	org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.diff.DiffFormatter.isAdd(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2899
8096.json	org.eclipse.jgit.util.TemporaryBuffer.inCoreLength()	8106.json,null	org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit(),org.eclipse.jgit.util.TemporaryBuffer.length()	true	3176
1938.json	org.eclipse.jgit.transport.Daemon.stopAndWait()	null,null	org.eclipse.jgit.transport.DaemonTest.testDaemonStop(),org.eclipse.jgit.transport.DaemonTest.testDaemonRestart()	true	279
3890.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getRepository()	3897.json,3905.json,null	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.commitPack(java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>, java.util.Collection<org.eclipse.jgit.internal.storage.dfs.DfsPackDescription>),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.newPack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackSource)	true	2410
2555.json	org.eclipse.jgit.transport.BaseReceivePack.isCheckReceivedObjects()	2617.json	org.eclipse.jgit.transport.BaseReceivePack.needCheckConnectivity()	true	3176
9404.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getBoolean(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, boolean)	noCall	noCall	true	288
4889.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.SHA1OutputStream.write(int)	noCall	noCall	true	468
6043.json	org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId)	6042.json	org.eclipse.jgit.dircache.DirCacheCheckout.isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)	true	2844
6175.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchMemoryLimit(long)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
9289.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.contains(org.eclipse.jgit.lib.AnyObjectId)	2938.json,3534.json,null,4046.json,null,3502.json,4444.json,4448.json,4047.json,null,null,4006.json,null	org.eclipse.jgit.internal.fsck.FsckPackParser.verifyIndex(org.eclipse.jgit.internal.storage.file.PackIndex),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.has(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testEmptyMap(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insert(int, byte[], int, int),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.LazyObjectIdSetFile.load(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, byte[], int, int),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects()	true	2645
8705.json	org.eclipse.jgit.patch.HunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[])	8647.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[])	true	3176
7237.json	org.eclipse.jgit.api.StashApplyCommand.call()	null,null,null,null,null,null,7401.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedAndTrackedChanges(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2293
4568.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate)	4565.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename()	true	3059
5299.json	org.eclipse.jgit.attributes.Attributes.getValue(java.lang.String)	5300.json,8148.json,8150.json	org.eclipse.jgit.attributes.Attributes.canBeContentMerged(),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkInStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	925
2140.json	org.eclipse.jgit.transport.PushCertificate.toString()	noCall	noCall	true	1067
8466.json	org.eclipse.jgit.util.FS.Attributes.getName()	7667.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getName()	true	1579
7577.json	org.eclipse.jgit.treewalk.TreeWalk.setRecursive(boolean)	7019.json,null,null,null,null,null,203.json,178.json,null,7018.json,null,null,2839.json,110.json,7477.json,null,7244.json,7896.json,null,null,null,null,6570.json,null,null,6428.json,null,5910.json,null,9570.json,6043.json,null,7040.json,7568.json,null,6041.json,null,7975.json,null,null,null,null,2807.json,7193.json,null,null,null,null,null,null,null,null,4829.json,6981.json,7423.json,385.json,7243.json,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommandTest.createTreeWalk(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(org.eclipse.jgit.revwalk.RevCommit, boolean, boolean),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.createTreeWalk(),org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.getMatchingPaths(java.lang.String, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>),org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(java.util.Set<java.lang.String>),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.getMatchingPaths(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.treewalk.filter.TreeFilter, boolean),org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
9312.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled()	4933.json,3259.json,9334.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled(org.eclipse.jgit.transport.ReceiveCommand)	true	2210
3383.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable()	3372.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor)	true	278
5055.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.partitionTasks()	5125.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	true	1880
7448.json	org.eclipse.jgit.api.RebaseCommand.setPreserveMerges(boolean)	null,null,7131.json	org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.PullCommand.call()	true	1426
9135.json	org.eclipse.jgit.lib.UserConfig.isCommitterNameImplicit()	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	2643
4129.json	org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], int, int, org.eclipse.jgit.internal.storage.file.WindowCursor)	4140.json,4124.json,4143.json,4145.json,4146.json	org.eclipse.jgit.internal.storage.file.PackFile.load(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.PackFile.getObjectType(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
6310.json	org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git)	6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1509
5921.json	org.eclipse.jgit.dircache.DirCacheTree.appendName(java.lang.StringBuilder)	5921.json,5918.json	org.eclipse.jgit.dircache.DirCacheTree.appendName(java.lang.StringBuilder),org.eclipse.jgit.dircache.DirCacheTree.getPathString()	true	3176
8622.json	org.eclipse.jgit.util.SystemReader.checkPath(java.lang.String)	8989.json	org.eclipse.jgit.lib.Repository.isValidRefName(java.lang.String)	true	1289
5766.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.clone()	noCall	noCall	true	3176
4922.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.tryLock(boolean)	noCall	noCall	true	880
6726.json	org.eclipse.jgit.diff.DiffEntry.getMode(org.eclipse.jgit.diff.DiffEntry.Side)	6598.json	org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)	true	2838
9237.json	org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorker()	null	org.eclipse.jgit.lib.ThreadSafeProgressMonitorTest.testUpdateOnBackgroundThreads()	true	2783
3147.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.setLogBlockSize(int)	null,135.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
5662.json	org.eclipse.jgit.revwalk.RevTag.parseHeaders(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	3176
8797.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.Anonymous-2dcba3f1-5293-45ce-b18e-80f61b440060.hasNext()	noCall	noCall	true	3176
1241.json	org.eclipse.jgit.transport.TrackingRefUpdate.getOldObjectId()	304.json,null,1966.json	org.eclipse.jgit.pgm.AbstractFetchCommand.longTypeOf(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.TrackingRefUpdate),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.FetchProcess.want(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.transport.RefSpec)	true	3176
9905.json	org.eclipse.jgit.lfs.BuiltinLFS.isEnabled(org.eclipse.jgit.lib.Repository)	9906.json,9901.json,9903.json	org.eclipse.jgit.lfs.BuiltinLFS.isEnabled(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.attributes.Attribute),org.eclipse.jgit.lfs.BuiltinLFS.applySmudgeFilter(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.attributes.Attribute),org.eclipse.jgit.lfs.BuiltinLFS.getPrePushHook(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	true	98
9470.json	org.eclipse.jgit.lib.TagBuilder.toString()	7299.json	org.eclipse.jgit.api.TagCommand.call()	true	3176
7177.json	org.eclipse.jgit.api.GarbageCollectCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	436.json	org.eclipse.jgit.pgm.Gc.run()	true	2029
203.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository)	202.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run()	true	2799
1161.json	org.eclipse.jgit.notes.LeafBucket.search(org.eclipse.jgit.lib.AnyObjectId)	1170.json,1162.json	org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.LeafBucket.getNote(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2767
10188.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getConnectionAttempts()	null,null,null,10153.json,null,null,null,null,null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts(),org.eclipse.jgit.transport.OpenSshConfigTest.testEqualsSign(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_invalidConnectionAttempts(),org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_badConnectionAttempts(),org.eclipse.jgit.transport.OpenSshConfigTest.testHostCaseInsensitive(),org.eclipse.jgit.transport.OpenSshConfigTest.testNoConfig(),org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttemptsDefault(),org.eclipse.jgit.transport.OpenSshConfigTest.testDefaultBlock(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookupsWithModification(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookups()	true	1451
4968.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	4967.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean)	true	880
5947.json	org.eclipse.jgit.dircache.DirCacheEditor.finish()	null,null,null,null,null,null,7040.json,null,null,null,null,null,null,null,4954.json,null,null,null,null	org.eclipse.jgit.junit.TestRepository.CommitBuilder.rm(java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.junit.TestRepository.CommitBuilder.edit(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage()	true	3176
8323.json	org.eclipse.jgit.util.Base64.decode(byte[], int, int)	8324.json	org.eclipse.jgit.util.Base64.decode(java.lang.String)	true	3176
121.json	org.eclipse.jgit.pgm.Push.nothin(boolean)	noCall	noCall	true	3176
6856.json	org.eclipse.jgit.api.FetchCommand.setTagOpt(org.eclipse.jgit.transport.TagOpt)	6835.json,286.json,null,null,null,null,null,6885.json,7131.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.PullCommand.call()	true	2691
4011.json	org.eclipse.jgit.internal.storage.file.PackInserter.beginPack()	4008.json	org.eclipse.jgit.internal.storage.file.PackInserter.beginObject(int, long)	true	221
3768.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()	null	org.eclipse.jgit.internal.storage.dfs.DfsPackCompacterTest.compact()	true	2410
4067.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], int, int)	4059.json,4072.json,4058.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.openStream(),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	2901
7280.json	org.eclipse.jgit.api.LogCommand.setRevFilter(org.eclipse.jgit.revwalk.filter.RevFilter)	null,null	org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits()	true	752
2050.json	org.eclipse.jgit.transport.TransportSftp.openPush()	noCall	noCall	true	3176
6680.json	org.eclipse.jgit.diff.RenameDetector.setRenameScore(int)	null,null	org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2(),org.eclipse.jgit.diff.RenameDetectorTest.testSetRenameScore_IllegalArgs()	true	2899
7931.json	org.eclipse.jgit.util.RawParseUtils.parseTimeZoneOffset(byte[], int)	7951.json,7952.json	org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int)	true	3176
7625.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7860.json,null,7610.json,7613.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.fastMin(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testPathCompare(),org.eclipse.jgit.treewalk.TreeWalk.min(),org.eclipse.jgit.treewalk.TreeWalk.exitSubtree()	true	3176
9015.json	org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(java.lang.String)	null,6983.json,7008.json,7385.json	org.eclipse.jgit.lib.SquashCommitMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2187
7059.json	org.eclipse.jgit.api.Git.branchCreate()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7471.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchDash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.branch(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.BranchCommandTest.testInvalidBranchHEAD(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory()	true	2800
9217.json	org.eclipse.jgit.lib.AbbreviatedObjectId.equals(java.lang.Object)	null,null,null,6600.json,null,6714.json,null,6602.json,null	org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_SameLength(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testNotEquals_DiffLength(),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit()	true	3176
538.json	org.eclipse.jgit.junit.http.RecordingLogger.warn(java.lang.String, java.lang.Object, java.lang.Object)	noCall	noCall	true	3070
8923.json	org.eclipse.jgit.lib.Config.readSubsectionName(org.eclipse.jgit.lib.Config.StringReader)	null	org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int)	true	173
3515.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.getCount()	3505.json,3508.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginObject(int, long)	true	2410
289.json	org.eclipse.jgit.pgm.CommandRef.getName()	294.json,162.json,105.json,108.json,393.json,null	org.eclipse.jgit.pgm.CommandRef.create(),org.eclipse.jgit.pgm.debug.ShowCommands.run(),org.eclipse.jgit.pgm.CommandCatalog.toSortedArray(java.util.Collection<org.eclipse.jgit.pgm.CommandRef>),org.eclipse.jgit.pgm.CommandCatalog.load(java.lang.String),org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.CommandCatalog.Anonymous-ff497ccc-f1b8-49ff-b82d-c98b0aa3c1ac.compare(org.eclipse.jgit.pgm.CommandRef, org.eclipse.jgit.pgm.CommandRef)	true	3176
4134.json	org.eclipse.jgit.internal.storage.file.PackFile.doOpen()	4132.json,4130.json	org.eclipse.jgit.internal.storage.file.PackFile.beginWindowCache(),org.eclipse.jgit.internal.storage.file.PackFile.beginCopyAsIs(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
4877.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream, boolean)	null,4876.json	org.eclipse.jgit.internal.storage.file.GC.loosen(org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.internal.storage.file.PackFile, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, long, java.io.InputStream)	true	2543
5653.json	org.eclipse.jgit.revwalk.RevFlagSet.size()	null,null,null	org.eclipse.jgit.revwalk.RevFlagSetTest.testEmpty(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne(),org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo()	true	3176
145.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.run()	noCall	noCall	true	297
6900.json	org.eclipse.jgit.api.CloneCommand.setCloneAllBranches(boolean)	null,null,null	org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads()	true	2622
7083.json	org.eclipse.jgit.api.Git.reflog()	null,null,386.json,null	org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog(),org.eclipse.jgit.pgm.Reflog.run(),org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog()	true	2545
6481.json	org.eclipse.jgit.diff.MyersDiff.Anonymous-de700401-b336-4ac5-af5d-ab928f817b3e.diffNonCommon(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.HashedSequenceComparator<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.Edit)	noCall	noCall	true	2819
9077.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.loadConfig()	9076.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getConfig()	true	2907
6445.json	org.eclipse.jgit.blame.BlameGenerator.next()	6425.json,null,null,null,6423.json,6422.json	org.eclipse.jgit.blame.BlameResult.computeRange(int, int),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.blame.BlameResult.computeNext(),org.eclipse.jgit.blame.BlameResult.computeAll()	true	2567
9010.json	org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.lib.ObjectId)	7195.json,7425.json,6979.json,7022.json,7436.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.ResetCommand.resetCherryPick(),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2622
1048.json	org.eclipse.jgit.merge.StrategyResolve.newMerger(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	2841
1553.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.openReader(java.lang.String)	1554.json,2063.json,2522.json,1555.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readAlternates(java.lang.String),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.readPackedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	true	3176
8081.json	org.eclipse.jgit.util.NB.decodeUInt16(byte[], int)	5995.json,null,6001.json,3121.json,3112.json	org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry, boolean),org.eclipse.jgit.util.NBTest.testDecodeUInt16(),org.eclipse.jgit.dircache.DirCacheEntry.getExtendedFlags(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readInt16(),org.eclipse.jgit.internal.storage.reftable.BlockReader.parseBlockStart(org.eclipse.jgit.internal.storage.io.BlockSource, long, int)	true	3176
2499.json	org.eclipse.jgit.transport.CredentialItem.YesNoType.setValue(boolean)	8.json,448.json	org.eclipse.jgit.awtui.AwtCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.YesNoType)	true	2768
8127.json	org.eclipse.jgit.util.ProcessResult.getStatus()	null,8128.json,null	org.eclipse.jgit.util.HookTest.testPostCommitRunHook(),org.eclipse.jgit.util.ProcessResult.isExecutedWithError(),org.eclipse.jgit.util.HookTest.testRunHook()	true	1223
6467.json	org.eclipse.jgit.blame.BlameGenerator.getSourceContents()	noCall	noCall	true	2567
7309.json	org.eclipse.jgit.api.TagCommand.getTagger()	noCall	noCall	true	2844
7727.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.shouldBeRecursive()	noCall	noCall	true	3176
5563.json	org.eclipse.jgit.revwalk.MergeBaseGenerator._next()	5560.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.init(org.eclipse.jgit.revwalk.AbstractRevQueue)	true	3176
9251.json	org.eclipse.jgit.lib.TextProgressMonitor.onEndTask(java.lang.String, int, int, int)	noCall	noCall	true	2658
8080.json	org.eclipse.jgit.util.NB.compareUInt64(long, long)	null,9924.json,9939.json,9925.json,9940.json,9926.json,9941.json	org.eclipse.jgit.util.NBTest.testCompareUInt64(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(byte[], int),org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(byte[], int),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(long[], int),org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(long[], int)	true	856
4396.json	org.eclipse.jgit.internal.storage.file.ByteArrayWindow.setInput(int, java.util.zip.Inflater)	noCall	noCall	true	3176
9756.json	org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean)	9021.json	org.eclipse.jgit.lib.Repository.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean)	true	1683
9852.json	org.eclipse.jgit.lfs.errors.CorruptMediaFile.getSize()	noCall	noCall	true	628
7810.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idOffset()	7831.json,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()	true	3176
6151.json	org.eclipse.jgit.storage.pack.PackStatistics.getTransferRate()	noCall	noCall	true	1094
9796.json	org.eclipse.jgit.lib.ObjectReader.open(java.lang.Iterable<T>, boolean)	9821.json,5384.json	org.eclipse.jgit.lib.ObjectReader.Filter.open(java.lang.Iterable<T>, boolean),org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean)	true	2851
4433.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.close()	noCall	noCall	true	2907
7258.json	org.eclipse.jgit.api.DescribeCommand.Candidate.reaches(org.eclipse.jgit.revwalk.RevCommit)	7260.json	org.eclipse.jgit.api.DescribeCommand.call()	true	1717
6857.json	org.eclipse.jgit.api.FetchCommand.setCallback(org.eclipse.jgit.api.FetchCommand.Callback)	286.json	org.eclipse.jgit.pgm.Fetch.run()	true	364
2056.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.open(java.lang.String)	noCall	noCall	true	3176
9588.json	org.eclipse.jgit.lib.IndexDiff.getPathsWithIndexMode(org.eclipse.jgit.lib.FileMode)	null	org.eclipse.jgit.lib.IndexDiffSubmoduleTest.assertDiff(org.eclipse.jgit.lib.IndexDiff, org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode, org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode...)	true	1311
6402.json	org.eclipse.jgit.blame.Candidate.BlobCandidate.add(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	2567
374.json	org.eclipse.jgit.pgm.Log.sourcePrefix(java.lang.String)	noCall	noCall	true	2838
10087.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	null,null,null	org.eclipse.jgit.lfs.server.fs.UploadTest.testCorruptUpload(),org.eclipse.jgit.lfs.server.fs.UploadTest.testLargeFileUpload(),org.eclipse.jgit.lfs.server.fs.UploadTest.testUpload()	false	856
5576.json	org.eclipse.jgit.revwalk.DelayRevQueue.outputType()	noCall	noCall	true	3176
6277.json	org.eclipse.jgit.gitrepo.RepoProject.addLinkFile(org.eclipse.jgit.gitrepo.RepoProject.LinkFile)	6316.json,6324.json	org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes),org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	true	418
4403.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(org.eclipse.jgit.internal.storage.file.PackFile, long, long, long)	4146.json	org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2906
7278.json	org.eclipse.jgit.api.LogCommand.setMaxCount(int)	null,null,null	org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount()	true	2360
2589.json	org.eclipse.jgit.transport.BaseReceivePack.getAllCommands()	noCall	noCall	true	3176
8898.json	org.eclipse.jgit.lib.Config.getState()	8888.json,8886.json,8890.json,8885.json,8889.json,8899.json,8891.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.getSections(),org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String, boolean),org.eclipse.jgit.lib.Config.getSubsections(java.lang.String),org.eclipse.jgit.lib.Config.getNames(java.lang.String, boolean),org.eclipse.jgit.lib.Config.getBaseState(),org.eclipse.jgit.lib.Config.get(org.eclipse.jgit.lib.Config.SectionParser<T>)	true	3176
10414.json	org.eclipse.jgit.http.server.ClientVersionUtil.grow(int[])	10413.json	org.eclipse.jgit.http.server.ClientVersionUtil.splitVersion(java.lang.String)	true	2174
3093.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.parseKey()	3063.json,3058.json,3118.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.BlockReader.scanToKey(byte[], int, int, int),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
3168.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.computeBlockBytes(int, int)	3164.json,3167.json,3170.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.BlockWriter.computeBlockBytes(int, boolean),org.eclipse.jgit.internal.storage.reftable.BlockWriter.blockSizeTooSmall(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
9419.json	org.eclipse.jgit.lib.ObjectIdRef.isSymbolic()	null,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()	true	3059
3033.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.minUpdateIndex()	null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.adjustUpdateIndexes(org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	4276.json	org.eclipse.jgit.internal.storage.file.WindowCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
5991.json	org.eclipse.jgit.dircache.DirCacheEntry.getPathString()	7831.json,null,6015.json,5910.json,null,null,null,5940.json,144.json,null,null,null,7040.json,null,null,null,null,null,null,5977.json,6034.json,7245.json,7244.json,null,null,6045.json,null,978.json,6005.json,null,null,null,null,9585.json,5993.json,5948.json,7482.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean),org.eclipse.jgit.dircache.DirCacheBuilder.bad(org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts(),org.eclipse.jgit.pgm.debug.ShowDirCache.run(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode),org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int, java.lang.String, boolean, boolean, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedOptionalExtension(),org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.indexState(org.eclipse.jgit.lib.Repository, int),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertEqual(org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.CGitIndexRecord, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPath(),org.eclipse.jgit.lib.IndexDiff.getAssumeUnchanged(),org.eclipse.jgit.dircache.DirCacheEntry.toString(),org.eclipse.jgit.dircache.DirCacheEditor.applyEdits(),org.eclipse.jgit.api.CheckoutCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	3176
4709.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onPackFooter(byte[])	noCall	noCall	true	2692
7599.json	org.eclipse.jgit.treewalk.TreeWalk.getNameString()	noCall	noCall	true	3176
1661.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumBytesRead()	noCall	noCall	true	629
1736.json	org.eclipse.jgit.transport.TransferConfig.ProtocolVersion.parse(java.lang.String)	noCall	noCall	true	51
6417.json	org.eclipse.jgit.blame.BlameResult.getSourceCommit(int)	null,112.json,null,119.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.Blame.date(int),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1(),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines()	true	2567
6978.json	org.eclipse.jgit.api.CherryPickResult.getFailingPaths()	7405.json,7404.json,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason)	true	2636
1526.json	org.eclipse.jgit.transport.FetchResult.add(org.eclipse.jgit.transport.FetchHeadRecord)	1958.json	org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult)	true	3176
6199.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapRecentCommitCount()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
10075.json	org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onAllDataRead()	noCall	noCall	true	856
6264.json	org.eclipse.jgit.gitrepo.RepoProject.getPath()	6326.json,6316.json,6309.json,null	org.eclipse.jgit.gitrepo.ManifestParser.isNestedReferencefile(org.eclipse.jgit.gitrepo.RepoProject.ReferenceFile),org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.gitrepo.ManifestParserTest.testManifestParser()	true	1111
9045.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setFS(org.eclipse.jgit.util.FS)	9074.json,1811.json,7025.json,7890.json,7048.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.setupWorkTree(),org.eclipse.jgit.transport.TransportLocal.openRepo(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleRepository(java.io.File, java.lang.String, org.eclipse.jgit.util.FS),org.eclipse.jgit.api.Git.open(java.io.File, org.eclipse.jgit.util.FS)	true	2907
9873.json	org.eclipse.jgit.lfs.internal.LfsText.get()	9889.json,9879.json,9933.json,null,9890.json,9867.json,9977.json,9892.json,9917.json,9895.json,9915.json	org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash(),org.eclipse.jgit.lfs.lib.Constants.newMessageDigest(),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.loadUserConfig(),org.eclipse.jgit.lfs.LfsPrePushHook.uploadContents(org.eclipse.jgit.transport.http.HttpConnection, java.util.Map<java.lang.String, org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsUrl(org.eclipse.jgit.lib.Repository, java.lang.String, java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(java.lang.String),org.eclipse.jgit.lfs.LfsPrePushHook.uploadFile(org.eclipse.jgit.lfs.Protocol.ObjectInfo, org.eclipse.jgit.lfs.Protocol.Action, java.nio.file.Path),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(java.lang.String),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(byte[], int, int)	false	856
1799.json	org.eclipse.jgit.transport.DaemonService.getCommandName()	1921.json	org.eclipse.jgit.transport.Daemon.getService(java.lang.String)	true	3176
6852.json	org.eclipse.jgit.api.FetchCommand.isDryRun()	noCall	noCall	true	2816
7499.json	org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format()	7500.json,7502.json	org.eclipse.jgit.api.NameRevCommand.NameRevCommit.toString(),org.eclipse.jgit.api.NameRevCommand.call()	true	1917
5829.json	org.eclipse.jgit.ignore.internal.Strings.escapedByBackslash(char)	5828.json,5837.json	org.eclipse.jgit.ignore.internal.Strings.isComplexWildcard(java.lang.String),org.eclipse.jgit.ignore.internal.Strings.deleteBackslash(java.lang.String)	true	988
8190.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.close()	noCall	noCall	true	2342
5371.json	org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.AnyObjectId)	null,null,7402.json,1041.json,203.json,7502.json,null,8969.json,9883.json,null,7440.json,null,null,null,null,2744.json,7477.json,7036.json,434.json,7274.json,null,6830.json,null,2851.json,6866.json,null,7412.json,null,null,7009.json,null,6891.json,7422.json,4928.json,null,null,null,2807.json,null,null,7219.json,null,2752.json,null,167.json,331.json,null,6440.json,5691.json,7230.json,7221.json,2743.json,7436.json,7399.json,8985.json,7441.json,7438.json,6442.json,null,6812.json,352.json,null,null,null,null,null,6969.json,379.json,null,null,null,7380.json,null,2850.json,6979.json,null,null,null,null,null,null,null,null,null,7471.json,null,null,null,7331.json,null,213.json,null,null,null,7247.json,7407.json,7401.json,7195.json,7237.json,6953.json,2901.json,1905.json,null,null,7266.json,null,null,1323.json,null,7299.json,null,null,null,null,6309.json,null,null,null,null,null,null,null,928.json,null,9627.json	org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.merge.Merger.merge(boolean, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.setUp(),org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk(),org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isReachable(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_nonmergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.setUp(),org.eclipse.jgit.internal.ketch.LagCheck.parseRemoteCommit(java.lang.String),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.api.StashCreateCommand.parseCommit(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.LogCommand.all(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster(),org.eclipse.jgit.api.ShowNoteCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.ListBranchCommand.filterRefs(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.setUp(),org.eclipse.jgit.api.ResetCommand.parseCommit(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CloneCommand.parseCommit(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2(),org.eclipse.jgit.internal.ketch.KetchReplica.prepareCommit(org.eclipse.jgit.lib.Repository, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable2(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.ListNotesCommand.call(),org.eclipse.jgit.transport.UploadPack.processShallow(java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectId>, boolean),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.junit.TestRepository.amendRef(java.lang.String),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.AddNoteCommand.call(),org.eclipse.jgit.internal.ketch.LagCheck.check(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.lib.Repository.parseCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommand.setUpstream(java.lang.String),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.RemoveNoteCommand.call(),org.eclipse.jgit.pgm.Log.addNoteMap(java.lang.String),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.api.StashListCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_ParentsNotMergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs(),org.eclipse.jgit.transport.PushCertificateStore.load(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_twoRoots(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.revwalk.RevObjectTest.testEquals(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testFilteringCommitsHasNoEffect(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.api.CreateBranchCommand.call(),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateCommitGraph(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.DescribeCommand.setTarget(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.RebaseCommand.getNewParents(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.internal.ketch.KetchLeader.initialize(),org.eclipse.jgit.transport.BasePackFetchConnection.parseReachable(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.notes.NoteMapTest.commitNoteMap(org.eclipse.jgit.notes.NoteMap),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.parseCommit(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_checkOtherFiles(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.merge.CrissCrossMergeTest.crissCrossMerge_mergeable(org.eclipse.jgit.merge.MergeStrategy, org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState),org.eclipse.jgit.api.RebaseCommandTest.getStashedDiff(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentId(java.lang.String, java.lang.String),org.eclipse.jgit.revplot.AbstractPlotRendererTest.createCommitList(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.ThreeWayMerger.mergeBase(),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
3782.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writePack(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor)	3772.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
2574.json	org.eclipse.jgit.transport.BaseReceivePack.getTimeout()	noCall	noCall	true	3176
9940.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.compareTo(byte[], int)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToByte()	true	856
259.json	org.eclipse.jgit.pgm.Show.ignoreLeadingSpace(boolean)	noCall	noCall	true	2154
4354.json	org.eclipse.jgit.internal.storage.file.WindowCursor.inflate(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], boolean)	4142.json,4121.json	org.eclipse.jgit.internal.storage.file.PackFile.getDeltaHeader(org.eclipse.jgit.internal.storage.file.WindowCursor, long),org.eclipse.jgit.internal.storage.file.PackFile.decompress(long, int, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
2123.json	org.eclipse.jgit.transport.RemoteRefUpdate.toString()	noCall	noCall	true	3176
6428.json	org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean)	6442.json	org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>)	true	2567
1644.json	org.eclipse.jgit.transport.DaemonClient.getDaemon()	1801.json,1648.json	org.eclipse.jgit.transport.DaemonService.execute(org.eclipse.jgit.transport.DaemonClient, java.lang.String, java.util.Collection<java.lang.String>),org.eclipse.jgit.transport.DaemonClient.execute(java.net.Socket)	true	3176
7574.json	org.eclipse.jgit.treewalk.TreeWalk.getFilter()	5657.json,null,5655.json	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.revwalk.TreeRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	true	3176
4175.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.Anonymous-e2f24bb7-cde8-4ded-ad12-9fe62b0c8cda.next()	noCall	noCall	true	1922
7594.json	org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int)	null,null,null,null,null,178.json,null,7906.json,9570.json,null,null,204.json,7481.json,7193.json,null,271.json,110.json,1362.json,null,null,null,1377.json,null,null,null,null,947.json,null,null,null,null,null,385.json,null,6714.json,7370.json,null	org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.submodule.SubmoduleWalk.next(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.isFile(org.eclipse.jgit.treewalk.TreeWalk, int),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.transport.WalkFetchConnection.processTree(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.transport.WalkFetchConnection.markTreeComplete(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.ignore.IgnoreNodeTest.assertEntry(org.eclipse.jgit.lib.FileMode, boolean, java.lang.String),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.add(int, int),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.assertModes(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.TreeWalk),org.eclipse.jgit.junit.TestRepository.Anonymous-d04f31ac-4953-40d9-b01c-d1bfb4cff22f.apply(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	3176
4741.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	null,4737.json,4448.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseFromSelfOrAlternate(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
4914.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.newBatchUpdate()	null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare()	true	880
529.json	org.eclipse.jgit.junit.http.MockServletConfig.Anonymous-8a52c3fb-5048-4293-bb58-7fc5e97ab081.hasMoreElements()	noCall	noCall	true	3070
4368.json	org.eclipse.jgit.internal.storage.file.PackInputStream.read(byte[], int, int)	4369.json	org.eclipse.jgit.internal.storage.file.PackInputStream.read()	true	2901
306.json	org.eclipse.jgit.pgm.AbstractFetchCommand.shortTypeOf(org.eclipse.jgit.lib.RefUpdate.Result)	302.json	org.eclipse.jgit.pgm.AbstractFetchCommand.showFetchResult(org.eclipse.jgit.transport.FetchResult)	true	3176
10101.json	org.eclipse.jgit.lfs.server.LfsProtocolServlet.LfsRequest.getObjects()	noCall	noCall	true	675
8638.json	org.eclipse.jgit.util.time.ProposedTimestamp.date()	noCall	noCall	true	565
6457.json	org.eclipse.jgit.blame.BlameGenerator.getSourceCommit()	null,null,null,6459.json,6427.json	org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter(),org.eclipse.jgit.blame.BlameResult.loadFrom(org.eclipse.jgit.blame.BlameGenerator)	true	2567
456.json	org.eclipse.jgit.junit.MockSystemReader.init(java.lang.String)	noCall	noCall	true	3141
2266.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.onReceivePack()	noCall	noCall	true	2280
5641.json	org.eclipse.jgit.revwalk.BitmapWalker.BitmapObjectFilter.include(org.eclipse.jgit.revwalk.ObjectWalk, org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	211
2397.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor)	2396.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
5701.json	org.eclipse.jgit.revwalk.filter.AndRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>)	352.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
6485.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.calculate(int, int, int, int)	6483.json	org.eclipse.jgit.diff.MyersDiff.calculateEdits(int, int, int, int)	true	3169
3593.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getConcurrencyLevel()	3599.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	599
6936.json	org.eclipse.jgit.api.PushCommand.setForce(boolean)	122.json	org.eclipse.jgit.pgm.Push.run()	true	2805
2362.json	org.eclipse.jgit.transport.RefSpec.match(java.lang.String, java.lang.String)	2352.json,2353.json,2354.json,2355.json	org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String),org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RefSpec.matchDestination(java.lang.String),org.eclipse.jgit.transport.RefSpec.matchDestination(org.eclipse.jgit.lib.Ref)	true	3176
4879.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.newPackParser(java.io.InputStream)	noCall	noCall	true	2692
2526.json	org.eclipse.jgit.transport.PackedObjectInfo.setOffset(long)	3748.json,4009.json,5130.json,3752.json,4716.json,5222.json,2410.json,null,5132.json,2398.json,3667.json,5133.json,3509.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.trySelectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, java.util.List<org.eclipse.jgit.internal.storage.dfs.DfsPackFile>, boolean),org.eclipse.jgit.internal.storage.file.PackInserter.endObject(org.eclipse.jgit.lib.ObjectId, long),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.dfs.DfsReader.findAllFromPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>, boolean),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.pack.ObjectToPack.markWantWrite(),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB(),org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.dfs.DfsInserter.endObject(org.eclipse.jgit.lib.ObjectId, long)	true	3176
8036.json	org.eclipse.jgit.util.RefMap.Ent.setValue(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	3060
4453.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.getAlternateId()	4444.json,4446.json,4441.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.has(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.skipMe(java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	422
4168.json	org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeUTF(java.lang.String)	noCall	noCall	true	1922
185.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.tableBits(int)	null	org.eclipse.jgit.pgm.debug.TextHashFunctions.testOne(org.eclipse.jgit.pgm.debug.TextHashFunctions.Function, org.eclipse.jgit.diff.RawText, int[], int)	true	2816
4059.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	4746.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2893
952.json	org.eclipse.jgit.merge.MergeResult.Anonymous-8c977b18-b519-4c1a-8b5e-dcdc7e08c99d.hasNext()	noCall	noCall	true	3076
7654.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.needsStopWalk()	7565.json,7869.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.needsStopWalk(),org.eclipse.jgit.treewalk.NameConflictTreeWalk.needsStopWalk()	true	893
7895.json	org.eclipse.jgit.submodule.SubmoduleWalk.setRootTree(org.eclipse.jgit.lib.AnyObjectId)	7885.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	2186
7875.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.getSymLinks()	7829.json,6045.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	1580
5513.json	org.eclipse.jgit.revwalk.DateRevQueue.anybodyHasFlag(int)	null	org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO()	true	3176
8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	8678.json,8679.json,8680.json	org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int),org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int),org.eclipse.jgit.patch.Patch.parseTraditionalPatch(byte[], int, int)	true	3176
5917.json	org.eclipse.jgit.dircache.DirCacheTree.getNameString()	5921.json,null,null,null,5930.json,null	org.eclipse.jgit.dircache.DirCacheTree.appendName(java.lang.StringBuilder),org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree(),org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree(),org.eclipse.jgit.dircache.DirCacheTree.toString(),org.eclipse.jgit.dircache.DirCacheTreeTest.testEmptyCache_CreateEmptyCacheTree()	true	3176
4467.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.remove(org.eclipse.jgit.lib.AnyObjectId)	4741.json,4746.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2833
2541.json	org.eclipse.jgit.transport.BaseReceivePack.MessageOutputWrapper.write(byte[], int, int)	2542.json	org.eclipse.jgit.transport.BaseReceivePack.MessageOutputWrapper.write(byte[])	true	2292
9974.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(long[])	null,null,null	org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testFromRawLong(),org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testCopy(),org.eclipse.jgit.lfs.lib.MutableLongObjectIdTest.testToObjectId()	true	856
296.json	org.eclipse.jgit.pgm.Daemon.requiresRepository()	noCall	noCall	true	3176
7104.json	org.eclipse.jgit.api.Git.getRepository()	null,null,230.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6884.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7265.json,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,358.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,914.json,null,437.json,null	org.eclipse.jgit.api.PathCheckoutCommandTest.validateIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenFetchConfigurationSetToYes(boolean),org.eclipse.jgit.api.InitCommandTest.testInitRepository(),org.eclipse.jgit.pgm.TagTest.testTagDelete(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPath(boolean, boolean, java.lang.String...),org.eclipse.jgit.api.MergeCommandTest.canExecute(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenFetchConfigurationSetToNo(boolean),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testCleanFilter(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.api.CloneCommand.init(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testUnknownContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_NoConflict(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(org.eclipse.jgit.api.Git, org.eclipse.jgit.api.Git),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch(),org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits(),org.eclipse.jgit.api.MergeCommandTest.setExecutable(org.eclipse.jgit.api.Git, java.lang.String, boolean),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenOnDemandAndRevisionChanged(boolean),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory(),org.eclipse.jgit.api.StashDropCommandTest.dropAll(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_SetBinaryMerge_Conflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.AddCommandTest.testCommandInjection(),org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.assertSubmoduleFetchHeads(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_NoAttr(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldFetchSubmodulesWhenSubmoduleConfigurationSetToYes(boolean),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckout(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.api.LsRemoteCommandTest.fileUri(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.fileUri(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit(),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.api.InitCommandTest.testInitBareRepository(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeTextualFile_UnsetMerge_Conflict(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.shouldNotFetchSubmodulesWhenSubmoduleConfigurationSetToNo(boolean),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.pgm.CleanTest.testCleanRequiresForceConfig(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryDefaultDirectory(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2953
10038.json	org.eclipse.jgit.lfs.server.s3.SignerV4.stringToSign(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	10041.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	843
4102.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean)	null	org.eclipse.jgit.internal.storage.file.RefDirectory.log(boolean, org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean)	true	2272
5096.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(java.util.Iterator<org.eclipse.jgit.revwalk.RevObject>)	null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testDeltaStatistics(),org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.List<org.eclipse.jgit.revwalk.RevObject>)	true	3176
5086.json	org.eclipse.jgit.internal.storage.pack.PackWriter.isIgnoreMissingUninteresting()	noCall	noCall	true	3176
4591.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.getBitmapIndex()	noCall	noCall	true	1922
3939.json	org.eclipse.jgit.internal.storage.file.RefDirectory.isNameConflicting(java.lang.String)	null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting()	true	3176
9844.json	org.eclipse.jgit.lfs.LfsBlobLoader.getSize()	9846.json,9845.json	org.eclipse.jgit.lfs.LfsBlobLoader.openStream(),org.eclipse.jgit.lfs.LfsBlobLoader.getCachedBytes()	true	98
4815.json	org.eclipse.jgit.internal.storage.file.GC.equals(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	4810.json	org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2142
5418.json	org.eclipse.jgit.revwalk.RevCommitList.clearFlag(org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	3176
7291.json	org.eclipse.jgit.api.DiffCommand.setDestinationPrefix(java.lang.String)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes()	true	2343
6173.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaSearchWindowSize(int)	6209.json,7179.json,null	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.api.GarbageCollectCommand.setAggressive(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.configureGc(org.eclipse.jgit.internal.storage.file.GC, boolean)	true	2893
1050.json	org.eclipse.jgit.merge.StrategyResolve.newMerger(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.lib.Config)	noCall	noCall	true	431
5944.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.commit()	null,7019.json,null,7530.json,6026.json,null,null,null,null,5946.json,null,6981.json,7018.json,null,null,7243.json,null,1005.json,null,null,7193.json,null	org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.verifyStageState(org.eclipse.jgit.lib.IndexDiff.StageState, int...),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator),org.eclipse.jgit.dircache.DirCacheEditor.commit(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.dircache.DirCacheLargePathTest.testLongPath(int),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
3903.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.addPack(org.eclipse.jgit.internal.storage.dfs.DfsPackFile)	3505.json,3646.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.flush(),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
2337.json	org.eclipse.jgit.transport.BasePackConnection.addUserAgentCapability(java.lang.StringBuilder)	1517.json,1907.json	org.eclipse.jgit.transport.BasePackPushConnection.enableCapabilities(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackFetchConnection.enableCapabilities()	true	1137
1909.json	org.eclipse.jgit.transport.BasePackFetchConnection.Anonymous-6e303c99-53f3-4727-b93a-efbcdfe54968.clone()	noCall	noCall	true	3176
9908.json	org.eclipse.jgit.lfs.LfsBlobFilter.smudgeLfsBlob(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader)	9901.json	org.eclipse.jgit.lfs.BuiltinLFS.applySmudgeFilter(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.attributes.Attribute)	true	98
2840.json	org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter)	2855.json,2839.json	org.eclipse.jgit.internal.ketch.ProposalRound.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)	true	872
8801.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.insert(V)	8802.json,8793.json,8794.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.grow(),org.eclipse.jgit.lib.ObjectIdSubclassMap.add(Q),org.eclipse.jgit.lib.ObjectIdSubclassMap.addIfAbsent(Q)	true	3176
5527.json	org.eclipse.jgit.revwalk.RevCommit.parse(org.eclipse.jgit.revwalk.RevWalk, byte[])	1034.json,5526.json	org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.revwalk.RevCommit.parse(byte[])	true	2851
10043.json	org.eclipse.jgit.lfs.server.s3.S3Config.getRegion()	10055.json,10041.json,10023.json,10057.json,10026.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
375.json	org.eclipse.jgit.pgm.Log.dstPrefix(java.lang.String)	noCall	noCall	true	2838
1985.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	1984.json,6911.json	org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.api.PushCommand.call()	true	3176
1061.json	org.eclipse.jgit.nls.GlobalBundleCache.lookupBundle(java.util.Locale, java.lang.Class<T>)	1060.json	org.eclipse.jgit.nls.NLS.get(java.lang.Class<T>)	true	3012
10127.json	org.eclipse.jgit.archive.Tbz2Format.suffixes()	noCall	noCall	true	1830
6284.json	org.eclipse.jgit.gitrepo.RepoProject.hashCode()	noCall	noCall	true	1411
3946.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getAdditionalRefs()	noCall	noCall	true	2786
10052.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getVerifyAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	843
4446.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	4445.json,4446.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	2907
9089.json	org.eclipse.jgit.lib.SymbolicRef.getObjectId()	null,null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor(),org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()	true	3176
1854.json	org.eclipse.jgit.transport.ReceiveCommand.setRef(org.eclipse.jgit.lib.Ref)	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	3176
4068.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject.getType()	noCall	noCall	true	3176
2660.json	org.eclipse.jgit.transport.RefAdvertiser.addSymref(java.lang.String, java.lang.String)	1473.json	org.eclipse.jgit.transport.UploadPack.findSymrefs(org.eclipse.jgit.transport.RefAdvertiser, java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	true	1296
265.json	org.eclipse.jgit.pgm.Show.sourcePrefix(java.lang.String)	noCall	noCall	true	2154
4840.json	org.eclipse.jgit.internal.storage.file.GC.setPackExpire(java.util.Date)	noCall	noCall	true	801
9296.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.Anonymous-1fc03cda-75a2-47b3-b2f6-03101c3a3b45.found(V)	noCall	noCall	true	2645
3282.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.ensureBytesAvailableInBlockBuf(int)	3279.json,3269.json,3277.json,3278.json,3286.json,3270.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeId(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(int),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt16(int),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.writeInt24(int),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.padBetweenBlocksToNextBlock(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.write(byte[], int, int)	true	297
4817.json	org.eclipse.jgit.internal.storage.file.GC.repack()	null,null,4803.json,null	org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated(boolean),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.DoRepack.call(),org.eclipse.jgit.internal.storage.file.GC.doGc(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack()	true	2142
9147.json	org.eclipse.jgit.lib.RefRename.disableRefLog()	9146.json	org.eclipse.jgit.lib.RefRename.setRefLogMessage(java.lang.String)	true	3059
9831.json	org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.revwalk.RevBlob)	noCall	noCall	true	2775
8218.json	org.eclipse.jgit.util.io.UnionInputStream.head()	8223.json,8224.json,null,8225.json	org.eclipse.jgit.util.io.UnionInputStream.read(byte[], int, int),org.eclipse.jgit.util.io.UnionInputStream.available(),org.eclipse.jgit.util.io.UnionInputStream.read(),org.eclipse.jgit.util.io.UnionInputStream.skip(long)	true	3078
5286.json	org.eclipse.jgit.attributes.AttributesNode.asReader(java.io.InputStream)	5285.json	org.eclipse.jgit.attributes.AttributesNode.parse(java.io.InputStream)	true	1249
271.json	org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTree)	269.json	org.eclipse.jgit.pgm.Show.run()	true	2154
7771.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilter.getUntrackedFolders()	9586.json	org.eclipse.jgit.lib.IndexDiff.getUntrackedFolders()	true	2403
6475.json	org.eclipse.jgit.diff.HistogramDiff.setMaxChainLength(int)	null,null,null	org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB(),org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA(),org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff()	true	2816
3822.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.alignToBlock(long)	null,3428.json,null,3673.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackBypassCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyPackThroughCache(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsReftable.CacheSource.notInCache(long)	true	2410
141.json	org.eclipse.jgit.pgm.debug.WriteReftable.parseId(java.lang.String)	138.json	org.eclipse.jgit.pgm.debug.WriteReftable.readLog(java.lang.String)	true	297
4023.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.beginObject(int, long)	4008.json	org.eclipse.jgit.internal.storage.file.PackInserter.beginObject(int, long)	true	221
220.json	org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree)	219.json,220.json	org.eclipse.jgit.pgm.debug.ShowCacheTree.run(),org.eclipse.jgit.pgm.debug.ShowCacheTree.show(org.eclipse.jgit.dircache.DirCacheTree)	true	3176
167.json	org.eclipse.jgit.pgm.debug.RebuildRefTree.run()	noCall	noCall	true	884
467.json	org.eclipse.jgit.junit.MockSystemReader.getCurrentTime()	null,null,null,470.json	org.eclipse.jgit.junit.TestRepository.getDate(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.tick(),org.eclipse.jgit.junit.MockSystemReader.Anonymous-6f57aaa2-c1fa-4031-b0f9-62b4e6b10273.propose(),org.eclipse.jgit.junit.MockSystemReader.getClock()	true	3141
5587.json	org.eclipse.jgit.revwalk.FooterKey.toString()	noCall	noCall	true	3176
3042.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.binarySearch(byte, byte[], long, long)	3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	true	297
6499.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.snake2y(long)	6500.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.makeEdit(long, long)	true	3169
7778.json	org.eclipse.jgit.treewalk.filter.OrTreeFilter.create(java.util.Collection<org.eclipse.jgit.treewalk.filter.TreeFilter>)	noCall	noCall	true	3176
10361.json	org.eclipse.jgit.http.server.InfoRefsServlet.Anonymous-10fad2bc-9e64-4ee6-a49b-fadac5e47edb.end()	noCall	noCall	true	3070
1179.json	org.eclipse.jgit.notes.LeafBucket.split()	1176.json,1170.json,1212.json	org.eclipse.jgit.notes.LeafBucket.append(org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.NoteMapMerger.asFanout(org.eclipse.jgit.notes.InMemoryNoteBucket)	true	2766
2521.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readLooseRefs(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>)	2520.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readAdvertisedRefs()	true	3176
2842.json	org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	2840.json	org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter)	true	872
9547.json	org.eclipse.jgit.lib.RefUpdate.delete()	null,null,null,null,null,null,null,7213.json,null,3609.json,null,6953.json,null,435.json,null,null,6863.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate.Result, boolean, boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteSymref(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked(),org.eclipse.jgit.api.StashDropCommand.deleteRef(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead(),org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename(),org.eclipse.jgit.junit.TestRepository.delete(java.lang.String),org.eclipse.jgit.api.DeleteBranchCommand.call(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.api.DeleteTagCommand.call()	true	3176
10285.json	org.eclipse.jgit.http.server.glue.MetaFilter.serveRegex(java.util.regex.Pattern)	noCall	noCall	true	2193
7414.json	org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine)	7412.json	org.eclipse.jgit.api.RebaseCommand.doSquashFixup(boolean, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.RebaseTodoLine, java.io.File, java.io.File)	true	1677
6919.json	org.eclipse.jgit.api.PushCommand.getRefLeaseSpecs()	noCall	noCall	true	486
7554.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)	null,null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testStopWalkCallsParent(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testCreateSubtreeIterator()	true	3176
8173.json	org.eclipse.jgit.util.io.SilentFileInputStream.close()	noCall	noCall	true	88
931.json	org.eclipse.jgit.merge.MergeStrategy.get(java.lang.String)	278.json	org.eclipse.jgit.pgm.Merge.run()	true	3176
7639.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathBuffer()	4972.json,6050.json,6011.json,4975.json	org.eclipse.jgit.internal.storage.reftree.Scanner.curElementHasPeelSuffix(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPathSegment(org.eclipse.jgit.lib.ObjectChecker, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.dircache.DirCacheBuilder.toEntry(int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.internal.storage.reftree.Scanner.refName(org.eclipse.jgit.treewalk.CanonicalTreeParser, boolean)	true	2685
6983.json	org.eclipse.jgit.api.CommitCommand.processOptions(org.eclipse.jgit.lib.RepositoryState, org.eclipse.jgit.revwalk.RevWalk)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	2953
3392.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3806.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.load(org.eclipse.jgit.internal.storage.dfs.DfsReader, long),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.get(byte[], int),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testObjectLargerThanCacheDoesNotEvict(),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires2(),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheMemoryUsedConsistentWithExpectations(),org.eclipse.jgit.internal.storage.dfs.DeltaBaseCacheTest.testCacheLruExpires1()	true	2410
4107.json	org.eclipse.jgit.internal.storage.file.PackFile.idx()	4117.json,4116.json,4149.json,4141.json,4148.json,4111.json,4146.json,4113.json,4114.json,4139.json,4109.json,4124.json,4144.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectCount(),org.eclipse.jgit.internal.storage.file.PackFile.iterator(),org.eclipse.jgit.internal.storage.file.PackFile.getReverseIdx(),org.eclipse.jgit.internal.storage.file.PackFile.findDeltaBase(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.PackFile.getBitmapIndex(),org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackFile.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int),org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack(),org.eclipse.jgit.internal.storage.file.PackFile.getIndex(),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.PackFile.getObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	3176
4222.json	org.eclipse.jgit.internal.storage.file.FileObjectDatabase.newInserter()	noCall	noCall	true	2793
4771.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId)	null,4436.json,null,4809.json,null,null,4741.json,4746.json,null,null,4751.json	org.eclipse.jgit.junit.TestRepository.prunePacked(org.eclipse.jgit.internal.storage.file.ObjectDirectory),org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.fileFor(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.GcTestCase.lastModified(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getLooseObjectSize(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.path(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasLooseInSelfOrAlternate(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	3176
1671.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaTag()	noCall	noCall	true	629
2560.json	org.eclipse.jgit.transport.BaseReceivePack.isAllowDeletes()	2621.json	org.eclipse.jgit.transport.BaseReceivePack.validateCommands()	true	3176
9989.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromString(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9863.json,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_Full(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromString(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test001_toString(),org.eclipse.jgit.lfs.lib.LFSPointerTest.testEncoding(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test011_toString(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.testKnownContent(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToStringBuilder(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testGetFirstByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test003_equals(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyFromStringInvalid(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_1(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testIsId(),org.eclipse.jgit.lfs.server.TransferHandler.Download.addObjectInfo(org.eclipse.jgit.lfs.server.Response.Body, org.eclipse.jgit.lfs.server.LfsObject),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_15(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_17(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_16(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test002_toString(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test009_toString(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompare_33(),org.eclipse.jgit.lfs.server.TransferHandler.Upload.addObjectInfo(org.eclipse.jgit.lfs.server.Response.Body, org.eclipse.jgit.lfs.server.LfsObject),org.eclipse.jgit.lfs.LfsPointer.parseLfsPointer(java.io.InputStream),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareByte(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareTo(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToByte(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray()	false	856
8141.json	org.eclipse.jgit.util.CachedAuthenticator.add(org.eclipse.jgit.util.CachedAuthenticator.CachedAuthentication)	399.json,8142.json	org.eclipse.jgit.pgm.Main.configureHttpProxy(),org.eclipse.jgit.util.CachedAuthenticator.getPasswordAuthentication()	true	3141
1387.json	org.eclipse.jgit.transport.OperationResult.add(org.eclipse.jgit.transport.TrackingRefUpdate)	1951.json,2093.json,1970.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref)	true	3176
4865.json	org.eclipse.jgit.internal.storage.file.FileRepository.createAttributesNodeProvider()	noCall	noCall	true	935
10397.json	org.eclipse.jgit.http.server.ServletUtils.acceptsGzipEncoding(java.lang.String)	noCall	noCall	true	3070
5592.json	org.eclipse.jgit.revwalk.BlockObjQueue.Block.isFull()	null	org.eclipse.jgit.revwalk.BlockObjQueue.add(org.eclipse.jgit.revwalk.RevObject)	true	3176
9025.json	org.eclipse.jgit.lib.EmptyProgressMonitor.beginTask(java.lang.String, int)	noCall	noCall	true	2093
5095.json	org.eclipse.jgit.internal.storage.pack.PackWriter.excludeObjects(org.eclipse.jgit.lib.ObjectIdSet)	3374.json,null,null,3373.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRest(org.eclipse.jgit.lib.ProgressMonitor)	true	2485
9067.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.addCeilingDirectories(java.io.File[])	noCall	noCall	true	2907
4460.json	org.eclipse.jgit.internal.storage.file.ByteBufferWindow.copy(int, byte[], int, int)	noCall	noCall	true	3176
7127.json	org.eclipse.jgit.api.RebaseResult.getUncommittedChanges()	null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange()	true	1650
5058.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.WeightedPath.compareTo(org.eclipse.jgit.internal.storage.pack.DeltaTask.WeightedPath)	5056.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.Block.computeTopPaths()	true	1880
2107.json	org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()	2094.json	org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates()	true	3176
8991.json	org.eclipse.jgit.lib.Repository.stripWorkDir(java.io.File, java.io.File)	null,8991.json,1128.json	org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test30_stripWorkDir(),org.eclipse.jgit.lib.Repository.stripWorkDir(java.io.File, java.io.File),org.eclipse.jgit.hooks.CommitMsgHook.getCommitEditMessageFilePath()	true	3176
2504.json	org.eclipse.jgit.transport.TransportAmazonS3.Anonymous-3557aa9c-a09d-4004-a99f-7509be538b95.getOptionalFields()	noCall	noCall	true	2645
8573.json	org.eclipse.jgit.util.BlockList.addAll(T[], int, int)	8572.json	org.eclipse.jgit.util.BlockList.addAll(org.eclipse.jgit.util.BlockList<T>)	true	2641
2455.json	org.eclipse.jgit.transport.PackParser.InflaterStream.read()	noCall	noCall	true	2741
8621.json	org.eclipse.jgit.util.SystemReader.getOsName()	8620.json,8619.json	org.eclipse.jgit.util.SystemReader.isMacOS(),org.eclipse.jgit.util.SystemReader.isWindows()	true	988
7485.json	org.eclipse.jgit.api.CheckoutCommand.processOptions()	7471.json	org.eclipse.jgit.api.CheckoutCommand.call()	true	2756
4052.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1.getBitmapCount()	noCall	noCall	true	976
6520.json	org.eclipse.jgit.diff.Subsequence.a(S, org.eclipse.jgit.diff.Edit)	6516.json,6478.json	org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<? super S>, S, S),org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	true	2820
6304.json	org.eclipse.jgit.gitrepo.RepoCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	1509
10197.json	org.eclipse.jgit.transport.OpenSshConfig.getConfig(java.lang.String)	null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testListValueSingle(),org.eclipse.jgit.transport.OpenSshConfigTest.testListValueMultiple(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookups()	true	289
6778.json	org.eclipse.jgit.diff.Edit.toString()	null	org.eclipse.jgit.diff.EditTest.testToString()	true	3176
8142.json	org.eclipse.jgit.util.CachedAuthenticator.getPasswordAuthentication()	noCall	noCall	true	3141
8513.json	org.eclipse.jgit.internal.ketch.KetchSystem.delay(long, long, long)	2799.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
8980.json	org.eclipse.jgit.lib.Repository.getAllRefs()	null,null,null,null,1402.json,null,null,null,null,null,null,null,null,null,null,null,null,null,2547.json,null,8983.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.delete(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate.Result, boolean, boolean),org.eclipse.jgit.junit.TestRepository.packAndPrune(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-927ee934-d631-4ad2-b01a-49c4e722782b.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.HidePrivateHook.getAdvertisedRefs(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.transport.UploadPack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.assertContains(org.eclipse.jgit.revwalk.RevCommit, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate(),org.eclipse.jgit.internal.storage.file.FileRepository.getAdditionalHaves(java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly(),org.eclipse.jgit.junit.TestRepository.fsck(org.eclipse.jgit.revwalk.RevObject...),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefKeySameAsName(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkConnectivity(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isReachable(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId()	true	3176
6532.json	org.eclipse.jgit.diff.RawText.getString(int, int, boolean)	6531.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.diff.RawText.getString(int),org.eclipse.jgit.api.ApplyCommandTest.testModifyE(),org.eclipse.jgit.api.ApplyCommandTest.testAddA2(),org.eclipse.jgit.api.ApplyCommandTest.testAddA1(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyM3(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII(),org.eclipse.jgit.api.ApplyCommandTest.testAddM1(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCII2(),org.eclipse.jgit.api.ApplyCommandTest.testNonASCIIAdd2(),org.eclipse.jgit.api.ApplyCommandTest.testModifyX(),org.eclipse.jgit.api.ApplyCommandTest.testModifyW(),org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1(),org.eclipse.jgit.diff.RawTextTest.testBinary(),org.eclipse.jgit.api.ApplyCommandTest.testModifyZ(),org.eclipse.jgit.api.ApplyCommandTest.testModifyY()	true	2797
10129.json	org.eclipse.jgit.archive.Tbz2Format.hashCode()	noCall	noCall	true	1521
6619.json	org.eclipse.jgit.diff.RawTextComparator.findForwardLine(org.eclipse.jgit.util.IntList, int, int)	6618.json	org.eclipse.jgit.diff.RawTextComparator.reduceCommonStartEnd(org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.Edit)	true	2820
8892.json	org.eclipse.jgit.lib.Config.uncache(org.eclipse.jgit.lib.Config.SectionParser<?>)	null	org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3176
6163.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaBaseAsOffset(boolean)	null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()	true	2874
1618.json	org.eclipse.jgit.transport.resolver.FileResolver.isExportAll()	1622.json	org.eclipse.jgit.transport.resolver.FileResolver.isExportOk(C, java.lang.String, org.eclipse.jgit.lib.Repository)	true	3070
1798.json	org.eclipse.jgit.transport.DaemonService.setOverridable(boolean)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	3176
4909.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.idOf(org.eclipse.jgit.lib.Ref)	4908.json,4906.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRefs(java.lang.String),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.exactRef(java.lang.String)	true	880
6029.json	org.eclipse.jgit.dircache.DirCacheCheckout.isSamePrefix(java.lang.String, java.lang.String)	6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	true	2844
6586.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.diff.EditList, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	6585.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
1170.json	org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMissingNote(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle(),org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst(),org.eclipse.jgit.notes.FanoutBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast()	true	2766
2168.json	org.eclipse.jgit.transport.PushCertificateParser.parseHeader(java.lang.String, java.lang.String)	2167.json,2170.json	org.eclipse.jgit.transport.PushCertificateParser.parseHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, java.lang.String),org.eclipse.jgit.transport.PushCertificateParser.receiveHeader(org.eclipse.jgit.transport.PushCertificateParser.StringReader, boolean)	true	1067
8599.json	org.eclipse.jgit.util.SystemReader.init()	8598.json	org.eclipse.jgit.util.SystemReader.setInstance(org.eclipse.jgit.util.SystemReader)	true	1289
8796.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.isEmpty()	null,2619.json,null,3304.json,null	org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testEmptyMap(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishRefAndObjSections(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear()	true	2977
7367.json	org.eclipse.jgit.api.ArchiveCommand.unregisterFormat(java.lang.String)	null,10111.json	org.eclipse.jgit.api.ArchiveCommandTest.tearDown(),org.eclipse.jgit.archive.ArchiveFormats.unregisterAll()	true	1843
8285.json	org.eclipse.jgit.util.HttpSupport.proxyFor(java.net.ProxySelector, java.net.URL)	2241.json,10053.json,1694.json,9866.json,9870.json	org.eclipse.jgit.transport.TransportHttp.httpOpen(java.lang.String, java.net.URL, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.transport.AmazonS3.open(java.lang.String, java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsContentConnection(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.Protocol.Action, java.lang.String)	true	3176
5506.json	org.eclipse.jgit.revwalk.ObjectWalk.releaseTreeVisit(org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit)	5490.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject()	true	2493
1591.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setRequestMethod(java.lang.String)	noCall	noCall	true	1572
2791.json	org.eclipse.jgit.internal.ketch.KetchReplica.pushCommitAsync(org.eclipse.jgit.internal.ketch.LogIndex)	2912.json,2795.json	org.eclipse.jgit.internal.ketch.KetchLeader.commitAsync(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
6274.json	org.eclipse.jgit.gitrepo.RepoProject.addCopyFile(org.eclipse.jgit.gitrepo.RepoProject.CopyFile)	6316.json,6324.json	org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes),org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	true	1509
2824.json	org.eclipse.jgit.internal.ketch.KetchSystem.newLeaderTag()	2752.json	org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
7082.json	org.eclipse.jgit.api.Git.blame()	noCall	noCall	true	2567
6257.json	org.eclipse.jgit.revplot.PlotCommitList.createLane()	6255.json	org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane(java.util.BitSet)	true	3176
4777.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.newCachedDatabase()	noCall	noCall	true	3061
2632.json	org.eclipse.jgit.transport.BaseReceivePack.setPushCertificate(org.eclipse.jgit.transport.PushCertificate)	noCall	noCall	true	1061
2332.json	org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefs()	noCall	noCall	true	3176
3923.json	org.eclipse.jgit.internal.storage.io.BlockSource.from(java.io.FileInputStream)	150.json,147.json,149.json,151.json,152.json,153.json,155.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.ReadReftable.run(),org.eclipse.jgit.pgm.debug.VerifyReftable.run()	true	297
5839.json	org.eclipse.jgit.ignore.internal.WildMatcher.matches(java.lang.String, int, int)	noCall	noCall	true	1322
5278.json	org.eclipse.jgit.attributes.AttributesRule.getAttributes()	5319.json,null,null	org.eclipse.jgit.attributes.AttributesHandler.mergeAttributes(org.eclipse.jgit.attributes.AttributesNode, java.lang.String, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.attributes.AttributesHandlerTest.attrs(java.lang.String),org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()	true	1249
4017.json	org.eclipse.jgit.internal.storage.file.PackInserter.computeName(java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	null	org.eclipse.jgit.internal.storage.file.PackInserter.flush()	true	221
2772.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.debug(java.lang.StringBuilder, org.eclipse.jgit.internal.ketch.ReplicaSnapshot)	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
2902.json	org.eclipse.jgit.internal.ketch.KetchLeader.scheduleLeader()	2913.json,2900.json	org.eclipse.jgit.internal.ketch.KetchLeader.nextRound(),org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal)	true	872
7847.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryAttributesNode.load()	7826.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryAttributesNode()	true	2881
6829.json	org.eclipse.jgit.api.ApplyCommand.isNoNewlineAtEndOfFile(org.eclipse.jgit.patch.FileHeader)	6826.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader)	true	2288
7222.json	org.eclipse.jgit.api.AddNoteCommand.setObjectId(org.eclipse.jgit.revwalk.RevObject)	null,null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.NotesCommandTest.setUp()	true	2618
4920.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.getRefDatabase()	noCall	noCall	true	880
5403.json	org.eclipse.jgit.revwalk.RevWalk.Anonymous-041af7cc-def1-4ff4-b2fc-727420c21d0b.hasNext()	noCall	noCall	true	3176
4139.json	org.eclipse.jgit.internal.storage.file.PackFile.onOpenPack()	4134.json	org.eclipse.jgit.internal.storage.file.PackFile.doOpen()	true	3176
2838.json	org.eclipse.jgit.internal.ketch.KetchText.get()	null,2759.json,2896.json,2851.json,2893.json,300.json,2764.json,2903.json,2894.json,2761.json	org.eclipse.jgit.pgm.Daemon.Anonymous-cef066f2-21cb-465b-97c2-fe772de45ed1.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.KetchLeader.setReplicas(java.util.Collection<org.eclipse.jgit.internal.ketch.KetchReplica>),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForQueue(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchLeader.runLeader(),org.eclipse.jgit.internal.ketch.KetchPreReceive.waitForPropose(org.eclipse.jgit.internal.ketch.Proposal, org.eclipse.jgit.transport.ProgressSpinner),org.eclipse.jgit.internal.ketch.LocalReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
4747.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor)	4451.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
6575.json	org.eclipse.jgit.diff.DiffFormatter.updateFollowFilter(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6570.json	org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	true	2899
8693.json	org.eclipse.jgit.patch.HunkHeader.getFileHeader()	null,null,null,8653.json,8724.json	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeader.addHunk(org.eclipse.jgit.patch.HunkHeader),org.eclipse.jgit.patch.CombinedHunkHeader.getFileHeader()	true	3176
3522.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.copyOf(byte[], int, int)	3521.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.flushBlock()	true	2410
9878.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.close()	9898.json	org.eclipse.jgit.lfs.CleanFilter.run()	true	856
2448.json	org.eclipse.jgit.transport.PackParser.UnresolvedDelta.getCRC()	noCall	noCall	true	2692
10263.json	org.eclipse.jgit.http.server.glue.WrappedRequest.getPathTranslated()	noCall	noCall	true	3070
6114.json	org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(java.io.File)	null,null,null,null	org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.testSymlinkWithEncodingDifference(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup()	true	1909
2221.json	org.eclipse.jgit.transport.TransportHttp.openFetch()	noCall	noCall	true	3176
8029.json	org.eclipse.jgit.util.RefMap.SetIterator.next()	noCall	noCall	true	3060
6960.json	org.eclipse.jgit.api.Status.getRemoved()	null,null,null,null,null,null,94.json,null,96.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile()	true	2636
8481.json	org.eclipse.jgit.util.FileUtils.mkdir(java.io.File, boolean)	null,7428.json,null,7429.json,null,8480.json,4751.json	org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.util.FileUtilsTest.testMkdir(),org.eclipse.jgit.util.FileUtils.mkdir(java.io.File),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	true	2735
4571.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.newBitmapBuilder()	4988.json,null	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1922
4885.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.writeHeader(java.io.OutputStream, int, long)	4883.json,4884.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int)	true	2833
400.json	org.eclipse.jgit.pgm.Main.SubcommandLineParser.containsHelp(java.lang.String...)	noCall	noCall	true	893
4462.json	org.eclipse.jgit.internal.storage.file.ByteBufferWindow.setInput(int, java.util.zip.Inflater)	noCall	noCall	true	3176
1650.json	org.eclipse.jgit.transport.PreUploadHook.Anonymous-b8d6ef92-da46-4ab7-953f-3ad7c2081c50.onEndNegotiateRound(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, int, int, boolean)	noCall	noCall	true	2627
9180.json	org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.TagBuilder)	null,7299.json,null	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.TagCommand.call(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.insertTag(org.eclipse.jgit.lib.TagBuilder)	true	2848
2086.json	org.eclipse.jgit.transport.PacketLineIn.readLength()	1783.json,2085.json,2080.json,2078.json	org.eclipse.jgit.transport.SideBandInputStream.needDataPacket(),org.eclipse.jgit.transport.PacketLineIn.discardUntilEnd(),org.eclipse.jgit.transport.PacketLineIn.readStringRaw(),org.eclipse.jgit.transport.PacketLineIn.readString()	true	3176
9956.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(java.io.Writer)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriter()	true	856
5763.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.after(long)	5762.json,1470.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.after(java.util.Date),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	true	3176
3154.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.isIndexObjects()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
1971.json	org.eclipse.jgit.transport.FetchProcess.isTag(org.eclipse.jgit.lib.Ref)	1964.json,1963.json	org.eclipse.jgit.transport.FetchProcess.expandFetchTags(),org.eclipse.jgit.transport.FetchProcess.expandAutoFollowTags()	true	3176
4491.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	3059
4833.json	org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.toString()	noCall	noCall	true	1913
5865.json	org.eclipse.jgit.ignore.IgnoreNode.asReader(java.io.InputStream)	5864.json	org.eclipse.jgit.ignore.IgnoreNode.parse(java.io.InputStream)	true	2881
1364.json	org.eclipse.jgit.transport.WalkFetchConnection.processTag(org.eclipse.jgit.revwalk.RevObject)	1360.json	org.eclipse.jgit.transport.WalkFetchConnection.process(org.eclipse.jgit.lib.ObjectId)	true	3176
2943.json	org.eclipse.jgit.internal.fsck.FsckError.CorruptIndex.getFileName()	noCall	noCall	true	319
2638.json	org.eclipse.jgit.transport.ReceivePack.setPostReceiveHook(org.eclipse.jgit.transport.PostReceiveHook)	noCall	noCall	true	3176
7260.json	org.eclipse.jgit.api.DescribeCommand.call()	null,null,274.json,null,null	org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.api.DescribeCommandTest.testDescribe(),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.api.DescribeCommandTest.describe(org.eclipse.jgit.lib.ObjectId, java.lang.String...),org.eclipse.jgit.api.DescribeCommandTest.noTargetSet()	true	1717
308.json	org.eclipse.jgit.pgm.opt.ObjectIdHandler.getDefaultMetaVariable()	noCall	noCall	true	3176
7198.json	org.eclipse.jgit.api.CherryPickCommand.include(org.eclipse.jgit.lib.AnyObjectId)	7405.json,null,null,null,7404.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doCherryPickAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	2795
5242.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getCachedSize()	5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
7610.json	org.eclipse.jgit.treewalk.TreeWalk.min()	7590.json	org.eclipse.jgit.treewalk.TreeWalk.next()	true	3176
8915.json	org.eclipse.jgit.lib.Config.readIncludedConfig(java.lang.String)	8916.json	org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int)	true	187
9267.json	org.eclipse.jgit.lib.Constants.encode(java.lang.String)	null,null,null,7627.json,null,null,6600.json,null,4969.json,null,null,null,null,null,4494.json,9778.json,null,null,null,4103.json,null,null,null,null,null,8072.json,null,9756.json,null,2592.json,10378.json,5165.json,2593.json,null,null,null,null,8506.json,5896.json,5726.json,null,null,null,null,9779.json,null,2591.json,null,null,7996.json,null,null,null,null,null,null,null,null,null,null,null,1143.json,7950.json,8001.json,null,4947.json,null,null,null,null,6089.json,9832.json,5904.json,4856.json,1759.json,null,null,6599.json,null,null,4965.json,2644.json,null,null,null,null,6602.json,1446.json,null,4849.json,null,null,null,null,null,null,null,4192.json,null,null,null,null,2313.json,null,null,null,null	org.eclipse.jgit.transport.PushCertificateStoreTest.newCert(java.lang.String...),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit(),org.eclipse.jgit.transport.UploadPack.reportInternalServerErrorOverSideband(),org.eclipse.jgit.treewalk.AbstractTreeIterator.findFile(java.lang.String),org.eclipse.jgit.util.Base64Test.b(java.lang.String),org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob(),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallObjectBeforeLargeObject(),org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.junit.RepositoryTestCase.createEntry(java.lang.String, org.eclipse.jgit.lib.FileMode, int, java.lang.String),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackFallsBackToRepo(),org.eclipse.jgit.transport.PushOptionsTest.setUp(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.lib.RefWriter.writeInfoRefs(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.assertDequote(java.lang.String, java.lang.String),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead(),org.eclipse.jgit.internal.storage.file.ReflogWriter.encode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.revwalk.FooterLineTest.parse(java.lang.String),org.eclipse.jgit.util.IOReadLineTest.newReader(java.lang.String),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.TestObject.setType(java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testGarbageSelectivelyVisible(),org.eclipse.jgit.util.ChangeIdUtil.computeChangeId(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd(),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testNoCheckExisting(),org.eclipse.jgit.transport.BaseReceivePack.fatalError(java.lang.String),org.eclipse.jgit.http.server.GitSmartHttpTools.writeSideBand(java.io.OutputStream, java.lang.String),org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendMessage(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testValidConnectivity(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.entry(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2(),org.eclipse.jgit.util.FileUtils.getFileAttributesBasic(org.eclipse.jgit.util.FS, java.io.File),org.eclipse.jgit.dircache.DirCache.findEntry(java.lang.String),org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.forceToRaw(java.lang.String),org.eclipse.jgit.transport.ReceivePack.Anonymous-df9095d6-961b-4c8b-8023-52a57a4ec8de.sendString(java.lang.String),org.eclipse.jgit.diff.SimilarityIndexTest.hash(java.lang.String),org.eclipse.jgit.merge.MergeAlgorithmTest.T(java.lang.String),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.lib.RefWriter.writePackedRefs(),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.insert(java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendError(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve(),org.eclipse.jgit.util.QuotedString.dequote(java.lang.String),org.eclipse.jgit.internal.storage.file.PackInserterTest.multiplePacks(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallFiles(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGitOtherPlatform(),org.eclipse.jgit.transport.PacketLineOut.writeString(java.lang.String),org.eclipse.jgit.util.QuotedStringBourneStyleTest.assertDequote(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterIgnoresUnreachable(),org.eclipse.jgit.util.QuotedStringBourneUserPathStyleTest.testDequote_BareA(),org.eclipse.jgit.internal.storage.file.PackInserterTest.insertLargeInputStreamBypassesCheckExisting(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareA(),org.eclipse.jgit.internal.storage.file.PackInserterTest.noFlush(),org.eclipse.jgit.notes.NoteMap.set(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(java.lang.String),org.eclipse.jgit.util.QuotedString.GitPathStyle.quote(java.lang.String),org.eclipse.jgit.transport.BundleWriterTest.testCustomObjectReader(),org.eclipse.jgit.internal.storage.reftree.Command.symref(java.lang.String),org.eclipse.jgit.internal.storage.file.PackInserterTest.overwriteExistingPack(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.internal.storage.file.PackInserterTest.checkExisting(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback(),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.lib.TreeFormatter.append(java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCache.getEntriesWithin(java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String),org.eclipse.jgit.transport.SideBandProgressMonitor.send(java.lang.StringBuilder),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects(),org.eclipse.jgit.diff.DiffFormatter.formatGitDiffFirstHeaderLine(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry.ChangeType, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testFindOnEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.internal.storage.reftree.RefTree.writeTree(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3(),org.eclipse.jgit.internal.storage.file.PackInserterTest.insertSmallInputStreamRespectsCheckExisting(),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.writeBlob(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.PushConnectionTest.setUp(),org.eclipse.jgit.diff.DiffFormatter.formatOldNewPaths(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.transport.UploadPack.sendMessage(java.lang.String),org.eclipse.jgit.lib.ConstantsEncodingTest.testEncode_Unicode(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.transport.ReceivePack.Anonymous-3dc55bbe-20e1-4fef-b324-3817bc681202.sendString(java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.newPacketLineIn(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testInserterDiscardsPack(),org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified(),org.eclipse.jgit.transport.AtomicPushTest.setUp(),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareA(),org.eclipse.jgit.util.QuotedStringBourneStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.internal.storage.file.PackLock.lock(java.lang.String),org.eclipse.jgit.lib.ConstantsEncodingTest.testEncode_SimpleASCII(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseMultipleFromStream(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.lib.ObjectChecker.checkPath(java.lang.String),org.eclipse.jgit.transport.WalkPushConnection.createNewRepository(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>),org.eclipse.jgit.util.PathsTest.testPathCompare(),org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob(),org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead(),org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths()	true	3176
5845.json	org.eclipse.jgit.ignore.internal.PathMatcher.trim(java.lang.String)	5844.json	org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character, boolean)	true	1056
2365.json	org.eclipse.jgit.transport.RefSpec.isValid(java.lang.String)	2364.json	org.eclipse.jgit.transport.RefSpec.checkValid(java.lang.String)	true	1839
2662.json	org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Collection<org.eclipse.jgit.lib.Ref>)	2661.json	org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	false	3176
6158.json	org.eclipse.jgit.storage.pack.PackConfig.isPreserveOldPacks()	null	org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int)	true	506
1898.json	org.eclipse.jgit.transport.BasePackFetchConnection.setPackLockMessage(java.lang.String)	noCall	noCall	true	3176
9420.json	org.eclipse.jgit.lib.ObjectIdRef.getLeaf()	null,null	org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_Peeled(),org.eclipse.jgit.lib.ObjectIdRefTest.testConstructor_PeeledStatusNotKnown()	true	3059
6527.json	org.eclipse.jgit.diff.RawText.getRawContent()	noCall	noCall	true	98
5365.json	org.eclipse.jgit.revwalk.RevWalk.lookupBlob(org.eclipse.jgit.lib.AnyObjectId)	null,5504.json,null,null	org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption(),org.eclipse.jgit.revwalk.ObjectWalk.markTreeUninteresting(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.writeBlob(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.junit.TestRepository.blob(byte[])	true	3176
8981.json	org.eclipse.jgit.lib.Repository.getTags()	noCall	noCall	true	3176
388.json	org.eclipse.jgit.pgm.Checkout.run()	noCall	noCall	true	2755
6025.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkout()	7266.json,null,null,7438.json,6812.json,null,7195.json,null,7471.json,7237.json,7020.json,null,7422.json,null,null,6887.json,7385.json,null,7436.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.checkoutCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.DirCacheCheckoutTest.checkout(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileConflict(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileAndContentConflicts(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.api.ResetCommand.checkoutIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.testMultipleContentConflicts(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHardAndCount(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.lib.DirCacheCheckoutTest.resetHard(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.MergeCommand.call(),org.eclipse.jgit.junit.RepositoryTestCase.checkoutBranch(java.lang.String),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2844
1728.json	org.eclipse.jgit.transport.URIish.format(boolean, boolean)	1729.json,null,1727.json,1730.json	org.eclipse.jgit.transport.URIish.toASCIIString(),org.eclipse.jgit.transport.URIish.toPrivateString(),org.eclipse.jgit.transport.URIish.toString(),org.eclipse.jgit.transport.URIish.toPrivateASCIIString()	true	3176
5774.json	org.eclipse.jgit.revwalk.filter.RevFilter.MergeBaseFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	752
10258.json	org.eclipse.jgit.http.server.glue.MetaServlet.register(org.eclipse.jgit.http.server.glue.ServletBinder)	noCall	noCall	true	3070
3521.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.flushBlock()	3520.json,3523.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.writeNoHash(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.writePackFooter()	true	2410
8090.json	org.eclipse.jgit.util.NB.encodeInt64(byte[], int, long)	3309.json,3310.json,4157.json,4394.json,null,9947.json,3200.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.encodeHeader(byte[]),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.writeFileFooter(),org.eclipse.jgit.internal.storage.file.SimpleDataOutput.writeLong(long),org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.writeOffset64(),org.eclipse.jgit.util.NBTest.testEncodeInt64(),org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(byte[], int),org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.key(java.lang.String, long)	true	3176
3326.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.paddingBytes()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
6554.json	org.eclipse.jgit.diff.DiffFormatter.setOldPrefix(java.lang.String)	267.json,6548.json,265.json,7282.json,376.json,374.json,243.json,245.json	org.eclipse.jgit.pgm.Show.noPrefix(boolean),org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.pgm.Show.sourcePrefix(java.lang.String),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.pgm.Log.noPrefix(boolean),org.eclipse.jgit.pgm.Log.sourcePrefix(java.lang.String),org.eclipse.jgit.pgm.Diff.sourcePrefix(java.lang.String),org.eclipse.jgit.pgm.Diff.noPrefix(boolean)	true	2839
7988.json	org.eclipse.jgit.util.FS_Win32.Anonymous-c0ab91ad-d394-413c-82d7-b3d0ddafb544.visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)	noCall	noCall	true	77
3045.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readHeaderOrFooter(long, int)	3043.json,3044.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileHeader(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileFooter()	true	297
8177.json	org.eclipse.jgit.util.io.CountingOutputStream.flush()	noCall	noCall	true	2410
4919.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.asNew(org.eclipse.jgit.lib.Ref)	4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	880
8209.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.print(short)	noCall	noCall	true	2093
2392.json	org.eclipse.jgit.transport.PackParser.getReceivedPackStatistics()	2614.json,null	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.UploadPackTest.parsePack(java.io.ByteArrayInputStream, org.eclipse.jgit.lib.ProgressMonitor)	true	629
8367.json	org.eclipse.jgit.util.RawSubStringPattern.match(org.eclipse.jgit.util.RawCharSequence)	null,5747.json	org.eclipse.jgit.util.RawSubStringPatternTest.assertMatchResult(java.lang.String, java.lang.String, int),org.eclipse.jgit.revwalk.filter.SubStringRevFilter.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	true	3176
7812.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.first()	null,null,null,null,7811.json,null	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.treewalk.WorkingTreeIterator.reset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist()	true	3176
2755.json	org.eclipse.jgit.internal.ketch.KetchLeaderCache.get(org.eclipse.jgit.lib.Repository)	null,300.json	org.eclipse.jgit.pgm.Daemon.Anonymous-cef066f2-21cb-465b-97c2-fe772de45ed1.create(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Daemon.startKetchLeader(org.eclipse.jgit.transport.Daemon)	true	872
4101.json	org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.PersonIdent, java.lang.String)	4502.json,null,7215.json,4100.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage(),org.eclipse.jgit.api.StashDropCommand.call(),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, org.eclipse.jgit.lib.ReflogEntry)	true	2272
3531.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	noCall	noCall	true	1397
7955.json	org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int)	1706.json,null,7952.json,5494.json,null,9401.json,null,null,6533.json,9752.json,9127.json,9382.json,null,null,null,5251.json,9753.json,1705.json,7451.json,null,7954.json,9755.json,5490.json,9044.json,null,4975.json,null,7835.json,3977.json	org.eclipse.jgit.transport.URIish.escape(java.lang.String, boolean, boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int),org.eclipse.jgit.revwalk.ObjectWalk.getPathString(),org.eclipse.jgit.lib.ObjectCheckerTest.Anonymous-4c424e09-fd7d-49f4-b5f3-863881315abc.newBlobObjectChecker(),org.eclipse.jgit.lib.ObjectChecker.normalize(byte[], int, int),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-0c812d22-5fba-4c7c-9c35-6a5a653d9583.modifyCommitMessage(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.diff.RawText.decode(int, int),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean),org.eclipse.jgit.lib.RepositoryCache.FileKey.readFirstLine(java.io.File),org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-367dec0d-e5ad-436e-a033-a086d7d191cc.modifyCommitMessage(java.lang.String),org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[], boolean),org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int),org.eclipse.jgit.transport.URIish.unescape(java.lang.String),org.eclipse.jgit.api.RebaseCommand.parseAuthor(byte[]),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-4edff3b0-f6f1-41a0-9462-925bc568dc9a.modifyCommitMessage(java.lang.String),org.eclipse.jgit.util.RawParseUtils.decode(byte[]),org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int),org.eclipse.jgit.revwalk.ObjectWalk.nextObject(),org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS),org.eclipse.jgit.api.RebaseCommand.RebaseState.readFile(java.io.File, java.lang.String),org.eclipse.jgit.internal.storage.reftree.Scanner.refName(org.eclipse.jgit.treewalk.CanonicalTreeParser, boolean),org.eclipse.jgit.lib.ObjectCheckerTest.Anonymous-6950cda3-b03f-4d3c-a7a8-ec93e6106d9c.update(byte[], int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	3176
428.json	org.eclipse.jgit.pgm.Branch.createForce(java.util.List<java.lang.String>)	noCall	noCall	true	889
9131.json	org.eclipse.jgit.lib.UserConfig.getAuthorEmail()	null,null	org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped(),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	true	3176
10137.json	org.eclipse.jgit.archive.TxzFormat.createArchiveOutputStream(java.io.OutputStream, java.util.Map<java.lang.String, java.lang.Object>)	10136.json	org.eclipse.jgit.archive.TxzFormat.createArchiveOutputStream(java.io.OutputStream)	true	1206
6657.json	org.eclipse.jgit.diff.SimilarityRenameDetector.srcFile(long)	6645.json,6698.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
8220.json	org.eclipse.jgit.util.io.UnionInputStream.add(java.io.InputStream)	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.util.io.UnionInputStreamTest.testExceptionDuringClose(),org.eclipse.jgit.util.io.UnionInputStreamTest.testReadByteBlocks(),org.eclipse.jgit.util.io.UnionInputStreamTest.testSkip(),org.eclipse.jgit.transport.TransportHttp.LongPollService.execute(),org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes(),org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute(),org.eclipse.jgit.util.io.UnionInputStreamTest.testCloseDuringClose(),org.eclipse.jgit.util.io.UnionInputStreamTest.testMarkSupported(),org.eclipse.jgit.util.io.UnionInputStreamTest.testAutoCloseDuringRead()	true	3078
9862.json	org.eclipse.jgit.lfs.LfsPointer.encode(java.io.OutputStream)	9898.json,null	org.eclipse.jgit.lfs.CleanFilter.run(),org.eclipse.jgit.lfs.lib.LFSPointerTest.testEncoding()	true	628
5066.json	org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-dc6669eb-6e1a-4771-acaa-274ee22e6f28.hasNext()	noCall	noCall	true	2399
3552.json	org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent.getPackFile()	noCall	noCall	true	2046
9876.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.write(byte[])	noCall	noCall	true	856
8223.json	org.eclipse.jgit.util.io.UnionInputStream.read(byte[], int, int)	null,null,null,null	org.eclipse.jgit.util.io.UnionInputStreamTest.testArrayConstructor(),org.eclipse.jgit.util.io.UnionInputStreamTest.testNonBlockingPartialRead(),org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream(),org.eclipse.jgit.util.io.UnionInputStreamTest.testReadByteBlocks()	true	3078
6841.json	org.eclipse.jgit.api.FetchCommand.getTimeout()	noCall	noCall	true	2823
135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	noCall	noCall	true	297
4292.json	org.eclipse.jgit.internal.storage.file.WindowCache.evict()	4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
10413.json	org.eclipse.jgit.http.server.ClientVersionUtil.splitVersion(java.lang.String)	10412.json	org.eclipse.jgit.http.server.ClientVersionUtil.parseVersion(java.lang.String)	true	2174
7294.json	org.eclipse.jgit.api.SubmoduleAddCommand.setPath(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null	org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined()	true	2355
7046.json	org.eclipse.jgit.api.PullResult.toString()	noCall	noCall	true	2802
5202.json	org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.scan(byte[], int)	noCall	noCall	true	2893
2174.json	org.eclipse.jgit.transport.PushCertificateParser.addCommand(java.lang.String)	null,null,null,null,null,null,2162.json	org.eclipse.jgit.transport.PushCertificateParserTest.testMissingPusheeField(),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateParserTest.noCert(),org.eclipse.jgit.transport.PushCertificateParserTest.disabled(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.PushCertificateParser.parse(java.io.Reader)	true	1202
1713.json	org.eclipse.jgit.transport.URIish.setScheme(java.lang.String)	557.json,2512.json	org.eclipse.jgit.junit.http.SimpleHttpServer.start(),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.getURI()	false	3176
8126.json	org.eclipse.jgit.util.ProcessResult.getExitCode()	null,8128.json,null,1120.json	org.eclipse.jgit.util.HookTest.testPostCommitRunHook(),org.eclipse.jgit.util.ProcessResult.isExecutedWithError(),org.eclipse.jgit.util.HookTest.testRunHook(),org.eclipse.jgit.hooks.GitHook.doRun()	true	1223
5180.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(long[])	5177.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.getIndexSize()	true	2893
4089.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.unlink(org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot)	4088.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.moveToHead(org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot)	true	3176
4351.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copy(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int, int)	4368.json,4129.json	org.eclipse.jgit.internal.storage.file.PackInputStream.read(byte[], int, int),org.eclipse.jgit.internal.storage.file.PackFile.readFully(long, byte[], int, int, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
1895.json	org.eclipse.jgit.transport.BasePackFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	3176
7233.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.setForce(boolean)	null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	164
4457.json	org.eclipse.jgit.internal.storage.file.GcLog.unlock()	4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	true	370
5129.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObject(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5044.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
2587.json	org.eclipse.jgit.transport.BaseReceivePack.getPushCertificateParser()	2604.json,2606.json	org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	1088
3439.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scanRef(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	3435.json,null,3438.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getRef(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.scan(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	true	2410
7957.json	org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)	3098.json,null,3108.json,7999.json,8002.json,5668.json,7599.json,7615.json,8742.json,2080.json,5457.json,8916.json,null,8003.json,1319.json,5667.json,null,2078.json,null,5664.json,7616.json,1341.json,1788.json,5456.json,3094.json,5549.json,8664.json,7948.json,7955.json,5455.json,7951.json,5548.json,null,8658.json,7956.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readRef(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFreakingHugePathName(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readValueString(),org.eclipse.jgit.util.QuotedString.BourneStyle.dequote(byte[], int, int),org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, int),org.eclipse.jgit.revwalk.RevTag.getShortMessage(),org.eclipse.jgit.treewalk.TreeWalk.getNameString(),org.eclipse.jgit.treewalk.TreeWalk.pathOf(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.patch.FormatError.getLineText(),org.eclipse.jgit.transport.PacketLineIn.readStringRaw(),org.eclipse.jgit.revwalk.FooterLine.getEmailAddress(),org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.path(),org.eclipse.jgit.util.QuotedString.GitPathStyle.dq(byte[], int, int),org.eclipse.jgit.transport.BundleFetchConnection.readLine(byte[]),org.eclipse.jgit.revwalk.RevTag.getFullMessage(),org.eclipse.jgit.patch.EGitPatchHistoryTest.NumStatReader.onCommit(java.lang.String, byte[]),org.eclipse.jgit.transport.PacketLineIn.readString(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.nameOf(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]),org.eclipse.jgit.treewalk.TreeWalk.pathOf(byte[], int, int),org.eclipse.jgit.transport.PacketLineOut.writePacket(byte[], int, int),org.eclipse.jgit.transport.SideBandInputStream.readString(int),org.eclipse.jgit.revwalk.FooterLine.getValue(),org.eclipse.jgit.internal.storage.reftable.BlockReader.name(),org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, int, int),org.eclipse.jgit.util.RawParseUtils.parseEncodingName(byte[]),org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, int),org.eclipse.jgit.revwalk.FooterLine.getKey(),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.revwalk.RevCommit.getFullMessage(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int),org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[])	true	3176
5169.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.encodeCopy(int, long, int)	5168.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.copy(long, int)	true	2895
2334.json	org.eclipse.jgit.transport.BasePackConnection.noRepository()	2333.json	org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl()	true	3176
1836.json	org.eclipse.jgit.transport.ReceiveCommand.getNewSymref()	3262.json,null,1853.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toNewRefs(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.containsSymrefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack)	true	235
7744.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.lang.String...)	null,null,null	org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testLongPaths(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.setup(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter()	true	2445
3605.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
2769.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.getHead()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
7171.json	org.eclipse.jgit.api.MergeResult.setConflicts(java.util.Map<java.lang.String, int[][]>)	noCall	noCall	true	2852
5302.json	org.eclipse.jgit.attributes.Attributes.hashCode()	noCall	noCall	true	925
10135.json	org.eclipse.jgit.archive.ZipFormat.hashCode()	noCall	noCall	true	1521
7160.json	org.eclipse.jgit.api.MergeResult.MergeStatus.isSuccessful()	null,7405.json,7045.json	org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PullResult.isSuccessful()	true	2497
7180.json	org.eclipse.jgit.api.GarbageCollectCommand.setPreserveOldPacks(boolean)	436.json	org.eclipse.jgit.pgm.Gc.run()	true	506
10023.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	10050.json,10053.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.s3.S3Repository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	843
2839.json	org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)	noCall	noCall	true	872
2298.json	org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	1994.json,1993.json,1871.json,2297.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish, java.lang.String),org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ea91b67b-c28a-4bdb-ad18-6ecf605c4ee3.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish)	true	2645
3754.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	noCall	noCall	true	2410
5358.json	org.eclipse.jgit.revwalk.RevWalk.setTreeFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	null,null,null,7270.json,null,352.json	org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.filter(java.lang.String),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.filter(java.lang.String),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.follow(java.lang.String),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run()	true	3176
4828.json	org.eclipse.jgit.internal.storage.file.GC.getAllRefs()	4817.json,4810.json	org.eclipse.jgit.internal.storage.file.GC.repack(),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2142
9840.json	org.eclipse.jgit.lib.TreeFormatter.computeId(org.eclipse.jgit.lib.ObjectInserter)	null	org.eclipse.jgit.lib.ObjectInserter.idFor(org.eclipse.jgit.lib.TreeFormatter)	true	2709
527.json	org.eclipse.jgit.junit.http.MockServletConfig.setInitParameter(java.lang.String, java.lang.String)	noCall	noCall	true	3070
6254.json	org.eclipse.jgit.revplot.PlotCommitList.nextFreeLane()	6246.json	org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	3176
5732.json	org.eclipse.jgit.revwalk.filter.OrRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.filter.RevFilter)	null,null,5734.json,null,null,null,5733.json	org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE(),org.eclipse.jgit.revwalk.filter.OrRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL(),org.eclipse.jgit.revwalk.filter.OrRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[])	true	3176
8918.json	org.eclipse.jgit.lib.Config.newState(java.util.List<org.eclipse.jgit.lib.ConfigLine>)	8907.json,8913.json,8909.json	org.eclipse.jgit.lib.Config.unsetSection(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.fromText(java.lang.String),org.eclipse.jgit.lib.Config.replaceStringList(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	3176
2784.json	org.eclipse.jgit.internal.ketch.KetchReplica.initialize(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	2759.json	org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository)	true	872
4350.json	org.eclipse.jgit.internal.storage.file.WindowCursor.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	noCall	noCall	true	2851
10400.json	org.eclipse.jgit.http.server.ServletUtils.identify(org.eclipse.jgit.lib.Repository)	10426.json,10322.json	org.eclipse.jgit.http.server.ReceivePackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable),org.eclipse.jgit.http.server.UploadPackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable)	false	1131
6692.json	org.eclipse.jgit.diff.RenameDetector.reset()	6472.json,6573.json	org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.diff.DiffFormatter.detectRenames(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2838
4937.json	org.eclipse.jgit.internal.storage.reftree.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result)	4960.json,4932.json,2882.json,4954.json,4931.json	org.eclipse.jgit.internal.storage.reftree.RefTree.checkRef(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.ketch.Proposal.success(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	884
1222.json	org.eclipse.jgit.notes.NoteMapMerger.sameNote(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	1221.json	org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	true	2709
2851.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	2849.json	org.eclipse.jgit.internal.ketch.ProposalRound.insertProposals(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp)	true	872
3191.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.markScanRequired()	3164.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.tryAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
5469.json	org.eclipse.jgit.revwalk.AbstractRevQueue.outputType()	null,null,5642.json,null	org.eclipse.jgit.revwalk.FIFORevQueueTest.testEmpty(),org.eclipse.jgit.revwalk.AlwaysEmptyRevQueueTest.testEmpty(),org.eclipse.jgit.revwalk.DepthGenerator.outputType(),org.eclipse.jgit.revwalk.LIFORevQueueTest.testEmpty()	true	3176
3697.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndRemove(org.eclipse.jgit.lib.Ref)	noCall	noCall	true	235
6648.json	org.eclipse.jgit.diff.SimilarityRenameDetector.getLeftOverDestinations()	null	org.eclipse.jgit.diff.RenameDetector.findContentRenames(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2899
550.json	org.eclipse.jgit.junit.http.RecordingLogger.info(java.lang.String, java.lang.Object...)	noCall	noCall	true	3070
5591.json	org.eclipse.jgit.revwalk.BlockObjQueue.BlockFreeList.freeBlock(org.eclipse.jgit.revwalk.BlockObjQueue.Block)	5589.json	org.eclipse.jgit.revwalk.BlockObjQueue.next()	true	3176
2745.json	org.eclipse.jgit.internal.ketch.ReplicaFetchRequest.getWantRefs()	2730.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.fetch(org.eclipse.jgit.transport.Transport, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	true	872
8618.json	org.eclipse.jgit.util.SystemReader.getDateTimeInstance(int, int)	noCall	noCall	true	2296
4801.json	org.eclipse.jgit.internal.storage.file.GC.gc()	null,null,null,4870.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7182.json,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.internal.storage.file.GcDeleteEmptyRefsFoldersTest.nonEmptyRefsFoldersAreKept(),org.eclipse.jgit.internal.storage.file.FileRepository.autoGC(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndGetStats(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansNoMerges(boolean),org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.bitmapDeletedButIdxAndPackNot(),org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.noSuchPackFolder(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapsForExcessiveBranches(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveOldPacks(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps(),org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.bitmapAndIdxDeletedButPackNot(),org.eclipse.jgit.internal.storage.file.GcTemporaryFilesTest.recentTempPacksAndIdxAreNotDeleted(),org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne(boolean),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow(),org.eclipse.jgit.internal.storage.file.GcTemporaryFilesTest.oldTempPacksAndIdxAreDeleted(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack(),org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPreserveAndPruneOldPacks(),org.eclipse.jgit.internal.storage.pack.GcCommitSelectionTest.testBitmapSpansWithMerges(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testImmediatePruning(),org.eclipse.jgit.internal.storage.file.GcDeleteEmptyRefsFoldersTest.emptyRefFoldersAreKeptIfTheyAreTooRecent(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs(boolean),org.eclipse.jgit.internal.storage.file.GcOrphanFilesTest.malformedIdxNotDeleted(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack(boolean),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.api.GarbageCollectCommand.call(),org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits(boolean),org.eclipse.jgit.internal.storage.file.GcDeleteEmptyRefsFoldersTest.emptyRefFoldersAreDeleted()	true	2142
8137.json	org.eclipse.jgit.util.StringUtils.join(java.util.Collection<java.lang.String>, java.lang.String)	1011.json	org.eclipse.jgit.merge.MergeMessageFormatter.format(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.lib.Ref)	true	2773
7545.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.first()	7544.json,null,null,null	org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime()	true	3176
386.json	org.eclipse.jgit.pgm.Reflog.run()	noCall	noCall	true	2031
7396.json	org.eclipse.jgit.api.MergeCommand.setMessage(java.lang.String)	null,null,278.json,null,null	org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageAndChangeId(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption()	true	1381
4169.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.newPackBitmapIndex(org.eclipse.jgit.lib.BitmapIndex, org.eclipse.jgit.internal.storage.file.PackBitmapIndex)	noCall	noCall	true	1922
6177.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaCacheSize(long)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
6144.json	org.eclipse.jgit.storage.pack.PackStatistics.getTimeSearchingForSizes()	noCall	noCall	true	1094
9969.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.set(long, int, long)	9968.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.setByte(int, int)	true	856
4340.json	org.eclipse.jgit.internal.storage.file.WindowCursor.getBitmapIndex()	noCall	noCall	true	1922
10210.json	org.eclipse.jgit.transport.JschSession.JschProcess.destroy()	noCall	noCall	true	2636
7474.json	org.eclipse.jgit.api.CheckoutCommand.addPath(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter()	true	2595
7495.json	org.eclipse.jgit.api.CheckoutCommand.setUpstreamMode(org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode)	null	org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream()	true	2756
8646.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset, java.nio.charset.Charset)	null,null,8645.json,null	org.eclipse.jgit.patch.GetTextTest.testGetText_Convert(),org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591(),org.eclipse.jgit.patch.FileHeader.getScriptText(),org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary()	true	3176
5305.json	org.eclipse.jgit.attributes.Attribute.getKey()	5315.json,null,5291.json,5320.json	org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.attributes.AttributeTest.testBasic(),org.eclipse.jgit.attributes.Attributes.put(org.eclipse.jgit.attributes.Attribute),org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	1249
6840.json	org.eclipse.jgit.api.FetchCommand.getRemote()	noCall	noCall	true	2823
8549.json	org.eclipse.jgit.util.RefList.put(T)	3587.json,null,3960.json,null,8016.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.put(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.util.RefListTest.testPutReplaceEntry(),org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef),org.eclipse.jgit.util.RefListTest.testPutNewEntry(),org.eclipse.jgit.util.RefMap.put(java.lang.String, org.eclipse.jgit.lib.Ref)	true	3060
2375.json	org.eclipse.jgit.transport.PackParser.needNewObjectIds()	2451.json	org.eclipse.jgit.transport.PackParser.addObjectAndTrack(org.eclipse.jgit.transport.PackedObjectInfo)	true	3040
24.json	org.eclipse.jgit.awtui.AwtAuthenticator.install()	391.json	org.eclipse.jgit.pgm.Main.run(java.lang.String[])	true	3176
9993.json	org.eclipse.jgit.lfs.lib.LongObjectId.readObject(java.io.ObjectInputStream)	noCall	noCall	true	856
3659.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.flushBlock()	3658.json,3646.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.buffer(byte[], int, int),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2410
5757.json	org.eclipse.jgit.revwalk.filter.MaxCountRevFilter.create(int)	null,7270.json,null	org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter()	true	2360
7835.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	7833.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader)	true	608
7763.json	org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.toString()	noCall	noCall	true	1971
2258.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String)	noCall	noCall	true	3176
6299.json	org.eclipse.jgit.gitrepo.RepoCommand.setBranch(java.lang.String)	noCall	noCall	true	1493
9551.json	org.eclipse.jgit.lib.RefUpdate.updateImpl(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.RefUpdate.Store)	9549.json,9546.json	org.eclipse.jgit.lib.RefUpdate.delete(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.lib.RefUpdate.update(org.eclipse.jgit.revwalk.RevWalk)	true	3176
5290.json	org.eclipse.jgit.attributes.Attributes.getAll()	null,null,null,5315.json,null,null	org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesHandler.getAttributes(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	925
10209.json	org.eclipse.jgit.transport.JschSession.JschProcess.isRunning()	10211.json,10208.json	org.eclipse.jgit.transport.JschSession.JschProcess.waitFor(),org.eclipse.jgit.transport.JschSession.JschProcess.exitValue()	true	2636
8884.json	org.eclipse.jgit.lib.Config.getRefSpecs(java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	288
1013.json	org.eclipse.jgit.merge.MergeMessageFormatter.addConflictsMessage(java.util.List<java.lang.String>, java.lang.StringBuilder)	1012.json	org.eclipse.jgit.merge.MergeMessageFormatter.formatWithConflicts(java.lang.String, java.util.List<java.lang.String>)	true	1967
2075.json	org.eclipse.jgit.transport.BaseConnection.getMessageWriter()	1916.json,1517.json	org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackPushConnection.enableCapabilities(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3011
4999.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.CommitSelectionHelper.iterator()	noCall	noCall	true	1922
2327.json	org.eclipse.jgit.transport.SideBandOutputStream.flush()	null,null,null,null,null,null,2592.json,null,null,null,null,null	org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_PROGRESS(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Large(),org.eclipse.jgit.transport.UploadPack.reportInternalServerErrorOverSideband(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_ERROR(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks2(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks1(),org.eclipse.jgit.transport.BaseReceivePack.fatalError(java.lang.String),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks3(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_CH_DATA(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_Small(),org.eclipse.jgit.transport.SideBandOutputStreamTest.testFlush(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	3176
5293.json	org.eclipse.jgit.attributes.Attributes.containsKey(java.lang.String)	5320.json	org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	925
9971.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromObjectId(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopy()	true	856
1117.json	org.eclipse.jgit.hooks.GitHook.getStdinArgs()	1120.json	org.eclipse.jgit.hooks.GitHook.doRun()	true	1195
7698.json	org.eclipse.jgit.treewalk.filter.PathFilter.isDone(org.eclipse.jgit.treewalk.TreeWalk)	7885.json,7568.json,7896.json,7975.json,7886.json	org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String)	true	2669
4512.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getLevelTwo(long, int)	4514.json,4513.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.getOffset(long),org.eclipse.jgit.internal.storage.file.PackIndexV2.getObjectId(long)	true	1808
7061.json	org.eclipse.jgit.api.Git.branchList()	null,null,null,null,null,null,null,null,null,null,null,431.json,null,null,null	org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.pgm.CloneTest.testClone(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.pgm.CloneTest.testCloneEmpty(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.pgm.Branch.list(),org.eclipse.jgit.api.GitConstructionTest.testWrap(),org.eclipse.jgit.api.GitConstructionTest.testOpen(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2800
1897.json	org.eclipse.jgit.transport.BasePackFetchConnection.didFetchIncludeTags()	noCall	noCall	true	3176
4943.json	org.eclipse.jgit.internal.storage.reftree.Command.toString()	noCall	noCall	true	884
5125.json	org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int)	5123.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	1880
2507.json	org.eclipse.jgit.transport.TransportAmazonS3.loadPropertiesFile(java.io.File)	2506.json	org.eclipse.jgit.transport.TransportAmazonS3.loadProperties()	true	2907
1051.json	org.eclipse.jgit.merge.StrategyResolve.getName()	noCall	noCall	true	2841
10335.json	org.eclipse.jgit.http.server.GitFilter.register(org.eclipse.jgit.http.server.glue.ServletBinder)	noCall	noCall	true	3070
3767.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.add(org.eclipse.jgit.internal.storage.dfs.DfsReftable)	3768.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.autoAdd()	true	278
3233.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry.compare(org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry, org.eclipse.jgit.internal.storage.reftable.MergedReftable.LogQueueEntry)	noCall	noCall	true	297
924.json	org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>)	923.json	org.eclipse.jgit.merge.MergeAlgorithm.merge(org.eclipse.jgit.diff.SequenceComparator<S>, S, S, S)	true	3076
8253.json	org.eclipse.jgit.util.io.AutoCRLFInputStream.close()	noCall	noCall	true	2108
5127.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream)	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
3183.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.LogEntry.valueSize()	noCall	noCall	true	297
2280.json	org.eclipse.jgit.transport.InternalPushConnection.Anonymous-9faa373a-b723-4388-8da5-ccfafc7367d7.run()	noCall	noCall	true	3176
4597.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.ofObjectType(int)	null	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.iterator()	true	1922
6206.json	org.eclipse.jgit.storage.pack.PackConfig.setBitmapExcessiveBranchCount(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	963
10111.json	org.eclipse.jgit.archive.ArchiveFormats.unregisterAll()	noCall	noCall	false	1839
5526.json	org.eclipse.jgit.revwalk.RevCommit.parse(byte[])	null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod()	true	2851
4178.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	1922
7853.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7852.json,7802.json,7808.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType(),org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.treewalk.WorkingTreeIterator.handleAutoCRLF(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	824
5099.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	5098.json,null,3372.json,5097.json	org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packHeads(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	2490
2146.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-5c7840bc-75ad-4965-80c6-33a13f700457.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
2635.json	org.eclipse.jgit.transport.ReceivePack.getPreReceiveHook()	noCall	noCall	true	3176
9336.json	org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult(org.eclipse.jgit.transport.ReceiveCommand)	4502.json,9333.json,3260.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	319
7563.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.back(int)	null	org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testBackDoesNothing()	true	3176
9032.json	org.eclipse.jgit.lib.PersonIdent.getName()	null,9040.json,null,9039.json,null,null,null,null,null,null,null,null,null,null,null,118.json,null,null,null,380.json,null,1031.json,270.json,272.json,null,7426.json,null,null,null,null,null,null,null,null,null,9038.json,2847.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.lib.PersonIdent.toString(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsAllWhitespace(),org.eclipse.jgit.lib.PersonIdent.toExternalString(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsOtherBadCharacters(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_illegalEncoding(),org.eclipse.jgit.awtui.CommitGraphPane.NameCellRender.getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertReflogEquals(org.eclipse.jgit.lib.ReflogEntry, org.eclipse.jgit.lib.ReflogEntry, boolean),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.pgm.Blame.author(int),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine(),org.eclipse.jgit.merge.SquashMessageFormatter.toString(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevTag),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.api.RebaseCommand.toAuthorScript(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testEmptyNameAndEmail(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded(),org.eclipse.jgit.lib.PersonIdent.equals(java.lang.Object),org.eclipse.jgit.internal.ketch.ProposalRound.canCombine(org.eclipse.jgit.lib.PersonIdent, org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.putPersonIdent(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsNameAndEmail(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	3176
7759.json	org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.toString()	noCall	noCall	true	2839
5876.json	org.eclipse.jgit.dircache.DirCache.read(java.io.File, org.eclipse.jgit.util.FS)	null,null,null,null,5875.json,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.PathCheckoutCommandTest.assertStageOneToThree(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.inIndex(java.lang.String),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_TempIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag()	false	3176
5539.json	org.eclipse.jgit.revwalk.RevCommit.getCommitTime()	null,1363.json,7502.json,2752.json,null,7512.json,null,null,5770.json,1035.json,6218.json,null,5691.json,4989.json,null,1903.json,null,null,2841.json,1375.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.After.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.blame.Candidate.getTime(),org.eclipse.jgit.api.NameRevCommand.minCommitTime(),org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1(),org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.Before.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.Between.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.RecursiveMerger.mockAuthor(java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.revplot.PlotWalk.PlotRefComparator.timeof(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.revwalk.RevWalkUtils.findBranchesReachableFrom(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.isRecentCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.transport.BasePackFetchConnection.maxTimeWanted(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.blame.Candidate.ReverseCandidate.getTime(),org.eclipse.jgit.internal.ketch.StageBuilder.tmpAuthor(java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	false	3176
6715.json	org.eclipse.jgit.diff.DiffEntry.add(java.lang.String, org.eclipse.jgit.lib.AnyObjectId)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes(),org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile1(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_UnstagedFile(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_UntrackedFile(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile()	true	2899
1215.json	org.eclipse.jgit.notes.NoteMapMerger.equals(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.notes.NoteBucket)	1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
9885.json	org.eclipse.jgit.lfs.LfsPrePushHook.getObjectSize(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevObject)	9884.json	org.eclipse.jgit.lfs.LfsPrePushHook.findLfsPointers(java.util.Set<org.eclipse.jgit.lfs.LfsPointer>, org.eclipse.jgit.revwalk.ObjectWalk)	true	102
2518.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.writeFile(java.lang.String, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String)	noCall	noCall	true	3176
6030.json	org.eclipse.jgit.dircache.DirCacheCheckout.removeEmptyParents(java.io.File)	6026.json,6040.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.dircache.DirCacheCheckout.cleanUpConflicts()	true	2844
3650.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onEndWholeObject(org.eclipse.jgit.transport.PackedObjectInfo)	noCall	noCall	true	2410
2289.json	org.eclipse.jgit.transport.NetRC.getEntries()	noCall	noCall	true	1408
9965.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.abbreviate(int)	null,null,null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testAbbreviate(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testGetFirstByte(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareLong(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testNotEquals(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareByte()	true	856
1954.json	org.eclipse.jgit.transport.FetchProcess.closeConnection(org.eclipse.jgit.transport.FetchResult)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
8098.json	org.eclipse.jgit.util.TemporaryBuffer.toByteArray(int)	null,7807.json	org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	925
3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3251.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	235
7635.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId(org.eclipse.jgit.lib.MutableObjectId)	7597.json	org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, int)	true	3176
3775.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.initOutDesc(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase)	3774.json,3772.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor)	true	278
2823.json	org.eclipse.jgit.internal.ketch.KetchSystem.newCommitter(org.eclipse.jgit.util.time.ProposedTimestamp)	2762.json,2851.json,2752.json,2850.json	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.insertSingleProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
2443.json	org.eclipse.jgit.transport.PackParser.inflateAndReturn(org.eclipse.jgit.transport.PackParser.Source, long)	2397.json,2398.json,2410.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackedObjectInfo, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	2886
5663.json	org.eclipse.jgit.revwalk.RevTag.parseBody(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	3176
1047.json	org.eclipse.jgit.merge.Merger.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	7385.json	org.eclipse.jgit.api.MergeCommand.call()	true	870
7503.json	org.eclipse.jgit.api.NameRevCommand.add(org.eclipse.jgit.lib.ObjectId)	null,null,7504.json,null	org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult(),org.eclipse.jgit.api.NameRevCommandTest.assertOneResult(java.lang.String, org.eclipse.jgit.api.NameRevCommand, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.NameRevCommand.add(java.lang.Iterable<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor()	true	1917
9534.json	org.eclipse.jgit.lib.RefUpdate.disableRefLog()	7212.json,4565.json,4849.json,4568.json,9333.json,null,7008.json,9533.json,6887.json	org.eclipse.jgit.api.StashDropCommand.createRefUpdate(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.linkHEAD(org.eclipse.jgit.lib.RefUpdate),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.ResetCommand.call(),org.eclipse.jgit.lib.RefUpdate.setRefLogMessage(java.lang.String, boolean),org.eclipse.jgit.api.CloneCommand.checkout(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.FetchResult)	true	3176
10094.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.formatHexChar(char[], int, int)	10093.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.toHexCharArray(int)	true	856
3265.json	org.eclipse.jgit.internal.storage.reftable.EmptyLogCursor.getUpdateIndex()	noCall	noCall	true	297
3919.json	org.eclipse.jgit.internal.storage.io.BlockSource.Anonymous-1f04c621-ef72-46ac-8f7f-f5a62ed4b3e1.read(long, int)	noCall	noCall	true	297
1165.json	org.eclipse.jgit.notes.LeafBucket.Anonymous-04d72cf1-c011-47c6-b18f-2cdb54a75586.hasNext()	noCall	noCall	true	2766
904.json	org.eclipse.jgit.ant.tasks.GitInitTask.execute()	noCall	noCall	true	2596
9627.json	org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	null,null,null	org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase(),org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldReturnNullWhenBranchDoesntExist(),org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase()	true	2336
6961.json	org.eclipse.jgit.api.Status.getMissing()	null,null,null,null,null,null,94.json,null,96.json,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile()	true	2636
2883.json	org.eclipse.jgit.internal.ketch.Proposal.abort()	2900.json,2853.json	org.eclipse.jgit.internal.ketch.KetchLeader.queueProposal(org.eclipse.jgit.internal.ketch.Proposal),org.eclipse.jgit.internal.ketch.ProposalRound.abort()	true	872
9564.json	org.eclipse.jgit.lib.IndexDiff.setIgnoreSubmoduleMode(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)	null,null,null,7468.json,null,null,null,null	org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.StatusCommand.call(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)	true	1314
5037.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.cache(byte[], int, int)	5172.json,5016.json	org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.cache(byte[], int, int),org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
1291.json	org.eclipse.jgit.transport.RemoteConfig.isMirror()	noCall	noCall	true	3176
9086.json	org.eclipse.jgit.lib.SymbolicRef.isSymbolic()	null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor()	true	3059
10086.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getVerifyAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	856
7534.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(byte[])	null,null,null,null,null,null,null,null,null,null,null,7551.json,7544.json,null,null,null,9842.json,5252.json,null,null,null,null,7537.json	org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFreakingHugePathName(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenSecond(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenFirst(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName(),org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testFindAttributesWhenMissing(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime(),org.eclipse.jgit.lib.TreeFormatter.toString(),org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testEmptyTree_AtEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards(),org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo(),org.eclipse.jgit.treewalk.CanonicalTreeParser.reset(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	3176
10069.json	org.eclipse.jgit.lfs.server.internal.LfsGson.toJson(java.lang.Object, java.lang.Appendable)	noCall	noCall	false	184
962.json	org.eclipse.jgit.merge.StrategyOneSided.newMerger(org.eclipse.jgit.lib.Repository, boolean)	noCall	noCall	true	2816
5052.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.getDigest()	5138.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeChecksum(org.eclipse.jgit.internal.storage.pack.PackOutputStream)	true	3176
5809.json	org.eclipse.jgit.revwalk.TopoSortGenerator.next()	noCall	noCall	true	3176
7852.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEolStreamType()	7821.json,7833.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream(),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader)	true	824
8040.json	org.eclipse.jgit.util.FS_Win32_Cygwin.isCygwin()	null	org.eclipse.jgit.util.FS.FSFactory.detect(java.lang.Boolean)	true	3176
9586.json	org.eclipse.jgit.lib.IndexDiff.getUntrackedFolders()	null,null,null,null,null,null,null,null,null,null,6964.json,null,null,null,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.lib.IndexDiffTest.testRemoved(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.Status.getUntrackedFolders(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked()	true	2403
3189.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.nameUtf8(org.eclipse.jgit.lib.Ref)	null	org.eclipse.jgit.internal.storage.reftable.BlockWriter.RefEntry.valueSize()	true	297
6809.json	org.eclipse.jgit.events.IndexChangedEvent.isInternal()	noCall	noCall	true	28
2065.json	org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.close()	noCall	noCall	true	3176
1867.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-ecb50871-f897-4746-b1db-692a2be11282.getSchemes()	noCall	noCall	true	2645
3640.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getIndexVersion()	noCall	noCall	true	1922
8827.json	org.eclipse.jgit.lib.BranchConfig.getTrackingBranch()	null,null,null,9627.json	org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch(),org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch(),org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch(),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	2123
9344.json	org.eclipse.jgit.lib.ObjectId.isId(java.lang.String)	null,8967.json,null,null,6309.json,2063.json,null,6313.json,9126.json,7188.json,214.json,1961.json,2522.json,null,2222.json,null	org.eclipse.jgit.lib.ObjectIdTest.test005_notIsId(),org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String),org.eclipse.jgit.lib.ObjectIdTest.test004_isId(),org.eclipse.jgit.lib.ObjectIdTest.test006_notIsId(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.transport.TransportSftp.SftpObjectDB.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ObjectIdTest.test007_isId(),org.eclipse.jgit.gitrepo.RepoCommand.findRef(java.lang.String, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.RepositoryCache.FileKey.isValidHead(java.io.File),org.eclipse.jgit.api.RenameBranchCommand.call(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.readRef(java.util.TreeMap<java.lang.String, org.eclipse.jgit.lib.Ref>, java.lang.String),org.eclipse.jgit.lib.ObjectIdTest.test008_notIsId(),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream),org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	true	3176
4955.json	org.eclipse.jgit.internal.storage.reftree.RefTree.isValidRef(org.eclipse.jgit.internal.storage.reftree.Command)	4954.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	880
5215.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getType()	5245.json,5045.json,5120.json,5132.json,5151.json,null,5128.json,5030.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.writeWholeObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.reuseDeltaFor(org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-f5042ec6-97f3-474f-8ab9-e0d394a07672.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjects(org.eclipse.jgit.internal.storage.pack.PackOutputStream, java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.type()	true	3176
1407.json	org.eclipse.jgit.transport.UploadPack.getRequestPolicy()	null	org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String)	true	2461
498.json	org.eclipse.jgit.junit.http.AppServer.makePrivate(java.io.File)	null	org.eclipse.jgit.junit.http.AppServer.createTestSslContextFactory(java.lang.String)	true	297
8457.json	org.eclipse.jgit.util.FS.execute(java.lang.ProcessBuilder, java.io.InputStream)	null,null,null,null,null,null,null,7807.json	org.eclipse.jgit.util.RunExternalScriptTest.testStdErrExecute(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdInExecute(),org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBinExecute(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked(),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	935
7122.json	org.eclipse.jgit.api.RebaseResult.uncommittedChanges(java.util.List<java.lang.String>)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1650
10096.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.setUrl(java.lang.String)	null	org.eclipse.jgit.lfs.server.fs.LfsServerTest.setup()	true	113
909.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute()	noCall	noCall	true	2596
4039.json	org.eclipse.jgit.internal.storage.file.PackInserter.Reader.StreamLoader.Anonymous-7835a852-f296-4537-8d33-f0704e916b16.read(byte[])	noCall	noCall	true	171
5438.json	org.eclipse.jgit.revwalk.RevObject.remove(org.eclipse.jgit.revwalk.RevFlagSet)	null	org.eclipse.jgit.revwalk.RevObjectTest.testRemoveRevFlagSet()	true	3176
3172.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.encodeSuffixAndType(int, int)	3175.json,3176.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.writeKey(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream),org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry.sizeBytes()	true	297
3211.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.byObjectId(org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.internal.storage.reftable.MergedReftableTest.twoTableById()	true	297
5165.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.insert(java.lang.String)	noCall	noCall	true	2900
2336.json	org.eclipse.jgit.transport.BasePackConnection.wantCapability(java.lang.StringBuilder, java.lang.String)	1517.json,1907.json	org.eclipse.jgit.transport.BasePackPushConnection.enableCapabilities(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.BasePackFetchConnection.enableCapabilities()	true	3176
1987.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation)	1986.json,1983.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	true	3176
5682.json	org.eclipse.jgit.revwalk.FIFORevQueue.everbodyHasFlag(int)	noCall	noCall	true	3176
9405.json	org.eclipse.jgit.lib.DefaultTypedConfigGetter.getEnum(org.eclipse.jgit.lib.Config, T[], java.lang.String, java.lang.String, java.lang.String, T)	noCall	noCall	true	288
2308.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	2306.json	org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
1646.json	org.eclipse.jgit.transport.DaemonClient.getInputStream()	null,null	org.eclipse.jgit.transport.Daemon.Anonymous-877d5170-d55d-47c6-bb03-61a3912bd36a.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>),org.eclipse.jgit.transport.Daemon.Anonymous-adeefff8-c989-4e7d-a4a4-bbc0e9b84c59.execute(org.eclipse.jgit.transport.DaemonClient, org.eclipse.jgit.lib.Repository, java.util.Collection<java.lang.String>)	true	3176
9645.json	org.eclipse.jgit.lib.RefDatabase.performsAtomicTransactions()	2604.json,9326.json	org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	1310
1845.json	org.eclipse.jgit.transport.ReceiveCommand.hasCustomRefLog()	9335.json,9336.json,9334.json	org.eclipse.jgit.lib.BatchRefUpdate.getRefLogMessage(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.lib.BatchRefUpdate.isRefLogIncludingResult(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.lib.BatchRefUpdate.isRefLogDisabled(org.eclipse.jgit.transport.ReceiveCommand)	true	319
3796.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.resolve(org.eclipse.jgit.internal.storage.dfs.DfsReader, java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	3720.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.resolveImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList, org.eclipse.jgit.lib.AbbreviatedObjectId, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>)	true	2410
2381.json	org.eclipse.jgit.transport.PackParser.getNewObjectIds()	2619.json	org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity()	true	3040
6154.json	org.eclipse.jgit.storage.pack.PackConfig.isReuseDeltas()	null,6209.json,6210.json,5117.json,null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.writeVerifyPack2(boolean),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings()	true	3176
6994.json	org.eclipse.jgit.api.CommitCommand.setAll(boolean)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,301.json,null,null	org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DescribeCommandTest.modify(java.lang.String),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy)	true	2867
9443.json	org.eclipse.jgit.lib.CommitBuilder.getParentIds()	9454.json	org.eclipse.jgit.lib.CommitBuilder.build()	true	3176
3558.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.setStreamFileThreshold(int)	3561.json,null	org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	2410
5245.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString()	noCall	noCall	true	2893
9448.json	org.eclipse.jgit.lib.CommitBuilder.addParentId(org.eclipse.jgit.lib.AnyObjectId)	7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	true	2851
1223.json	org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
159.json	org.eclipse.jgit.pgm.debug.VerifyReftable.groupById(java.util.List<org.eclipse.jgit.lib.Ref>)	158.json	org.eclipse.jgit.pgm.debug.VerifyReftable.byId(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader)	true	297
5867.json	org.eclipse.jgit.ignore.IgnoreNode.isIgnored(java.lang.String, boolean)	noCall	noCall	true	2890
3317.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.minUpdateIndex()	3638.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setReftableStats(org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.noTables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs()	true	297
6805.json	org.eclipse.jgit.events.RefsChangedEvent.getListenerType()	noCall	noCall	true	2907
7306.json	org.eclipse.jgit.api.TagCommand.isSigned()	noCall	noCall	true	2844
2608.json	org.eclipse.jgit.transport.BaseReceivePack.parseShallow(java.lang.String)	2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	705
10318.json	org.eclipse.jgit.http.server.UploadPackServlet.Factory.destroy()	noCall	noCall	true	2627
55.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setInstanceFollowRedirects(boolean)	noCall	noCall	true	1572
6210.json	org.eclipse.jgit.storage.pack.PackConfig.toString()	noCall	noCall	true	1913
2252.json	org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String)	2220.json,2225.json	org.eclipse.jgit.transport.TransportHttp.getConnection(org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream, java.lang.String),org.eclipse.jgit.transport.TransportHttp.smartPush(java.lang.String, org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream)	true	3070
5328.json	org.eclipse.jgit.revwalk.RevObjectList.clear()	5415.json	org.eclipse.jgit.revwalk.RevCommitList.clear()	true	3176
7319.json	org.eclipse.jgit.api.CheckoutResult.getModifiedList()	null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows()	true	2133
8545.json	org.eclipse.jgit.util.RefList.copy(int)	3948.json,null,3950.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String),org.eclipse.jgit.util.RefListTest.testCopyLeadingPrefix(),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanOne(java.lang.String)	true	3060
10088.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getDir()	noCall	noCall	true	856
2265.json	org.eclipse.jgit.transport.TransportHttp.SmartHttpFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.io.OutputStream)	noCall	noCall	true	3070
9321.json	org.eclipse.jgit.lib.BatchRefUpdate.addCommand(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	2762.json,2625.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardDoesNotDoExpensiveMergeCheck(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.newBatchUpdate(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ForceUpdate(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NoConflictIfDeleted(),org.eclipse.jgit.lib.BatchRefUpdate.addCommand(org.eclipse.jgit.transport.ReceiveCommand...)	true	2210
7203.json	org.eclipse.jgit.api.CherryPickCommand.setMainlineParentNumber(int)	7405.json,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge()	true	1485
6864.json	org.eclipse.jgit.api.DeleteTagCommand.setTags(java.lang.String...)	null,null,null,null,null,363.json	org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run()	true	2485
903.json	org.eclipse.jgit.ant.tasks.GitInitTask.setBare(boolean)	noCall	noCall	true	2596
5220.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearChainLength()	5119.json	org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	1892
1597.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getHeaderField(java.lang.String)	noCall	noCall	true	1572
6036.json	org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String)	6024.json,6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2844
9356.json	org.eclipse.jgit.lib.ObjectId.readObject(java.io.ObjectInputStream)	noCall	noCall	true	2916
9315.json	org.eclipse.jgit.lib.BatchRefUpdate.isAtomic()	null,3256.json,null,4927.json,3257.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.newBatchUpdate(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	782
6451.json	org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate)	6440.json,6452.json,6456.json,6442.json,6453.json,6455.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.blame.BlameGenerator.blameEntireRegionOnParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	true	2567
553.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.String, java.lang.Object...)	noCall	noCall	true	3070
6271.json	org.eclipse.jgit.gitrepo.RepoProject.getGroups()	6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	true	740
9466.json	org.eclipse.jgit.lib.TagBuilder.getMessage()	9468.json,null	org.eclipse.jgit.lib.TagBuilder.build(),org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod()	true	3176
5228.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()	5245.json,5057.json,5148.json,5013.json,5012.json,5007.json,null,5149.json,5105.json,5120.json,5141.json,5104.json,5131.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.DeltaTask.getAdjustedWeight(org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search(),org.eclipse.jgit.internal.storage.pack.PackWriter.Anonymous-f5042ec6-97f3-474f-8ab9-e0d394a07672.compare(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.have(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.get(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.pruneEdgesFromObjectList(java.util.List<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.willInclude(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2851
1688.json	org.eclipse.jgit.transport.AmazonS3.Anonymous-17373ff6-e4a0-4b9c-bf76-294c6294ffee.close()	noCall	noCall	true	3176
9895.json	org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	9908.json	org.eclipse.jgit.lfs.LfsBlobFilter.smudgeLfsBlob(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectLoader)	true	113
2386.json	org.eclipse.jgit.transport.PackParser.setLockMessage(java.lang.String)	2614.json,1320.json,1916.json,1380.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.downloadPack(org.eclipse.jgit.lib.ProgressMonitor)	true	2692
4905.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.close()	noCall	noCall	true	880
5035.json	org.eclipse.jgit.internal.storage.pack.DeltaCache.canCache(int, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5016.json,5170.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.cacheDelta(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.ThreadSafeDeltaCache.canCache(int, org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
5870.json	org.eclipse.jgit.dircache.DirCache.cmp(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheEntry)	6014.json,null,5899.json,6013.json	org.eclipse.jgit.dircache.DirCacheBuilder.resort(),org.eclipse.jgit.dircache.DirCache.Anonymous-08e428ef-290f-43e4-90da-37d6f002e5cb.compare(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.dircache.DirCache.nextEntry(int),org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry)	true	3176
6579.json	org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator)	null,null,247.json,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff()	true	2838
6207.json	org.eclipse.jgit.storage.pack.PackConfig.getBitmapInactiveBranchAgeInDays()	6209.json,6210.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString()	true	963
490.json	org.eclipse.jgit.junit.Assert.assertEquals(boolean, boolean)	null,null,null,null	org.eclipse.jgit.lib.ValidRefNameTest.testNormalizeBranchName(),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.assertV3TreeEntry(int, java.lang.String, boolean, boolean, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertFileNameMatch(java.lang.String, java.lang.String, char, boolean, boolean),org.eclipse.jgit.fnmatch.FileNameMatcherTest.assertMatch(java.lang.String, java.lang.String, boolean, boolean)	true	2088
6958.json	org.eclipse.jgit.api.Status.getAdded()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,94.json,null,96.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.CheckoutCommandTest.assertRepositoryCondition(int),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.pgm.Status.printPorcelainStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.pgm.Status.printLongStatus(org.eclipse.jgit.api.Status),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd()	true	2636
5105.json	org.eclipse.jgit.internal.storage.pack.PackWriter.get(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2851
9148.json	org.eclipse.jgit.lib.RefRename.getResult()	noCall	noCall	true	3176
1715.json	org.eclipse.jgit.transport.URIish.getRawPath()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,1728.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testWindowsFile(),org.eclipse.jgit.transport.URIishTest.testWindowsFile2(),org.eclipse.jgit.transport.URIishTest.testURIEncode_00(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndEmptyPortIsAmbiguous(),org.eclipse.jgit.transport.URIishTest.testGitWithUserHome(),org.eclipse.jgit.transport.URIishTest.testGitProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileWithUserHome(),org.eclipse.jgit.transport.URIishTest.testUserPasswordAndPort(),org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode(),org.eclipse.jgit.transport.URIishTest.testGitSshProto(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath(),org.eclipse.jgit.transport.URIish.format(boolean, boolean),org.eclipse.jgit.transport.URIishTest.testFileProtoUnix(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithEmptyPortAndPath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash2(),org.eclipse.jgit.transport.URIishTest.testSshGitProto(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindows(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsMissingHostSlash(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithEmailUserAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHostAndPort(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort(),org.eclipse.jgit.transport.URIishTest.testGetSet(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser(),org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde(),org.eclipse.jgit.transport.URIishTest.testPathSeparator(),org.eclipse.jgit.transport.URIishTest.testRelativePath(),org.eclipse.jgit.transport.URIishTest.testFileProtoWindowsWithHost(),org.eclipse.jgit.transport.URIishTest.testURIEncode_0a(),org.eclipse.jgit.transport.URIishTest.testSshProto(),org.eclipse.jgit.transport.URIishTest.testGitProtoUnix(),org.eclipse.jgit.transport.URIishTest.testUnixFile(),org.eclipse.jgit.transport.URIishTest.testUNC(),org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding(),org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode()	true	2381
1892.json	org.eclipse.jgit.transport.RefLeaseSpec.getRef()	1894.json,6921.json	org.eclipse.jgit.transport.RefLeaseSpec.toString(),org.eclipse.jgit.api.PushCommand.setRefLeaseSpecs(java.util.List<org.eclipse.jgit.transport.RefLeaseSpec>)	true	486
7176.json	org.eclipse.jgit.api.MergeResult.getCheckoutConflicts()	278.json,null	org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy)	true	1975
4691.json	org.eclipse.jgit.internal.storage.file.BitSet.toEWAHCompressedBitmap()	4178.json,4574.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmap(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.combine()	true	1922
3491.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation.wasDeltaAttempted()	noCall	noCall	true	2127
2.json	org.eclipse.jgit.awtui.SwingCommitList.createLane()	noCall	noCall	true	3176
1749.json	org.eclipse.jgit.transport.TransferConfig.getRefFilter()	1402.json	org.eclipse.jgit.transport.UploadPack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	true	1803
5117.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
7512.json	org.eclipse.jgit.api.NameRevCommand.minCommitTime()	7502.json	org.eclipse.jgit.api.NameRevCommand.call()	true	1917
5336.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.add(org.eclipse.jgit.revwalk.RevCommit)	5678.json,5679.json	org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
9050.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getObjectDirectory()	9064.json,9075.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment(org.eclipse.jgit.util.SystemReader),org.eclipse.jgit.lib.BaseRepositoryBuilder.setupInternals()	true	2907
4287.json	org.eclipse.jgit.internal.storage.file.WindowCache.tableSize(org.eclipse.jgit.storage.file.WindowCacheConfig)	noCall	noCall	true	3176
1160.json	org.eclipse.jgit.notes.NoteParser.isHex()	1153.json	org.eclipse.jgit.notes.NoteParser.parseTree()	true	2767
3803.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader)	3753.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean)	true	2410
1596.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getInputStream()	noCall	noCall	true	1572
8865.json	org.eclipse.jgit.lib.NullProgressMonitor.isCancelled()	noCall	noCall	true	3176
3354.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setIncludeDeletes(boolean)	null,null	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	206
5337.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.unpop(org.eclipse.jgit.revwalk.RevCommit)	5441.json,5679.json	org.eclipse.jgit.revwalk.LIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.FIFORevQueue.unpop(org.eclipse.jgit.revwalk.RevCommit)	true	3176
2650.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.append(java.lang.String)	null	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	722
6237.json	org.eclipse.jgit.revplot.PlotCommit.isChild(org.eclipse.jgit.revplot.PlotCommit)	noCall	noCall	true	3176
6239.json	org.eclipse.jgit.revplot.PlotCommit.getRef(int)	noCall	noCall	true	2691
7484.json	org.eclipse.jgit.api.CheckoutCommand.getStartPointObjectId()	7477.json,7471.json	org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.api.CheckoutCommand.call()	true	2756
5333.json	org.eclipse.jgit.revwalk.BlockRevQueue.Block.isFull()	5678.json	org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.revwalk.RevCommit)	true	3176
5905.json	org.eclipse.jgit.dircache.DirCache.toArray(int, org.eclipse.jgit.dircache.DirCacheEntry[], int, int)	5937.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.fastKeep(int, int)	true	3176
5646.json	org.eclipse.jgit.revwalk.RevFlagSet.containsAll(java.util.Collection<?>)	null	org.eclipse.jgit.revwalk.RevFlagSetTest.testContainsAll()	true	3176
5347.json	org.eclipse.jgit.revwalk.RevWalk.markStart(java.util.Collection<org.eclipse.jgit.revwalk.RevCommit>)	1912.json,1904.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin(),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int)	true	3176
10044.json	org.eclipse.jgit.lfs.server.s3.S3Config.getBucket()	10055.json,10057.json	org.eclipse.jgit.lfs.server.s3.S3Repository.validateConfig(org.eclipse.jgit.lfs.server.s3.S3Config),org.eclipse.jgit.lfs.server.s3.S3Repository.getObjectUrl(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	843
3259.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	3604.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
3463.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.setGitwebDescription(java.lang.String)	noCall	noCall	true	572
8430.json	org.eclipse.jgit.util.FS.resolveGrandparentFile(java.io.File)	noCall	noCall	true	1976
1162.json	org.eclipse.jgit.notes.LeafBucket.getNote(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder(),org.eclipse.jgit.notes.LeafBucketTest.testEmpty(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMissingNote(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle(),org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace(),org.eclipse.jgit.notes.LeafBucketTest.testParseFive(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty(),org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst(),org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast()	true	2767
5992.json	org.eclipse.jgit.dircache.DirCacheEntry.getRawPath()	noCall	noCall	true	1564
10292.json	org.eclipse.jgit.http.server.glue.MetaFilter.newIdentitySet()	10298.json,10287.json	org.eclipse.jgit.http.server.glue.MetaFilter.createPipelines(),org.eclipse.jgit.http.server.glue.MetaFilter.destroy()	true	3070
4062.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.Anonymous-31db6662-b09b-4c65-a47c-a7ed9dddf0cb.read(byte[], int, int)	noCall	noCall	true	2901
3708.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadBlocksCount()	noCall	noCall	true	387
8970.json	org.eclipse.jgit.lib.Repository.resolveAbbreviation(java.lang.String)	8967.json	org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String)	true	2846
484.json	org.eclipse.jgit.junit.StrictWorkMonitor.beginTask(java.lang.String, int)	noCall	noCall	true	1848
1911.json	org.eclipse.jgit.transport.BasePackFetchConnection.Anonymous-ef7db85f-0771-466d-8f52-ffc78475c74f.requiresCommitBody()	noCall	noCall	true	2673
4470.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId)	4466.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.add(org.eclipse.jgit.lib.AnyObjectId)	true	2833
9298.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.iterator()	null,null,null,4177.json	org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator(),org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.iterator()	true	2645
3819.json	org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.invalid()	3907.json,3908.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.packMap(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList),org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableMap(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)	true	2410
8654.json	org.eclipse.jgit.patch.FileHeader.newHunkHeader(int)	8682.json	org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int)	true	3176
6253.json	org.eclipse.jgit.revplot.PlotCommitList.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)	6246.json	org.eclipse.jgit.revplot.PlotCommitList.enter(int, org.eclipse.jgit.revplot.PlotCommit<L>)	true	3176
3313.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.getStats()	null,null,135.json,null,3386.json,null,null,3242.json,3259.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithoutTombstoneResurrected(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.write(java.util.Collection<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.write(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, long, java.util.List<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.compactsReftables(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.reftableWithTombstoneNotResurrected()	true	297
9145.json	org.eclipse.jgit.lib.RefRename.getRefLogMessage()	4918.json	org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename()	true	3059
7182.json	org.eclipse.jgit.api.GarbageCollectCommand.call()	436.json,null,null,null,null	org.eclipse.jgit.pgm.Gc.run(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit()	true	2029
5083.json	org.eclipse.jgit.internal.storage.pack.PackWriter.setUseBitmaps(boolean)	null,1518.json,null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.createVerifyOpenPack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, boolean, boolean, boolean),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack(),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	1922
5681.json	org.eclipse.jgit.revwalk.FIFORevQueue.clear()	noCall	noCall	true	3176
6316.json	org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)	noCall	noCall	true	1509
5043.json	org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeFileHeader(int, long)	5113.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream)	true	3176
6669.json	org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long)	6665.json,6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	true	2816
3835.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.create(boolean)	noCall	noCall	true	2410
7183.json	org.eclipse.jgit.api.GarbageCollectCommand.getStatistics()	noCall	noCall	true	1909
2148.json	org.eclipse.jgit.transport.TransportGitAnon.openFetch()	noCall	noCall	true	3176
8447.json	org.eclipse.jgit.util.FS.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String)	null,8446.json,null,1120.json	org.eclipse.jgit.util.HookTest.testPostCommitRunHook(),org.eclipse.jgit.util.FS.runHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[]),org.eclipse.jgit.util.HookTest.testRunHook(),org.eclipse.jgit.hooks.GitHook.doRun()	true	1223
9973.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte[], int)	9972.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte[])	true	856
1032.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	1933
7373.json	org.eclipse.jgit.api.ArchiveCommand.setPrefix(java.lang.String)	362.json	org.eclipse.jgit.pgm.Archive.run()	true	1635
5322.json	org.eclipse.jgit.attributes.AttributesHandler.parentOf(T)	5318.json	org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(java.lang.String, int, boolean, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	true	849
200.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.Anonymous-a26fae55-4da7-405f-9b5f-a0e081f4bf42.create()	noCall	noCall	true	2799
6228.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.laneX(org.eclipse.jgit.revplot.PlotLane)	6229.json	org.eclipse.jgit.revplot.AbstractPlotRenderer.laneC(org.eclipse.jgit.revplot.PlotLane)	true	3176
6931.json	org.eclipse.jgit.api.PushCommand.isThin()	noCall	noCall	true	2805
6907.json	org.eclipse.jgit.api.CloneCommand.setCallback(org.eclipse.jgit.api.CloneCommand.Callback)	230.json	org.eclipse.jgit.pgm.Clone.run()	true	409
2793.json	org.eclipse.jgit.internal.ketch.KetchReplica.removeStaged(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	2792.json	org.eclipse.jgit.internal.ketch.KetchReplica.prepareTxnCommitted(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	true	872
7232.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.addPath(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.alreadyClosedSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	164
1602.json	org.eclipse.jgit.transport.http.JDKHttpConnection.setDoOutput(boolean)	noCall	noCall	true	1572
8120.json	org.eclipse.jgit.util.TemporaryBuffer.BlockInputStream.read()	noCall	noCall	true	2844
2990.json	org.eclipse.jgit.transport.OpenSshConfig.refresh()	10178.json,10179.json	org.eclipse.jgit.transport.OpenSshConfig.get(org.eclipse.jgit.util.FS),org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String)	true	3176
6016.json	org.eclipse.jgit.dircache.DirCacheCheckout.getUpdated()	null,null,null,7471.json,null,6025.json,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6(),org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.lib.DirCacheCheckoutTest.getUpdated(),org.eclipse.jgit.dircache.DirCacheCheckout.checkout(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b()	true	2844
7954.json	org.eclipse.jgit.util.RawParseUtils.decode(byte[])	null,null,null,null,2252.json,8216.json,null,null,9016.json,null,8916.json,null,null,null,null,null,null,null,null,6045.json,null,4952.json,null,null,null,null,4855.json,null,null,4974.json,null,7807.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.attributes.CGitAttributesTest.toString(org.eclipse.jgit.util.TemporaryBuffer),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.treewalk.filter.ByteArraySet.toString(),org.eclipse.jgit.transport.TransportHttp.readSmartHeaders(java.io.InputStream, java.lang.String),org.eclipse.jgit.util.io.MessageWriter.toString(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.lib.Repository.readCommitMsgFile(java.lang.String),org.eclipse.jgit.diff.DiffFormatterReflowTest.assertFormatted(java.lang.String),org.eclipse.jgit.lib.Config.addIncludedConfig(java.util.List<org.eclipse.jgit.lib.ConfigLine>, org.eclipse.jgit.lib.ConfigLine, int),org.eclipse.jgit.lib.ObjectCheckerTest.Anonymous-dc4adb93-adf7-408f-8ecb-a79de239258c.checkBlob(byte[]),org.eclipse.jgit.junit.JGitTestUtil.s(byte[]),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.toString(),org.eclipse.jgit.diff.RawTextTest.testWriteLine1(),org.eclipse.jgit.diff.RawTextTest.testWriteLine2(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.RawTextTest.testWriteLine3(),org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.internal.storage.reftree.RefTree.toRef(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.dircache.DirCacheEntry, java.lang.String),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.readString(org.eclipse.jgit.lib.ObjectLoader),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.api.RebaseCommandTest.readFile(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.file.FileRepository.getGitwebDescription(),org.eclipse.jgit.storage.file.FileBasedConfig.load(),org.eclipse.jgit.treewalk.WorkingTreeIterator.readContentAsNormalizedString(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(org.eclipse.jgit.lib.ObjectReader, int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.ignore.CGitIgnoreTest.toString(org.eclipse.jgit.util.TemporaryBuffer),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	3176
6594.json	org.eclipse.jgit.diff.DiffFormatter.toFileHeader(org.eclipse.jgit.diff.DiffEntry)	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderWithoutIndexLine(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify()	true	2894
4898.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabase.getRepository()	4921.json,null,4978.json,4918.json,4931.json	org.eclipse.jgit.internal.storage.reftree.AlwaysFailUpdate.getRepository(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.getRepository(),org.eclipse.jgit.internal.storage.reftree.RefTreeRename.doRename(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.apply(java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>)	true	880
6789.json	org.eclipse.jgit.events.ConfigChangedEvent.dispatch(org.eclipse.jgit.events.ConfigChangedListener)	noCall	noCall	true	2900
4707.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onObjectData(org.eclipse.jgit.transport.PackParser.Source, byte[], int, int)	noCall	noCall	true	2692
4976.json	org.eclipse.jgit.internal.storage.reftree.RefTreeNames.isRefTree(org.eclipse.jgit.lib.RefDatabase, java.lang.String)	3361.json,4817.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.GC.repack()	true	879
5158.json	org.eclipse.jgit.internal.storage.pack.PackExt.newPackExt(java.lang.String)	noCall	noCall	true	1927
390.json	org.eclipse.jgit.pgm.Main.main(java.lang.String[])	noCall	noCall	true	3176
10063.json	org.eclipse.jgit.lfs.server.TransferHandler.forOperation(java.lang.String, org.eclipse.jgit.lfs.server.LargeFileRepository, java.util.List<org.eclipse.jgit.lfs.server.LfsObject>)	noCall	noCall	false	856
10256.json	org.eclipse.jgit.http.server.glue.MetaServlet.destroy()	noCall	noCall	true	3070
7135.json	org.eclipse.jgit.api.PullCommand.getRemoteBranchName()	noCall	noCall	true	1576
7653.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.stopWalk()	7564.json,null,7591.json	org.eclipse.jgit.treewalk.EmptyTreeIterator.stopWalk(),org.eclipse.jgit.treewalk.EmptyTreeIteratorTest.testStopWalkCallsParent(),org.eclipse.jgit.treewalk.TreeWalk.stopWalk()	true	3176
7436.json	org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	7405.json,7399.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	2756
3526.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.setInput(long, java.util.zip.Inflater)	3525.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.inflate(org.eclipse.jgit.internal.storage.dfs.DfsReader, long, int)	true	1397
5525.json	org.eclipse.jgit.revwalk.FixUninterestingGenerator.next()	noCall	noCall	true	3176
5399.json	org.eclipse.jgit.revwalk.RevWalk.resetRetain(org.eclipse.jgit.revwalk.RevFlag...)	1912.json	org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin()	true	3176
1740.json	org.eclipse.jgit.transport.TransferConfig.skipList()	1739.json	org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)	true	892
9879.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash()	9878.json	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.close()	true	856
5846.json	org.eclipse.jgit.ignore.internal.PathMatcher.createNameMatcher0(java.lang.String, java.lang.Character, boolean, boolean)	5843.json,5844.json	org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(java.util.List<java.lang.String>, java.lang.Character, boolean),org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character, boolean)	true	1322
414.json	org.eclipse.jgit.pgm.TextBuiltin.getResourceBundle()	411.json,84.json	org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.Remote.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	true	2944
4894.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.getPacks()	4893.json,4892.json,4891.json	org.eclipse.jgit.internal.storage.file.LocalCachedPack.hasObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation),org.eclipse.jgit.internal.storage.file.LocalCachedPack.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.LocalCachedPack.getObjectCount()	true	2627
3848.json	org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getCachedBytes()	noCall	noCall	true	2410
8199.json	org.eclipse.jgit.util.io.TimeoutOutputStream.endWrite()	8193.json,8196.json,8195.json,8197.json	org.eclipse.jgit.util.io.TimeoutOutputStream.write(int),org.eclipse.jgit.util.io.TimeoutOutputStream.flush(),org.eclipse.jgit.util.io.TimeoutOutputStream.write(byte[], int, int),org.eclipse.jgit.util.io.TimeoutOutputStream.close()	true	3176
4371.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readInt()	noCall	noCall	true	1922
1272.json	org.eclipse.jgit.transport.RemoteConfig.getName()	null,null,85.json,null,null,1268.json,null,1267.json,null,1265.json,null,null,6885.json,null,null,null,1266.json,1987.json,null,1989.json,null,null,null,null,null,1269.json	org.eclipse.jgit.pgm.RemoteTest.testAdd(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.pgm.Remote.print(java.util.List<org.eclipse.jgit.transport.RemoteConfig>),org.eclipse.jgit.pgm.RemoteTest.testVerboseList(),org.eclipse.jgit.pgm.RemoteTest.testSetUrlPush(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, int, int),org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, boolean, boolean),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config),org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags(),org.eclipse.jgit.pgm.RemoteTest.testList(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.pgm.RemoteTest.testSetUrl(),org.eclipse.jgit.transport.Transport.openAll(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.Transport.Operation),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags(),org.eclipse.jgit.api.AbstractRemoteCommandTest.assertRemoteConfigEquals(org.eclipse.jgit.transport.RemoteConfig, org.eclipse.jgit.transport.RemoteConfig),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.RemoteConfig.unset(org.eclipse.jgit.lib.Config, java.lang.String)	true	3176
6896.json	org.eclipse.jgit.api.CloneCommand.setFs(org.eclipse.jgit.util.FS)	noCall	noCall	true	162
7926.json	org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], int, org.eclipse.jgit.util.MutableInteger)	2700.json,7951.json,4059.json,7952.json,4058.json	org.eclipse.jgit.transport.PushCertificateIdent.parse(java.lang.String),org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.util.RawParseUtils.parsePersonIdentOnly(byte[], int),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)	true	3176
3703.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getReadPackIndexCount()	noCall	noCall	true	387
8696.json	org.eclipse.jgit.patch.HunkHeader.getEndOffset()	6826.json	org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader)	true	3176
1795.json	org.eclipse.jgit.transport.DaemonService.isEnabled()	1802.json	org.eclipse.jgit.transport.DaemonService.isEnabledFor(org.eclipse.jgit.lib.Repository)	true	3176
6892.json	org.eclipse.jgit.api.CloneCommand.setURI(java.lang.String)	null,null,null,null,230.json,null,null,null,null,null,null,null,null,null,null,7265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,null,null,null,null,null,null,null,914.json,null,null	org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneBareRepositoryDefaultDirectory(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote(),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryDefaultDirectory(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.ant.tasks.GitCloneTask.execute(),org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2686
9019.json	org.eclipse.jgit.lib.Repository.writeHeadsFile(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>, java.lang.String)	9007.json,9010.json,9011.json,9012.json	org.eclipse.jgit.lib.Repository.writeMergeHeads(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.Repository.writeOrigHead(org.eclipse.jgit.lib.ObjectId)	true	2622
3394.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.releaseMemory()	3393.json	org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, byte[])	true	2410
8717.json	org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	8679.json	org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int)	true	3176
7138.json	org.eclipse.jgit.api.PullCommand.setFastForward(org.eclipse.jgit.api.MergeCommand.FastForwardMode)	noCall	noCall	true	359
3402.json	org.eclipse.jgit.internal.storage.dfs.ReftableStack.readers()	3774.json,3384.json,null,3133.json,3605.json,3606.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactReftables(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.nextUpdateIndex(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.reader(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	286
2197.json	org.eclipse.jgit.transport.HttpAuthMethod.Digest.H(java.lang.String)	null	org.eclipse.jgit.transport.HttpAuthMethod.Digest.configureRequest(org.eclipse.jgit.transport.http.HttpConnection)	true	2813
6028.json	org.eclipse.jgit.dircache.DirCacheCheckout.filterOut(java.util.ArrayList<java.lang.String>, org.eclipse.jgit.util.IntList)	6026.json	org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout()	true	299
7346.json	org.eclipse.jgit.api.BlameCommand.setStartCommit(org.eclipse.jgit.lib.AnyObjectId)	null	org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge()	true	2567
8365.json	org.eclipse.jgit.util.IO.resetAndSkipFully(java.io.Reader, long)	8364.json	org.eclipse.jgit.util.IO.readLine(java.io.Reader, int)	true	1068
2908.json	org.eclipse.jgit.internal.ketch.KetchLeader.isIdle()	2912.json,2914.json,2795.json	org.eclipse.jgit.internal.ketch.KetchLeader.commitAsync(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.KetchLeader.snapshot(),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
5291.json	org.eclipse.jgit.attributes.Attributes.put(org.eclipse.jgit.attributes.Attribute)	null,5320.json	org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.attributes.AttributesHandler.expandMacro(org.eclipse.jgit.attributes.Attribute, org.eclipse.jgit.attributes.Attributes)	true	925
2261.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.outOfOrderAdvertisement(java.lang.String)	2260.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.readAdvertisedImpl(java.io.BufferedReader)	true	3176
257.json	org.eclipse.jgit.pgm.Show.noRenames(boolean)	noCall	noCall	true	2154
189.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.getURI()	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	856
6103.json	org.eclipse.jgit.storage.file.WindowCacheConfig.isPackedGitMMAP()	6111.json	org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
6514.json	org.eclipse.jgit.diff.MyersDiff.main(java.lang.String[])	noCall	noCall	true	3169
8184.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(int)	noCall	noCall	true	2342
5216.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaDepth()	5245.json,5012.json,5218.json,5029.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow(),org.eclipse.jgit.internal.storage.pack.ObjectToPack.getChainLength(),org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.depth()	true	3176
128.json	org.eclipse.jgit.pgm.Glog.walkLoop()	noCall	noCall	true	3176
8718.json	org.eclipse.jgit.patch.CombinedFileHeader.parseIndexLine(int, int)	8717.json	org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
7240.json	org.eclipse.jgit.api.StashApplyCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy)	7401.json	org.eclipse.jgit.api.RebaseCommand.autoStashApply()	true	1496
5251.json	org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[], boolean)	null,null,5250.json	org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.doTest(),org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk(),org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[])	true	2893
4480.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.hasCRC32Support()	noCall	noCall	true	3176
84.json	org.eclipse.jgit.pgm.Remote.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	noCall	noCall	true	911
7965.json	org.eclipse.jgit.util.RawParseUtils.charsetForAlias(java.lang.String)	7949.json	org.eclipse.jgit.util.RawParseUtils.parseEncoding(byte[])	true	2617
5818.json	org.eclipse.jgit.ignore.FastIgnoreRule.hashCode()	null	org.eclipse.jgit.ignore.BasicRuleTest.test()	true	1322
8201.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.write(char[], int, int)	noCall	noCall	true	2093
8119.json	org.eclipse.jgit.util.TemporaryBuffer.Block.isFull()	8091.json,8092.json,8094.json	org.eclipse.jgit.util.TemporaryBuffer.write(int),org.eclipse.jgit.util.TemporaryBuffer.write(byte[], int, int),org.eclipse.jgit.util.TemporaryBuffer.copy(java.io.InputStream)	true	3176
917.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictEnd()	915.json,916.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(org.eclipse.jgit.merge.MergeChunk)	true	1171
2761.json	org.eclipse.jgit.internal.ketch.LocalReplica.blockingFetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaFetchRequest)	noCall	noCall	true	872
2929.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onEndThinPack()	noCall	noCall	true	319
9587.json	org.eclipse.jgit.lib.IndexDiff.getIndexMode(java.lang.String)	noCall	noCall	true	2349
5974.json	org.eclipse.jgit.dircache.DirCacheEntry.isMerged()	7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	true	2057
5254.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.nextSlash(byte[], int, int)	5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
3846.json	org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.getSize()	noCall	noCall	true	2410
5945.json	org.eclipse.jgit.dircache.DirCacheEditor.add(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit)	null,null,null,null,null,null,null,null,null,null,null,7479.json,null,null,null,7481.json,null,null,null,null,null,null,4961.json,null,null,null,4959.json,null,null,null,null,null,null,null,null,null,7040.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.merge.CrissCrossMergeTest.setIndex(org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule(),org.eclipse.jgit.lib.IndexDiffTest.removeFromIndex(java.lang.String),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.dircache.DirCachePathEditTest.testDuplicateFiles(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromCommit(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildIndex(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.internal.storage.reftree.RefTree.cleanupPeeledRef(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.lib.DirCacheCheckoutTest.buildTree(java.util.HashMap<java.lang.String, java.lang.String>),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.rm(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.merge.MergerTest.addSubmoduleToIndex(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.lib.IndexDiffTest.testAdded(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.submodule.SubmoduleInitTest.addSubmoduleToIndex(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileReplacesTree(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.dircache.DirCachePathEditTest.testTreeReplacesFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.dircache.DirCachePathEditTest.testFileOverlapsTree(),org.eclipse.jgit.junit.TestRepository.CommitBuilder.edit(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
8411.json	org.eclipse.jgit.util.FS.delete(java.io.File)	noCall	noCall	true	1580
48.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setConnectTimeout(int)	noCall	noCall	true	1572
8576.json	org.eclipse.jgit.util.BlockList.remove(int)	null,null,8585.json,null,null	org.eclipse.jgit.util.BlockListTest.testRemoveFromEnd(),org.eclipse.jgit.util.BlockListTest.testAddRemoveAdd(),org.eclipse.jgit.util.BlockList.MyIterator.remove(),org.eclipse.jgit.util.BlockListTest.testRemoveRejectsBadIndexes(),org.eclipse.jgit.util.BlockListTest.testRemoveSlowPath()	true	2651
9369.json	org.eclipse.jgit.lib.ObjectChecker.checkCommit(byte[])	null,null,null,null,null,null,null,null	org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptCommitter(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor(),org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptAuthor(),org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent()	true	3176
7961.json	org.eclipse.jgit.util.RawParseUtils.commitMessage(byte[], int)	5549.json,5548.json,5554.json,5753.json	org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.revwalk.RevCommit.getFullMessage(),org.eclipse.jgit.revwalk.RevCommit.getFooterLines(),org.eclipse.jgit.revwalk.filter.MessageRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	true	3176
2786.json	org.eclipse.jgit.internal.ketch.KetchReplica.hasAccepted(org.eclipse.jgit.internal.ketch.LogIndex)	2790.json,2910.json,2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.shouldPushUnbatchedCommit(org.eclipse.jgit.internal.ketch.LogIndex, boolean),org.eclipse.jgit.internal.ketch.KetchLeader.onReplicaUpdate(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
8730.json	org.eclipse.jgit.patch.CombinedHunkHeader.extractFileLines(java.lang.StringBuilder, java.lang.String[], int[])	noCall	noCall	true	3176
387.json	org.eclipse.jgit.pgm.Reflog.toString(org.eclipse.jgit.lib.ReflogEntry, int)	386.json	org.eclipse.jgit.pgm.Reflog.run()	true	2031
6326.json	org.eclipse.jgit.gitrepo.ManifestParser.isNestedReferencefile(org.eclipse.jgit.gitrepo.RepoProject.ReferenceFile)	6324.json	org.eclipse.jgit.gitrepo.ManifestParser.removeNestedCopyAndLinkfiles()	true	900
1055.json	org.eclipse.jgit.nls.NLS.setLocale(java.util.Locale)	null,null,null,null,null,null	org.eclipse.jgit.nls.NLSTest.testNLSLocale(),org.eclipse.jgit.nls.NLSTest.GetBundle.call(),org.eclipse.jgit.http.server.RootLocaleTest.setUp(),org.eclipse.jgit.nls.NLSTest.testThreadTranslationBundleInheritance(),org.eclipse.jgit.nls.RootLocaleTest.setUp(),org.eclipse.jgit.nls.NLSTest.testParallelThreadsWithDifferentLocales()	true	3012
8317.json	org.eclipse.jgit.util.SshSupport.runSshCommand(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, int)	9869.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish)	true	113
5850.json	org.eclipse.jgit.ignore.internal.PathMatcher.iterate(java.lang.String, int, int, boolean, boolean)	5847.json	org.eclipse.jgit.ignore.internal.PathMatcher.matches(java.lang.String, boolean, boolean)	true	1322
3978.json	org.eclipse.jgit.internal.storage.file.RefDirectory.isSymRef(byte[], int)	3977.json	org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	3059
4331.json	org.eclipse.jgit.internal.storage.file.ByteWindow.size()	4353.json	org.eclipse.jgit.internal.storage.file.WindowCursor.copyPackAsIs(org.eclipse.jgit.internal.storage.file.PackFile, long, org.eclipse.jgit.internal.storage.pack.PackOutputStream)	true	3176
8369.json	org.eclipse.jgit.util.RawSubStringPattern.lc(byte)	8368.json	org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte)	true	3176
324.json	org.eclipse.jgit.pgm.opt.CmdLineParser.MyOptionDef.required()	noCall	noCall	true	893
8277.json	org.eclipse.jgit.util.LongMap.grow()	8275.json	org.eclipse.jgit.util.LongMap.put(long, V)	true	3176
1838.json	org.eclipse.jgit.transport.ReceiveCommand.getType()	4502.json,1951.json,4927.json,9333.json,1249.json,4499.json,9326.json,4497.json,2621.json,4501.json,4503.json,3255.json,2613.json,1859.json,2619.json,1853.json,3261.json,2803.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.TrackingRefUpdate.Command.decode(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkConflictingNames(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.BaseReceivePack.needPack(),org.eclipse.jgit.transport.ReceiveCommand.toString(),org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.toResultString(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	3176
9984.json	org.eclipse.jgit.lfs.lib.LongObjectId.fromRaw(byte[])	9879.json,null,9878.json,null,null	org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.verifyHash(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testGetByte(),org.eclipse.jgit.lfs.internal.AtomicObjectOutputStream.close(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(java.nio.file.Path),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte()	true	856
1833.json	org.eclipse.jgit.transport.ReceiveCommand.getOldId()	null,4502.json,3258.json,9333.json,null,2869.json,9326.json,null,2136.json,2621.json,4501.json,1859.json,2789.json,null,2139.json,1853.json,null,3260.json,2795.json	org.eclipse.jgit.transport.BaseReceivePackTest.parseCommand(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.lib.BatchRefUpdate.newUpdate(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.PushCertificateStore.commandsEqual(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificate.toStringBuilder(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.ReceiveCommand.toString(),org.eclipse.jgit.internal.ketch.KetchReplica.copy(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificate.commandsEqual(org.eclipse.jgit.transport.PushCertificate, org.eclipse.jgit.transport.PushCertificate),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.writeLog(org.eclipse.jgit.internal.storage.reftable.ReftableWriter, long, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	3176
49.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.setReadTimeout(int)	noCall	noCall	true	1572
8651.json	org.eclipse.jgit.patch.FileHeader.hasMetaDataChanges()	null,null,null,null,null,null,null,null,8682.json,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.Patch.parseHunks(org.eclipse.jgit.patch.FileHeader, int, int),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Empty(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FailFooBar(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
1005.json	org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean)	1033.json,974.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.merge.ResolveMerger.mergeImpl()	true	1933
416.json	org.eclipse.jgit.pgm.TextBuiltin.getRepository()	378.json,87.json	org.eclipse.jgit.pgm.Log.run(),org.eclipse.jgit.pgm.Config.list()	true	3176
1021.json	org.eclipse.jgit.merge.MergeConfig.getFastForwardMode()	7387.json,null,null,null	org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge(),org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions()	true	1577
7887.json	org.eclipse.jgit.submodule.SubmoduleWalk.getSubmoduleDirectory(org.eclipse.jgit.lib.Repository, java.lang.String)	7298.json,7905.json	org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.getDirectory()	true	2355
1006.json	org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean)	1005.json	org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean)	true	1556
7315.json	org.eclipse.jgit.api.TagCommand.isAnnotated()	noCall	noCall	true	1864
2605.json	org.eclipse.jgit.transport.BaseReceivePack.getReceivedPackStatistics()	noCall	noCall	true	629
1789.json	org.eclipse.jgit.transport.SignedPushConfig.setCertNonceSeed(java.lang.String)	noCall	noCall	true	1088
7366.json	org.eclipse.jgit.api.ArchiveCommand.registerFormat(java.lang.String, org.eclipse.jgit.api.ArchiveCommand.Format<?>)	10109.json,null	org.eclipse.jgit.archive.ArchiveFormats.register(java.lang.String, org.eclipse.jgit.api.ArchiveCommand.Format<?>),org.eclipse.jgit.api.ArchiveCommandTest.setup()	true	1843
421.json	org.eclipse.jgit.pgm.TextBuiltin.die(boolean, java.lang.Throwable)	noCall	noCall	true	894
4941.json	org.eclipse.jgit.internal.storage.reftree.Command.getOldRef()	4959.json,2890.json	org.eclipse.jgit.internal.storage.reftree.RefTree.apply(org.eclipse.jgit.dircache.DirCacheEditor, org.eclipse.jgit.internal.storage.reftree.Command),org.eclipse.jgit.internal.ketch.Proposal.toString()	true	884
9854.json	org.eclipse.jgit.lfs.errors.CorruptLongObjectException.getContentHash()	noCall	noCall	true	856
10275.json	org.eclipse.jgit.http.server.glue.RegexPipeline.toString()	noCall	noCall	true	3070
2616.json	org.eclipse.jgit.transport.BaseReceivePack.packInputStream()	2614.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack()	true	474
4003.json	org.eclipse.jgit.internal.storage.file.PackInserter.checkExisting(boolean)	null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.overwriteExistingPack(),org.eclipse.jgit.internal.storage.file.PackInserterTest.checkExisting()	true	221
4874.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.insert(int, byte[], int, int)	noCall	noCall	true	2543
7052.json	org.eclipse.jgit.api.Git.lsRemoteRepository()	75.json,6292.json,null	org.eclipse.jgit.pgm.LsRemote.run(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.sha1(java.lang.String, java.lang.String),org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository()	true	1763
3046.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.initRefIndex()	3036.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekRef(java.lang.String)	true	297
10195.json	org.eclipse.jgit.transport.OpenSshConfig.Host.getConfig()	null,null,10197.json,10157.json,null,null,null,null,null,null	org.eclipse.jgit.transport.OpenSshConfigTest.testIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testMissingArgument(),org.eclipse.jgit.transport.OpenSshConfig.getConfig(java.lang.String),org.eclipse.jgit.transport.JschConfigSessionFactory.createSession(org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, java.lang.String, java.lang.String, java.lang.String, int, org.eclipse.jgit.transport.OpenSshConfig.Host),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiHost(),org.eclipse.jgit.transport.OpenSshConfigTest.testNegatedPattern(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookupsWithModification(),org.eclipse.jgit.transport.OpenSshConfigTest.testMultiIdentityFile(),org.eclipse.jgit.transport.OpenSshConfigTest.testRepeatedLookups(),org.eclipse.jgit.transport.OpenSshConfigTest.testPattern()	true	289
8215.json	org.eclipse.jgit.util.io.MessageWriter.flush()	noCall	noCall	true	3011
4180.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper.getBitmapCount()	noCall	noCall	true	976
3707.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getBlockCacheHits()	noCall	noCall	true	387
9300.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.newSegment()	9299.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.grow()	true	2645
7368.json	org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(java.lang.String)	7371.json	org.eclipse.jgit.api.ArchiveCommand.call()	true	1830
3543.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.getCachedBytes()	noCall	noCall	true	1397
6415.json	org.eclipse.jgit.blame.BlameResult.hasSourceData(int)	noCall	noCall	true	2567
1607.json	org.eclipse.jgit.transport.http.JDKHttpConnection.usingProxy()	noCall	noCall	true	1572
9893.json	org.eclipse.jgit.lfs.Protocol.gson()	9889.json,9895.json,9869.json	org.eclipse.jgit.lfs.LfsPrePushHook.requestBatchUpload(org.eclipse.jgit.transport.http.HttpConnection, java.util.Set<org.eclipse.jgit.lfs.LfsPointer>),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getSshAuthentication(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String, org.eclipse.jgit.transport.URIish)	true	100
411.json	org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	408.json,410.json	org.eclipse.jgit.pgm.TextBuiltin.parseArguments(java.lang.String[]),org.eclipse.jgit.pgm.TextBuiltin.printUsageAndExit(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser)	true	3176
10378.json	org.eclipse.jgit.http.server.GitSmartHttpTools.writeSideBand(java.io.OutputStream, java.lang.String)	noCall	noCall	false	2285
4471.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.index(org.eclipse.jgit.lib.AnyObjectId)	4469.json,4470.json	org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.contains(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.UnpackedObjectCache.Table.add(org.eclipse.jgit.lib.AnyObjectId)	true	2833
7796.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.idBuffer()	7831.json,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, boolean, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId()	true	3176
2049.json	org.eclipse.jgit.transport.TransportSftp.openFetch()	noCall	noCall	true	3176
2925.json	org.eclipse.jgit.internal.fsck.FsckPackParser.onInflatedObjectData(org.eclipse.jgit.transport.PackedObjectInfo, int, byte[])	noCall	noCall	true	319
6937.json	org.eclipse.jgit.api.PushCommand.setOutputStream(java.io.OutputStream)	noCall	noCall	true	1908
3702.json	org.eclipse.jgit.internal.storage.dfs.DfsReaderIoStats.getScanPacks()	noCall	noCall	true	387
9063.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.readEnvironment()	909.json,7025.json,6114.json,202.json,396.json,900.json,177.json	org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.api.InitCommand.call(),org.eclipse.jgit.storage.file.FileRepositoryBuilder.create(java.io.File),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.pgm.Main.openGitDir(java.lang.String),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run()	true	2907
7204.json	org.eclipse.jgit.api.CherryPickCommand.setNoCommit(boolean)	7405.json,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit()	true	1427
3718.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.getCachedPacksAndUpdate(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder)	noCall	noCall	true	1922
5031.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.size()	5013.json,5020.json,5015.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.delta(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.deltaSizeLimit(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry)	true	2893
2825.json	org.eclipse.jgit.internal.ketch.KetchSystem.Anonymous-e24e276b-94bc-4fc8-8125-3f534ea51816.openRepository()	noCall	noCall	true	872
4660.json	org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.cloneEntry()	null	org.eclipse.jgit.internal.storage.file.PackWriterTest.verifyObjectsOrder(org.eclipse.jgit.lib.ObjectId[])	true	3176
2098.json	org.eclipse.jgit.transport.PushProcess.getPushOptions()	noCall	noCall	true	688
8224.json	org.eclipse.jgit.util.io.UnionInputStream.available()	null,null	org.eclipse.jgit.util.io.UnionInputStreamTest.testEmptyStream(),org.eclipse.jgit.util.io.UnionInputStreamTest.testReadSingleBytes()	true	3078
8232.json	org.eclipse.jgit.util.io.IsolatedOutputStream.flush()	noCall	noCall	true	573
3687.json	org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.isNameConflicting(java.lang.String)	3256.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
6273.json	org.eclipse.jgit.gitrepo.RepoProject.setRecommendShallow(java.lang.String)	6316.json	org.eclipse.jgit.gitrepo.ManifestParser.startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)	true	740
8455.json	org.eclipse.jgit.util.FS.shutdownAndAwaitTermination(java.util.concurrent.ExecutorService)	8454.json	org.eclipse.jgit.util.FS.runProcess(java.lang.ProcessBuilder, java.io.OutputStream, java.io.OutputStream, java.io.InputStream)	true	1223
2767.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.isIdle()	2771.json	org.eclipse.jgit.internal.ketch.LeaderSnapshot.toString()	true	872
5214.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten()	5245.json,5045.json,5129.json,5130.json,5131.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObject(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.writeBase(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
5500.json	org.eclipse.jgit.revwalk.ObjectWalk.growPathBuf(int)	5499.json	org.eclipse.jgit.revwalk.ObjectWalk.updatePathBuf(org.eclipse.jgit.revwalk.ObjectWalk.TreeVisit)	true	2493
6098.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setPackedGitLimit(long)	null,null,null,null,6111.json,null	org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitLimit_0(),org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_Limits1(),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit()	true	3176
7456.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.getFile(java.lang.String)	7399.json,7402.json,7411.json,7401.json,7414.json,7409.json,7408.json,7435.json,7424.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.checkSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes(),org.eclipse.jgit.api.RebaseCommand.writeCurrentCommit(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.checkParameters(),org.eclipse.jgit.api.RebaseCommand.parseAuthor()	true	1912
9261.json	org.eclipse.jgit.lib.Constants.newMessageDigest()	10399.json,4717.json,5106.json,null,5892.json,null,3974.json,null,null,null,3971.json,null,4719.json,5886.json,6091.json	org.eclipse.jgit.http.server.ServletUtils.etag(byte[]),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack(),org.eclipse.jgit.internal.storage.pack.PackWriter.computeName(),org.eclipse.jgit.internal.storage.file.PackFileTest.digest(org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.dircache.DirCache.writeTo(java.io.File, java.io.OutputStream),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.digest(org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.transport.PackParserTest.digest(org.eclipse.jgit.util.TemporaryBuffer.Heap),org.eclipse.jgit.junit.TestRepository.assertHash(org.eclipse.jgit.revwalk.RevObject, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String),org.eclipse.jgit.dircache.DirCache.readFrom(java.io.InputStream),org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte[])	true	3176
3327.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.refIndexSize()	null,135.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexSeek(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.noIndexScan(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.indexScan()	true	297
8642.json	org.eclipse.jgit.patch.FileHeader.getBuffer()	null,null,null,null,null,null,null,6585.json	org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_DeleteGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_AddGitLink(),org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.patch.FileHeader, org.eclipse.jgit.diff.RawText, org.eclipse.jgit.diff.RawText)	true	3176
7308.json	org.eclipse.jgit.api.TagCommand.setTagger(org.eclipse.jgit.lib.PersonIdent)	null	org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag()	true	2844
8001.json	org.eclipse.jgit.util.QuotedString.GitPathStyle.quote(java.lang.String)	null,5251.json,110.json,null,null,null,6584.json	org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuoteAtAndNumber(),org.eclipse.jgit.internal.storage.pack.BinaryDelta.format(byte[], boolean),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.assertQuote(java.lang.String, java.lang.String),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_Empty(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testQuote_BareA(),org.eclipse.jgit.diff.DiffFormatter.quotePath(java.lang.String)	true	3176
1080.json	org.eclipse.jgit.errors.NoClosingBracketException.createMessage(int, java.lang.String, java.lang.String)	noCall	noCall	true	3176
6624.json	org.eclipse.jgit.diff.SimilarityIndex.hashLargeObject(org.eclipse.jgit.lib.ObjectLoader)	6623.json	org.eclipse.jgit.diff.SimilarityIndex.hash(org.eclipse.jgit.lib.ObjectLoader)	true	1254
188.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.stop()	noCall	noCall	true	856
1132.json	org.eclipse.jgit.notes.NoteMap.shortenRefName(java.lang.String)	null	org.eclipse.jgit.notes.NoteMapTest.testShorteningNoteRefName()	true	2575
7828.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.current()	7661.json,null,7821.json,7819.json,7818.json,null,7817.json,7833.json,7674.json	org.eclipse.jgit.treewalk.FileTreeIterator.enterSubtree(),org.eclipse.jgit.lib.DirCacheCheckoutTest.TestFileTreeIterator.enterSubtree(),org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream(),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified(),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength(),org.eclipse.jgit.treewalk.FileTreeIteratorWithTimeControl.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength(),org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.FileTreeIterator.getEntryFile()	true	3176
7867.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.skipEntriesEqual()	7868.json	org.eclipse.jgit.treewalk.NameConflictTreeWalk.stopWalk()	true	3176
7468.json	org.eclipse.jgit.api.StatusCommand.call()	null,null,null,7399.json,null,null,null,null,null,null,null,null,null,null,null,null,null,92.json,null,null,null,null,null,null,7351.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7230.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.StashApplyCommandTest.indexDelete(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.pgm.Status.run(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify(),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.api.CheckoutCommandTest.assertRepositoryCondition(int),org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithRepository(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.CleanCommandTest.testClean(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirs()	true	2636
7411.json	org.eclipse.jgit.api.RebaseCommand.checkSteps(java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>)	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1677
4493.json	org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	3059
7312.json	org.eclipse.jgit.api.TagCommand.isForceUpdate()	noCall	noCall	true	2844
1467.json	org.eclipse.jgit.transport.UploadPack.addCommonBase(org.eclipse.jgit.revwalk.RevObject)	null,1470.json	org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject)	true	3176
2244.json	org.eclipse.jgit.transport.TransportHttp.wrongContentType(java.lang.String, java.lang.String)	2270.json	org.eclipse.jgit.transport.TransportHttp.Service.openResponse()	true	3070
7856.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String)	7856.json,7855.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String)	true	106
5406.json	org.eclipse.jgit.revwalk.RevWalk.iterator()	noCall	noCall	true	3176
3240.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.setOldestReflogTimeMillis(long)	noCall	noCall	true	297
8815.json	org.eclipse.jgit.lib.ConfigSnapshot.sort(java.util.List<org.eclipse.jgit.lib.ConfigLine>)	8814.json	org.eclipse.jgit.lib.ConfigSnapshot.sorted()	true	2266
5301.json	org.eclipse.jgit.attributes.Attributes.toString()	null,null	org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertAttributesNode(java.lang.String, org.eclipse.jgit.attributes.AttributesNode, java.util.List<org.eclipse.jgit.attributes.Attribute>)	true	925
9110.json	org.eclipse.jgit.lib.RepositoryCache.isExpired(org.eclipse.jgit.lib.Repository)	9113.json	org.eclipse.jgit.lib.RepositoryCache.clearAllExpired()	true	698
3105.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.Anonymous-8f23dbcb-e083-4145-a0d8-7a20a1b578f4.parseCheckout()	noCall	noCall	true	297
5909.json	org.eclipse.jgit.dircache.DirCache.registerIndexChangedListener(org.eclipse.jgit.events.IndexChangedListener)	5879.json	org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS, org.eclipse.jgit.events.IndexChangedListener)	true	2446
5755.json	org.eclipse.jgit.revwalk.filter.MessageRevFilter.PatternSearch.clone()	noCall	noCall	true	3176
7743.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>)	7266.json,null,110.json,7477.json,7530.json,null,null,5910.json,7468.json,null,null,null,7018.json,null,7187.json,7227.json,7228.json,6861.json,7370.json,7193.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.revwalk.TreeRevFilterTest.treeFilter(java.lang.String),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.api.CheckoutCommand.checkoutPaths(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.filter(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.api.StatusCommand.call(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.indexdiff.IndexDiffWithSymlinkTest.testSymlinkWithEncodingDifference(),org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.filter(java.lang.String),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.junit.TestRepository.get(org.eclipse.jgit.revwalk.RevTree, java.lang.String),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.api.SubmoduleStatusCommand.call(),org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>),org.eclipse.jgit.api.RmCommand.call()	true	3176
5844.json	org.eclipse.jgit.ignore.internal.PathMatcher.createPathMatcher(java.lang.String, java.lang.Character, boolean)	7253.json	org.eclipse.jgit.api.DescribeCommand.setMatch(java.lang.String...)	true	1322
7581.json	org.eclipse.jgit.treewalk.TreeWalk.getAttributesNodeProvider()	1006.json,6714.json	org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[])	true	849
6471.json	org.eclipse.jgit.blame.BlameGenerator.isFile(int)	6470.json	org.eclipse.jgit.blame.BlameGenerator.find(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	true	1515
8454.json	org.eclipse.jgit.util.FS.runProcess(java.lang.ProcessBuilder, java.io.OutputStream, java.io.OutputStream, java.io.InputStream)	null,null,null,null,null,8453.json,null,null,null,8457.json,null	org.eclipse.jgit.util.RunExternalScriptTest.testStdErr(),org.eclipse.jgit.util.RunExternalScriptTest.testWrongSh(),org.eclipse.jgit.util.RunExternalScriptTest.testNullStdout(),org.eclipse.jgit.util.RunExternalScriptTest.testWrongScript(),org.eclipse.jgit.util.RunExternalScriptTest.testArguments(),org.eclipse.jgit.util.FS.runProcess(java.lang.ProcessBuilder, java.io.OutputStream, java.io.OutputStream, java.lang.String),org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBin(),org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdIn(),org.eclipse.jgit.util.RunExternalScriptTest.testRc(),org.eclipse.jgit.util.FS.execute(java.lang.ProcessBuilder, java.io.InputStream),org.eclipse.jgit.util.RunExternalScriptTest.testCopyNullStdIn()	true	1223
2606.json	org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	2644.json	org.eclipse.jgit.transport.ReceivePack.service()	true	3176
3284.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.beginBlock(byte)	3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
5843.json	org.eclipse.jgit.ignore.internal.PathMatcher.createMatchers(java.util.List<java.lang.String>, java.lang.Character, boolean)	noCall	noCall	true	1322
7084.json	org.eclipse.jgit.api.Git.diff()	null,null,null,null,null,null	org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits()	true	2490
6196.json	org.eclipse.jgit.storage.pack.PackConfig.setBuildBitmaps(boolean)	3375.json,6209.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packGarbage(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	1922
9317.json	org.eclipse.jgit.lib.BatchRefUpdate.getPushCertificate()	4933.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.updateBootstrap(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.transport.ReceiveCommand)	true	1088
5866.json	org.eclipse.jgit.ignore.IgnoreNode.getRules()	null,null,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryIgnoreNode.load(),org.eclipse.jgit.ignore.IgnoreNodeTest.testEmptyIgnoreRules(),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load()	true	2890
10427.json	org.eclipse.jgit.http.server.FileSender.close()	noCall	noCall	false	3070
6194.json	org.eclipse.jgit.storage.pack.PackConfig.setIndexVersion(int)	3772.json,null,6209.json	org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.compactPacks(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
1374.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalObjComplete(org.eclipse.jgit.revwalk.RevObject)	1373.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalRefsComplete(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	3176
7976.json	org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit)	6376.json	org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader)	true	98
4372.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readLong()	noCall	noCall	true	1922
5864.json	org.eclipse.jgit.ignore.IgnoreNode.parse(java.io.InputStream)	null,null,7848.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.PerDirectoryIgnoreNode.load(),org.eclipse.jgit.ignore.IgnoreNodeTest.testEmptyIgnoreRules(),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.loadRulesFromFile(org.eclipse.jgit.ignore.IgnoreNode, java.io.File)	true	2890
4761.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacksImpl(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	4760.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.scanPacks(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)	true	3176
4607.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.BitmapObjectImpl.getObjectId()	noCall	noCall	true	1922
6923.json	org.eclipse.jgit.api.PushCommand.setRefSpecs(org.eclipse.jgit.transport.RefSpec...)	null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease()	true	2805
6712.json	org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk)	null,null,null,null,null,5657.json,null,null,null,6570.json,null,null,null,null,null,null,6472.json,null,null	org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstWorking(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees(),org.eclipse.jgit.api.RebaseCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter),org.eclipse.jgit.api.StashCreateCommandTest.diffWorkingAgainstHead(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.StashCreateCommandTest.diffIndexAgainstHead(org.eclipse.jgit.revwalk.RevCommit)	true	2899
7751.json	org.eclipse.jgit.treewalk.filter.PathFilterGroup.Group.compare(byte[], byte[])	noCall	noCall	true	3176
7570.json	org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevTree)	null,null,null,null,null,null,null,7976.json	org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.api.CommitOnlyTest.getHead(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.ResetCommandTest.inHead(java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.readFile(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit)	true	3176
3148.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getRestartInterval()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
557.json	org.eclipse.jgit.junit.http.SimpleHttpServer.start()	noCall	noCall	true	2740
4615.json	org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.ObjectId)	214.json,4491.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	3176
8807.json	org.eclipse.jgit.lib.ConfigSnapshot.getNames(java.lang.String, java.lang.String)	8888.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String, java.lang.String)	true	2260
2859.json	org.eclipse.jgit.internal.ketch.LogIndex.getIndex()	noCall	noCall	true	872
7671.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.openInputStream()	noCall	noCall	true	3176
4449.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean)	noCall	noCall	true	2833
8795.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.size()	3332.json,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.sortById(org.eclipse.jgit.lib.ObjectIdSubclassMap<org.eclipse.jgit.internal.storage.reftable.ReftableWriter.RefList>),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testEmptyMap(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testClear(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects(),org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent()	true	3176
7137.json	org.eclipse.jgit.api.PullCommand.setTagOpt(org.eclipse.jgit.transport.TagOpt)	noCall	noCall	true	476
2422.json	org.eclipse.jgit.transport.PackParser.buffer()	4717.json,4716.json,2410.json,3667.json,2413.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onEndThinPack(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.transport.PackParser.whole(long, int, long),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.onAppendBase(int, byte[], org.eclipse.jgit.transport.PackedObjectInfo),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.transport.PackedObjectInfo)	true	2692
3095.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.match(byte[], boolean)	3063.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
6407.json	org.eclipse.jgit.blame.ReverseWalk.createCommit(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	2567
7370.json	org.eclipse.jgit.api.ArchiveCommand.writeArchive(org.eclipse.jgit.api.ArchiveCommand.Format<T>)	7371.json	org.eclipse.jgit.api.ArchiveCommand.call()	true	1844
3566.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.getRefs(java.lang.String)	noCall	noCall	true	2410
8922.json	org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader)	null	org.eclipse.jgit.lib.Config.fromTextRecurse(java.lang.String, int)	true	3176
7829.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isModeDifferent(int)	7830.json,985.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry),org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry)	true	2196
9026.json	org.eclipse.jgit.lib.EmptyProgressMonitor.update(int)	noCall	noCall	true	2093
4692.json	org.eclipse.jgit.internal.storage.file.BitSet.block(int)	4690.json,4688.json,4689.json	org.eclipse.jgit.internal.storage.file.BitSet.get(int),org.eclipse.jgit.internal.storage.file.BitSet.set(int),org.eclipse.jgit.internal.storage.file.BitSet.clear(int)	true	1922
2106.json	org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId()	null,1515.json,null,null,124.json,2094.json,2724.json,1102.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWithLeases(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
6292.json	org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.sha1(java.lang.String, java.lang.String)	noCall	noCall	true	1495
955.json	org.eclipse.jgit.merge.MergeResult.iterator()	noCall	noCall	true	3076
4780.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.maybeContains(int)	null,4579.json,null	org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsEmpty(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.remove(int),org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains()	true	1922
2551.json	org.eclipse.jgit.transport.BaseReceivePack.isBiDirectionalPipe()	2644.json,2606.json	org.eclipse.jgit.transport.ReceivePack.service(),org.eclipse.jgit.transport.BaseReceivePack.recvCommands()	true	3070
9970.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.clear()	noCall	noCall	true	856
1977.json	org.eclipse.jgit.transport.Transport.scan(java.lang.ClassLoader, java.net.URL)	1975.json	org.eclipse.jgit.transport.Transport.registerByService()	true	2645
5356.json	org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.revwalk.filter.RevFilter)	4988.json,null,null,null,null,null,352.json,null,null,null,null,null,null,null,null,1033.json,null,null,1043.json,null,null,7270.json,null,null,null,null,null,7429.json,null,1912.json,null,5640.json,null,null,1904.json,null,null,250.json,null,null,null,null,1470.json,null,null,9627.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testInconsistentCommitTimes(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE(),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL(),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter(),org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter(),org.eclipse.jgit.transport.BasePackFetchConnection.negotiateBegin(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL(),org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL(),org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits(),org.eclipse.jgit.transport.BasePackFetchConnection.markReachable(java.util.Set<org.eclipse.jgit.lib.ObjectId>, int),org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross(),org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0(),org.eclipse.jgit.pgm.MergeBase.run(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE(),org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2(),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine(),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
6928.json	org.eclipse.jgit.api.PushCommand.add(java.lang.String)	noCall	noCall	true	2644
321.json	org.eclipse.jgit.pgm.opt.CmdLineParser.getRevWalk()	331.json	org.eclipse.jgit.pgm.opt.RevCommitHandler.addOne(java.lang.String, boolean)	false	3176
4679.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.getBitmapCount()	4095.json,4091.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder),org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.write(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder, byte[])	true	1922
8674.json	org.eclipse.jgit.patch.Patch.parse(java.io.InputStream)	null,null,null,6824.json,null,null,null,null	org.eclipse.jgit.patch.EditListTest.parseTestPatchFile(java.lang.String),org.eclipse.jgit.diff.DiffFormatterReflowTest.parseTestPatchFile(java.lang.String),org.eclipse.jgit.patch.PatchTest.parseTestPatchFile(),org.eclipse.jgit.api.ApplyCommand.call(),org.eclipse.jgit.patch.PatchCcErrorTest.parseTestPatchFile(),org.eclipse.jgit.patch.PatchCcTest.parseTestPatchFile(),org.eclipse.jgit.patch.GetTextTest.parseTestPatchFile(),org.eclipse.jgit.patch.PatchErrorTest.parseTestPatchFile()	true	3176
3873.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getDeltaCount()	noCall	noCall	true	2410
26.json	org.eclipse.jgit.awtui.AWTPlotRenderer.paint(java.awt.Graphics, org.eclipse.jgit.revplot.PlotCommit<org.eclipse.jgit.awtui.SwingCommitList.SwingLane>)	22.json	org.eclipse.jgit.awtui.CommitGraphPane.GraphCellRender.paintComponent(java.awt.Graphics)	true	3176
8631.json	org.eclipse.jgit.util.time.ProposedTimestamp.blockUntil(java.lang.Iterable<org.eclipse.jgit.util.time.ProposedTimestamp>, java.time.Duration)	2856.json,9328.json	org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.lib.BatchRefUpdate.blockUntilTimestamps(java.time.Duration)	true	565
6650.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compactSrcList(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	6645.json	org.eclipse.jgit.diff.SimilarityRenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor)	true	2899
1218.json	org.eclipse.jgit.notes.NoteMapMerger.notNullOrEmpty(org.eclipse.jgit.notes.LeafBucket)	1217.json	org.eclipse.jgit.notes.NoteMapMerger.mergeLeafBucket(int, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket, org.eclipse.jgit.notes.LeafBucket)	true	2709
3719.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	3531.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	true	2410
1301.json	org.eclipse.jgit.transport.PreUploadHookChain.newChain(java.util.List<? extends org.eclipse.jgit.transport.PreUploadHook>)	noCall	noCall	true	2374
2580.json	org.eclipse.jgit.transport.BaseReceivePack.isSideBand()	noCall	noCall	false	2285
7917.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore()	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	1314
4810.json	org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>)	null,null,null,4803.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedNonExpiredObject_notPruned(),org.eclipse.jgit.internal.storage.file.GC.doGc(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned(),org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned(),org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned(),org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned(),org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned()	true	2142
6945.json	org.eclipse.jgit.api.errors.FilterFailedException.getError()	noCall	noCall	true	925
2739.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getMillis(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, long)	2738.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.fromConfig(org.eclipse.jgit.lib.Config, java.lang.String)	true	872
2012.json	org.eclipse.jgit.transport.Transport.isPushThin()	noCall	noCall	true	3176
4725.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.newInserter()	null,null,null,4805.json	org.eclipse.jgit.diff.RawTextLoadTest.textFor(byte[], int),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.Anonymous-2fd7a949-84ea-454d-91f1-b3a4b743dce1.call(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.blobInsertersForTheSameFanOutDir(org.eclipse.jgit.internal.storage.file.ObjectDirectory),org.eclipse.jgit.internal.storage.file.GC.deleteOldPacks(java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>, java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)	true	2907
6947.json	org.eclipse.jgit.api.errors.PatchFormatException.getErrors()	noCall	noCall	true	2288
2029.json	org.eclipse.jgit.transport.Transport.setCredentialsProvider(org.eclipse.jgit.transport.CredentialsProvider)	7526.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.transport.Transport)	true	2768
5384.json	org.eclipse.jgit.revwalk.RevWalk.parseAny(java.lang.Iterable<T>, boolean)	null,1454.json,5139.json,null,null	org.eclipse.jgit.transport.UploadPack.verifyClientShallow(),org.eclipse.jgit.transport.UploadPack.parseWants(),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.UploadPack.processHaveLines(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.PacketLineOut),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	2851
6498.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.snake2x(long)	6500.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.makeEdit(long, long)	true	3169
6037.json	org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)	6024.json,6032.json	org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator),org.eclipse.jgit.dircache.DirCacheCheckout.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator)	true	2844
4074.json	org.eclipse.jgit.internal.storage.file.LocalObjectToPack.select(org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	noCall	noCall	true	2906
3629.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getBlockSize(org.eclipse.jgit.internal.storage.pack.PackExt)	noCall	noCall	true	324
4277.json	org.eclipse.jgit.internal.storage.file.WindowCache.purge(org.eclipse.jgit.internal.storage.file.PackFile)	4115.json	org.eclipse.jgit.internal.storage.file.PackFile.close()	true	3176
9815.json	org.eclipse.jgit.lib.ObjectReader.Filter.resolve(org.eclipse.jgit.lib.AbbreviatedObjectId)	noCall	noCall	true	776
6817.json	org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref)	6812.json	org.eclipse.jgit.api.RevertCommand.call()	true	1989
8581.json	org.eclipse.jgit.util.BlockList.newDirectory(int)	8574.json	org.eclipse.jgit.util.BlockList.add(T)	true	2651
266.json	org.eclipse.jgit.pgm.Show.dstPrefix(java.lang.String)	noCall	noCall	true	2154
5559.json	org.eclipse.jgit.revwalk.RevCommit.toString()	7500.json,5470.json	org.eclipse.jgit.api.NameRevCommand.NameRevCommit.toString(),org.eclipse.jgit.revwalk.AbstractRevQueue.describe(java.lang.StringBuilder, org.eclipse.jgit.revwalk.RevCommit)	true	3176
6869.json	org.eclipse.jgit.api.RemoteSetUrlCommand.setName(java.lang.String)	null,null,83.json	org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetUrl(),org.eclipse.jgit.api.RemoteSetUrlCommandTest.testSetPushUrl(),org.eclipse.jgit.pgm.Remote.run()	true	911
7219.json	org.eclipse.jgit.api.ListNotesCommand.call()	null,null	org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote(),org.eclipse.jgit.api.NotesCommandTest.testListNotes()	true	2618
3602.json	org.eclipse.jgit.internal.storage.dfs.PackInputStream.read()	noCall	noCall	true	2410
2317.json	org.eclipse.jgit.transport.ServiceMayNotContinueException.getStatusCode()	noCall	noCall	false	656
2707.json	org.eclipse.jgit.transport.PushCertificateIdent.getTimeZoneOffset()	null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines()	true	1088
4088.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.moveToHead(org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Slot)	4085.json,4086.json	org.eclipse.jgit.internal.storage.file.DeltaBaseCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.DeltaBaseCache.store(org.eclipse.jgit.internal.storage.file.PackFile, long, byte[], int)	true	3176
925.json	org.eclipse.jgit.merge.ThreeWayMerger.setBase(org.eclipse.jgit.lib.AnyObjectId)	7195.json,7237.json,null,null,null,1225.json,6812.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.StashApplyCommand.call(),org.eclipse.jgit.merge.CherryPickTest.testRevert(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.merge.CherryPickTest.testPick(),org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry),org.eclipse.jgit.api.RevertCommand.call()	true	3176
1015.json	org.eclipse.jgit.merge.MergeFormatter.formatMerge(java.io.OutputStream, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, java.util.List<java.lang.String>, java.lang.String)	null,null	org.eclipse.jgit.merge.ResolveMerger.doMerge(org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>),org.eclipse.jgit.merge.MergeFormatter.formatMerge(java.io.OutputStream, org.eclipse.jgit.merge.MergeResult, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	true	3076
3487.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemRefDatabase.performsAtomicTransactions()	noCall	noCall	true	920
3386.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, java.util.Collection<org.eclipse.jgit.lib.Ref>)	3384.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	true	278
7069.json	org.eclipse.jgit.api.Git.revert()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.RevertCommandTest.doRevertAndCheckResult(org.eclipse.jgit.api.Git, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()	true	2715
8588.json	org.eclipse.jgit.util.SystemReader.Default.Anonymous-13ff6784-1304-4077-a659-7a3c615fb290.load()	noCall	noCall	true	2717
4626.json	org.eclipse.jgit.internal.storage.file.LockFile.waitForStatChange()	3974.json,null	org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean)	true	3059
6065.json	org.eclipse.jgit.dircache.DirCacheIterator.LazyLoadingAttributesNode.load(org.eclipse.jgit.lib.ObjectReader)	6064.json	org.eclipse.jgit.dircache.DirCacheIterator.getEntryAttributesNode(org.eclipse.jgit.lib.ObjectReader)	true	1249
3041.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seek(byte, byte[], org.eclipse.jgit.internal.storage.reftable.BlockReader, long, long)	3036.json,3040.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekRef(java.lang.String),org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekLog(java.lang.String, long)	true	297
7697.json	org.eclipse.jgit.treewalk.filter.PathFilter.toString()	5633.json,null	org.eclipse.jgit.revwalk.FollowFilter.toString(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.Single.toString()	true	3176
4970.json	org.eclipse.jgit.internal.storage.reftree.Scanner.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)	4970.json,4967.json	org.eclipse.jgit.internal.storage.reftree.Scanner.resolve(org.eclipse.jgit.lib.Ref, int, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.storage.reftree.Scanner.scanRefTree(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.Ref, java.lang.String, boolean)	true	880
6449.json	org.eclipse.jgit.blame.BlameGenerator.pop()	6445.json	org.eclipse.jgit.blame.BlameGenerator.next()	true	2567
7018.json	org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId)	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	2579
5407.json	org.eclipse.jgit.revwalk.RevWalk.assertNotStarted()	5358.json,5353.json,5354.json,5356.json,5486.json	org.eclipse.jgit.revwalk.RevWalk.setTreeFilter(org.eclipse.jgit.treewalk.filter.TreeFilter),org.eclipse.jgit.revwalk.RevWalk.sort(org.eclipse.jgit.revwalk.RevSort),org.eclipse.jgit.revwalk.RevWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean),org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.revwalk.filter.RevFilter),org.eclipse.jgit.revwalk.ObjectWalk.setObjectFilter(org.eclipse.jgit.revwalk.filter.ObjectFilter)	true	3176
7265.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String)	7266.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call()	true	78
4008.json	org.eclipse.jgit.internal.storage.file.PackInserter.beginObject(int, long)	4007.json,4006.json	org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.PackInserter.insert(int, byte[], int, int)	true	221
1177.json	org.eclipse.jgit.notes.LeafBucket.growIfFull()	1176.json,1170.json,1175.json	org.eclipse.jgit.notes.LeafBucket.append(org.eclipse.jgit.notes.Note),org.eclipse.jgit.notes.LeafBucket.set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.notes.LeafBucket.parseOneEntry(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2767
10040.json	org.eclipse.jgit.lfs.server.s3.SignerV4.urlEncode(java.lang.String, boolean)	10033.json,10035.json	org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeQueryString(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.lfs.server.s3.SignerV4.canonicalizeResourcePath(java.net.URL)	true	843
3245.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.mergeLogs(org.eclipse.jgit.internal.storage.reftable.MergedReftable)	3242.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.compact(java.io.OutputStream)	true	297
1199.json	org.eclipse.jgit.notes.FanoutBucket.treeSize()	1198.json	org.eclipse.jgit.notes.FanoutBucket.build(boolean, org.eclipse.jgit.lib.ObjectInserter)	true	2766
8034.json	org.eclipse.jgit.util.RefMap.Ent.getKey()	8037.json,8036.json	org.eclipse.jgit.util.RefMap.Ent.hashCode(),org.eclipse.jgit.util.RefMap.Ent.setValue(org.eclipse.jgit.lib.Ref)	true	3060
438.json	org.eclipse.jgit.console.ConsoleAuthenticator.install()	noCall	noCall	true	3141
2720.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.describeForLog()	noCall	noCall	true	872
6127.json	org.eclipse.jgit.storage.pack.PackStatistics.getClientShallowCommits()	noCall	noCall	true	1091
1311.json	org.eclipse.jgit.transport.ChainingCredentialsProvider.isInteractive()	noCall	noCall	true	1355
4284.json	org.eclipse.jgit.internal.storage.file.WindowCache.close(org.eclipse.jgit.internal.storage.file.PackFile)	4281.json,4283.json	org.eclipse.jgit.internal.storage.file.WindowCache.load(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.clear(org.eclipse.jgit.internal.storage.file.WindowCache.Ref)	true	3176
10199.json	org.eclipse.jgit.transport.JschSession.exec(java.lang.String, int)	noCall	noCall	true	2636
6860.json	org.eclipse.jgit.api.SubmoduleStatusCommand.addPath(java.lang.String)	noCall	noCall	true	2355
5700.json	org.eclipse.jgit.revwalk.filter.AndRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[])	noCall	noCall	true	3176
8681.json	org.eclipse.jgit.patch.Patch.skipFile(byte[], int)	8678.json,8679.json	org.eclipse.jgit.patch.Patch.parseDiffGit(byte[], int, int),org.eclipse.jgit.patch.Patch.parseDiffCombined(byte[], byte[], int, int)	true	3176
8145.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.detectStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType, org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	null,7583.json	org.eclipse.jgit.merge.ResolveMerger.writeMergedFile(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	824
8401.json	org.eclipse.jgit.util.FS_Win32.detectSymlinkSupport()	null	org.eclipse.jgit.util.FS_Win32.supportsSymlinks()	true	1580
4624.json	org.eclipse.jgit.internal.storage.file.LockFile.setNeedSnapshot(boolean)	6089.json,4623.json,3974.json,null	org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.LockFile.setNeedStatInformation(boolean),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean)	true	2733
7386.json	org.eclipse.jgit.api.MergeCommand.checkParameters()	7385.json	org.eclipse.jgit.api.MergeCommand.call()	true	2031
5190.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.keyOf(long)	5183.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.encode(java.io.OutputStream, byte[], int)	true	2893
1034.json	org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>)	1033.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int)	true	1933
969.json	org.eclipse.jgit.merge.StrategyRecursive.newMerger(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.lib.Config)	noCall	noCall	true	431
2117.json	org.eclipse.jgit.transport.RemoteRefUpdate.getMessage()	124.json,null,null,2731.json	org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushConnectionTest.testWrongOldIdDoesNotReplace(),org.eclipse.jgit.transport.AtomicPushTest.pushAtomicClientGivesUpEarly(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand.copyStatusToResult()	true	3176
4574.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.combine()	4589.json,null,4590.json,null,4587.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.cardinality(),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap.ewahBitmap(org.eclipse.jgit.lib.BitmapIndex.Bitmap),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.removeAllOrNone(org.eclipse.jgit.internal.storage.file.PackBitmapIndex),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.ewahBitmap(org.eclipse.jgit.lib.BitmapIndex.Bitmap),org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.build()	false	1922
6847.json	org.eclipse.jgit.api.FetchCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	6835.json,7265.json,286.json,6885.json,7131.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.api.PullCommand.call()	true	2823
4117.json	org.eclipse.jgit.internal.storage.file.PackFile.getObjectCount()	null,null,null,null,null,null,4891.json,null,null,null	org.eclipse.jgit.internal.storage.file.PackInserterTest.singlePack(),org.eclipse.jgit.internal.storage.file.PackInserterTest.overwriteExistingPack(),org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice(boolean),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1(),org.eclipse.jgit.internal.storage.file.LocalCachedPack.getObjectCount(),org.eclipse.jgit.internal.storage.file.PackInserterTest.multiplePacks(),org.eclipse.jgit.internal.storage.file.PackInserterTest.largeBlob(),org.eclipse.jgit.internal.storage.file.PackInserterTest.readBackSmallFiles()	true	3176
4192.json	org.eclipse.jgit.internal.storage.file.PackLock.lock(java.lang.String)	4719.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.renameAndOpenPack(java.lang.String)	true	3176
9461.json	org.eclipse.jgit.lib.TagBuilder.setObjectId(org.eclipse.jgit.revwalk.RevObject)	null,7299.json	org.eclipse.jgit.junit.TestRepository.tag(java.lang.String, org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.api.TagCommand.call()	true	2851
1557.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.FileStream.toArray()	1370.json	org.eclipse.jgit.transport.WalkFetchConnection.downloadLooseObject(org.eclipse.jgit.lib.AnyObjectId, java.lang.String, org.eclipse.jgit.transport.WalkRemoteObjectDatabase)	true	3176
10050.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getDownloadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	843
3841.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.createAttributesNodeProvider()	noCall	noCall	true	935
2254.json	org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.getAlternates()	noCall	noCall	true	3176
1156.json	org.eclipse.jgit.notes.NoteParser.parseFanoutTree()	1153.json	org.eclipse.jgit.notes.NoteParser.parseTree()	true	2767
10290.json	org.eclipse.jgit.http.server.glue.MetaFilter.Anonymous-6da0985e-b161-43b4-85f3-4168d9cd80bf.iterator()	noCall	noCall	true	3070
9069.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(java.io.File)	909.json,9068.json,202.json,null,900.json,177.json,null	org.eclipse.jgit.ant.tasks.GitCheckoutTask.execute(),org.eclipse.jgit.lib.BaseRepositoryBuilder.findGitDir(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef(),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory()	true	3176
7962.json	org.eclipse.jgit.util.RawParseUtils.tagMessage(byte[], int)	5668.json,5667.json,7961.json	org.eclipse.jgit.revwalk.RevTag.getShortMessage(),org.eclipse.jgit.revwalk.RevTag.getFullMessage(),org.eclipse.jgit.util.RawParseUtils.commitMessage(byte[], int)	true	3176
7501.json	org.eclipse.jgit.api.NameRevCommand.Anonymous-e0a556df-15b7-4b04-bdf8-e43fdb7df41f.createCommit(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	1917
6106.json	org.eclipse.jgit.storage.file.WindowCacheConfig.setDeltaBaseCacheLimit(int)	null,6111.json	org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.setUp(),org.eclipse.jgit.storage.file.WindowCacheConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	3176
2108.json	org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId()	null,2311.json,2723.json,1515.json,9883.json,null,2308.json,124.json,2094.json,1518.json,2306.json,1102.json	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>),org.eclipse.jgit.transport.BasePackPushConnection.writeCommands(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.pgm.Push.printRefUpdateResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcess.prepareRemoteUpdates(),org.eclipse.jgit.transport.BasePackPushConnection.writePack(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.hooks.PrePushHook.setRefs(java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
3298.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexId(org.eclipse.jgit.lib.ObjectId, long)	3297.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.indexRef(org.eclipse.jgit.lib.Ref, long)	true	297
6067.json	org.eclipse.jgit.storage.file.WindowCacheStats.getOpenBytes()	noCall	noCall	true	126
2407.json	org.eclipse.jgit.transport.PackParser.readPackFooter()	2394.json	org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3858.json	org.eclipse.jgit.internal.storage.dfs.DfsBlock.check(java.util.zip.Inflater, byte[], long, int)	3803.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.copyAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack, boolean, org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2410
6478.json	org.eclipse.jgit.diff.HistogramDiff.State.diffReplace(org.eclipse.jgit.diff.Edit)	6477.json,6479.json	org.eclipse.jgit.diff.HistogramDiff.State.diffRegion(org.eclipse.jgit.diff.Edit),org.eclipse.jgit.diff.HistogramDiff.State.diff(org.eclipse.jgit.diff.Edit)	true	2816
3302.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes()	null,null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesWithIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.estimateCurrentBytesOneRef()	true	297
6799.json	org.eclipse.jgit.events.ListenerList.addConfigChangedListener(org.eclipse.jgit.events.ConfigChangedListener)	8893.json,null	org.eclipse.jgit.lib.Config.addChangeListener(org.eclipse.jgit.events.ConfigChangedListener),org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave()	true	2900
2087.json	org.eclipse.jgit.transport.PacketLineIn.invalidHeader()	2086.json	org.eclipse.jgit.transport.PacketLineIn.readLength()	true	484
9023.json	org.eclipse.jgit.lib.Repository.autoGC(org.eclipse.jgit.lib.ProgressMonitor)	7410.json,2033.json,2645.json,7385.json	org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.ReceivePack.autoGc(),org.eclipse.jgit.api.MergeCommand.call()	true	596
4356.json	org.eclipse.jgit.internal.storage.file.WindowCursor.inflater()	4059.json,4124.json,4058.json,4794.json	org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.InputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.PackFile.copyAsIs2(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.file.LocalObjectToPack, boolean, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.InputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor),org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.openStream()	true	3176
2036.json	org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	null,null,null,null,2034.json,null	org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination(),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef(),org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking()	true	3176
7216.json	org.eclipse.jgit.api.RemoteRemoveCommand.setName(java.lang.String)	null,83.json	org.eclipse.jgit.api.RemoteDeleteCommandTest.testDelete(),org.eclipse.jgit.pgm.Remote.run()	true	911
173.json	org.eclipse.jgit.pgm.debug.TextHashFunctions.Anonymous-34e0dcec-8ca6-4387-acf6-f254caece083.rabin(byte[], int)	noCall	noCall	true	2816
7320.json	org.eclipse.jgit.api.CheckoutResult.getRemovedList()	null	org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows()	true	2133
1109.json	org.eclipse.jgit.hooks.Hooks.commitMsg(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	1195
6793.json	org.eclipse.jgit.events.WorkingTreeModifiedEvent.getDeleted()	null	org.eclipse.jgit.events.ChangeRecorder.onWorkingTreeModified(org.eclipse.jgit.events.WorkingTreeModifiedEvent)	true	299
8831.json	org.eclipse.jgit.lib.BranchConfig.getMerge()	8827.json,8828.json	org.eclipse.jgit.lib.BranchConfig.getTrackingBranch(),org.eclipse.jgit.lib.BranchConfig.getRemoteTrackingBranch()	true	2336
3330.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.objIndexLevels()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
4448.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	4446.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.Id>)	true	3061
2718.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.getURI()	2720.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.describeForLog()	true	872
4641.json	org.eclipse.jgit.internal.storage.file.PackIndex.open(java.io.File)	null,null,1379.json,null,null,4107.json	org.eclipse.jgit.internal.storage.file.PackIndexTestCase.setUp(),org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex(),org.eclipse.jgit.transport.WalkFetchConnection.RemotePack.openIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.setUp(),org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.internal.storage.file.PackFile.idx()	true	3176
1624.json	org.eclipse.jgit.transport.resolver.FileResolver.isUnreasonableName(java.lang.String)	1617.json	org.eclipse.jgit.transport.resolver.FileResolver.open(C, java.lang.String)	true	3070
434.json	org.eclipse.jgit.pgm.Branch.printHead(org.eclipse.jgit.lib.ObjectReader, java.lang.String, boolean, org.eclipse.jgit.lib.Ref)	431.json	org.eclipse.jgit.pgm.Branch.list()	true	3176
3170.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.blockSizeTooSmall(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	3163.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.mustAdd(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry)	true	297
5643.json	org.eclipse.jgit.revwalk.DepthGenerator.shareFreeList(org.eclipse.jgit.revwalk.BlockRevQueue)	noCall	noCall	true	2485
6342.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createWildCardHead(java.lang.Character, boolean)	6341.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createSimpleHeads(java.lang.String, java.lang.Character)	true	3176
2415.json	org.eclipse.jgit.transport.PackParser.streamPosition()	2409.json,2408.json	org.eclipse.jgit.transport.PackParser.indexOneObject(),org.eclipse.jgit.transport.PackParser.endInput()	true	3176
7882.json	org.eclipse.jgit.submodule.SubmoduleStatus.getIndexId()	null,null,null,null,null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule(),org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule()	true	2355
8027.json	org.eclipse.jgit.util.RefMap.toMapKey(org.eclipse.jgit.lib.Ref)	8034.json	org.eclipse.jgit.util.RefMap.Ent.getKey()	true	3060
3840.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.getReflogReader(java.lang.String)	noCall	noCall	true	2410
6552.json	org.eclipse.jgit.diff.DiffFormatter.setDiffComparator(org.eclipse.jgit.diff.RawTextComparator)	237.json,258.json,370.json,368.json,259.json,239.json,261.json,238.json,367.json,369.json,260.json,236.json	org.eclipse.jgit.pgm.Diff.ignoreLeadingSpace(boolean),org.eclipse.jgit.pgm.Show.ignoreSpaceAtEol(boolean),org.eclipse.jgit.pgm.Log.ignoreAllSpace(boolean),org.eclipse.jgit.pgm.Log.ignoreLeadingSpace(boolean),org.eclipse.jgit.pgm.Show.ignoreLeadingSpace(boolean),org.eclipse.jgit.pgm.Diff.ignoreAllSpace(boolean),org.eclipse.jgit.pgm.Show.ignoreAllSpace(boolean),org.eclipse.jgit.pgm.Diff.ignoreSpaceChange(boolean),org.eclipse.jgit.pgm.Log.ignoreSpaceAtEol(boolean),org.eclipse.jgit.pgm.Log.ignoreSpaceChange(boolean),org.eclipse.jgit.pgm.Show.ignoreSpaceChange(boolean),org.eclipse.jgit.pgm.Diff.ignoreSpaceAtEol(boolean)	true	2834
2005.json	org.eclipse.jgit.transport.Transport.setFetchThin(boolean)	6836.json	org.eclipse.jgit.api.FetchCommand.call()	true	3176
6479.json	org.eclipse.jgit.diff.HistogramDiff.State.diff(org.eclipse.jgit.diff.Edit)	6477.json	org.eclipse.jgit.diff.HistogramDiff.State.diffRegion(org.eclipse.jgit.diff.Edit)	true	2816
8465.json	org.eclipse.jgit.util.FS.Attributes.getLength()	7668.json	org.eclipse.jgit.treewalk.FileTreeIterator.FileEntry.getLength()	true	1579
1124.json	org.eclipse.jgit.hooks.CommitMsgHook.call()	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	1195
2557.json	org.eclipse.jgit.transport.BaseReceivePack.setObjectChecker(org.eclipse.jgit.lib.ObjectChecker)	2556.json	org.eclipse.jgit.transport.BaseReceivePack.setCheckReceivedObjects(boolean)	true	1551
6922.json	org.eclipse.jgit.api.PushCommand.getRefSpecs()	noCall	noCall	true	2805
9916.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromLongObjectId(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromLongObjectId()	true	856
5390.json	org.eclipse.jgit.revwalk.RevWalk.carry(org.eclipse.jgit.revwalk.RevFlag)	null,5391.json,5139.json,7260.json	org.eclipse.jgit.revwalk.RevWalkCarryFlagsTest.testRevWalkCarryCustom_SlowClock(),org.eclipse.jgit.revwalk.RevWalk.carry(java.util.Collection<org.eclipse.jgit.revwalk.RevFlag>),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.DescribeCommand.call()	true	3176
8997.json	org.eclipse.jgit.lib.Repository.shortenRemoteBranchName(java.lang.String)	null,7331.json	org.eclipse.jgit.lib.RefTest.testRemoteNames(),org.eclipse.jgit.api.CreateBranchCommand.call()	true	1505
5804.json	org.eclipse.jgit.revwalk.filter.NotRevFilter.toString()	noCall	noCall	true	3176
2347.json	org.eclipse.jgit.transport.RefSpec.getSource()	null,1951.json,null,null,2369.json,2352.json,1961.json,null,2367.json,2353.json,null,null,null,null,null,null,null,null,null,null,2366.json,null,1968.json,null,1995.json,null,null,2033.json,null,null,null,1970.json	org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation(),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpec.toString(),org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String),org.eclipse.jgit.transport.FetchProcess.expandSingle(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack(),org.eclipse.jgit.transport.RefSpec.equals(java.lang.Object),org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate),org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon(),org.eclipse.jgit.transport.RemoteConfigTest.testSimple(),org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_NonWildcard(),org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText1(),org.eclipse.jgit.transport.RemoteConfigTest.testBackup(),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.RefSpec.hashCode(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAfterText2(),org.eclipse.jgit.transport.FetchProcess.createUpdate(org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.RemoteConfigTest.testMirror(),org.eclipse.jgit.transport.Transport.findRemoteRefUpdatesFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RefLeaseSpec>, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource(),org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart(),org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty(),org.eclipse.jgit.transport.RefSpecTest.testExpandFromDestination_Wildcard(),org.eclipse.jgit.transport.FetchProcess.deleteTrackingRef(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate, org.eclipse.jgit.transport.RefSpec, org.eclipse.jgit.lib.Ref)	true	3176
7980.json	org.eclipse.jgit.util.LfsFactory.LfsInputStream.getLength()	null	org.eclipse.jgit.merge.ResolveMerger.insertMergeResult(org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.attributes.Attributes)	true	98
8709.json	org.eclipse.jgit.patch.CombinedFileHeader.getHunks()	null,null,null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
6179.json	org.eclipse.jgit.storage.pack.PackConfig.setDeltaCacheLimit(int)	6209.json	org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config)	true	2893
9752.json	org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean)	9020.json	org.eclipse.jgit.lib.Repository.readRebaseTodo(java.lang.String, boolean)	true	1683
1265.json	org.eclipse.jgit.transport.RemoteConfig.update(org.eclipse.jgit.lib.Config)	null,null,6875.json,null,null,null,null,null,6885.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7464.json,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.RemoteSetUrlCommand.call(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags(),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish),org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout(),org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(org.eclipse.jgit.api.Git, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags(),org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.api.FetchCommandTest.setupRemoteRepository(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.RemoteAddCommand.call(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI(),org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI()	true	3176
3146.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getLogBlockSize()	3292.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream)	true	297
5699.json	org.eclipse.jgit.revwalk.filter.AndRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.filter.RevFilter)	5700.json,5701.json,null,5460.json,7270.json,null,null,null	org.eclipse.jgit.revwalk.filter.AndRevFilter.create(org.eclipse.jgit.revwalk.filter.RevFilter[]),org.eclipse.jgit.revwalk.filter.AndRevFilter.create(java.util.Collection<org.eclipse.jgit.revwalk.filter.RevFilter>),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL(),org.eclipse.jgit.revwalk.StartGenerator.next(),org.eclipse.jgit.api.LogCommand.call(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL(),org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE()	true	3176
8891.json	org.eclipse.jgit.lib.Config.get(org.eclipse.jgit.lib.Config.SectionParser<T>)	null,null,null,null,1902.json,null,4491.json,4236.json,null,null,352.json,1019.json,null,null,4494.json,null,null,null,null,6045.json,7583.json,10309.json,null,1802.json,4105.json,null,6548.json,null,null,null,null,null,null	org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates(),org.eclipse.jgit.lib.ConfigTest.testReadUserConfigWithInvalidCharactersStripped(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.internal.storage.file.ReflogWriter.isLogAllRefUpdates(),org.eclipse.jgit.transport.BasePackFetchConnection.getFetchConfig(),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.GlobalAttributesNode.load(),org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.merge.MergeConfig.getConfigForCurrentBranch(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.api.BlameCommand.getRawText(java.io.File),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist(),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.http.server.resolver.AsIsFileService.isEnabled(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.transport.DaemonService.isEnabledFor(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, byte[]),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.diff.DiffFormatter.setReader(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Config, boolean),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testComputeFileObjectId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile(),org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge(),org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.follow(java.lang.String),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig()	false	3176
7813.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.eof()	7827.json,null,null,null,null,7811.json,null,null,7814.json,null	org.eclipse.jgit.treewalk.WorkingTreeIterator.init(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry[]),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootIsFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.treewalk.WorkingTreeIterator.reset(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIfRootDoesNotExist(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.treewalk.WorkingTreeIterator.next(int),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator)	true	3176
3336.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.flushCurBlock()	3337.json,3334.json,3341.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.finishSectionMaybeWriteIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
1226.json	org.eclipse.jgit.notes.NoteMapMerger.write(org.eclipse.jgit.notes.NonNoteEntry)	1225.json	org.eclipse.jgit.notes.NoteMapMerger.mergeNonNotes(org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry, org.eclipse.jgit.notes.NonNoteEntry)	true	2709
6435.json	org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, byte[])	noCall	noCall	true	2567
469.json	org.eclipse.jgit.junit.MockSystemReader.Anonymous-3d527102-a4c7-407d-bed8-b8662f1bb0db.blockUntil(java.time.Duration)	noCall	noCall	true	565
9610.json	org.eclipse.jgit.lib.AnyObjectId.copyTo(java.io.OutputStream)	9454.json,9019.json,1551.json	org.eclipse.jgit.lib.CommitBuilder.build(),org.eclipse.jgit.lib.Repository.writeHeadsFile(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>, java.lang.String),org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeRef(java.lang.String, org.eclipse.jgit.lib.ObjectId)	true	3176
8153.json	org.eclipse.jgit.util.io.AutoLFInputStream.isBinary()	noCall	noCall	true	1588
3159.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.padBetweenBlocks()	3334.json,3341.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>)	true	297
4282.json	org.eclipse.jgit.internal.storage.file.WindowCache.createRef(org.eclipse.jgit.internal.storage.file.PackFile, long, org.eclipse.jgit.internal.storage.file.ByteWindow)	4289.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long)	true	3176
7827.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.init(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry[])	noCall	noCall	true	3176
9853.json	org.eclipse.jgit.lfs.errors.CorruptLongObjectException.getId()	noCall	noCall	true	856
2295.json	org.eclipse.jgit.transport.TransportProtocol.getOptionalFields()	2298.json	org.eclipse.jgit.transport.TransportProtocol.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	true	2645
256.json	org.eclipse.jgit.pgm.internal.CLIText.fatalError(java.lang.String)	null,315.json,null,null,391.json,null,437.json,null	org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(java.lang.String...),org.eclipse.jgit.pgm.DescribeTest.testNoHead(),org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag(),org.eclipse.jgit.pgm.Main.run(java.lang.String[]),org.eclipse.jgit.pgm.BranchTest.testHelpAfterDelete(),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.pgm.MergeTest.testNoFastForwardAndSquash()	true	885
5572.json	org.eclipse.jgit.revwalk.RevBlob.parseBody(org.eclipse.jgit.revwalk.RevWalk)	noCall	noCall	true	3176
7409.json	org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes()	7402.json	org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean)	true	1426
1820.json	org.eclipse.jgit.transport.TransportBundleFile.Anonymous-37003517-7d13-4847-bceb-9184f6ac9014.canHandle(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	3176
1455.json	org.eclipse.jgit.transport.UploadPack.want(org.eclipse.jgit.revwalk.RevObject)	1454.json	org.eclipse.jgit.transport.UploadPack.parseWants()	true	1919
993.json	org.eclipse.jgit.merge.ResolveMerger.isGitLink(int)	null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes)	true	2097
2305.json	org.eclipse.jgit.transport.WalkPushConnection.Anonymous-ff2db75c-ce00-4133-addf-be95f7c88c11.writeFile(java.lang.String, byte[])	noCall	noCall	true	3176
5474.json	org.eclipse.jgit.revwalk.AbstractRevQueue.AlwaysEmptyQueue.everbodyHasFlag(int)	noCall	noCall	true	3176
6968.json	org.eclipse.jgit.api.Status.getUncommittedChanges()	7399.json	org.eclipse.jgit.api.RebaseCommand.call()	true	1650
8007.json	org.eclipse.jgit.util.LongList.clear()	6490.json,3191.json	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.initialize(int, int, int, int),org.eclipse.jgit.internal.storage.reftable.BlockWriter.ObjEntry.markScanRequired()	true	3167
6865.json	org.eclipse.jgit.api.ListBranchCommand.call()	null,null,null,null,null,null,null,null,null,null,null,431.json,null,null,null	org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.api.BranchCommandTest.testCreateAndList(),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch(),org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains(),org.eclipse.jgit.pgm.CloneTest.testClone(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.pgm.CloneTest.testCloneEmpty(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch(),org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie(),org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch(),org.eclipse.jgit.pgm.Branch.list(),org.eclipse.jgit.api.GitConstructionTest.testWrap(),org.eclipse.jgit.api.GitConstructionTest.testOpen(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepository()	true	2800
5008.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateSize(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5009.json,5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.estimateIndexSize(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry),org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	true	2893
7805.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(byte[], int, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	7802.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.possiblyFilteredInputStream(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry, java.io.InputStream, long, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	2851
2374.json	org.eclipse.jgit.transport.PackParser.setNeedNewObjectIds(boolean)	2614.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack()	true	3040
9231.json	org.eclipse.jgit.lib.FileMode.copyToLength()	9828.json,9837.json	org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode, int),org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte[], int, int, org.eclipse.jgit.lib.FileMode)	true	3176
9609.json	org.eclipse.jgit.lib.AnyObjectId.writeRawInt(java.io.OutputStream, int)	9608.json	org.eclipse.jgit.lib.AnyObjectId.copyRawTo(java.io.OutputStream)	true	3176
9894.json	org.eclipse.jgit.lfs.SmudgeFilter.register()	noCall	noCall	true	628
3436.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.contains(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long)	noCall	noCall	true	2410
6785.json	org.eclipse.jgit.events.RepositoryEvent.toString()	noCall	noCall	true	3176
7231.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.submoduleExists(java.lang.String)	7228.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.call()	true	164
4218.json	org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(long)	null	org.eclipse.jgit.internal.storage.file.FileSnapshot.isModified(java.io.File)	true	3176
2867.json	org.eclipse.jgit.internal.ketch.ReplicaPushRequest.setException(org.eclipse.jgit.lib.Repository, java.lang.Throwable)	null,2721.json,null,2760.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.Anonymous-cf7dcb13-a265-4d33-bc49-d2ae661afcbd.run(),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
8896.json	org.eclipse.jgit.lib.Config.getRawString(java.lang.String, java.lang.String, java.lang.String)	8896.json,8881.json,9404.json	org.eclipse.jgit.lib.Config.getRawString(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.getString(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.DefaultTypedConfigGetter.getBoolean(org.eclipse.jgit.lib.Config, java.lang.String, java.lang.String, java.lang.String, boolean)	true	3176
4578.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.ComboBitset.contains(int)	4581.json	org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmapBuilder.contains(org.eclipse.jgit.lib.AnyObjectId)	true	1922
9972.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromRaw(byte[])	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testSetByte()	true	856
1341.json	org.eclipse.jgit.transport.PacketLineOut.writePacket(byte[], int, int)	null,1340.json	org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser.advertiseId(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.transport.PacketLineOut.writePacket(byte[])	true	3176
7837.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.computeHash(java.io.InputStream, long)	7833.json,7800.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.contentCheck(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.WorkingTreeIterator.idBufferBlob(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry)	true	2851
10411.json	org.eclipse.jgit.http.server.ClientVersionUtil.invalidVersion()	10412.json,null	org.eclipse.jgit.http.server.ClientVersionUtil.parseVersion(java.lang.String),org.eclipse.jgit.http.server.ClientVersionUtilTest.testParse()	true	2174
3609.json	org.eclipse.jgit.internal.storage.dfs.DfsRefRename.doRename()	noCall	noCall	true	2410
7629.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte[], int, int, int)	5252.json	org.eclipse.jgit.internal.storage.pack.BaseSearch.addBase(int, byte[], int, int)	true	2685
5640.json	org.eclipse.jgit.revwalk.BitmapWalker.findObjectsWalk(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean)	5639.json	org.eclipse.jgit.revwalk.BitmapWalker.findObjects(java.lang.Iterable<? extends org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, boolean)	true	1922
162.json	org.eclipse.jgit.pgm.debug.ShowCommands.run()	noCall	noCall	true	3176
5198.json	org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation.getWeight()	5148.json	org.eclipse.jgit.internal.storage.pack.PackWriter.select(org.eclipse.jgit.internal.storage.pack.ObjectToPack, org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	true	2906
250.json	org.eclipse.jgit.pgm.MergeBase.run()	noCall	noCall	true	3176
3085.json	org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(org.eclipse.jgit.lib.Ref, int)	3085.json,3084.json	org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(org.eclipse.jgit.lib.Ref, int),org.eclipse.jgit.internal.storage.reftable.Reftable.resolve(org.eclipse.jgit.lib.Ref)	true	297
4293.json	org.eclipse.jgit.internal.storage.file.WindowCache.removeAll()	4276.json,4273.json	org.eclipse.jgit.internal.storage.file.WindowCache.get(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(org.eclipse.jgit.storage.file.WindowCacheConfig)	true	3176
6472.json	org.eclipse.jgit.blame.BlameGenerator.findRename(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.treewalk.filter.PathFilter)	6452.json,6456.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate)	true	2567
3985.json	org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)	3961.json,null,4502.json,4566.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate),org.eclipse.jgit.internal.storage.file.RefDirectory.pack(java.util.Collection<java.lang.String>, java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.LockFile>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.RefDirectoryRename.renameLog(org.eclipse.jgit.lib.RefUpdate, org.eclipse.jgit.lib.RefUpdate)	true	3059
3315.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.logBlockSize()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
9981.json	org.eclipse.jgit.lfs.lib.LongObjectId.isId(java.lang.String)	null,null,null,null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.test004_isId(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test005_notIsId(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test008_notIsId(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test007_isId(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.test006_notIsId()	true	856
3016.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.Replacer.substitute(java.lang.String, java.lang.String)	3011.json,3009.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.lang.String, java.io.File),org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.util.List<java.lang.String>, java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.HostEntry.Replacer)	true	289
10291.json	org.eclipse.jgit.http.server.glue.MetaFilter.Anonymous-4c45d6f3-5052-4279-ba76-dfdd3e8a7812.size()	noCall	noCall	true	3070
7821.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream()	null,7040.json,7530.json,6981.json,6754.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.open(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-db89ff7e-d828-496b-aec0-83c41a8dbba5.openStream()	true	2848
5875.json	org.eclipse.jgit.dircache.DirCache.read(org.eclipse.jgit.lib.Repository)	null	org.eclipse.jgit.lib.Repository.readDirCache()	true	2204
6268.json	org.eclipse.jgit.gitrepo.RepoProject.getUrl()	6309.json	org.eclipse.jgit.gitrepo.RepoCommand.call()	true	1111
4150.json	org.eclipse.jgit.internal.storage.file.PackFile.isCorrupt(long)	4113.json,4111.json	org.eclipse.jgit.internal.storage.file.PackFile.get(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId)	true	2906
5400.json	org.eclipse.jgit.revwalk.RevWalk.reset(int)	5502.json,5349.json,5397.json,5398.json,5399.json	org.eclipse.jgit.revwalk.ObjectWalk.reset(int),org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevWalk.reset(),org.eclipse.jgit.revwalk.RevWalk.resetRetain(org.eclipse.jgit.revwalk.RevFlagSet),org.eclipse.jgit.revwalk.RevWalk.resetRetain(org.eclipse.jgit.revwalk.RevFlag...)	true	3176
5007.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.search()	5063.json,5124.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.runWindow(org.eclipse.jgit.internal.storage.pack.DeltaWindow),org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	2893
5877.json	org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS)	null,null,null,null,null,5879.json	org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex(),org.eclipse.jgit.dircache.DirCache.lock(java.io.File, org.eclipse.jgit.util.FS, org.eclipse.jgit.events.IndexChangedListener)	true	3176
2831.json	org.eclipse.jgit.internal.ketch.KetchSystem.DefaultExecutorHolder.create()	noCall	noCall	true	872
2484.json	org.eclipse.jgit.transport.WantNotValidException.msg(org.eclipse.jgit.lib.AnyObjectId)	noCall	noCall	true	844
6351.json	org.eclipse.jgit.fnmatch.CharacterHead.toString()	noCall	noCall	true	1411
3274.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.size()	3337.json,3334.json,3339.json,3340.json,3302.json,3287.json,3341.json,3286.json,3336.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.finishSectionMaybeWriteIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.write(org.eclipse.jgit.internal.storage.reftable.BlockWriter.Entry),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeMultiLevelIndex(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.estimateTotalBytes(),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.estimatePadBetweenBlocks(int),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.IndexBuilder.writeOneLevel(java.util.List<org.eclipse.jgit.internal.storage.reftable.BlockWriter.IndexEntry>),org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.padBetweenBlocksToNextBlock(),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Section.flushCurBlock()	true	297
5174.json	org.eclipse.jgit.internal.storage.pack.DeltaIndex.countEntries(org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner)	noCall	noCall	true	2893
2810.json	org.eclipse.jgit.internal.ketch.Round.getSystem()	2754.json,2856.json,2749.json,2752.json,2848.json	org.eclipse.jgit.internal.ketch.ElectionRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.ElectionRound.start(),org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	565
1732.json	org.eclipse.jgit.transport.AdvertiseRefsHook.Anonymous-16ef31dd-4581-4c64-b6c4-34816a93831a.advertiseRefs(org.eclipse.jgit.transport.UploadPack)	noCall	noCall	true	2292
5745.json	org.eclipse.jgit.revwalk.filter.SkipRevFilter.clone()	noCall	noCall	true	2350
9561.json	org.eclipse.jgit.lib.IndexDiff.ProgressReportingFilter.shouldBeRecursive()	noCall	noCall	true	2697
4388.json	org.eclipse.jgit.internal.storage.file.WriteConfig.getFSyncObjectFiles()	4883.json,4884.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int)	true	2766
8724.json	org.eclipse.jgit.patch.CombinedHunkHeader.getFileHeader()	null,null	org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
3587.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.RefCache.put(org.eclipse.jgit.lib.Ref)	3578.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.stored(org.eclipse.jgit.lib.Ref)	true	2410
525.json	org.eclipse.jgit.junit.http.AccessEvent.getResponseHeader(java.lang.String)	noCall	noCall	true	3070
9804.json	org.eclipse.jgit.lib.ObjectReader.getObjectSize(java.lang.Iterable<T>, boolean)	5120.json,9823.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectReader.Filter.getObjectSize(java.lang.Iterable<T>, boolean)	true	2851
5331.json	org.eclipse.jgit.revwalk.BlockRevQueue.BlockFreeList.freeBlock(org.eclipse.jgit.revwalk.BlockRevQueue.Block)	5442.json,5680.json	org.eclipse.jgit.revwalk.LIFORevQueue.next(),org.eclipse.jgit.revwalk.FIFORevQueue.next()	true	3176
3469.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.Anonymous-65ad237f-66dc-4ef5-8caf-cf364ea6a76d.flush()	noCall	noCall	true	2410
3324.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.logBytes()	null,135.json	org.eclipse.jgit.internal.storage.reftable.ReftableTest.logScan(),org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
1950.json	org.eclipse.jgit.transport.FetchProcess.execute(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	2033.json	org.eclipse.jgit.transport.Transport.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	3176
1071.json	org.eclipse.jgit.errors.LargeObjectException.getObjectId()	1072.json,null	org.eclipse.jgit.errors.LargeObjectException.getObjectName(),org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB()	true	2846
5208.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBase()	5245.json,5045.json,5130.json,5119.json,5133.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.toString(),org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeHeader(org.eclipse.jgit.internal.storage.pack.ObjectToPack, long),org.eclipse.jgit.internal.storage.pack.PackWriter.writeObjectImpl(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack),org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>),org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	3176
1354.json	org.eclipse.jgit.transport.CredentialsProvider.reset(org.eclipse.jgit.transport.URIish)	10153.json,2229.json,2269.json	org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialsProvider, org.eclipse.jgit.util.FS, int),org.eclipse.jgit.transport.TransportHttp.connect(java.lang.String),org.eclipse.jgit.transport.TransportHttp.Service.sendRequest()	true	2387
2935.json	org.eclipse.jgit.internal.fsck.FsckPackParser.checkCRC(int)	noCall	noCall	true	319
1639.json	org.eclipse.jgit.transport.NetRCCredentialsProvider.install()	noCall	noCall	true	1408
3936.json	org.eclipse.jgit.internal.storage.file.RefDirectory.close()	noCall	noCall	true	3059
3625.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getMaxUpdateIndex()	null	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.reftableComparator()	true	286
2121.json	org.eclipse.jgit.transport.RemoteRefUpdate.setMessage(java.lang.String)	2311.json,2095.json,2306.json,2310.json,1519.json	org.eclipse.jgit.transport.WalkPushConnection.updateCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.PushProcess.rejectAll(),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream),org.eclipse.jgit.transport.WalkPushConnection.deleteCommand(org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>)	true	3176
8022.json	org.eclipse.jgit.util.RefMap.Anonymous-67fb051e-a061-45c0-b31e-f927baf3bb0c.clear()	noCall	noCall	true	3060
1192.json	org.eclipse.jgit.notes.FanoutBucket.iterator(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	1195.json	org.eclipse.jgit.notes.FanoutBucket.contractIfTooSmall(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	true	2766
442.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.isInteractive()	noCall	noCall	true	2768
5160.json	org.eclipse.jgit.internal.storage.pack.PackExt.getPosition()	3627.json,null,3629.json,3630.json,null,5161.json,3628.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setFileSize(org.eclipse.jgit.internal.storage.pack.PackExt, long),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemPack.get(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getBlockSize(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setBlockSize(org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemPack.put(org.eclipse.jgit.internal.storage.pack.PackExt, byte[]),org.eclipse.jgit.internal.storage.pack.PackExt.getBit(),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileSize(org.eclipse.jgit.internal.storage.pack.PackExt)	true	1927
3068.json	org.eclipse.jgit.internal.storage.reftable.Reftable.from(java.util.Collection<org.eclipse.jgit.lib.Ref>)	null	org.eclipse.jgit.internal.storage.reftable.ReftableTest.emptyVirtualTableFromRefs()	true	297
2250.json	org.eclipse.jgit.transport.TransportHttp.isSmartHttp(org.eclipse.jgit.transport.http.HttpConnection, java.lang.String)	2220.json,2224.json	org.eclipse.jgit.transport.TransportHttp.getConnection(org.eclipse.jgit.transport.http.HttpConnection, java.io.InputStream, java.lang.String),org.eclipse.jgit.transport.TransportHttp.openPush()	true	3070
1007.json	org.eclipse.jgit.merge.EolAwareOutputStream.beginln()	921.json,915.json,920.json	org.eclipse.jgit.merge.MergeFormatterPass.writeLine(org.eclipse.jgit.diff.RawText, int),org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.merge.MergeFormatterPass.writeln(java.lang.String)	true	1171
5134.json	org.eclipse.jgit.internal.storage.pack.PackWriter.delta(org.eclipse.jgit.internal.storage.pack.ObjectToPack)	5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
7381.json	org.eclipse.jgit.api.MergeCommand.FastForwardMode.toConfigValue()	noCall	noCall	true	1968
1667.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumRefDelta()	noCall	noCall	true	629
431.json	org.eclipse.jgit.pgm.Branch.list()	430.json	org.eclipse.jgit.pgm.Branch.run()	true	3176
5665.json	org.eclipse.jgit.revwalk.RevTag.getType()	null	org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes()	true	3176
8783.json	org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String, java.lang.String)	8812.json,8813.json,null,8909.json	org.eclipse.jgit.lib.ConfigSnapshot.first(java.util.List<org.eclipse.jgit.lib.ConfigLine>, int, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.ConfigSnapshot.end(java.util.List<org.eclipse.jgit.lib.ConfigLine>, int, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.findSectionEnd(java.util.List<org.eclipse.jgit.lib.ConfigLine>, java.lang.String, java.lang.String),org.eclipse.jgit.lib.Config.replaceStringList(org.eclipse.jgit.lib.ConfigSnapshot, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>)	true	3176
5514.json	org.eclipse.jgit.revwalk.DateRevQueue.outputType()	null	org.eclipse.jgit.revwalk.DateRevQueueTest.testEmpty()	true	3176
6698.json	org.eclipse.jgit.diff.RenameDetector.findExactRenames(org.eclipse.jgit.lib.ProgressMonitor)	6691.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.diff.ContentSource.Pair, org.eclipse.jgit.lib.ProgressMonitor)	true	2901
9861.json	org.eclipse.jgit.lfs.LfsPointer.getSize()	null,9872.json,9865.json,9895.json	org.eclipse.jgit.lfs.lib.LfsPointerFilterTest.LfsTreeWalk.check(),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.toRequest(java.lang.String, org.eclipse.jgit.lfs.LfsPointer...),org.eclipse.jgit.lfs.LfsPointer.compareTo(org.eclipse.jgit.lfs.LfsPointer),org.eclipse.jgit.lfs.SmudgeFilter.downloadLfsResource(org.eclipse.jgit.lfs.Lfs, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.LfsPointer...)	true	628
1485.json	org.eclipse.jgit.transport.HttpConfig.HttpRedirectMode.toConfigValue()	noCall	noCall	true	297
6995.json	org.eclipse.jgit.api.CommitCommand.setAmend(boolean)	null,null,7402.json,null,null,null,7414.json,null,null,null,null,null,301.json	org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.pgm.FetchTest.testFetchForceUpdate(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.pgm.Commit.run()	true	2651
8662.json	org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int)	8659.json,8719.json	org.eclipse.jgit.patch.FileHeader.parseGitHeaders(int, int),org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int)	true	3176
1975.json	org.eclipse.jgit.transport.Transport.registerByService()	noCall	noCall	true	2645
508.json	org.eclipse.jgit.junit.http.AppServer.getURI()	563.json,null,null,null,null,null,null,null	org.eclipse.jgit.junit.http.SimpleHttpServer.toURIish(java.lang.String),org.eclipse.jgit.junit.http.HttpTestCase.toURIish(java.lang.String),org.eclipse.jgit.lfs.server.fs.LfsServerTest.getContent(java.lang.String, java.nio.file.Path),org.eclipse.jgit.lfs.server.fs.LfsServerTest.setup(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(java.nio.file.Path),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.putContent(org.eclipse.jgit.lfs.lib.AnyLongObjectId, java.lang.String),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup()	true	3070
7460.json	org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(java.io.File, java.lang.String, java.lang.String)	7429.json,7409.json,7455.json	org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.writeRewrittenHashes(),org.eclipse.jgit.api.RebaseCommand.RebaseState.createFile(java.lang.String, java.lang.String)	true	2756
4699.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.onPackHeader(long)	noCall	noCall	true	2593
2350.json	org.eclipse.jgit.transport.RefSpec.setDestination(java.lang.String)	null,1965.json,null,null,null	org.eclipse.jgit.junit.http.HttpTestCase.mirror(java.lang.String...),org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull(),org.eclipse.jgit.transport.RefSpecTest.testSetDestination(),org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination()	true	3176
1925.json	org.eclipse.jgit.transport.Daemon.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig)	297.json	org.eclipse.jgit.pgm.Daemon.run()	true	2874
7674.json	org.eclipse.jgit.treewalk.FileTreeIterator.getEntryFile()	7676.json,null	org.eclipse.jgit.treewalk.FileTreeIterator.readSymlinkTarget(org.eclipse.jgit.treewalk.WorkingTreeIterator.Entry),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator)	true	2853
3319.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.refCount()	null,135.json,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.pgm.debug.WriteReftable.run(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.noTables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs()	true	297
10031.json	org.eclipse.jgit.lfs.server.s3.SignerV4.dateTimeStampISO8601(java.util.Date)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
3749.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.sortPacksForSelectRepresentation()	3747.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	486
5416.json	org.eclipse.jgit.revwalk.RevCommitList.applyFlag(org.eclipse.jgit.revwalk.filter.RevFilter, org.eclipse.jgit.revwalk.RevFlag)	noCall	noCall	true	3176
3243.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactor.getStats()	null,null,null,null,null,null,null,null,3606.json	org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.oneTable(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesNotIncludeOneDelete(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.noTables(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesOneRef(),org.eclipse.jgit.internal.storage.reftable.ReftableCompactorTest.twoTablesTwoRefs(),org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase, org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.compactReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.reftable.ReftableCompactor),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.compactTopOfStack(java.io.OutputStream, org.eclipse.jgit.internal.storage.reftable.ReftableConfig, byte[])	true	297
5942.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.nextSlash(byte[], int)	5940.json	org.eclipse.jgit.dircache.BaseDirCacheEditor.checkNameConflicts()	true	893
3430.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.creditSpace(int, org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	3435.json,3428.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey, long, int, T),org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getOrLoad(org.eclipse.jgit.internal.storage.dfs.BlockBasedFile, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
4783.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.block(int)	4782.json,4781.json	org.eclipse.jgit.internal.storage.file.InflatingBitSet.get(int),org.eclipse.jgit.internal.storage.file.InflatingBitSet.contains(int)	true	1922
2141.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-2d0d5966-2c36-43f0-95f3-71d4cdca8283.getName()	noCall	noCall	true	2645
5352.json	org.eclipse.jgit.revwalk.RevWalk.hasRevSort(org.eclipse.jgit.revwalk.RevSort)	5484.json,5483.json,5460.json	org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort, boolean),org.eclipse.jgit.revwalk.ObjectWalk.sort(org.eclipse.jgit.revwalk.RevSort),org.eclipse.jgit.revwalk.StartGenerator.next()	true	3176
7874.json	org.eclipse.jgit.treewalk.WorkingTreeOptions.getCheckStat()	7830.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.compareMetadata(org.eclipse.jgit.dircache.DirCacheEntry)	true	1945
9434.json	org.eclipse.jgit.lib.ObjectDatabase.newCachedDatabase()	noCall	noCall	true	3061
2096.json	org.eclipse.jgit.transport.PushProcess.modifyUpdatesForDryRun()	2093.json	org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor)	true	3176
2330.json	org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer()	2329.json,2328.json,2326.json	org.eclipse.jgit.transport.SideBandOutputStream.write(int),org.eclipse.jgit.transport.SideBandOutputStream.write(byte[], int, int),org.eclipse.jgit.transport.SideBandOutputStream.flushBuffer()	true	3011
4971.json	org.eclipse.jgit.internal.storage.reftree.Scanner.toTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	4969.json	org.eclipse.jgit.internal.storage.reftree.Scanner.createParserAtPath(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	880
985.json	org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry)	null	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes)	true	2641
901.json	org.eclipse.jgit.ant.tasks.GitAddTask.translateFilePathUsingPrefix(java.lang.String, java.lang.String)	900.json	org.eclipse.jgit.ant.tasks.GitAddTask.execute()	true	2575
3271.json	org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream.bytesWrittenInBlock()	3169.json	org.eclipse.jgit.internal.storage.reftable.BlockWriter.writeTo(org.eclipse.jgit.internal.storage.reftable.ReftableOutputStream)	true	297
4983.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	880
7206.json	org.eclipse.jgit.api.CherryPickCommand.calculateOurName(org.eclipse.jgit.lib.Ref)	7195.json	org.eclipse.jgit.api.CherryPickCommand.call()	true	2123
953.json	org.eclipse.jgit.merge.MergeResult.Anonymous-0cb50a50-241b-4134-b235-9feb5919636d.next()	noCall	noCall	true	3076
2882.json	org.eclipse.jgit.internal.ketch.Proposal.success()	2854.json,2848.json	org.eclipse.jgit.internal.ketch.ProposalRound.success(),org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	872
5217.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaDepth(int)	5219.json,5012.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setChainLength(int),org.eclipse.jgit.internal.storage.pack.DeltaWindow.searchInWindow()	true	2893
6565.json	org.eclipse.jgit.diff.DiffFormatter.flush()	273.json,null,383.json,null,7282.json,null,247.json,null,null,null,null	org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.diff.DiffFormatterTest.doAutoCrLfTest(java.lang.String, java.lang.String),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffNullToNull(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff()	true	2899
8461.json	org.eclipse.jgit.util.FS.Attributes.isRegularFile()	noCall	noCall	true	1579
9004.json	org.eclipse.jgit.lib.Repository.readCommitEditMsg()	1124.json	org.eclipse.jgit.hooks.CommitMsgHook.call()	true	1195
7991.json	org.eclipse.jgit.util.FS_Win32.discoverGitExe()	noCall	noCall	true	2645
4432.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.scanLoose()	4448.json	org.eclipse.jgit.internal.storage.file.CachedObjectDirectory.openLooseObject(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	1587
1748.json	org.eclipse.jgit.transport.TransferConfig.Anonymous-fdba4c27-7eea-4ec4-a996-a20384bd1705.prefixMatch(java.lang.String, java.lang.String)	noCall	noCall	true	1803
2000.json	org.eclipse.jgit.transport.Transport.getOptionUploadPack()	1812.json	org.eclipse.jgit.transport.TransportLocal.openFetch()	true	3176
6754.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-db89ff7e-d828-496b-aec0-83c41a8dbba5.openStream()	noCall	noCall	true	2838
6690.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ProgressMonitor)	6689.json,6573.json	org.eclipse.jgit.diff.RenameDetector.compute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.diff.DiffFormatter.detectRenames(java.util.List<org.eclipse.jgit.diff.DiffEntry>)	true	2838
317.json	org.eclipse.jgit.pgm.opt.CmdLineParser.unsetRequiredOptions()	315.json	org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(java.lang.String...)	true	893
5345.json	org.eclipse.jgit.revwalk.RevWalk.close()	null,1901.json,1039.json,7502.json,7438.json,6469.json,2741.json,4980.json,null,2629.json,2093.json,7260.json,2740.json,1426.json,6428.json,7436.json	org.eclipse.jgit.junit.TestRepositoryTest.tearDown(),org.eclipse.jgit.transport.BasePackFetchConnection.close(),org.eclipse.jgit.merge.Merger.setObjectInserter(org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.api.NameRevCommand.call(),org.eclipse.jgit.api.RebaseCommand.checkoutCommit(java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.blame.BlameGenerator.close(),org.eclipse.jgit.internal.ketch.LagCheck.close(),org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.unlock(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.tearDown(),org.eclipse.jgit.transport.BaseReceivePack.release(),org.eclipse.jgit.transport.PushProcess.execute(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.internal.ketch.LagCheck.initRevWalk(),org.eclipse.jgit.transport.UploadPack.upload(java.io.InputStream, java.io.OutputStream, java.io.OutputStream),org.eclipse.jgit.blame.BlameGenerator.initRevPool(boolean),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	false	1216
2290.json	org.eclipse.jgit.transport.NetRC.parse()	2288.json	org.eclipse.jgit.transport.NetRC.getEntry(java.lang.String)	true	1408
8524.json	org.eclipse.jgit.util.RelativeDateFormatter.upperLimit(long)	8523.json	org.eclipse.jgit.util.RelativeDateFormatter.format(java.util.Date)	true	2589
4795.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getObjectId()	4793.json,4794.json	org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.getCachedBytes(),org.eclipse.jgit.internal.storage.file.LargePackedWholeObject.openStream()	true	2901
6580.json	org.eclipse.jgit.diff.DiffFormatter.format(java.util.List<? extends org.eclipse.jgit.diff.DiffEntry>)	7282.json,6578.json,6579.json,6577.json	org.eclipse.jgit.api.DiffCommand.call(),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.diff.DiffFormatter.format(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	true	2899
8276.json	org.eclipse.jgit.util.LongMap.insert(org.eclipse.jgit.util.LongMap.Node<V>)	8277.json,8275.json	org.eclipse.jgit.util.LongMap.grow(),org.eclipse.jgit.util.LongMap.put(long, V)	true	3176
7901.json	org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)	7266.json,7885.json,7187.json,null,7297.json,7227.json,7228.json,7886.json,6861.json,7231.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.api.SubmoduleSyncCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String),org.eclipse.jgit.api.SubmoduleStatusCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.submoduleExists(java.lang.String)	true	2355
3961.json	org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate)	4565.json,4493.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	true	3059
7959.json	org.eclipse.jgit.util.RawParseUtils.extractBinaryString(byte[], int, int)	8647.json,7957.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)	true	3176
8634.json	org.eclipse.jgit.util.time.ProposedTimestamp.millis()	8638.json	org.eclipse.jgit.util.time.ProposedTimestamp.date()	true	565
4464.json	org.eclipse.jgit.internal.storage.file.CheckoutEntryImpl.getToBranch()	noCall	noCall	true	2470
1670.json	org.eclipse.jgit.transport.ReceivedPackStatistics.getNumDeltaBlob()	noCall	noCall	true	629
1135.json	org.eclipse.jgit.notes.NoteMap.readTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId)	1134.json	org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevTree)	true	2767
7526.json	org.eclipse.jgit.api.TransportCommand.configure(org.eclipse.jgit.transport.Transport)	7521.json,6836.json,6911.json	org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.api.FetchCommand.call(),org.eclipse.jgit.api.PushCommand.call()	true	2403
10091.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getReadChannel(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	noCall	noCall	true	856
7645.json	org.eclipse.jgit.treewalk.AbstractTreeIterator.createEmptyTreeIterator()	7609.json,null,null	org.eclipse.jgit.treewalk.TreeWalk.enterSubtree(),org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testCreateEmptyTreeIterator(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory()	true	3176
4949.json	org.eclipse.jgit.internal.storage.reftree.RefTree.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.revwalk.RevTree)	null,null,4928.json,2851.json,2901.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.commit(org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.Function),org.eclipse.jgit.internal.storage.reftree.RefTreeTest.testHeadSymref(),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.init(org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.internal.ketch.ProposalRound.insertMultiProposal(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.KetchLeader.initialize()	true	884
3144.json	org.eclipse.jgit.internal.storage.reftable.ReftableConfig.getRefBlockSize()	3604.json,3292.json,3605.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.applyUpdates(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftable.ReftableWriter.begin(java.io.OutputStream),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.canCompactTopOfStack(org.eclipse.jgit.internal.storage.reftable.ReftableConfig)	true	297
1676.json	org.eclipse.jgit.transport.ReceivedPackStatistics.Builder.addDeltaObject(int)	2398.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor)	true	629
9845.json	org.eclipse.jgit.lfs.LfsBlobLoader.getCachedBytes()	noCall	noCall	true	98
3026.json	org.eclipse.jgit.internal.revwalk.AddToBitmapFilter.requiresCommitBody()	noCall	noCall	true	1922
8202.json	org.eclipse.jgit.util.io.ThrowingPrintWriter.flush()	98.json,247.json,287.json,203.json,230.json,178.json,232.json,99.json,231.json,411.json,383.json,393.json,156.json,269.json,360.json,273.json,84.json,112.json,100.json,167.json,380.json,272.json,97.json,null,83.json,233.json,303.json	org.eclipse.jgit.pgm.Status.printList(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Fetch.fetchingSubmodule(java.lang.String),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.Clone.cloningSubmodule(java.lang.String),org.eclipse.jgit.pgm.Status.printList(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.Clone.initializedSubmodules(java.util.Collection<java.lang.String>),org.eclipse.jgit.pgm.TextBuiltin.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.Log.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.pgm.AmazonS3Client.run(),org.eclipse.jgit.pgm.Show.showDiff(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Remote.printUsage(java.lang.String, org.eclipse.jgit.pgm.opt.CmdLineParser),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.Status.printUnmerged(java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff.StageState>),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.pgm.Status.printSectionHeader(java.lang.String, java.lang.Object...),org.eclipse.jgit.pgm.TextBuiltinTest.runAndCaptureUsingInitRaw(java.lang.String...),org.eclipse.jgit.pgm.Remote.run(),org.eclipse.jgit.pgm.Clone.checkingOut(org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.pgm.AbstractFetchCommand.showRemoteMessages(org.eclipse.jgit.util.io.ThrowingPrintWriter, java.lang.String)	true	2093
5753.json	org.eclipse.jgit.revwalk.filter.MessageRevFilter.textFor(org.eclipse.jgit.revwalk.RevCommit)	null,null	org.eclipse.jgit.revwalk.filter.MessageRevFilter.PatternSearch.text(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.filter.MessageRevFilter.SubStringSearch.text(org.eclipse.jgit.revwalk.RevCommit)	true	3176
3413.json	org.eclipse.jgit.internal.storage.dfs.DfsText.get()	3789.json,3659.json,3791.json,3825.json	org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.DfsPackParser.flushBlock(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.readOneBlock(long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.ReadableChannel)	true	2410
43.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.execute()	42.json,40.json,62.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseMessage(),org.eclipse.jgit.transport.http.apache.HttpClientConnection.getResponseCode(),org.eclipse.jgit.transport.http.apache.HttpClientConnection.connect()	true	1572
6933.json	org.eclipse.jgit.api.PushCommand.isAtomic()	noCall	noCall	true	920
8478.json	org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File)	null,null,null,null,null	org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingEmptyDirectory(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingFile(),org.eclipse.jgit.util.FileUtilsTest.testRenameOverExistingNonEmptyDirectory(),org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.util.FileUtilsTest.testRenameOverNonExistingFile()	true	1909
9579.json	org.eclipse.jgit.lib.IndexDiff.getMissing()	null,null,6961.json,null,6968.json,null,null,null,null,9570.json,null	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.Status.getMissing(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations()	true	3176
7726.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.matchFilter(org.eclipse.jgit.treewalk.TreeWalk)	7725.json	org.eclipse.jgit.treewalk.filter.NotTreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk)	true	466
543.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.String)	noCall	noCall	true	3070
2783.json	org.eclipse.jgit.internal.ketch.KetchReplica.snapshot()	2914.json	org.eclipse.jgit.internal.ketch.KetchLeader.snapshot()	true	872
7337.json	org.eclipse.jgit.api.CreateBranchCommand.setForce(boolean)	null,null,null	org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.createBranch(org.eclipse.jgit.api.Git, java.lang.String, boolean, java.lang.String, org.eclipse.jgit.api.CreateBranchCommand.SetupUpstreamMode),org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit()	true	2800
8960.json	org.eclipse.jgit.lib.Repository.renameRef(java.lang.String, java.lang.String)	null,null,null,null,null,null,null,430.json,7188.json	org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.api.RenameBranchCommand.call()	true	3176
9043.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.isSymRef(byte[])	9044.json	org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(java.io.File, java.io.File, org.eclipse.jgit.util.FS)	true	2313
2136.json	org.eclipse.jgit.transport.PushCertificate.toStringBuilder()	2134.json,2135.json	org.eclipse.jgit.transport.PushCertificate.toText(),org.eclipse.jgit.transport.PushCertificate.toTextWithSignature()	true	1095
4998.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.CommitSelectionHelper.Anonymous-4c3db142-a4b2-4ceb-93d5-eb83313e1f19.remove()	noCall	noCall	true	1922
6724.json	org.eclipse.jgit.diff.DiffEntry.getOldMode()	null,null,null,null,null,6600.json,null,null,6595.json,null,null,null,null,null,null,null,null,6718.json,6686.json,null,6601.json,null,null,null,null,null,6726.json,null	org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntry.getMode(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
9351.json	org.eclipse.jgit.lib.ObjectId.fromString(byte[], int)	9013.json,9009.json,9008.json,9006.json,3977.json	org.eclipse.jgit.lib.Repository.readOrigHead(),org.eclipse.jgit.lib.Repository.readRevertHead(),org.eclipse.jgit.lib.Repository.readCherryPickHead(),org.eclipse.jgit.lib.Repository.readMergeHeads(),org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef, java.lang.String)	true	3176
1726.json	org.eclipse.jgit.transport.URIish.eq(java.lang.String, java.lang.String)	1725.json	org.eclipse.jgit.transport.URIish.equals(java.lang.Object)	true	3176
1764.json	org.eclipse.jgit.transport.WalkEncryption.validateImpl(java.net.HttpURLConnection, java.lang.String, java.lang.String, java.lang.String)	null,null	org.eclipse.jgit.transport.WalkEncryption.JetS3tV2.validate(java.net.HttpURLConnection, java.lang.String),org.eclipse.jgit.transport.WalkEncryption.NoEncryption.validate(java.net.HttpURLConnection, java.lang.String)	true	3176
9394.json	org.eclipse.jgit.lib.ObjectChecker.isGitTilde1(byte[], int, int)	9382.json	org.eclipse.jgit.lib.ObjectChecker.checkPathSegment2(byte[], int, int, org.eclipse.jgit.lib.AnyObjectId)	true	1269
3632.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setObjectCount(long)	3636.json,3513.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.setPackStats(org.eclipse.jgit.storage.pack.PackStatistics),org.eclipse.jgit.internal.storage.dfs.DfsInserter.writePackIndex(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, byte[], java.util.List<org.eclipse.jgit.transport.PackedObjectInfo>)	true	2410
7300.json	org.eclipse.jgit.api.TagCommand.updateTagRef(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevWalk, java.lang.String, java.lang.String)	7299.json	org.eclipse.jgit.api.TagCommand.call()	true	1864
951.json	org.eclipse.jgit.merge.MergeResult.getSequences()	915.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge()	true	3076
9091.json	org.eclipse.jgit.lib.SymbolicRef.getPeeledObjectId()	null,null	org.eclipse.jgit.lib.SymbolicRefTest.testConstructor(),org.eclipse.jgit.lib.SymbolicRefTest.testLeaf()	true	3059
8264.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[], int, int)	8263.json	org.eclipse.jgit.util.io.TimeoutInputStream.read(byte[])	true	3176
4997.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.CommitSelectionHelper.Anonymous-4fea70ee-0d9c-43d1-9704-8e7a2ff24e47.next()	noCall	noCall	true	1922
2661.json	org.eclipse.jgit.transport.RefAdvertiser.send(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)	null,null,2604.json	org.eclipse.jgit.transport.UploadPack.lsRefsV2(),org.eclipse.jgit.transport.UploadPack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser, java.lang.String),org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(org.eclipse.jgit.transport.RefAdvertiser)	true	3176
5562.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.outputType()	noCall	noCall	true	3176
476.json	org.eclipse.jgit.junit.MockSystemReader.getDateTimeInstance(int, int)	noCall	noCall	true	2296
1872.json	org.eclipse.jgit.transport.TransportGitSsh.Anonymous-5bab4222-f4b5-4a37-953d-977786dd4699.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2645
9915.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.fromString(byte[], int, int)	null,null,null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFromStringByteWrongLength(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testEmpty_FromByteArray(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testFull_FromByteArray()	true	856
6943.json	org.eclipse.jgit.api.errors.FilterFailedException.getPath()	noCall	noCall	true	925
9124.json	org.eclipse.jgit.lib.RepositoryCache.FileKey.toString()	noCall	noCall	true	3176
2775.json	org.eclipse.jgit.internal.ketch.KetchReplica.getSystem()	2799.json,2808.json,2723.json,2792.json,2788.json,2804.json,2760.json,2784.json,2759.json,2762.json,2721.json,null,2764.json,2803.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.canDelete(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.Transport, java.util.List<org.eclipse.jgit.internal.ketch.RemoteGitReplica.RemoteCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.prepareTxnCommitted(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.KetchReplica.pushTxnAcceptedAsync(org.eclipse.jgit.internal.ketch.Round),org.eclipse.jgit.internal.ketch.KetchReplica.updateView(org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.initialize(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.internal.ketch.LocalReplica.initialize(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.ketch.LocalReplica.update(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest, org.eclipse.jgit.util.time.ProposedTimestamp),org.eclipse.jgit.internal.ketch.RemoteGitReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.isOnlyTxnNamespace(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
6729.json	org.eclipse.jgit.diff.DiffEntry.getOldId()	null,null,null,null,null,6600.json,null,null,null,6452.json,null,6595.json,6456.json,6733.json,null,null,null,null,null,null,null,null,6718.json,null,8692.json,6601.json,null,null,null,null,null,null,null	org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.diff.DiffEntry.getId(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.HunkHeader.Anonymous-03c24250-5b79-46e0-ad52-59fa8a8f35a0.getId(),org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
1121.json	org.eclipse.jgit.hooks.GitHook.isNativeHookPresent()	1111.json	org.eclipse.jgit.hooks.Hooks.prePush(org.eclipse.jgit.lib.Repository, java.io.PrintStream)	true	102
3949.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanTree(java.lang.String, java.io.File)	3948.json,3949.json	org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scan(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectory.LooseScanner.scanTree(java.lang.String, java.io.File)	true	3059
7036.json	org.eclipse.jgit.api.StashCreateCommand.parseCommit(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectId)	7040.json	org.eclipse.jgit.api.StashCreateCommand.call()	true	2293
1792.json	org.eclipse.jgit.transport.SignedPushConfig.getCertNonceSlopLimit()	noCall	noCall	true	1088
8351.json	org.eclipse.jgit.util.sha1.SHA1.State.save(int, int, int, int, int)	8350.json,8337.json,8338.json	org.eclipse.jgit.util.sha1.SHA1.State.init(),org.eclipse.jgit.util.sha1.SHA1.compress(),org.eclipse.jgit.util.sha1.SHA1.recompress(int)	true	466
245.json	org.eclipse.jgit.pgm.Diff.noPrefix(boolean)	noCall	noCall	true	2838
3844.json	org.eclipse.jgit.internal.storage.dfs.DfsRepository.EmptyAttributesNodeProvider.EmptyAttributesNode.parse(java.io.InputStream)	noCall	noCall	true	935
2451.json	org.eclipse.jgit.transport.PackParser.addObjectAndTrack(org.eclipse.jgit.transport.PackedObjectInfo)	2398.json,2410.json	org.eclipse.jgit.transport.PackParser.resolveDeltas(org.eclipse.jgit.transport.PackParser.DeltaVisit, int, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.transport.PackParser.whole(long, int, long)	true	3040
8688.json	org.eclipse.jgit.patch.HunkHeader.OldImage.getLineCount()	null,null,null,8708.json,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.HunkHeader.toString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc()	true	3176
5658.json	org.eclipse.jgit.revwalk.TreeRevFilter.isRename(org.eclipse.jgit.diff.DiffEntry)	5657.json	org.eclipse.jgit.revwalk.TreeRevFilter.updateFollowFilter(org.eclipse.jgit.lib.ObjectId[], org.eclipse.jgit.diff.DiffConfig)	true	2899
6810.json	org.eclipse.jgit.events.IndexChangedEvent.getListenerType()	noCall	noCall	true	2907
6687.json	org.eclipse.jgit.diff.RenameDetector.add(org.eclipse.jgit.diff.DiffEntry)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes(),org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakNone(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile1(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly(),org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename(),org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath(),org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair(),org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile()	true	2899
2879.json	org.eclipse.jgit.internal.ketch.Proposal.getProposedTimestamps()	2856.json	org.eclipse.jgit.internal.ketch.ProposalRound.blockUntil(org.eclipse.jgit.util.time.ProposedTimestamp)	true	565
1129.json	org.eclipse.jgit.hooks.CommitMsgHook.setCommitMessage(java.lang.String)	6979.json	org.eclipse.jgit.api.CommitCommand.call()	true	1195
6991.json	org.eclipse.jgit.api.CommitCommand.setAuthor(org.eclipse.jgit.lib.PersonIdent)	7405.json,7195.json,null,6992.json,7423.json,null,null,null,301.json,null,null,null	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CommitCommand.setAuthor(java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.api.CommitAndLogCommandTest.testWrongParams(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	2953
1278.json	org.eclipse.jgit.transport.RemoteConfig.removePushURI(org.eclipse.jgit.transport.URIish)	6875.json	org.eclipse.jgit.api.RemoteSetUrlCommand.call()	true	3176
6534.json	org.eclipse.jgit.diff.RawText.getStart(int)	6532.json,6529.json	org.eclipse.jgit.diff.RawText.getString(int, int, boolean),org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int)	true	2797
8434.json	org.eclipse.jgit.util.FS.isDirectory(java.io.File)	8469.json,7351.json,6026.json,null,8476.json	org.eclipse.jgit.util.FS.getAttributes(java.io.File),org.eclipse.jgit.api.CleanCommand.call(),org.eclipse.jgit.dircache.DirCacheCheckout.doCheckout(),org.eclipse.jgit.util.FSTest.testSymlinkAttributes(),org.eclipse.jgit.util.FileUtils.delete(java.io.File, int)	true	1864
10041.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createSignature(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, java.lang.String, java.lang.String)	10023.json,10026.json	org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createHeaderAuthorization(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.lang.String)	true	843
4381.json	org.eclipse.jgit.internal.storage.file.SimpleDataInput.readUnsignedShort()	noCall	noCall	true	1922
3306.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finishLogSection()	3303.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.finish()	true	297
3617.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getFileName(org.eclipse.jgit.internal.storage.pack.PackExt)	3618.json,3645.json,3452.json,3789.json,3818.json,3533.json,3791.json,3468.json	org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.getStreamKey(org.eclipse.jgit.internal.storage.pack.PackExt),org.eclipse.jgit.internal.storage.dfs.DfsPackDescription.toString(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.checkPacks(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.BlockBasedFile.getFileName(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.inflate(org.eclipse.jgit.transport.PackedObjectInfo, long, int),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getBitmapIndex(org.eclipse.jgit.internal.storage.dfs.DfsReader),org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.MemObjDatabase.openFile(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, org.eclipse.jgit.internal.storage.pack.PackExt)	true	2410
9628.json	org.eclipse.jgit.lib.BranchTrackingStatus.getRemoteTrackingBranch()	null	org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase()	true	2336
187.json	org.eclipse.jgit.pgm.debug.LfsStore.AppServer.start()	193.json	org.eclipse.jgit.pgm.debug.LfsStore.run()	true	856
5966.json	org.eclipse.jgit.dircache.DirCacheEntry.idOffset()	5990.json,6055.json,5988.json,5919.json,5989.json	org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(byte[], int),org.eclipse.jgit.dircache.DirCacheIterator.idOffset(),org.eclipse.jgit.dircache.DirCacheEntry.getObjectId(),org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.AnyObjectId)	true	3176
6251.json	org.eclipse.jgit.revplot.PlotCommitList.addBlockedPosition(java.util.BitSet, org.eclipse.jgit.revplot.PlotCommit)	6249.json	org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	1480
6543.json	org.eclipse.jgit.diff.RawText.load(org.eclipse.jgit.lib.ObjectLoader, int)	null,6598.json,null	org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.diff.DiffFormatter.open(org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RawTextLoadTest.textFor(byte[], int)	true	229
4188.json	org.eclipse.jgit.internal.storage.file.ReflogReaderImpl.getLastEntry()	noCall	noCall	true	3176
5535.json	org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], int)	5533.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, int)	true	1550
7275.json	org.eclipse.jgit.api.LogCommand.addPath(java.lang.String)	null,null,null	org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount(),org.eclipse.jgit.api.LogCommandTest.logPathWithSkip(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter()	true	2642
202.json	org.eclipse.jgit.pgm.debug.DiffAlgorithms.run()	noCall	noCall	true	2799
6912.json	org.eclipse.jgit.api.PushCommand.setRemote(java.lang.String)	null,null,null,null,null,null,null,null,null,null,122.json,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.TestProtocolTest.testPush(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.transport.PushOptionsTest.testAdvertisedButUnusedPushOptions(),org.eclipse.jgit.transport.PushOptionsTest.testPushOptionsNotSupported(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithoutOptions(),org.eclipse.jgit.pgm.Push.run(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.transport.PushOptionsTest.testPushWithEmptyOptions()	true	2805
10426.json	org.eclipse.jgit.http.server.ReceivePackServlet.log(org.eclipse.jgit.lib.Repository, java.lang.Throwable)	noCall	noCall	false	1131
8566.json	org.eclipse.jgit.util.Paths.coreCompare(byte[], int, int, int, byte[], int, int, int)	8565.json,8564.json	org.eclipse.jgit.util.Paths.compareSameName(byte[], int, int, byte[], int, int, int),org.eclipse.jgit.util.Paths.compare(byte[], int, int, int, byte[], int, int, int)	true	893
131.json	org.eclipse.jgit.pgm.Glog.repoName()	128.json	org.eclipse.jgit.pgm.Glog.walkLoop()	true	3176
6788.json	org.eclipse.jgit.events.ConfigChangedEvent.getListenerType()	noCall	noCall	true	2900
5770.json	org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter.Between.include(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit)	noCall	noCall	true	3176
6822.json	org.eclipse.jgit.api.RevertCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	noCall	noCall	true	138
5565.json	org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoHistory(org.eclipse.jgit.revwalk.RevCommit, int)	5563.json	org.eclipse.jgit.revwalk.MergeBaseGenerator._next()	true	3176
7323.json	org.eclipse.jgit.api.SubmoduleDeinitResult.getStatus()	null,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleDeinitTest.cleanSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseUntracked(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.alreadyClosedSubmodule(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleWithForce()	true	164
8486.json	org.eclipse.jgit.util.FileUtils.readSymLink(java.io.File)	null,8431.json,null,null,null,8506.json,null,null	org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.util.FS.readSymLink(java.io.File),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.util.FileUtils.getFileAttributesBasic(org.eclipse.jgit.util.FS, java.io.File),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink()	true	1864
9532.json	org.eclipse.jgit.lib.RefUpdate.isRefLogIncludingResult()	4985.json,4491.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.run(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	true	3059
3524.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.read(long, byte[], int, int)	3532.json,3545.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader.open(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.internal.storage.dfs.DfsInserter.ReadBackStream.read(byte[], int, int)	true	1397
6708.json	org.eclipse.jgit.diff.SubsequenceComparator.hash(org.eclipse.jgit.diff.Subsequence<S>, int)	noCall	noCall	true	2830
2142.json	org.eclipse.jgit.transport.TransportGitAnon.Anonymous-fa6d1ed6-d1d5-42ed-8e0a-5d073e527257.getSchemes()	noCall	noCall	true	2645
8962.json	org.eclipse.jgit.lib.Repository.simplify(java.lang.String)	null,null,null	org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch()	true	2152
2046.json	org.eclipse.jgit.transport.TransportSftp.Anonymous-8f902436-58f8-4e25-ab83-5e029aff9559.getOptionalFields()	noCall	noCall	true	2645
2487.json	org.eclipse.jgit.transport.CredentialItem.getPromptText()	447.json,445.json,446.json,8.json,9.json,1641.json,1659.json,444.json,448.json	org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.InformationalMessage),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.StringType),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.CharArrayType),org.eclipse.jgit.awtui.AwtCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.awtui.AwtCredentialsProvider.interactive(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem[]),org.eclipse.jgit.transport.NetRCCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.transport.UsernamePasswordCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.CredentialItem...),org.eclipse.jgit.console.ConsoleCredentialsProvider.get(org.eclipse.jgit.transport.CredentialItem.YesNoType)	true	2768
8020.json	org.eclipse.jgit.util.RefMap.Anonymous-a1e2102b-e71d-4a4c-95a9-e431502c3082.size()	noCall	noCall	true	3060
1098.json	org.eclipse.jgit.hooks.PrePushHook.getParameters()	noCall	noCall	true	950
7958.json	org.eclipse.jgit.util.RawParseUtils.decodeNoFallback(java.nio.charset.Charset, byte[], int, int)	8647.json,7957.json	org.eclipse.jgit.patch.FileHeader.getScriptText(java.nio.charset.Charset[]),org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)	true	3176
2881.json	org.eclipse.jgit.internal.ketch.Proposal.addListener(java.lang.Runnable)	noCall	noCall	true	872
8847.json	org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(int)	null,203.json,178.json,null,1141.json,9255.json,null,5136.json,2404.json,null,null,null,null,382.json,null,6376.json,6543.json,2414.json,6440.json,8845.json,5256.json,null,null,4974.json,5377.json	org.eclipse.jgit.lib.ObjectLoaderTest.testLimitedGetCachedBytes(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.notes.NoteMap.getCachedBytes(org.eclipse.jgit.lib.AnyObjectId, int),org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader(),org.eclipse.jgit.internal.storage.pack.PackWriter.buffer(org.eclipse.jgit.storage.pack.PackConfig, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.transport.PackParser.resolveDeltasWithExternalBases(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.lib.ObjectLoaderTest.testLimitedGetCachedBytesExceedsJavaLimits(),org.eclipse.jgit.gitrepo.RepoCommandTest.IndexedRepos.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.pgm.Log.showNotes(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.notes.NoteMap, java.lang.String, boolean),org.eclipse.jgit.lib.ObjectLoaderTest.testLargeObjectLoader(),org.eclipse.jgit.blame.Candidate.loadText(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.diff.RawText.load(org.eclipse.jgit.lib.ObjectLoader, int),org.eclipse.jgit.transport.PackParser.checkObjectCollision(org.eclipse.jgit.lib.AnyObjectId, int, byte[]),org.eclipse.jgit.blame.BlameGenerator.push(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.lib.ObjectLoader.getBytes(int),org.eclipse.jgit.internal.storage.pack.BaseSearch.readTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(org.eclipse.jgit.lib.ObjectReader, int, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(org.eclipse.jgit.revwalk.RevObject, org.eclipse.jgit.lib.ObjectLoader)	false	2846
7553.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.noAttributes()	7551.json,7552.json	org.eclipse.jgit.treewalk.CanonicalTreeParser.findAttributes(org.eclipse.jgit.lib.ObjectReader),org.eclipse.jgit.treewalk.CanonicalTreeParser.loadAttributes(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	true	923
4238.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.oldestPossibleFormat(java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>)	4237.json,5107.json	org.eclipse.jgit.internal.storage.file.PackIndexWriter.createOldestPossible(java.io.OutputStream, java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>),org.eclipse.jgit.internal.storage.pack.PackWriter.getIndexVersion()	true	1922
6798.json	org.eclipse.jgit.events.ListenerList.addRefsChangedListener(org.eclipse.jgit.events.RefsChangedListener)	null,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.setUp(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow()	true	2907
4026.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.write(byte[], int, int)	4025.json,4023.json,4011.json	org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.write(int),org.eclipse.jgit.internal.storage.file.PackInserter.PackStream.beginObject(int, long),org.eclipse.jgit.internal.storage.file.PackInserter.beginPack()	true	221
3516.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream.beginObject(int, long)	3508.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.beginObject(int, long)	true	2410
2753.json	org.eclipse.jgit.internal.ketch.ElectionRound.parseTerm(java.util.List<java.lang.String>)	2752.json	org.eclipse.jgit.internal.ketch.ElectionRound.bumpTerm(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.util.time.ProposedTimestamp, org.eclipse.jgit.lib.ObjectInserter)	true	872
6455.json	org.eclipse.jgit.blame.BlameGenerator.split(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Candidate)	6452.json,6454.json	org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.blame.BlameGenerator.splitBlameWithParent(org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.revwalk.RevCommit)	true	2567
3230.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.getUpdateIndex()	noCall	noCall	true	297
9098.json	org.eclipse.jgit.lib.RepositoryCache.close(org.eclipse.jgit.lib.Repository)	9113.json	org.eclipse.jgit.lib.RepositoryCache.clearAllExpired()	true	3176
7157.json	org.eclipse.jgit.api.MergeResult.toString()	278.json,7046.json	org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.api.PullResult.toString()	true	2939
6801.json	org.eclipse.jgit.events.ListenerList.dispatch(org.eclipse.jgit.events.RepositoryEvent)	8895.json,null,3789.json	org.eclipse.jgit.lib.Config.fireConfigChangedEvent(),org.eclipse.jgit.lib.Repository.fireEvent(org.eclipse.jgit.events.RepositoryEvent<?>),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.idx(org.eclipse.jgit.internal.storage.dfs.DfsReader)	true	2907
6632.json	org.eclipse.jgit.diff.SimilarityIndex.size()	null,null,null	org.eclipse.jgit.diff.SimilarityIndexTest.keyFor(java.lang.String),org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingLargeObject(),org.eclipse.jgit.diff.SimilarityIndexTest.testIndexingSmallObject()	true	2899
4360.json	org.eclipse.jgit.internal.storage.file.WindowCursor.close()	null,null,4370.json	org.eclipse.jgit.internal.storage.file.PackFileTest.tearDown(),org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.tearDown(),org.eclipse.jgit.internal.storage.file.PackInputStream.close()	true	3176
7758.json	org.eclipse.jgit.treewalk.filter.NotIgnoredFilter.clone()	noCall	noCall	true	2859
10039.json	org.eclipse.jgit.lfs.server.s3.SignerV4.toHex(byte[])	10038.json,10023.json,10027.json	org.eclipse.jgit.lfs.server.s3.SignerV4.stringToSign(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.createAuthorizationQuery(org.eclipse.jgit.lfs.server.s3.S3Config, java.net.URL, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String),org.eclipse.jgit.lfs.server.s3.SignerV4.formatAuthorizationHeader(org.eclipse.jgit.lfs.server.s3.S3Config, java.lang.String, java.lang.String, byte[])	true	843
7097.json	org.eclipse.jgit.api.Git.gc()	436.json,null,null,null,null	org.eclipse.jgit.pgm.Gc.run(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit()	true	2029
9324.json	org.eclipse.jgit.lib.BatchRefUpdate.getProposedTimestamps()	noCall	noCall	true	565
3366.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packIsCoalesceableGarbage(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription, long)	3363.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.readPacksBefore()	true	487
4934.json	org.eclipse.jgit.internal.storage.reftree.Command.abort(java.lang.Iterable<org.eclipse.jgit.internal.storage.reftree.Command>, java.lang.String)	4932.json,4930.json,2883.json,4954.json	org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.commit(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.internal.storage.reftree.Command>),org.eclipse.jgit.internal.ketch.Proposal.abort(),org.eclipse.jgit.internal.storage.reftree.RefTree.apply(java.util.Collection<org.eclipse.jgit.internal.storage.reftree.Command>)	true	884
4616.json	org.eclipse.jgit.internal.storage.file.LockFile.write(byte[])	4615.json,216.json,4192.json,4849.json,217.json,4459.json,6089.json,4494.json,null,3974.json,null,4856.json	org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.PackLock.lock(java.lang.String),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.internal.storage.file.GcLog.write(java.lang.String),org.eclipse.jgit.storage.file.FileBasedConfig.save(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.junit.TestRepository.writeFile(java.io.File, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.Anonymous-a2a1a12f-e392-4359-b247-74aa7e5d6817.writeFile(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.internal.storage.file.FileRepository.setGitwebDescription(java.lang.String)	true	3176
1703.json	org.eclipse.jgit.transport.AmazonS3.ListParser.endElement(java.lang.String, java.lang.String, java.lang.String)	noCall	noCall	true	3176
6364.json	org.eclipse.jgit.blame.Region.toString()	noCall	noCall	true	2567
191.json	org.eclipse.jgit.pgm.debug.LfsStore.requiresRepository()	noCall	noCall	true	856
2726.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.asUpdateList(java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	2722.json	org.eclipse.jgit.internal.ketch.RemoteGitReplica.push(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest)	true	872
1305.json	org.eclipse.jgit.transport.BaseFetchConnection.fetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	noCall	noCall	true	3176
5321.json	org.eclipse.jgit.attributes.AttributesHandler.attributesNode(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser)	5318.json	org.eclipse.jgit.attributes.AttributesHandler.mergePerDirectoryEntryAttributes(java.lang.String, int, boolean, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.attributes.Attributes)	true	849
316.json	org.eclipse.jgit.pgm.opt.CmdLineParser.printToErrorWriter(java.lang.String)	315.json	org.eclipse.jgit.pgm.opt.CmdLineParser.parseArgument(java.lang.String...)	true	885
6058.json	org.eclipse.jgit.dircache.DirCacheIterator.eof()	6056.json,null,null,null,null,6059.json	org.eclipse.jgit.dircache.DirCacheIterator.reset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_NoTreeWalk(),org.eclipse.jgit.dircache.DirCacheIterator.next(int)	true	3176
4402.json	org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(org.eclipse.jgit.internal.storage.file.PackFile, long, long, org.eclipse.jgit.lib.ObjectId)	4146.json	org.eclipse.jgit.internal.storage.file.PackFile.representation(org.eclipse.jgit.internal.storage.file.WindowCursor, org.eclipse.jgit.lib.AnyObjectId)	true	2906
112.json	org.eclipse.jgit.pgm.Blame.run()	noCall	noCall	true	2493
9302.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.equals(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId)	9291.json,9288.json	org.eclipse.jgit.lib.ObjectIdOwnerMap.addIfAbsent(Q),org.eclipse.jgit.lib.ObjectIdOwnerMap.get(org.eclipse.jgit.lib.AnyObjectId)	true	2645
2320.json	org.eclipse.jgit.transport.ProgressSpinner.send(long)	2318.json,2319.json	org.eclipse.jgit.transport.ProgressSpinner.beginTask(java.lang.String, long, java.util.concurrent.TimeUnit),org.eclipse.jgit.transport.ProgressSpinner.update()	true	906
4461.json	org.eclipse.jgit.internal.storage.file.ByteBufferWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, int)	noCall	noCall	true	2683
997.json	org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths()	null,7195.json,1005.json,6812.json,7385.json	org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.api.MergeCommand.call()	true	2841
6909.json	org.eclipse.jgit.api.CloneCommand.cleanup()	6880.json	org.eclipse.jgit.api.CloneCommand.call()	true	394
8278.json	org.eclipse.jgit.util.LongMap.index(long)	8275.json,8274.json,8276.json,8273.json	org.eclipse.jgit.util.LongMap.put(long, V),org.eclipse.jgit.util.LongMap.remove(long),org.eclipse.jgit.util.LongMap.insert(org.eclipse.jgit.util.LongMap.Node<V>),org.eclipse.jgit.util.LongMap.get(long)	true	3176
1731.json	org.eclipse.jgit.transport.URIish.getHumanishName()	null,null,230.json,6883.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.transport.URIishTest.testGetEmptyHumanishNameWithAuthorityOnly(),org.eclipse.jgit.transport.URIishTest.testGetValidGitSchemeWithTwoSlashesHumanishName(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.api.CloneCommand.verifyDirectories(org.eclipse.jgit.transport.URIish),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashesDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashesDotGitSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetEmptyHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetNullHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetWindowsPathHumanishName(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithPort(),org.eclipse.jgit.transport.URIishTest.testGetValidDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostOnly(),org.eclipse.jgit.transport.URIishTest.testGetSlashesValidSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetWithSlashDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testSshProtoHostWithAuthentication(),org.eclipse.jgit.transport.URIishTest.testGetTwoSlashesDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetSlashSlashDotGitSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testFileProtocol(),org.eclipse.jgit.transport.URIishTest.testGetValidDotGitSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetSlashValidSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidWithEmptySlashDotGitHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetSlashValidSlashDotGitSlashHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetAbsEmptyHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidLocalWithTwoSlashesHumanishName(),org.eclipse.jgit.transport.URIishTest.testGetValidWithSlashDotGitSlashHumanishName()	true	3095
74.json	org.eclipse.jgit.transport.http.apache.TemporaryBufferEntity.close()	43.json	org.eclipse.jgit.transport.http.apache.HttpClientConnection.execute()	true	655
3662.json	org.eclipse.jgit.internal.storage.dfs.DfsPackParser.seekDatabase(org.eclipse.jgit.transport.PackParser.UnresolvedDelta, org.eclipse.jgit.transport.PackParser.ObjectTypeAndSize)	noCall	noCall	true	2410
6782.json	org.eclipse.jgit.events.RepositoryEvent.getRepository()	null	org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave()	true	3176
503.json	org.eclipse.jgit.junit.http.AppServer.TestMappedLoginService.loadUserInfo(java.lang.String)	noCall	noCall	true	700
5030.json	org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.type()	5010.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.clearWindowOnTypeSwitch()	true	2893
8150.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.checkOutStreamType(org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	8145.json	org.eclipse.jgit.util.io.EolStreamTypeUtil.detectStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType, org.eclipse.jgit.treewalk.WorkingTreeOptions, org.eclipse.jgit.attributes.Attributes)	true	824
7956.json	org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[])	8649.json	org.eclipse.jgit.patch.FileHeader.extractFileLines(java.nio.charset.Charset[])	true	3176
7283.json	org.eclipse.jgit.api.DiffCommand.setCached(boolean)	null	org.eclipse.jgit.api.DiffCommandTest.testDiffCached()	true	2490
956.json	org.eclipse.jgit.merge.MergeResult.containsConflicts()	null,null,7173.json	org.eclipse.jgit.merge.ResolveMerger.processEntry(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheBuildIterator, org.eclipse.jgit.treewalk.WorkingTreeIterator, boolean, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>, org.eclipse.jgit.attributes.Attributes),org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>)	true	3076
7019.json	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId)	7008.json	org.eclipse.jgit.api.ResetCommand.call()	true	2669
10115.json	org.eclipse.jgit.archive.TgzFormat.suffixes()	noCall	noCall	true	1830
2032.json	org.eclipse.jgit.transport.Transport.setPushOptions(java.util.List<java.lang.String>)	null,null,6911.json,null,null	org.eclipse.jgit.transport.PushOptionsTest.testAtomicPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testNonAtomicPushWithOptions(),org.eclipse.jgit.api.PushCommand.call(),org.eclipse.jgit.transport.PushOptionsTest.testThinPushWithOptions(),org.eclipse.jgit.transport.PushOptionsTest.testFailedAtomicPushWithOptions()	true	688
3258.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.matchOld(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.lib.Ref)	3257.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	235
5677.json	org.eclipse.jgit.revwalk.RewriteGenerator.cleanup(org.eclipse.jgit.revwalk.RevCommit[])	5675.json	org.eclipse.jgit.revwalk.RewriteGenerator.next()	true	3176
7486.json	org.eclipse.jgit.api.CheckoutCommand.getBranchName()	7471.json,7485.json	org.eclipse.jgit.api.CheckoutCommand.call(),org.eclipse.jgit.api.CheckoutCommand.processOptions()	true	1605
5491.json	org.eclipse.jgit.revwalk.ObjectWalk.findObjectId(byte[], int)	5490.json	org.eclipse.jgit.revwalk.ObjectWalk.nextObject()	true	2493
1418.json	org.eclipse.jgit.transport.UploadPack.getPostUploadHook()	noCall	noCall	true	1094
2816.json	org.eclipse.jgit.internal.ketch.KetchSystem.getClock()	2749.json,null,2760.json,2848.json	org.eclipse.jgit.internal.ketch.ElectionRound.start(),org.eclipse.jgit.internal.ketch.LocalReplica.Anonymous-c16a4082-ac7f-441e-ba13-f9d226ad0934.run(),org.eclipse.jgit.internal.ketch.LocalReplica.startPush(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.ProposalRound.start()	true	565
1691.json	org.eclipse.jgit.transport.AmazonS3.error(java.lang.String, java.lang.String, java.net.HttpURLConnection)	1699.json,1686.json,1687.json,1690.json,1683.json	org.eclipse.jgit.transport.AmazonS3.ListParser.list(),org.eclipse.jgit.transport.AmazonS3.delete(java.lang.String, java.lang.String),org.eclipse.jgit.transport.AmazonS3.put(java.lang.String, java.lang.String, byte[]),org.eclipse.jgit.transport.AmazonS3.putImpl(java.lang.String, java.lang.String, byte[], org.eclipse.jgit.util.TemporaryBuffer, org.eclipse.jgit.lib.ProgressMonitor, java.lang.String),org.eclipse.jgit.transport.AmazonS3.get(java.lang.String, java.lang.String)	true	3176
2790.json	org.eclipse.jgit.internal.ketch.KetchReplica.shouldPushUnbatchedCommit(org.eclipse.jgit.internal.ketch.LogIndex, boolean)	2912.json,2795.json	org.eclipse.jgit.internal.ketch.KetchLeader.commitAsync(org.eclipse.jgit.internal.ketch.KetchReplica),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
5533.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, int)	5532.json,5533.json	org.eclipse.jgit.revwalk.RevCommit.carryFlags(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, int)	true	3176
6604.json	org.eclipse.jgit.diff.DiffFormatter.combineA(java.util.List<org.eclipse.jgit.diff.Edit>, int)	6603.json	org.eclipse.jgit.diff.DiffFormatter.findCombinedEnd(java.util.List<org.eclipse.jgit.diff.Edit>, int)	true	3176
7691.json	org.eclipse.jgit.treewalk.filter.PathFilter.create(java.lang.String)	null,7744.json,null,null,null,null,null,5628.json,null,null,7231.json,null,null,null,null,7896.json,null,null,null,null,null,7885.json,6570.json,6758.json,null,null,null,null,null,7743.json,null,null,null,null,6043.json,null,6452.json,7568.json,null,6456.json,6041.json,7975.json,7297.json,null,null,null,null,null,null,null,null,null,null,null,7886.json,null,7275.json,null,null	org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.lang.String...),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoSubPath(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSingleSubPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreeMixSubPathNegate(),org.eclipse.jgit.revwalk.FollowFilter.create(java.lang.String, org.eclipse.jgit.diff.DiffConfig),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopNotPath(),org.eclipse.jgit.api.SubmoduleDeinitCommand.submoduleExists(java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoMixSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSinglePathNegate(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiSubPathDualNegate(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testShouldBeRecursive_PathFilter(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPath(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.merge.CrissCrossMergeTest.contentAsString(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSingleSubPathNegate(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopAndMultiPathDualNegate(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>),org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiTwoPath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testTopOrMultiPathDual(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathNegate(),org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectReader, java.lang.String, org.eclipse.jgit.lib.AnyObjectId...),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.api.SubmoduleAddCommand.submoduleExists(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testPatternParentFileMatch(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testOrMultiThreePath(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPathDualNegate(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testSinglePath(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiSubPath(),org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testNegateIsUnwrap(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.submodule.SubmoduleWalk.forPath(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.treewalk.AbstractTreeIterator, java.lang.String),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiThreeSubPathNegate(),org.eclipse.jgit.api.LogCommand.addPath(java.lang.String),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.treewalk.filter.PathFilterLogicTest.testAndMultiPathNegate()	false	3176
4481.json	org.eclipse.jgit.internal.storage.file.PackIndexV1.iterator()	noCall	noCall	true	3176
9946.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(java.nio.ByteBuffer)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawToByteBuffer()	true	856
1312.json	org.eclipse.jgit.transport.ChainingCredentialsProvider.supports(org.eclipse.jgit.transport.CredentialItem...)	noCall	noCall	true	1355
5550.json	org.eclipse.jgit.revwalk.RevCommit.hasLF(byte[], int, int)	5549.json,5668.json	org.eclipse.jgit.revwalk.RevCommit.getShortMessage(),org.eclipse.jgit.revwalk.RevTag.getShortMessage()	true	3176
5346.json	org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit)	null,203.json,null,5347.json,2842.json,6442.json,352.json,null,null,null,9883.json,null,null,null,null,null,null,1043.json,null,5349.json,5605.json,7279.json,null,null,250.json,null,null,4988.json,null,null,5348.json,null,5690.json,1033.json,null,7260.json,null,1323.json,null,null,7429.json,null,null,null,null,null,5481.json,1470.json,9627.json	org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.revwalk.RevWalk.markStart(java.util.Collection<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.blame.BlameGenerator.reverse(org.eclipse.jgit.lib.AnyObjectId, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.revwalk.ObjectWalkFilterTest.setUp(),org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.lfs.LfsPrePushHook.findObjectsToPush(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.setupTipCommitBitmaps(org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents(),org.eclipse.jgit.revplot.PlotCommitListTest.testMerged(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.isReachable(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory(),org.eclipse.jgit.merge.Merger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther(),org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.DepthWalk.RevWalk.markRoot(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.LogCommand.add(boolean, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1(),org.eclipse.jgit.pgm.MergeBase.run(),org.eclipse.jgit.transport.UploadPack.checkNotAdvertisedWants(org.eclipse.jgit.transport.UploadPack, java.util.List<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevWalkTestCase.markStart(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit(),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges(),org.eclipse.jgit.revwalk.RevWalkUtils.find(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.DescribeCommand.call(),org.eclipse.jgit.revplot.PlotCommitListTest.testLinear(),org.eclipse.jgit.transport.BundleFetchConnection.verifyPrerequisites(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1(),org.eclipse.jgit.api.RebaseCommand.calculatePickList(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2(),org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf(),org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.createCommitList(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.transport.UploadPack.wantSatisfied(org.eclipse.jgit.revwalk.RevObject),org.eclipse.jgit.lib.BranchTrackingStatus.of(org.eclipse.jgit.lib.Repository, java.lang.String)	true	3176
8722.json	org.eclipse.jgit.patch.CombinedFileHeader.parseDeletedFileMode(int, int)	8717.json	org.eclipse.jgit.patch.CombinedFileHeader.parseGitHeaders(int, int)	true	3176
5414.json	org.eclipse.jgit.revwalk.RevWalk.initializeShallowCommits()	5530.json	org.eclipse.jgit.revwalk.RevCommit.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[])	true	2026
1095.json	org.eclipse.jgit.hooks.PrePushHook.call()	2034.json	org.eclipse.jgit.transport.Transport.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	950
1850.json	org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result)	3251.json,null,3256.json,1951.json,3254.json,null,4927.json,2724.json,3257.json,9326.json,2606.json,2621.json,3255.json,1247.json,1853.json,1857.json	org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkConflicting(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkObjectExistence(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.reject(org.eclipse.jgit.transport.ReceiveCommand, org.eclipse.jgit.transport.ReceiveCommand.Result, java.lang.String, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.reftree.RefTreeBatch.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.ketch.RemoteGitReplica.isExpectedValue(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.transport.RemoteRefUpdate),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkExpected(org.eclipse.jgit.internal.storage.reftable.Reftable, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.transport.BaseReceivePack.recvCommands(),org.eclipse.jgit.transport.BaseReceivePack.validateCommands(),org.eclipse.jgit.internal.storage.dfs.ReftableBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.transport.TrackingRefUpdate.Command.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.lib.RefUpdate.Result)	true	3176
6601.json	org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry)	6600.json	org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry)	true	2574
9464.json	org.eclipse.jgit.lib.TagBuilder.getTagger()	9468.json	org.eclipse.jgit.lib.TagBuilder.build()	true	3176
9629.json	org.eclipse.jgit.lib.BranchTrackingStatus.getAheadCount()	null,null	org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase(),org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase()	true	2336
8002.json	org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, int)	8664.json,null,null,null,null,null,8658.json,null	org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, int, int),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.assertDequote(java.lang.String, java.lang.String),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareABCZ_OnlyBC(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Empty1(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_Empty2(),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_BareA(),org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int),org.eclipse.jgit.util.QuotedStringGitPathStyleTest.testDequote_SoleDq()	true	3176
2568.json	org.eclipse.jgit.transport.BaseReceivePack.getRefLogIdent()	2614.json,2625.json,1853.json,2892.json	org.eclipse.jgit.transport.BaseReceivePack.receivePack(),org.eclipse.jgit.transport.BaseReceivePack.executeCommands(),org.eclipse.jgit.transport.ReceiveCommand.execute(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.internal.ketch.KetchPreReceive.onPreReceive(org.eclipse.jgit.transport.ReceivePack, java.util.Collection<org.eclipse.jgit.transport.ReceiveCommand>)	true	3176
2360.json	org.eclipse.jgit.transport.RefSpec.expandFromDstImp(java.lang.String)	2359.json	org.eclipse.jgit.transport.RefSpec.expandFromDestination(java.lang.String)	true	3176
4520.json	org.eclipse.jgit.internal.storage.file.PackIndexV2.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, int)	noCall	noCall	true	2848
5697.json	org.eclipse.jgit.revwalk.filter.CommitterRevFilter.PatternSearch.clone()	noCall	noCall	true	3176
1707.json	org.eclipse.jgit.transport.URIish.n2e(java.lang.String)	noCall	noCall	true	2802
2353.json	org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)	null,7521.json,null,null,null,null,1960.json,null,1997.json	org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster(),org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.transport.RefSpecTest.testMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceMaster(),org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin(),org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster(),org.eclipse.jgit.transport.FetchProcess.expandWildcard(org.eclipse.jgit.transport.RefSpec, java.util.Set<org.eclipse.jgit.lib.Ref>),org.eclipse.jgit.transport.RefSpecTest.testMasterMaster(),org.eclipse.jgit.transport.Transport.expandPushWildcardsFor(org.eclipse.jgit.lib.Repository, java.util.Collection<org.eclipse.jgit.transport.RefSpec>)	true	3176
3008.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.merge(org.eclipse.jgit.transport.OpenSshConfig.HostEntry)	10179.json	org.eclipse.jgit.transport.OpenSshConfig.lookup(java.lang.String)	true	289
7582.json	org.eclipse.jgit.treewalk.TreeWalk.getAttributes()	null,1006.json,null,null,null,7583.json,null,null,7618.json,7975.json,null,7976.json,6714.json,null	org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.merge.ResolveMerger.mergeTreeWalk(org.eclipse.jgit.treewalk.TreeWalk, boolean),org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.attributes.AttributesHandlerTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Collection<org.eclipse.jgit.attributes.Attribute>),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.TreeWalk.getEolStreamType(org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.TreeWalk.getFilterCommand(java.lang.String),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.diff.DiffEntry.scan(org.eclipse.jgit.treewalk.TreeWalk, boolean, org.eclipse.jgit.treewalk.filter.TreeFilter[]),org.eclipse.jgit.attributes.TreeWalkAttributeTest.assertEntry(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.Set<org.eclipse.jgit.attributes.Attribute>, java.util.Set<org.eclipse.jgit.attributes.Attribute>)	true	935
275.json	org.eclipse.jgit.pgm.Merge.ff(boolean)	noCall	noCall	true	1735
6725.json	org.eclipse.jgit.diff.DiffEntry.getNewMode()	null,null,null,null,null,null,6600.json,null,null,null,6595.json,null,null,null,null,null,null,null,null,null,6718.json,6686.json,null,null,6601.json,null,null,null,6826.json,null,null,null,6726.json,null	org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.diff.RenameDetectorTest.assertRename(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.formatHeader(java.io.ByteArrayOutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.diff.RenameDetectorTest.assertCopy(org.eclipse.jgit.diff.DiffEntry, org.eclipse.jgit.diff.DiffEntry, int, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.DiffFormatter.createFormatResult(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary(),org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100(),org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange(),org.eclipse.jgit.diff.DiffEntry.breakModify(org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.diff.RenameDetector.addAll(java.util.Collection<org.eclipse.jgit.diff.DiffEntry>),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.diff.DiffFormatter.formatIndexLine(java.io.OutputStream, org.eclipse.jgit.diff.DiffEntry),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode(),org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle(),org.eclipse.jgit.api.ApplyCommand.apply(java.io.File, org.eclipse.jgit.patch.FileHeader),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile(),org.eclipse.jgit.diff.DiffEntry.getMode(org.eclipse.jgit.diff.DiffEntry.Side),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange()	true	3176
3930.json	org.eclipse.jgit.internal.storage.io.BlockSource.adviseSequentialRead(long, long)	3039.json,3035.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allLogs(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.allRefs()	true	297
373.json	org.eclipse.jgit.pgm.Log.abbrev(boolean)	noCall	noCall	true	2899
9358.json	org.eclipse.jgit.lib.ObjectChecker.setSkipList(org.eclipse.jgit.lib.ObjectIdSet)	null,null,1739.json	org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListRejects(java.lang.String, int, byte[]),org.eclipse.jgit.lib.ObjectCheckerTest.assertSkipListAccepts(int, byte[]),org.eclipse.jgit.transport.TransferConfig.newObjectChecker(boolean)	true	892
2514.json	org.eclipse.jgit.transport.TransportAmazonS3.DatabaseS3.openAlternate(java.lang.String)	noCall	noCall	true	3176
8982.json	org.eclipse.jgit.lib.Repository.peel(org.eclipse.jgit.lib.Ref)	8983.json	org.eclipse.jgit.lib.Repository.getAllRefsByPeeledObjectId()	true	3176
8799.json	org.eclipse.jgit.lib.ObjectIdSubclassMap.Anonymous-9cd8bb4e-4c06-40b7-b971-d41d8f762ec0.remove()	noCall	noCall	true	3176
9779.json	org.eclipse.jgit.lib.RefWriter.writePackedRefs()	217.json,null,null,2306.json	org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList, boolean),org.eclipse.jgit.transport.WalkPushConnection.push(org.eclipse.jgit.lib.ProgressMonitor, java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>, java.io.OutputStream)	true	3176
7230.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.checkDirty(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)	7228.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.call()	true	164
8687.json	org.eclipse.jgit.patch.HunkHeader.OldImage.getStartLine()	null,null,null,null,8708.json,null,null,null	org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive(),org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline(),org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral(),org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile(),org.eclipse.jgit.patch.HunkHeader.toString(),org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline(),org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc(),org.eclipse.jgit.patch.PatchTest.testParse_NoBinary()	true	3176
4996.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.CommitSelectionHelper.Anonymous-694062a1-d0a6-4b3d-9903-e88202d1d747.hasNext()	noCall	noCall	true	1922
2274.json	org.eclipse.jgit.transport.TransportHttp.Service.HttpExecuteStream.read()	noCall	noCall	true	3070
5595.json	org.eclipse.jgit.revwalk.BlockObjQueue.Block.pop()	5589.json	org.eclipse.jgit.revwalk.BlockObjQueue.next()	true	3176
8887.json	org.eclipse.jgit.lib.Config.getNames(java.lang.String)	null,89.json	org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection(),org.eclipse.jgit.pgm.Config.list(org.eclipse.jgit.lib.StoredConfig)	true	2917
8946.json	org.eclipse.jgit.lib.Repository.getDirectory()	null,null,1529.json,null,null,null,null,null,178.json,null,null,null,null,null,null,null,null,null,null,87.json,null,null,null,null,1884.json,null,null,null,null,562.json,null,null,10400.json,null,9097.json,null,null,4181.json,216.json,null,null,null,null,null,9847.json,null,null,null,null,null,null,null,null,null,null,1958.json,null,null,null,null,null,null,null,null,null,null,212.json,null,null,null,null,null,null,null,null,null,null,null,null,9016.json,null,2757.json,null,7265.json,null,null,null,null,null,null,null,null,null,null,null,null,null,217.json,null,9019.json,null,null,null,null,null,8974.json,7807.json,null,1807.json,null,null,null,406.json,null,8450.json,null,358.json,null,null,null,4849.json,null,null,null,null,null,null,null,9008.json,null,null,8988.json,9099.json,null,null,null,2235.json,null,null,null,null,null,203.json,null,null,null,null,null,null,null,9013.json,null,null,null,null,null,null,null,null,null,null,null,4857.json,null,null,null,9102.json,null,null,null,null,null,null,9756.json,null,null,null,null,214.json,null,null,9752.json,9018.json,null,null,null,null,null,null,null,null,null,null,null,null,1128.json,2506.json,null,null,null,null,null,null,null,null,null,null,null,null,null,131.json,9006.json,null,null,null,null,null,null,null,null,null,7298.json,null,null,null,null,8448.json,null,9098.json,null,null,null,1622.json,null,null,null,null,9009.json,null,null,null,557.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_IgnoresGarbageRef(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.transport.HMACSHA1NonceGenerator.createNonce(org.eclipse.jgit.lib.Repository, long),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.internal.storage.file.ReflogReaderTest.setupReflog(java.lang.String, byte[]),org.eclipse.jgit.merge.ResolveMerger.doMerge(org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_FetchHead(),org.eclipse.jgit.merge.MergerTest.writeSubmodule(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves(),org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFile(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyReadEmpty_RealIndex(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndUploadPack(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.pgm.Config.list(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked(),org.eclipse.jgit.lib.RepositoryCacheTest.testUnregister(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare(),org.eclipse.jgit.transport.TransportGitSsh.ExtSession.createProcess(java.util.List<java.lang.String>),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testScanningForPackfiles(),org.eclipse.jgit.junit.http.SimpleHttpServer.nameOf(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.junit.TestRepository.Anonymous-fc3224c5-17a2-4ad1-adb4-e89c11ab8595.writeFile(java.lang.String, byte[]),org.eclipse.jgit.http.server.ServletUtils.identify(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.RepositoryCache.register(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_RealIndex(),org.eclipse.jgit.internal.storage.file.InfoAttributesNode.load(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.Anonymous-1d39f378-1e52-4b94-a122-2522c2e3d7b0.writeFile(java.lang.String, byte[]),org.eclipse.jgit.pgm.CloneTest.testCloneBare(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lfs.InstallBuiltinLfsCommand.call(),org.eclipse.jgit.revwalk.RevWalkShallowTest.createShallowFile(org.eclipse.jgit.lib.ObjectId...),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-0c812d22-5fba-4c7c-9c35-6a5a653d9583.modifyCommitMessage(java.lang.String),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.uriOf(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.internal.storage.file.PackInserterTest.listPacks(),org.eclipse.jgit.lib.SquashCommitMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.transport.PushOptionsTest.connectLocalToRemote(org.eclipse.jgit.api.Git, org.eclipse.jgit.api.Git),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels(),org.eclipse.jgit.transport.FetchProcess.updateFETCH_HEAD(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writeLooseRef(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen(),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndCheckBitmapUsage(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.util.FS_Win32_Cygwin.findHook(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead(),org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset(),org.eclipse.jgit.internal.storage.file.GC.deleteEmptyRefsFolders(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.gitrepo.RepoCommandTest.resolveRelativeUris(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion(),org.eclipse.jgit.lib.Repository.readCommitMsgFile(java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided(),org.eclipse.jgit.internal.ketch.KetchLeaderCache.computeKey(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyIndex(org.eclipse.jgit.merge.CrissCrossMergeTest.IndexState, java.lang.String, java.lang.String),org.eclipse.jgit.api.SubmoduleUpdateCommand.getOrCloneSubmodule(org.eclipse.jgit.submodule.SubmoduleWalk, java.lang.String),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch(),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.writeLooseRef(java.lang.String, org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenNew(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCloneAValidGitRepository(),org.eclipse.jgit.api.RemoteAddCommandTest.testAdd(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.deleteLooseRef(java.lang.String),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.recreateRefs(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.lib.Repository.writeHeadsFile(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>, java.lang.String),org.eclipse.jgit.attributes.AttributesHandlerTest.setupRepo(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.AbstractRemoteCommandTest.setupRemote(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordRemoteBranch(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict(),org.eclipse.jgit.lib.Repository.toString(),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType),org.eclipse.jgit.internal.storage.file.GcConcurrentTest.repackAndGetStats(),org.eclipse.jgit.transport.TransportLocal.Anonymous-97c860b5-67dc-4d63-be26-763d6fe4125b.open(org.eclipse.jgit.transport.URIish, org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1(),org.eclipse.jgit.pgm.CloneTest.testCloneIntoCurrentDir(),org.eclipse.jgit.junit.TestRepository.updateServerInfo(),org.eclipse.jgit.pgm.TextBuiltin.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey(),org.eclipse.jgit.util.FS.findHook(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.Init.run(),org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads(),org.eclipse.jgit.internal.storage.file.FileRepository.create(boolean),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_IgnoresGarbageRef(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.writePackedRefs(java.lang.String),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate(),org.eclipse.jgit.lib.Repository.readCherryPickHead(),org.eclipse.jgit.ant.tasks.GitCloneTaskTest.shouldCreateABareCloneOfAValidGitRepository(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testShallowFileCorrupt(),org.eclipse.jgit.lib.Repository.getRepositoryState(),org.eclipse.jgit.lib.RepositoryCache.unregister(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.transport.TransportHttp.constructSslTrustItems(java.lang.Throwable),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyLockEmpty_RealIndex(),org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteTags(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked(),org.eclipse.jgit.api.RebaseCommandTest.getTodoFile(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog(),org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteHeads(),org.eclipse.jgit.internal.storage.reftree.LocalDiskRefTreeDatabaseTest.testHeadOrigHead(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.lib.Repository.readOrigHead(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.pgm.LsRemoteTest.testLsRemoteHeadsTags(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare(),org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory(),org.eclipse.jgit.lfs.server.fs.PushTest.cleanup(),org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.pgm.LsRemoteTest.testLsRemote(),org.eclipse.jgit.internal.storage.file.FileRepository.descriptionFile(),org.eclipse.jgit.lib.RepositoryCacheTest.testGetRegistered(),org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.assertGitdirPath(org.eclipse.jgit.lib.Repository, java.lang.String...),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_TempIndex(),org.eclipse.jgit.lib.RepositoryCache.isCached(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.file.DescriptionTest.description(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.internal.storage.file.GcDeleteEmptyRefsFoldersTest.setUp(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.assertExists(boolean, java.lang.String),org.eclipse.jgit.lib.RebaseTodoFile.writeRebaseTodoFile(java.lang.String, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, boolean),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.merge.CrissCrossMergeTest.modifyWorktree(org.eclipse.jgit.merge.CrissCrossMergeTest.WorktreeState, java.lang.String, java.lang.String),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.detachHead(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog(),org.eclipse.jgit.lib.RebaseTodoFile.readRebaseTodo(java.lang.String, boolean),org.eclipse.jgit.lib.Repository.readGitDirectoryFile(java.lang.String),org.eclipse.jgit.junit.LocalDiskRepositoryTestCase.runHook(org.eclipse.jgit.lib.Repository, java.io.File, java.lang.String...),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-367dec0d-e5ad-436e-a033-a086d7d191cc.modifyCommitMessage(java.lang.String),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion(),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.emptyRefDirectoryDeleted(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.testLinkFileBare(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open(),org.eclipse.jgit.lfs.server.fs.PushTest.setup(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.hooks.CommitMsgHook.getCommitEditMessageFilePath(),org.eclipse.jgit.transport.TransportAmazonS3.loadProperties(),org.eclipse.jgit.api.FetchCommandTest.setupRemoteRepository(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyUnlock_RealIndex(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.internal.storage.file.ReflogWriterTest.readReflog(byte[]),org.eclipse.jgit.api.GitConstructionTest.testOpen(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryUsageCount(),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack(),org.eclipse.jgit.lib.RepositoryCacheTest.testRepositoryNotUnregisteringWhenClosing(),org.eclipse.jgit.dircache.DirCacheBasicTest.testLockMissing_TempIndex(),org.eclipse.jgit.pgm.Glog.repoName(),org.eclipse.jgit.lib.Repository.readMergeHeads(),org.eclipse.jgit.api.EolRepositoryTest.setupGitAndDoHardReset(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.EOL, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.pgm.CloneTest.testClone(),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.newTransportLocalWithStrictValidation(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone(),org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithSubmodule(),org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef(),org.eclipse.jgit.api.SubmoduleAddCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.Anonymous-4edff3b0-f6f1-41a0-9462-925bc568dc9a.modifyCommitMessage(java.lang.String),org.eclipse.jgit.util.FS_POSIX.findHook(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.RepoTest.resolveRelativeUris(),org.eclipse.jgit.pgm.CloneTest.testCloneEmpty(),org.eclipse.jgit.util.FS.internalRunHookIfPresent(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String[], java.io.PrintStream, java.io.PrintStream, java.lang.String),org.eclipse.jgit.dircache.DirCacheBasicTest.testReadMissing_RealIndex(),org.eclipse.jgit.lib.RepositoryCache.close(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.internal.storage.file.RefUpdateTest.tryRenameWhenLocked(java.lang.String, java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.BUG_WorkAroundRacyGitIssues(java.lang.String),org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError(),org.eclipse.jgit.transport.resolver.FileResolver.isExportOk(C, java.lang.String, org.eclipse.jgit.lib.Repository),org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.createRepositoryWithRemote(),org.eclipse.jgit.lib.Repository.readRevertHead(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordShallowRecommendation(),org.eclipse.jgit.junit.http.SimpleHttpServer.start(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.dircache.DirCacheBasicTest.testWriteEmptyCommit_RealIndex(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.gitrepo.RepoCommandTest.cloneRepository(org.eclipse.jgit.lib.Repository, boolean),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef(),org.eclipse.jgit.api.FetchCommandTest.testFetchWithPruneShouldKeepOriginHead(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow()	true	3176
6258.json	org.eclipse.jgit.revplot.PlotCommitList.recycleLane(L)	6252.json	org.eclipse.jgit.revplot.PlotCommitList.closeLane(org.eclipse.jgit.revplot.PlotLane)	true	3176
4326.json	org.eclipse.jgit.internal.storage.file.WindowCache.gc()	4289.json,4294.json,4292.json,4293.json	org.eclipse.jgit.internal.storage.file.WindowCache.getOrLoad(org.eclipse.jgit.internal.storage.file.PackFile, long),org.eclipse.jgit.internal.storage.file.WindowCache.removeAll(org.eclipse.jgit.internal.storage.file.PackFile),org.eclipse.jgit.internal.storage.file.WindowCache.evict(),org.eclipse.jgit.internal.storage.file.WindowCache.removeAll()	true	3176
5237.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.getFormat()	noCall	noCall	true	2906
9040.json	org.eclipse.jgit.lib.PersonIdent.toString()	9457.json,null	org.eclipse.jgit.lib.CommitBuilder.toString(),org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass()	true	3176
10331.json	org.eclipse.jgit.http.server.GitFilter.assertNotInitialized()	noCall	noCall	true	3070
8163.json	org.eclipse.jgit.util.io.AutoLFOutputStream.decideMode()	8164.json,8162.json	org.eclipse.jgit.util.io.AutoLFOutputStream.flush(),org.eclipse.jgit.util.io.AutoLFOutputStream.buffer(byte[], int, int)	true	824
3374.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.packRefTreeGraph(org.eclipse.jgit.lib.ProgressMonitor)	3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	true	879
7432.json	org.eclipse.jgit.api.RebaseCommand.isInteractive()	7399.json,7428.json	org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind()	true	2028
10083.json	org.eclipse.jgit.lfs.server.fs.ObjectDownloadListener.onError(java.lang.Throwable)	noCall	noCall	true	856
1044.json	org.eclipse.jgit.merge.Merger.openTree(org.eclipse.jgit.lib.AnyObjectId)	1033.json,928.json	org.eclipse.jgit.merge.RecursiveMerger.getBaseCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.merge.ThreeWayMerger.mergeBase()	true	3176
1586.json	org.eclipse.jgit.transport.http.JDKHttpConnection.getResponseCode()	noCall	noCall	true	1572
9983.json	org.eclipse.jgit.lfs.lib.LongObjectId.equals(byte[], int, byte[], int)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawBytes()	true	856
6302.json	org.eclipse.jgit.gitrepo.RepoCommand.setRecordSubmoduleLabels(boolean)	null,null,null,null,null,null,null	org.eclipse.jgit.gitrepo.RepoCommandTest.recordUnreachableRemotes(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.absoluteRemoteURLAbsoluteTargetURL(),org.eclipse.jgit.gitrepo.RepoCommandTest.runTwiceIsNOP(),org.eclipse.jgit.gitrepo.RepoCommandTest.androidSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.gerritSetup(),org.eclipse.jgit.gitrepo.RepoCommandTest.testRecordSubmoduleLabels()	true	740
4809.json	org.eclipse.jgit.internal.storage.file.GC.prunePacked()	4817.json	org.eclipse.jgit.internal.storage.file.GC.repack()	true	2142
344.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableRevSort(org.eclipse.jgit.revwalk.RevSort, boolean)	345.json,346.json,347.json,348.json	org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableDateOrder(boolean),org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableTopoOrder(boolean),org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableReverse(boolean),org.eclipse.jgit.pgm.RevWalkTextBuiltin.enableBoundary(boolean)	true	3176
2798.json	org.eclipse.jgit.internal.ketch.KetchReplica.waitingForRetry()	2799.json,2783.json,2797.json,2795.json	org.eclipse.jgit.internal.ketch.KetchReplica.retryLater(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.snapshot(),org.eclipse.jgit.internal.ketch.KetchReplica.defer(org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	true	872
8185.json	org.eclipse.jgit.util.io.AutoCRLFOutputStream.write(byte[])	noCall	noCall	true	2342
6811.json	org.eclipse.jgit.events.IndexChangedEvent.dispatch(org.eclipse.jgit.events.IndexChangedListener)	noCall	noCall	true	2907
2243.json	org.eclipse.jgit.transport.TransportHttp.openInputStream(org.eclipse.jgit.transport.http.HttpConnection)	2224.json,2259.json,null,null,2221.json,2222.json	org.eclipse.jgit.transport.TransportHttp.openPush(),org.eclipse.jgit.transport.TransportHttp.HttpObjectDB.open(java.lang.String, org.eclipse.jgit.transport.TransportHttp.AcceptEncoding),org.eclipse.jgit.transport.TransportHttp.LongPollService.execute(),org.eclipse.jgit.transport.TransportHttp.MultiRequestService.execute(),org.eclipse.jgit.transport.TransportHttp.openFetch(),org.eclipse.jgit.transport.TransportHttp.newDumbConnection(java.io.InputStream)	true	3070
1953.json	org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor)	1951.json	org.eclipse.jgit.transport.FetchProcess.executeImp(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.transport.FetchResult)	true	3176
1281.json	org.eclipse.jgit.transport.RemoteConfig.setFetchRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>)	noCall	noCall	true	3176
7262.json	org.eclipse.jgit.api.SubmoduleUpdateCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	6888.json	org.eclipse.jgit.api.CloneCommand.cloneSubmodules(org.eclipse.jgit.lib.Repository)	true	2355
5146.json	org.eclipse.jgit.internal.storage.pack.PackWriter.filterAndAddObject(org.eclipse.jgit.lib.AnyObjectId, int, int)	5140.json,5139.json	org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPackUsingBitmaps(org.eclipse.jgit.revwalk.BitmapWalker, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>)	true	87
3036.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.seekRef(java.lang.String)	150.json,null,null,157.json,null,null,null,null,149.json,null,153.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String),org.eclipse.jgit.internal.storage.reftable.ReftableTest.namespaceHeads(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.badCrc32(),org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.internal.storage.reftable.ReftableTest.onlyReflog(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.seekNotFound(),org.eclipse.jgit.internal.storage.reftable.ReftableTest.namespaceNotFound(),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.producesNewReftable(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String),org.eclipse.jgit.internal.storage.reftable.ReftableTest.oneIdRef(),org.eclipse.jgit.pgm.debug.ReadReftable.run()	true	297
3859.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.getReaderOptions()	3863.json	org.eclipse.jgit.internal.storage.dfs.DfsRepositoryBuilder.setup()	true	2410
7244.json	org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree)	7237.json	org.eclipse.jgit.api.StashApplyCommand.call()	true	1480
4979.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.tryLock(boolean)	noCall	noCall	true	880
5119.json	org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	5117.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor)	true	1892
6666.json	org.eclipse.jgit.diff.HistogramDiffIndex.hash(org.eclipse.jgit.diff.HashedSequence<S>, int)	6665.json,6664.json	org.eclipse.jgit.diff.HistogramDiffIndex.tryLongestCommonSequence(int),org.eclipse.jgit.diff.HistogramDiffIndex.scanA()	true	2816
9582.json	org.eclipse.jgit.lib.IndexDiff.getConflicting()	null,6968.json,null,null,null,9570.json,null,6965.json	org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.Status.getUncommittedChanges(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.api.Status.getConflicting()	true	2609
5410.json	org.eclipse.jgit.revwalk.RevWalk.toObjectWalkWithSameObjects()	null,null	org.eclipse.jgit.internal.storage.file.PackWriterTest.writePack(org.eclipse.jgit.internal.storage.file.FileRepository, org.eclipse.jgit.revwalk.RevWalk, int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectIdSet>),org.eclipse.jgit.transport.UploadPack.sendPack(boolean, org.eclipse.jgit.storage.pack.PackStatistics.Accumulator, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.List<org.eclipse.jgit.lib.ObjectId>)	true	2673
3.json	org.eclipse.jgit.awtui.SwingCommitList.recycleLane(org.eclipse.jgit.awtui.SwingCommitList.SwingLane)	noCall	noCall	true	3176
5854.json	org.eclipse.jgit.ignore.internal.NameMatcher.matches(java.lang.String, boolean, boolean)	noCall	noCall	true	1322
7916.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate()	null,null,null,null,7227.json,null,null,null,null	org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodulesNameNotPath(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.api.SubmoduleInitCommand.call(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule(),org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules()	true	2355
1488.json	org.eclipse.jgit.transport.HttpConfig.isSslVerify()	null	org.eclipse.jgit.transport.HttpConfigTest.testDefault()	true	273
7974.json	org.eclipse.jgit.util.LfsFactory.isEnabled(org.eclipse.jgit.lib.Repository)	noCall	noCall	true	94
2843.json	org.eclipse.jgit.internal.ketch.StageBuilder.stage(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.lib.ObjectId)	2840.json,2842.json	org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.internal.ketch.StageBuilder.reduceObjects(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Repository, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	true	872
3932.json	org.eclipse.jgit.internal.storage.file.RefDirectory.getRepository()	4565.json,3952.json,4502.json,null,null,4491.json,4102.json,4494.json,4105.json,4488.json,3970.json	org.eclipse.jgit.internal.storage.file.RefDirectoryRename.doRename(),org.eclipse.jgit.internal.storage.file.RefDirectory.doPeel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.writeReflog(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>),org.eclipse.jgit.internal.storage.file.ReflogWriter.isLogAllRefUpdates(),org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate(),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(org.eclipse.jgit.lib.RefUpdate, java.lang.String, boolean),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.file.ReflogWriter.log(java.lang.String, byte[]),org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.getRepository(),org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()	true	3176
8048.json	org.eclipse.jgit.util.FS_POSIX.newInstance()	noCall	noCall	true	2645
4974.json	org.eclipse.jgit.internal.storage.reftree.Scanner.toRef(org.eclipse.jgit.lib.ObjectReader, int, org.eclipse.jgit.treewalk.CanonicalTreeParser)	4968.json	org.eclipse.jgit.internal.storage.reftree.Scanner.scan(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId, java.lang.String, boolean, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>)	true	880
3871.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getPackDescription()	3873.json,3872.json	org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getDeltaCount(),org.eclipse.jgit.internal.storage.dfs.DfsCachedPack.getObjectCount()	true	2410
4505.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.unlockAll(java.util.Map<?, org.eclipse.jgit.internal.storage.file.LockFile>)	null,4500.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>),org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.lockLooseRefs(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	true	317
9978.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromHexString(byte[], int)	9976.json,9977.json	org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(byte[], int),org.eclipse.jgit.lfs.lib.MutableLongObjectId.fromString(java.lang.String)	true	856
1002.json	org.eclipse.jgit.merge.ResolveMerger.failed()	7195.json,1005.json,6812.json	org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.api.RevertCommand.call()	true	2638
7588.json	org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)	7019.json,null,null,6023.json,null,null,null,null,7479.json,null,7018.json,null,6021.json,null,6022.json,945.json,null,1005.json,null,2839.json,null,110.json,7530.json,null,7244.json,7896.json,null,null,null,null,null,null,null,6570.json,null,null,6758.json,null,null,null,null,null,5910.json,7587.json,null,null,9570.json,null,6043.json,7040.json,null,null,null,null,null,null,6041.json,null,7902.json,7975.json,null,null,null,null,7193.json,null,null,null,null,null,null,null,null,null,null,null,null,null,4829.json,6981.json,7423.json,null,null,385.json,null,7243.json,null	org.eclipse.jgit.api.ResetCommand.resetIndex(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalk(java.lang.String),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive(),org.eclipse.jgit.dircache.DirCacheCheckout.prescanOneTree(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testEmpty(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testEmptyTree_WithTreeWalk(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree(),org.eclipse.jgit.api.CheckoutCommand.checkoutPathsFromIndex(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.dircache.DirCache),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly(),org.eclipse.jgit.api.ResetCommand.resetIndexForPaths(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.treewalk.filter.TreeFilterTest.testANY_DIFF_IncludesSingleTreeCase(),org.eclipse.jgit.dircache.DirCacheCheckout.preScanTwoTrees(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne(),org.eclipse.jgit.dircache.DirCacheCheckout.addTree(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.merge.StrategySimpleTwoWayInCore.InCoreMerger.mergeImpl(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeSet(java.lang.String, java.lang.String),org.eclipse.jgit.merge.ResolveMerger.mergeTrees(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.revwalk.RevTree, org.eclipse.jgit.revwalk.RevTree, boolean),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.beginWalk(),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees(),org.eclipse.jgit.pgm.LsTree.run(),org.eclipse.jgit.api.AddCommand.call(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid(),org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeCustom(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUndefined(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.createTreeWalk(org.eclipse.jgit.revwalk.RevCommit, boolean, boolean),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.diff.DiffFormatter.scan(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent(),org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.seek(java.lang.String),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree(),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.attributes.CGitAttributesTest.jgitAttributes(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive(),org.eclipse.jgit.dircache.DirCache.updateSmudgedEntries(),org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk(),org.eclipse.jgit.treewalk.TreeWalkJava7Test.testSymlinkToDirNotRecursingViaSymlink(),org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.api.StashCreateCommand.call(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.beginWalk(),org.eclipse.jgit.api.EolRepositoryTest.beginWalk(),org.eclipse.jgit.ignore.IgnoreNodeTest.beginWalk(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.assertAddMergeAttributeUnset(java.lang.String, java.lang.String),org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.dircache.DirCacheCheckout.isModifiedSubtree_IndexWorkingtree(java.lang.String),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict(),org.eclipse.jgit.submodule.SubmoduleWalk.setTree(org.eclipse.jgit.treewalk.AbstractTreeIterator),org.eclipse.jgit.util.LfsFactory.getAttributesForPath(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.ignore.CGitIgnoreTest.jgitIgnoredAndUntracked(java.util.LinkedHashSet<java.lang.String>, java.util.LinkedHashSet<java.lang.String>),org.eclipse.jgit.ignore.CGitIgnoreTest.assertNoIgnoredVisited(java.util.Set<java.lang.String>),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.api.RmCommand.call(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lib.DirCacheCheckoutTest.assertWorkDir(java.util.Map<java.lang.String, java.lang.String>),org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive(),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder(),org.eclipse.jgit.lib.RacyGitTests.testIterator(),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.beginWalk(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath(),org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.fakeWalkAtSubtree(java.lang.String),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion(),org.eclipse.jgit.attributes.AttributesHandlerTest.beginWalk(),org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail(),org.eclipse.jgit.treewalk.filter.TreeFilterTest.testNotALL_IncludesNothing(),org.eclipse.jgit.internal.storage.file.GC.listNonHEADIndexObjects(),org.eclipse.jgit.api.CommitCommand.createTemporaryIndex(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.revwalk.RevWalk),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap(),org.eclipse.jgit.treewalk.filter.TreeFilterTest.testALL_IncludesAnything(),org.eclipse.jgit.pgm.DiffTree.run(),org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees(),org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevTree),org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree()	true	3176
4994.json	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSpan(int)	null,4988.json,null,null,null	org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceForActiveBranch(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.selectCommits(int, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithSmallerDistantSpan(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithSmallerRecentSpan(),org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparerTest.testNextSelectionDistanceWithFewerRecentCommits()	true	963
5442.json	org.eclipse.jgit.revwalk.LIFORevQueue.next()	null,null	org.eclipse.jgit.revwalk.LIFORevQueueTest.testCloneEmpty(),org.eclipse.jgit.revwalk.LIFORevQueueTest.testAddLargeBlocks()	true	3176
1189.json	org.eclipse.jgit.notes.FanoutBucket.Anonymous-36433f53-fadb-455f-b89c-a2232aa1deb0.hasNext()	noCall	noCall	true	2766
9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	null,7468.json	org.eclipse.jgit.lib.IndexDiff.diff(),org.eclipse.jgit.api.StatusCommand.call()	true	3176
358.json	org.eclipse.jgit.pgm.Init.run()	noCall	noCall	true	3176
3478.json	org.eclipse.jgit.internal.storage.dfs.InMemoryRepository.ByteArrayReadableChannel.read(java.nio.ByteBuffer)	noCall	noCall	true	2410
6755.json	org.eclipse.jgit.diff.ContentSource.WorkingTreeSource.Anonymous-63641fc8-3381-464c-af05-9e1bdf18b7e9.isLarge()	noCall	noCall	true	2838
4620.json	org.eclipse.jgit.internal.storage.file.LockFile.Anonymous-c22d3445-d189-4160-9b07-8368d85b3fe3.close()	noCall	noCall	true	3176
5731.json	org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter.toString()	noCall	noCall	true	3176
3342.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.getRefDatabase()	3349.json,3347.json,3348.json	org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doLink(java.lang.String),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result),org.eclipse.jgit.internal.storage.dfs.DfsRefUpdate.doDelete(org.eclipse.jgit.lib.RefUpdate.Result)	true	2410
8038.json	org.eclipse.jgit.util.RefMap.Ent.equals(java.lang.Object)	noCall	noCall	true	3060
7322.json	org.eclipse.jgit.api.SubmoduleDeinitResult.setPath(java.lang.String)	noCall	noCall	true	164
377.json	org.eclipse.jgit.pgm.Log.init(org.eclipse.jgit.lib.Repository, java.lang.String)	noCall	noCall	true	2033
4981.json	org.eclipse.jgit.internal.storage.reftree.RefTreeUpdate.doUpdate(org.eclipse.jgit.lib.RefUpdate.Result)	noCall	noCall	true	880
3407.json	org.eclipse.jgit.internal.storage.dfs.DfsObjectToPack.select(org.eclipse.jgit.internal.storage.pack.StoredObjectRepresentation)	noCall	noCall	true	2410
3091.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.endPosition()	3058.json,null,null	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.RefCursorImpl.next(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.LogCursorImpl.next()	true	297
5412.json	org.eclipse.jgit.revwalk.RevWalk.carryFlagsImpl(org.eclipse.jgit.revwalk.RevCommit)	5348.json,5575.json	org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.PendingGenerator.next()	true	3176
3385.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.hasGcReftable()	3384.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.writeReftable(org.eclipse.jgit.internal.storage.dfs.DfsPackDescription)	true	278
88.json	org.eclipse.jgit.pgm.Config.isListAll()	87.json	org.eclipse.jgit.pgm.Config.list()	true	2209
5111.json	org.eclipse.jgit.internal.storage.pack.PackWriter.beginPhase(org.eclipse.jgit.internal.storage.pack.PackWriter.PackingPhase, org.eclipse.jgit.lib.ProgressMonitor, long)	5120.json,5113.json,5150.json,5125.json,5117.json,5139.json,5124.json	org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.internal.storage.pack.PackWriter.prepareBitmapIndex(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.parallelDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int, int),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForReuse(org.eclipse.jgit.lib.ProgressMonitor),org.eclipse.jgit.internal.storage.pack.PackWriter.findObjectsToPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.revwalk.ObjectWalk, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>, java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.internal.storage.pack.PackWriter.singleThreadDeltaSearch(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	2399
7826.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryAttributesNode()	5321.json,null	org.eclipse.jgit.attributes.AttributesHandler.attributesNode(org.eclipse.jgit.treewalk.TreeWalk, org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheIterator, org.eclipse.jgit.treewalk.CanonicalTreeParser),org.eclipse.jgit.attributes.AttributesNodeWorkingTreeIteratorTest.assertIteration(org.eclipse.jgit.lib.FileMode, java.lang.String, java.util.List<org.eclipse.jgit.attributes.Attribute>)	true	1249
3424.json	org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.hasBlock0(org.eclipse.jgit.internal.storage.dfs.DfsStreamKey)	noCall	noCall	true	178
1022.json	org.eclipse.jgit.merge.MergeConfig.isSquash()	7387.json,null	org.eclipse.jgit.api.MergeCommand.fallBackToConfiguration(),org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions()	true	1577
10077.json	org.eclipse.jgit.lfs.server.fs.ObjectUploadListener.onError(java.lang.Throwable)	noCall	noCall	true	856
5820.json	org.eclipse.jgit.ignore.internal.WildCardMatcher.matches(java.lang.String, int, int)	noCall	noCall	true	1322
491.json	org.eclipse.jgit.junit.Assert.assertEquals(java.lang.String, boolean, boolean)	null,null,null,null	org.eclipse.jgit.lib.ValidRefNameTest.assertInvalidOnWindows(java.lang.String),org.eclipse.jgit.lib.ValidRefNameTest.assertNormalized(java.lang.String, java.lang.String),org.eclipse.jgit.ignore.IgnoreMatcherParametrizedTest.match(java.lang.String, java.lang.String),org.eclipse.jgit.lib.ValidRefNameTest.assertValid(boolean, java.lang.String)	true	2088
10089.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getPath(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	10091.json,10087.json,10092.json	org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getReadChannel(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getSize(org.eclipse.jgit.lfs.lib.AnyLongObjectId),org.eclipse.jgit.lfs.server.fs.FileLfsRepository.getOutputStream(org.eclipse.jgit.lfs.lib.AnyLongObjectId)	true	856
1041.json	org.eclipse.jgit.merge.Merger.merge(boolean, org.eclipse.jgit.lib.AnyObjectId...)	1040.json	org.eclipse.jgit.merge.Merger.merge(org.eclipse.jgit.lib.AnyObjectId...)	true	3176
7229.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.deinit(java.lang.String)	7228.json	org.eclipse.jgit.api.SubmoduleDeinitCommand.call()	true	164
2999.json	org.eclipse.jgit.transport.OpenSshConfig.toFile(java.lang.String, java.io.File)	3011.json,3010.json,10189.json	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.substitute(java.lang.String, java.io.File),org.eclipse.jgit.transport.OpenSshConfig.HostEntry.replaceTilde(java.util.List<java.lang.String>, java.io.File),org.eclipse.jgit.transport.OpenSshConfig.Host.complete(java.lang.String, java.io.File)	true	3176
1804.json	org.eclipse.jgit.transport.TransportLocal.Anonymous-9492c004-2151-4a01-a2c3-57a25b99a068.getName()	noCall	noCall	true	2645
7333.json	org.eclipse.jgit.api.CreateBranchCommand.getStartPointOrHead()	7332.json,7331.json	org.eclipse.jgit.api.CreateBranchCommand.getStartPointObjectId(),org.eclipse.jgit.api.CreateBranchCommand.call()	true	2800
7943.json	org.eclipse.jgit.util.RawParseUtils.lineMapOrNull(byte[], int, int)	7942.json,7941.json	org.eclipse.jgit.util.RawParseUtils.lineMapOrBinary(byte[], int, int),org.eclipse.jgit.util.RawParseUtils.lineMap(byte[], int, int)	true	27
7028.json	org.eclipse.jgit.api.InitCommand.validateDirs(java.io.File, java.io.File, boolean)	7027.json,7029.json,7026.json	org.eclipse.jgit.api.InitCommand.setGitDir(java.io.File),org.eclipse.jgit.api.InitCommand.setBare(boolean),org.eclipse.jgit.api.InitCommand.setDirectory(java.io.File)	true	1273
1188.json	org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader)	1214.json	org.eclipse.jgit.notes.NoteMapMerger.mergeFanoutBucket(int, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket, org.eclipse.jgit.notes.FanoutBucket)	true	2709
1994.json	org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.transport.URIish)	7521.json,null,1983.json	org.eclipse.jgit.api.LsRemoteCommand.execute(),org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository(),org.eclipse.jgit.transport.Transport.open(org.eclipse.jgit.lib.Repository, java.lang.String, org.eclipse.jgit.transport.Transport.Operation)	true	2187
8373.json	org.eclipse.jgit.util.FS.ExecutionResult.getStdout()	null,null,null,null,null,null,null,7807.json	org.eclipse.jgit.util.RunExternalScriptTest.testStdErrExecute(),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitIgnored(),org.eclipse.jgit.attributes.CGitAttributesTest.cgitAttributes(java.util.Set<java.lang.String>),org.eclipse.jgit.util.RunExternalScriptTest.testCopyStdInExecute(),org.eclipse.jgit.util.RunExternalScriptTest.testAllTogetherBinExecute(),org.eclipse.jgit.dircache.DirCacheCheckout.runExternalFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, org.eclipse.jgit.util.FS, java.io.OutputStream),org.eclipse.jgit.ignore.CGitIgnoreTest.cgitUntracked(),org.eclipse.jgit.treewalk.WorkingTreeIterator.filterClean(java.io.InputStream, org.eclipse.jgit.treewalk.TreeWalk.OperationType)	true	935
8420.json	org.eclipse.jgit.util.FS.searchPath(java.lang.String, java.lang.String...)	8040.json,7991.json,8052.json	org.eclipse.jgit.util.FS_Win32_Cygwin.isCygwin(),org.eclipse.jgit.util.FS_Win32.discoverGitExe(),org.eclipse.jgit.util.FS_POSIX.discoverGitExe()	true	2718
8944.json	org.eclipse.jgit.lib.Repository.create()	null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet(),org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.createNestedRepo(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.setup()	true	3176
5211.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.popCachedDelta()	5133.json	org.eclipse.jgit.internal.storage.pack.PackWriter.writeDeltaObjectDeflate(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack)	true	2893
7473.json	org.eclipse.jgit.api.CheckoutCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor)	388.json,7434.json	org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.api.RebaseCommand.tryFastForward(java.lang.String, org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)	true	138
1097.json	org.eclipse.jgit.hooks.PrePushHook.getHookName()	noCall	noCall	true	950
7899.json	org.eclipse.jgit.submodule.SubmoduleWalk.lazyLoadModulesConfig()	7916.json,7912.json,7914.json,7917.json	org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesPath(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUrl(),org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore()	true	2186
4768.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.open(java.io.File)	4767.json,4756.json	org.eclipse.jgit.internal.storage.file.ObjectDirectory.loadAlternates(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.getShallowCommits()	true	3176
5219.json	org.eclipse.jgit.internal.storage.pack.ObjectToPack.setChainLength(int)	5119.json	org.eclipse.jgit.internal.storage.pack.PackWriter.cutDeltaChains(org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	1892
8235.json	org.eclipse.jgit.util.io.IsolatedOutputStream.cleanClose()	8233.json	org.eclipse.jgit.util.io.IsolatedOutputStream.close()	true	573
7762.json	org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter.clone()	noCall	noCall	true	1971
3570.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref)	3568.json,3570.json,3693.json	org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.peel(org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase.recreate(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.peel(org.eclipse.jgit.lib.Ref)	true	2410
9947.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyRawTo(byte[], int)	null,null,null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyRawBytes(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCompareToByte(),org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareByte()	true	856
6230.json	org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(org.eclipse.jgit.revplot.PlotLane)	6248.json,6249.json	org.eclipse.jgit.revplot.PlotCommitList.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit),org.eclipse.jgit.revplot.PlotCommitList.handleMerge(int, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotCommit, org.eclipse.jgit.revplot.PlotLane)	true	1480
5916.json	org.eclipse.jgit.dircache.DirCacheTree.getObjectId()	6062.json,null	org.eclipse.jgit.dircache.DirCacheIterator.parseEntry(boolean),org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree()	true	3176
554.json	org.eclipse.jgit.junit.http.RecordingLogger.debug(java.lang.Throwable)	noCall	noCall	true	3070
1841.json	org.eclipse.jgit.transport.ReceiveCommand.getMessage()	null,null,1829.json,null,null,9338.json,null,null,null,4940.json,3696.json,2869.json	org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesRefsTxnNamespace(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesDotLockInRefName(),org.eclipse.jgit.transport.ReceiveCommand.isTransactionAborted(org.eclipse.jgit.transport.ReceiveCommand),org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.assertResults(java.util.List<org.eclipse.jgit.transport.ReceiveCommand>, org.eclipse.jgit.internal.storage.file.BatchRefUpdateTest.Result...),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_ConflictCausesAbort(),org.eclipse.jgit.lib.BatchRefUpdate.toString(),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testBatchRefUpdate_NonFastForwardAborts(),org.eclipse.jgit.transport.BaseReceivePack.sendStatusReport(boolean, java.lang.Throwable, org.eclipse.jgit.transport.BaseReceivePack.Reporter),org.eclipse.jgit.internal.storage.reftree.RefTreeDatabaseTest.testUpdate_RefusesOrigHeadOnBare(),org.eclipse.jgit.internal.storage.reftree.Command.getMessage(),org.eclipse.jgit.internal.storage.dfs.DfsReftableDatabase.compareAndPut(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.ketch.ReplicaPushRequest.describe(java.lang.String)	true	3176
7274.json	org.eclipse.jgit.api.LogCommand.all()	null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount(),org.eclipse.jgit.api.LogCommandTest.logNoMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.LogCommandTest.logOnlyMergeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount()	true	2391
6851.json	org.eclipse.jgit.api.FetchCommand.setRefSpecs(java.util.List<org.eclipse.jgit.transport.RefSpec>)	6835.json,286.json,6850.json,6885.json	org.eclipse.jgit.api.FetchCommand.fetchSubmodules(org.eclipse.jgit.transport.FetchResult),org.eclipse.jgit.pgm.Fetch.run(),org.eclipse.jgit.api.FetchCommand.setRefSpecs(org.eclipse.jgit.transport.RefSpec...),org.eclipse.jgit.api.CloneCommand.fetch(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.transport.URIish)	true	2823
7050.json	org.eclipse.jgit.api.Git.close()	null,null	org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.api.HugeFileTest.after()	true	1663
6444.json	org.eclipse.jgit.blame.BlameGenerator.computeBlameResult()	null,7350.json	org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.api.BlameCommand.call()	true	2567
8245.json	org.eclipse.jgit.util.io.InterruptTimer.AutoKiller.finalize()	noCall	noCall	true	3176
2579.json	org.eclipse.jgit.transport.BaseReceivePack.setMaxPackSizeLimit(long)	noCall	noCall	true	1565
2547.json	org.eclipse.jgit.transport.BaseReceivePack.setAdvertisedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>)	null,2601.json,1889.json,null,null	org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-927ee934-d631-4ad2-b01a-49c4e722782b.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.BaseReceivePack.getAdvertisedOrDefaultRefs(),org.eclipse.jgit.transport.AbstractAdvertiseRefsHook.advertiseRefs(org.eclipse.jgit.transport.BaseReceivePack),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.Anonymous-acd3fa02-d4ad-4ee5-b728-231e468f0461.createReceivePack(org.eclipse.jgit.lib.Repository),org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.resetsHaves()	true	2292
10260.json	org.eclipse.jgit.http.server.glue.RegexGroupFilter.destroy()	noCall	noCall	true	3070
6189.json	org.eclipse.jgit.storage.pack.PackConfig.getThreads()	297.json,6209.json,6210.json,5123.json	org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.storage.pack.PackConfig.fromConfig(org.eclipse.jgit.lib.Config),org.eclipse.jgit.storage.pack.PackConfig.toString(),org.eclipse.jgit.internal.storage.pack.PackWriter.searchForDeltas(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.storage.pack.ObjectToPack[], int)	true	2893
9574.json	org.eclipse.jgit.lib.IndexDiff.isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator)	9570.json	org.eclipse.jgit.lib.IndexDiff.diff(org.eclipse.jgit.lib.ProgressMonitor, int, int, java.lang.String)	true	1314
2795.json	org.eclipse.jgit.internal.ketch.KetchReplica.runNextPushRequest()	2803.json,2801.json	org.eclipse.jgit.internal.ketch.KetchReplica.afterPush(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.internal.ketch.ReplicaPushRequest),org.eclipse.jgit.internal.ketch.KetchReplica.doRetryPush()	true	872
1375.json	org.eclipse.jgit.transport.WalkFetchConnection.markLocalCommitsComplete(int)	1363.json	org.eclipse.jgit.transport.WalkFetchConnection.processCommit(org.eclipse.jgit.revwalk.RevObject)	true	3176
7064.json	org.eclipse.jgit.api.Git.add()	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,79.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6979.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6310.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,900.json,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.api.AddCommandTest.testCleanFilterReturning12(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.lib.IndexDiffTest.testModified(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.StashApplyCommandTest.indexAdd(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.api.AddCommandTest.testAddNonExistingSingleFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testEmptyGitAttributeFile(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice(),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.pgm.StatusTest.createUnmergedFile(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.api.AddCommandTest.testNotApplicableFilter(),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testReplaceFileByPartOfDirectory(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.pgm.Add.run(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategy(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch(),org.eclipse.jgit.pgm.StatusTest.makeSomeChangesAndStageThem(org.eclipse.jgit.api.Git),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.ResetCommandTest.testPathsReset(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testCheckinCheckoutDifferences(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testMultipleCleanFilter(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testCustomFileModeStrategyFromParentIterator(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.api.AddCommandTest.testReplaceFileWithDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testRules(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_13(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.api.AddCommandTest.testAttributesConflictingMatch(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter(),org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryWithFile(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoAttributes(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.AddCommandTest.testCleanFilter(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testRules(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testIncorrectAttributeFileName(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.pgm.AddTest.testAddAlreadyAdded(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded(),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testCleanFilterEnvironment(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty(),org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.api.RmCommandTest.testRemoveCached(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode(),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testIndexOnly2(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.treewalk.FileTreeIteratorPerformanceTest.testPerformance(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.api.AddCommandTest.testAddSubrepoWithDirNoGitlinks(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_4(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.gitrepo.RepoCommand.addSubmodule(java.lang.String, java.lang.String, java.lang.String, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.CopyFile>, java.util.List<org.eclipse.jgit.gitrepo.RepoProject.LinkFile>, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.AddCommandTest.testBadCleanFilter2(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.AddCommandTest.testAddFolder(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.attributes.TreeWalkAttributeTest.testHierarchyBothIterator(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.EolRepositoryTest.gitAdd(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId(),org.eclipse.jgit.api.StashCreateCommandTest.indexAdd(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.AddCommandTest.testAddNothing(),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.api.AddCommandTest.testAddGitlinkDoesNotChange(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.pgm.RmTest.multiplePathsShouldBeRemoved(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testCommandInjection(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch(),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.api.AddCommandTest.testAddGitlink(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndAdd(java.lang.String, java.lang.String...),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.StatusTest.addFilesToIndex(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.attributes.AttributesNodeDirCacheIteratorTest.testNoMatchingAttributes(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.ant.tasks.GitAddTask.execute(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_10(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2888
6661.json	org.eclipse.jgit.diff.SimilarityRenameDetector.decodeFile(int)	6657.json,6658.json	org.eclipse.jgit.diff.SimilarityRenameDetector.srcFile(long),org.eclipse.jgit.diff.SimilarityRenameDetector.dstFile(long)	true	2899
7985.json	org.eclipse.jgit.util.FS_Win32.setExecute(java.io.File, boolean)	noCall	noCall	true	3176
6954.json	org.eclipse.jgit.api.DeleteBranchCommand.setBranchNames(java.lang.String...)	null,null,null,null,null	org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch(),org.eclipse.jgit.api.BranchCommandTest.testDelete(),org.eclipse.jgit.api.BranchCommandTest.testCreateForce(),org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch()	true	2800
394.json	org.eclipse.jgit.pgm.Main.init(org.eclipse.jgit.pgm.TextBuiltin)	393.json,null	org.eclipse.jgit.pgm.Main.execute(java.lang.String[]),org.eclipse.jgit.pgm.CLIGitCommand.init(org.eclipse.jgit.pgm.TextBuiltin)	true	885
148.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.readLsRemote()	150.json,147.json,149.json,151.json,152.json	org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekHot(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.scan(),org.eclipse.jgit.pgm.debug.BenchmarkReftable.seekCold(java.lang.String),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdCold(org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.pgm.debug.BenchmarkReftable.byIdHot(org.eclipse.jgit.lib.ObjectId)	true	297
2945.json	org.eclipse.jgit.internal.fsck.FsckError.getCorruptObjects()	null,null,3453.json,null,null,null,null,null	org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithoutTree(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testMultipleInvalidObjects(),org.eclipse.jgit.internal.storage.dfs.DfsFsck.verifyPack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.internal.fsck.FsckError, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.dfs.DfsPackFile, org.eclipse.jgit.internal.storage.dfs.ReadableChannel),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testHealthyRepo(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTreeWithNullSha(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testNonCommitHead(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testTagWithoutObject(),org.eclipse.jgit.internal.storage.dfs.DfsFsckTest.testCommitWithCorruptAuthor()	true	319
3753.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.copyObjectAsIs(org.eclipse.jgit.internal.storage.pack.PackOutputStream, org.eclipse.jgit.internal.storage.pack.ObjectToPack, boolean)	noCall	noCall	true	2410
123.json	org.eclipse.jgit.pgm.Push.printPushResult(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.transport.URIish, org.eclipse.jgit.transport.PushResult)	122.json	org.eclipse.jgit.pgm.Push.run()	true	3176
7814.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.next(int)	null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSimpleIterate(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testFileModeSymLinkIsNotATree(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testGetEntryContentLength(),org.eclipse.jgit.junit.RepositoryTestCase.resetIndex(org.eclipse.jgit.treewalk.FileTreeIterator)	true	3176
1859.json	org.eclipse.jgit.transport.ReceiveCommand.toString()	noCall	noCall	true	3176
2703.json	org.eclipse.jgit.transport.PushCertificateIdent.getName()	null,null,null,null,null,null	org.eclipse.jgit.transport.PushCertificateParserTest.testParseReader(),org.eclipse.jgit.transport.PushCertificateIdentTest.parseValid(),org.eclipse.jgit.transport.PushCertificateIdentTest.assertMatchesPersonIdent(java.lang.String, org.eclipse.jgit.lib.PersonIdent, java.lang.String),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLine(),org.eclipse.jgit.transport.PushCertificateParserTest.parseCertFromPktLineNoNewlines(),org.eclipse.jgit.transport.PushCertificateIdentTest.checkNameEmail(java.lang.String, java.lang.String, java.lang.String)	true	1088
938.json	org.eclipse.jgit.merge.MergeChunk.getBegin()	915.json,7173.json	org.eclipse.jgit.merge.MergeFormatterPass.formatMerge(),org.eclipse.jgit.api.MergeResult.addConflict(java.lang.String, org.eclipse.jgit.merge.MergeResult<?>)	true	3076
4095.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmaps(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	4093.json	org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBody(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder)	true	1922
5309.json	org.eclipse.jgit.attributes.Attribute.toString()	null,null,5301.json,null	org.eclipse.jgit.api.EolRepositoryTest.collectEntryContentAndAttributes(org.eclipse.jgit.lib.FileMode, java.lang.String, org.eclipse.jgit.api.EolRepositoryTest.ActualEntry),org.eclipse.jgit.attributes.AttributeTest.testBasic(),org.eclipse.jgit.attributes.Attributes.toString(),org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters()	true	1249
418.json	org.eclipse.jgit.pgm.TextBuiltin.die(java.lang.String)	195.json,388.json,426.json,247.json,274.json,230.json,279.json,406.json,352.json,208.json,342.json,157.json,91.json,194.json,156.json,362.json,269.json,343.json,430.json,360.json,363.json,417.json,196.json,284.json,112.json,130.json,427.json,425.json,167.json,223.json,177.json,278.json,209.json,297.json,219.json,428.json,435.json,212.json,202.json,301.json,299.json,160.json,437.json,429.json	org.eclipse.jgit.pgm.debug.LfsStore.readAWSKeys(),org.eclipse.jgit.pgm.Checkout.run(),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.Diff.run(),org.eclipse.jgit.pgm.Describe.run(),org.eclipse.jgit.pgm.Clone.run(),org.eclipse.jgit.pgm.Merge.getOldHead(),org.eclipse.jgit.pgm.TextBuiltin.init(org.eclipse.jgit.lib.Repository, java.lang.String),org.eclipse.jgit.pgm.RevWalkTextBuiltin.run(),org.eclipse.jgit.pgm.debug.WriteDirCache.run(),org.eclipse.jgit.pgm.Reset.run(),org.eclipse.jgit.pgm.debug.VerifyReftable.seek(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.UploadPack.run(),org.eclipse.jgit.pgm.debug.LfsStore.checkOptions(),org.eclipse.jgit.pgm.debug.VerifyReftable.scan(java.util.List<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.reftable.ReftableReader),org.eclipse.jgit.pgm.Archive.run(),org.eclipse.jgit.pgm.Show.run(),org.eclipse.jgit.pgm.Reset.selectMode(org.eclipse.jgit.api.ResetCommand.ResetType, org.eclipse.jgit.api.ResetCommand.ResetType),org.eclipse.jgit.pgm.Branch.run(),org.eclipse.jgit.pgm.AmazonS3Client.run(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.TextBuiltin.resolve(java.lang.String),org.eclipse.jgit.pgm.debug.LfsStore.getStoreUrl(java.net.URI),org.eclipse.jgit.pgm.Fetch.recurseSubmodules(java.lang.String),org.eclipse.jgit.pgm.Blame.run(),org.eclipse.jgit.pgm.Glog.createWalk(),org.eclipse.jgit.pgm.Branch.deleteForce(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.ReceivePack.run(),org.eclipse.jgit.pgm.debug.RebuildRefTree.run(),org.eclipse.jgit.pgm.Version.run(),org.eclipse.jgit.pgm.debug.TextHashFunctions.run(),org.eclipse.jgit.pgm.Merge.run(),org.eclipse.jgit.pgm.debug.ShowPackDelta.run(),org.eclipse.jgit.pgm.Daemon.run(),org.eclipse.jgit.pgm.debug.ShowCacheTree.run(),org.eclipse.jgit.pgm.Branch.createForce(java.util.List<java.lang.String>),org.eclipse.jgit.pgm.Branch.delete(java.util.List<java.lang.String>, boolean),org.eclipse.jgit.pgm.debug.RebuildCommitGraph.run(),org.eclipse.jgit.pgm.debug.DiffAlgorithms.run(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.pgm.Daemon.service(org.eclipse.jgit.transport.Daemon, java.lang.String),org.eclipse.jgit.pgm.debug.VerifyReftable.verify(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.internal.storage.reftable.RefCursor),org.eclipse.jgit.pgm.Clean.run(),org.eclipse.jgit.pgm.Branch.moveRename(java.util.List<java.lang.String>)	true	3176
3228.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.skipShadowed(java.lang.String, long)	3227.json	org.eclipse.jgit.internal.storage.reftable.MergedReftable.MergedLogCursor.next()	true	297
6048.json	org.eclipse.jgit.dircache.DirCacheCheckout.runBuiltinFilterCommand(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata, org.eclipse.jgit.lib.ObjectLoader, java.io.OutputStream)	6045.json	org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata)	true	628
1738.json	org.eclipse.jgit.transport.TransferConfig.newReceiveObjectChecker()	noCall	noCall	true	893
3123.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readVarint64()	3109.json,3119.json,3097.json,3096.json,3099.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.readPersonIdent(),org.eclipse.jgit.internal.storage.reftable.BlockReader.skipValue(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readUpdateIndexDelta(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readPositionFromIndex(),org.eclipse.jgit.internal.storage.reftable.BlockReader.readBlockPositionList()	true	297
2127.json	org.eclipse.jgit.transport.PushCertificate.getPusher()	2136.json	org.eclipse.jgit.transport.PushCertificate.toStringBuilder()	true	1202
1128.json	org.eclipse.jgit.hooks.CommitMsgHook.getCommitEditMessageFilePath()	1127.json,1125.json	org.eclipse.jgit.hooks.CommitMsgHook.getParameters(),org.eclipse.jgit.hooks.CommitMsgHook.canRun()	true	1195
2506.json	org.eclipse.jgit.transport.TransportAmazonS3.loadProperties()	noCall	noCall	true	2907
3063.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.ObjCursorImpl.initSeek()	3038.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.byObjectId(org.eclipse.jgit.lib.AnyObjectId)	true	297
9257.json	org.eclipse.jgit.lib.BlobBasedConfig.asTree(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.AnyObjectId)	9256.json	org.eclipse.jgit.lib.BlobBasedConfig.read(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.AnyObjectId, java.lang.String)	true	2851
9957.json	org.eclipse.jgit.lfs.lib.AnyLongObjectId.copyTo(char[], java.io.Writer)	null	org.eclipse.jgit.lfs.lib.LongObjectIdTest.testCopyToWriterWithBuf()	true	856
5006.json	org.eclipse.jgit.internal.storage.pack.DeltaWindow.tryStealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)	5065.json	org.eclipse.jgit.internal.storage.pack.DeltaTask.tryStealWork(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)	true	1885
552.json	org.eclipse.jgit.junit.http.RecordingLogger.info(java.lang.String, java.lang.Throwable)	noCall	noCall	true	3070
8476.json	org.eclipse.jgit.util.FileUtils.delete(java.io.File, int)	null,7399.json,7229.json,null,null,null,null,null,null,null,4809.json,null,null,null,null,null,null,8485.json,null,null,6045.json,9017.json,9019.json,null,null,4884.json,4634.json,null,null,null,4610.json,4810.json,7352.json,null,null,null,null,null,null,null,7422.json,null,null,null,null,4751.json,null,7410.json,null,7428.json,6909.json,null,8479.json,null,6910.json,4883.json,null,8476.json,null,8475.json,7436.json	org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryConflictsWithFile(),org.eclipse.jgit.api.RebaseCommand.call(),org.eclipse.jgit.api.SubmoduleDeinitCommand.deinit(java.lang.String),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog(),org.eclipse.jgit.api.AddCommandTest.testReplaceDirectoryWithFile(),org.eclipse.jgit.transport.WalkEncryptionTest.Util.folderDelete(java.lang.String),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOk(),org.eclipse.jgit.lfs.server.fs.LfsServerTest.tearDown(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileAndContentConflicts(),org.eclipse.jgit.internal.storage.file.GC.prunePacked(),org.eclipse.jgit.lfs.server.fs.DownloadTest.testDownload(),org.eclipse.jgit.lfs.server.fs.PushTest.cleanup(),org.eclipse.jgit.gitrepo.RepoCommand.DefaultRemoteReader.readFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.internal.storage.file.FileSnapshotTest.tearDown(),org.eclipse.jgit.util.FileUtilsTest.testDeleteNotEmptyTreeNotOkButIgnoreFail(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.util.FileUtils.createSymLink(java.io.File, java.lang.String),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.configDelete(),org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader, boolean, org.eclipse.jgit.dircache.DirCacheCheckout.CheckoutMetadata),org.eclipse.jgit.lib.Repository.writeCommitMsg(java.io.File, java.lang.String),org.eclipse.jgit.lib.Repository.writeHeadsFile(java.util.List<? extends org.eclipse.jgit.lib.ObjectId>, java.lang.String),org.eclipse.jgit.lfs.server.fs.DownloadTest.testLargeFileDownload(),org.eclipse.jgit.util.FileUtilsTest.testDeleteSymlinkToDirectoryDoesNotDeleteTarget(),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(int, byte[], int, int),org.eclipse.jgit.internal.storage.file.LockFile.unlock(),org.eclipse.jgit.api.GitConstructionTest.testClose(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testTreewalkEnterSubtree(),org.eclipse.jgit.internal.storage.file.GC.prunePreserved(),org.eclipse.jgit.internal.storage.file.LockFile.unlock(java.io.File),org.eclipse.jgit.internal.storage.file.GC.prune(java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.api.CleanCommand.cleanPath(java.lang.String, java.util.Set<java.lang.String>),org.eclipse.jgit.util.FileUtilsTest.testDeleteEmptyTreeOk(),org.eclipse.jgit.lfs.lib.LongObjectIdTest.tearDown(),org.eclipse.jgit.lfs.server.fs.CheckoutTest.cleanup(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst(),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile(),org.eclipse.jgit.util.FileUtilsTest.testMkdirs(),org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog(),org.eclipse.jgit.api.RebaseCommand.checkoutCurrentHead(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.api.ResetCommandTest.testHardResetWithConflicts_DoDeleteFileFolderConflicts(),org.eclipse.jgit.storage.file.FileBasedConfigTest.tearDown(),org.eclipse.jgit.util.FileUtilsTest.testDeleteFile(),org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertUnpackedObject(java.io.File, org.eclipse.jgit.lib.ObjectId, boolean),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursive(),org.eclipse.jgit.api.RebaseCommand.finishRebase(org.eclipse.jgit.revwalk.RevCommit, boolean),org.eclipse.jgit.util.FileUtilsTest.tearDown(),org.eclipse.jgit.api.RebaseCommand.initFilesAndRewind(),org.eclipse.jgit.api.CloneCommand.cleanup(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File, java.nio.file.CopyOption...),org.eclipse.jgit.util.FSTest.tearDown(),org.eclipse.jgit.api.CloneCommand.deleteChildren(java.io.File),org.eclipse.jgit.internal.storage.file.ObjectDirectoryInserter.toTemp(org.eclipse.jgit.util.sha1.SHA1, int, long, java.io.InputStream),org.eclipse.jgit.internal.storage.file.GC.removeOldPack(java.io.File, java.lang.String, org.eclipse.jgit.internal.storage.pack.PackExt, int),org.eclipse.jgit.util.FileUtils.delete(java.io.File, int),org.eclipse.jgit.util.FileUtilsTest.testDeleteRecursiveEmpty(),org.eclipse.jgit.util.FileUtils.delete(java.io.File),org.eclipse.jgit.api.RebaseCommand.abort(org.eclipse.jgit.api.RebaseResult)	true	2741
10176.json	org.eclipse.jgit.transport.JschConfigSessionFactory.JschBugFixingConfigRepository.JschBugFixingConfig.getValues(java.lang.String)	noCall	noCall	true	148
5979.json	org.eclipse.jgit.dircache.DirCacheEntry.getCreationTime()	null	org.eclipse.jgit.dircache.DirCacheEntryTest.copyMetaDataHelper(boolean)	true	2414
7857.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.getParentPath(java.lang.String)	7824.json,7856.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored(int, int),org.eclipse.jgit.treewalk.WorkingTreeIterator.isDirectoryIgnored(java.lang.String, java.lang.String)	true	106
3357.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.getCoalesceGarbageLimit()	noCall	noCall	true	1919
7949.json	org.eclipse.jgit.util.RawParseUtils.parseEncoding(byte[])	7951.json,null,null,null,5552.json,5669.json	org.eclipse.jgit.util.RawParseUtils.parsePersonIdent(byte[], int),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_Accept_Latin_One_AsISO8859_1(),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_ISO8859_1_encoding(),org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_badEncoding(),org.eclipse.jgit.revwalk.RevCommit.getEncoding(),org.eclipse.jgit.revwalk.RevTag.guessEncoding()	true	3176
1063.json	org.eclipse.jgit.errors.CheckoutConflictException.getConflictingFiles()	null,null,null,null	org.eclipse.jgit.lib.DirCacheCheckoutTest.testFolderFileAndContentConflicts(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testMultipleContentConflicts(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts()	true	790
1552.json	org.eclipse.jgit.transport.WalkRemoteObjectDatabase.writeInfoPacks(java.util.Collection<java.lang.String>)	2308.json	org.eclipse.jgit.transport.WalkPushConnection.sendpack(java.util.List<org.eclipse.jgit.transport.RemoteRefUpdate>, org.eclipse.jgit.lib.ProgressMonitor)	true	3176
3000.json	org.eclipse.jgit.transport.OpenSshConfig.positive(java.lang.String)	null	org.eclipse.jgit.transport.OpenSshConfig.HostEntry.getPort()	true	289
7302.json	org.eclipse.jgit.api.TagCommand.setName(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,363.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.api.DescribeCommandTest.tag(java.lang.String),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.pgm.Tag.run(),org.eclipse.jgit.pgm.TagTest.testTagDelete(),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMultiMatch(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag(),org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag(),org.eclipse.jgit.pgm.DescribeTest.testDescribeCommitMatch2()	true	2844
10051.json	org.eclipse.jgit.lfs.server.s3.S3Repository.getUploadAction(org.eclipse.jgit.lfs.lib.AnyLongObjectId, long)	noCall	noCall	true	843
2122.json	org.eclipse.jgit.transport.RemoteRefUpdate.updateTrackingRef(org.eclipse.jgit.revwalk.RevWalk)	2097.json	org.eclipse.jgit.transport.PushProcess.updateTrackingRefs()	true	3176
208.json	org.eclipse.jgit.pgm.debug.WriteDirCache.run()	noCall	noCall	true	3176
2008.json	org.eclipse.jgit.transport.Transport.getObjectChecker()	1320.json,1916.json,2006.json	org.eclipse.jgit.transport.BundleFetchConnection.doFetch(org.eclipse.jgit.lib.ProgressMonitor, java.util.Collection<org.eclipse.jgit.lib.Ref>, java.util.Set<org.eclipse.jgit.lib.ObjectId>),org.eclipse.jgit.transport.BasePackFetchConnection.receivePack(org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream),org.eclipse.jgit.transport.Transport.isCheckFetchedObjects()	true	1293
5547.json	org.eclipse.jgit.revwalk.RevCommit.getCommitterIdent()	null,null,null,null,null,6459.json,null,null,null,null,null,null,null,null	org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter(),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs()	true	3176
2735.json	org.eclipse.jgit.internal.ketch.ReplicaConfig.getCommitSpeed()	noCall	noCall	true	872
7591.json	org.eclipse.jgit.treewalk.TreeWalk.stopWalk()	7590.json	org.eclipse.jgit.treewalk.TreeWalk.next()	true	893
4953.json	org.eclipse.jgit.internal.storage.reftree.RefTree.resolve(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Ref, int)	4953.json,4950.json	org.eclipse.jgit.internal.storage.reftree.RefTree.resolve(org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.Ref, int),org.eclipse.jgit.internal.storage.reftree.RefTree.exactRef(org.eclipse.jgit.lib.ObjectReader, java.lang.String)	true	884
7027.json	org.eclipse.jgit.api.InitCommand.setGitDir(java.io.File)	null,null,null,null,6884.json	org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual(),org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir(),org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame(),org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir(),org.eclipse.jgit.api.CloneCommand.init()	true	1273
8917.json	org.eclipse.jgit.lib.Config.newState()	8919.json	org.eclipse.jgit.lib.Config.clear()	true	3176
2586.json	org.eclipse.jgit.transport.BaseReceivePack.setSignedPushConfig(org.eclipse.jgit.transport.SignedPushConfig)	noCall	noCall	true	1088
6524.json	org.eclipse.jgit.diff.Subsequence.size()	noCall	noCall	true	2830
7848.json	org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.loadRulesFromFile(org.eclipse.jgit.ignore.IgnoreNode, java.io.File)	null	org.eclipse.jgit.treewalk.WorkingTreeIterator.RootIgnoreNode.load()	true	2663
4499.json	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.checkNonFastForwards(org.eclipse.jgit.revwalk.RevWalk, java.util.List<org.eclipse.jgit.transport.ReceiveCommand>)	null	org.eclipse.jgit.internal.storage.file.PackedBatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	320
9926.json	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectId.prefixCompare(long[], int)	null	org.eclipse.jgit.lfs.lib.AbbreviatedLongObjectIdTest.testPrefixCompareLong()	true	856
10201.json	org.eclipse.jgit.transport.JschSession.getSftpChannel()	2051.json	org.eclipse.jgit.transport.TransportSftp.newSftp()	true	2636
7948.json	org.eclipse.jgit.util.RawParseUtils.parseEncodingName(byte[])	7949.json,5551.json	org.eclipse.jgit.util.RawParseUtils.parseEncoding(byte[]),org.eclipse.jgit.revwalk.RevCommit.getEncodingName()	true	880
6347.json	org.eclipse.jgit.fnmatch.FileNameMatcher.createMatcherForSuffix()	null	org.eclipse.jgit.fnmatch.FileNameMatcherTest.testCreateMatcherForSuffix()	true	3176
9330.json	org.eclipse.jgit.lib.BatchRefUpdate.getTakenPrefixes(java.util.Collection<java.lang.String>)	9326.json	org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor, java.util.List<java.lang.String>)	true	1898
3043.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readFileHeader()	3035.json,3031.json,3033.json,3034.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.allRefs(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.blockSize(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.minUpdateIndex(),org.eclipse.jgit.internal.storage.reftable.ReftableReader.maxUpdateIndex()	true	297
7878.json	org.eclipse.jgit.submodule.SubmoduleConflict.size()	noCall	noCall	true	125
3361.json	org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor)	null,null,null,7182.json	org.eclipse.jgit.transport.UploadPackTest.generateBitmaps(org.eclipse.jgit.internal.storage.dfs.InMemoryRepository),org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollectorTest.run(org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector),org.eclipse.jgit.transport.UploadPackTest.testFetchWithBlobLimitFilterAndBitmaps(),org.eclipse.jgit.api.GarbageCollectCommand.call()	true	2410
9777.json	org.eclipse.jgit.lib.ObjectStream.Filter.close()	null,3539.json	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.Anonymous-42c86be6-2bd7-49a1-8ab6-133482c4478d.close(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.openStream()	true	2901
8580.json	org.eclipse.jgit.util.BlockList.toBlockIndex(int)	8570.json,8585.json,8577.json,8576.json,8571.json	org.eclipse.jgit.util.BlockList.get(int),org.eclipse.jgit.util.BlockList.MyIterator.remove(),org.eclipse.jgit.util.BlockList.resetTailBlock(),org.eclipse.jgit.util.BlockList.remove(int),org.eclipse.jgit.util.BlockList.set(int, T)	true	2651
8341.json	org.eclipse.jgit.util.sha1.SHA1.s3(int, int, int, int, int)	8337.json,8338.json	org.eclipse.jgit.util.sha1.SHA1.compress(),org.eclipse.jgit.util.sha1.SHA1.recompress(int)	true	466
1558.json	org.eclipse.jgit.transport.HttpTransport.getConnectionFactory()	9866.json,9870.json	org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsConnection(org.eclipse.jgit.lib.Repository, java.lang.String, java.lang.String),org.eclipse.jgit.lfs.internal.LfsConnectionFactory.getLfsContentConnection(org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lfs.Protocol.Action, java.lang.String)	true	1572
6971.json	org.eclipse.jgit.api.RemoveNoteCommand.setNotesRef(java.lang.String)	noCall	noCall	true	2618
3090.json	org.eclipse.jgit.internal.storage.reftable.BlockReader.truncated()	3051.json	org.eclipse.jgit.internal.storage.reftable.ReftableReader.readBlock(long, long)	true	297
6985.json	org.eclipse.jgit.api.CommitCommand.setMessage(java.lang.String)	null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7414.json,null,6812.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7423.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7405.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,301.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,6309.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7402.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,7195.json,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage(),org.eclipse.jgit.internal.storage.file.AlternatesTest.createCommit(),org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit(),org.eclipse.jgit.api.StashApplyCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedFileModeChange(),org.eclipse.jgit.api.RenameBranchCommandTest.setUp(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink(),org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesContent(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranchThatAlreadyExists(),org.eclipse.jgit.api.TagCommandTest.testDelete(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored(),org.eclipse.jgit.pgm.RepoTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromCommit(),org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget(),org.eclipse.jgit.transport.WalkEncryptionTest.Base.cryptoTest(java.util.Properties),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.setUpSubmodules(),org.eclipse.jgit.pgm.MergeTest.testMergeWithUserMessage(),org.eclipse.jgit.api.FetchCommandTest.testForcedFetch(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug(),org.eclipse.jgit.api.CommitCommandTest.commitEmptyCommits(),org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict(),org.eclipse.jgit.pgm.BranchTest.testListContains(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule(),org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfInWT(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches(),org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutExistingBranchWithConflict(),org.eclipse.jgit.merge.MergerTest.checkContentMergeLargeBinaries(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CleanCommandTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.merge.MergerTest.checkMergeNonConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.doTestPullWithRebase(java.util.concurrent.Callable<org.eclipse.jgit.api.PullResult>, org.eclipse.jgit.api.PullCommandTest.TestPullMode),org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir(),org.eclipse.jgit.pgm.MergeTest.testNoFastForward(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream(),org.eclipse.jgit.pgm.MergeTest.testFastForwardOnly(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectoryWithTrackedContent(),org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId(),org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkActuallyModified(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead(),org.eclipse.jgit.api.HugeFileTest.testAddHugeFile(),org.eclipse.jgit.api.BranchCommandTest.setUp(),org.eclipse.jgit.api.TagCommandTest.testTagging(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.dirtySubmoduleBecauseNewCommit(),org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree(),org.eclipse.jgit.pgm.ConfigTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles(),org.eclipse.jgit.merge.MergerTest.mergeWithCrlfAutoCrlfTrue(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf(org.eclipse.jgit.lib.CoreConfig.AutoCRLF, org.eclipse.jgit.lib.CoreConfig.AutoCRLF),org.eclipse.jgit.api.BranchCommandTest.setUpRepoWithRemote(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanAndSmudgeFilter(),org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked(),org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit(),org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.revwalk.RevCommitListTest.setup(int),org.eclipse.jgit.api.ResetCommandTest.setupRepository(),org.eclipse.jgit.api.RebaseCommand.squashIntoPrevious(boolean, org.eclipse.jgit.lib.RebaseTodoLine),org.eclipse.jgit.pgm.MergeTest.setUp(),org.eclipse.jgit.api.RevertCommand.call(),org.eclipse.jgit.pgm.CloneTest.createInitialCommit(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f1_7(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration(),org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile(),org.eclipse.jgit.api.PullCommandTest.testPullMerge(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict(),org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter(),org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion(),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict_noTree(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir(),org.eclipse.jgit.pgm.StatusTest.commitPendingChanges(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile(),org.eclipse.jgit.api.EolRepositoryTest.gitCommit(org.eclipse.jgit.api.Git, java.lang.String),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullWithUntrackedStash(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testIgnoredDirectory(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommit(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CleanTest.testCleanLeaveDirs(),org.eclipse.jgit.api.NotesCommandTest.setUp(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithLongFilename(),org.eclipse.jgit.api.GitConstructionTest.setUp(),org.eclipse.jgit.api.GarbageCollectCommandTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit(),org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge(),org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.api.AddCommandTest.testBuiltinFilters(boolean),org.eclipse.jgit.junit.RepositoryTestCase.commitFile(java.lang.String, java.lang.String, java.lang.String),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations(),org.eclipse.jgit.pgm.StatusTest.changeUnmergedFileAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteBadName(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingWithFolderInWorkingTree(),org.eclipse.jgit.pgm.ReflogTest.testSingleCommit(),org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig(),org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule(),org.eclipse.jgit.api.PathCheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommand.continueRebase(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutOrphan(),org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict(),org.eclipse.jgit.merge.MergerTest.checkUntrackedFolderIsNotAConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_NoAttr_Conflict(),org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput(),org.eclipse.jgit.api.StashCreateCommandTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDir(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_8(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RevertCommandTest.testRevert(),org.eclipse.jgit.api.PushCommandTest.testPushAfterGC(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.setUp(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSelf(),org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream(),org.eclipse.jgit.api.PullCommandTest.setUp(),org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMixedNewlines(),org.eclipse.jgit.api.PushCommandTest.testPrePushHook(),org.eclipse.jgit.api.AddCommandTest.testAttributesWithTreeWalkFilter(),org.eclipse.jgit.api.LogCommandTest.logAllCommits(),org.eclipse.jgit.merge.MergerTest.checkMergeCrissCross(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetWithChangeInGitignore(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount(),org.eclipse.jgit.diff.DiffFormatterTest.testDiff(),org.eclipse.jgit.api.AddCommandTest.createNestedRepo(java.lang.String),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeAndClean(),org.eclipse.jgit.gitrepo.RepoCommandSymlinkTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri(),org.eclipse.jgit.pgm.ArchiveTest.testTarIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithSubdir(),org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLinkToDirectory(),org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitAdd(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testNoFastForward(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete(),org.eclipse.jgit.pgm.StatusTest.makeInitialCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestMissingThenFolderWithFileInWorkingTree(),org.eclipse.jgit.pgm.FetchTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutPath(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit(),org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit(),org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange(),org.eclipse.jgit.merge.MergerTest.checkForCorrectIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkContentMergeConflict(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInTheirs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate(),org.eclipse.jgit.api.AddCommandTest.testBuiltinCleanFilter(boolean),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.createRepositoryBinaryConflict(java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>, java.util.function.Consumer<org.eclipse.jgit.api.Git>),org.eclipse.jgit.api.RmCommandTest.setUp(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict(),org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingSubmodulesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges(),org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_3(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter(),org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_1_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange(),org.eclipse.jgit.merge.MergerTest.checkLockedFilesToBeDeleted(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderWithMissingInWorkingTree(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.api.CloneCommandTest.setUp(),org.eclipse.jgit.util.FilterCommandsTest.setUp(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutWithMissingWorkingTreeFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndRestoreFromIndex(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts(),org.eclipse.jgit.pgm.MergeTest.testMergeNoCommitSquash(),org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit(),org.eclipse.jgit.api.RebaseCommandTest.writeFileAndCommit(java.lang.String, java.lang.String, java.lang.String...),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedLinkModeChange(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption(),org.eclipse.jgit.api.TagCommandTest.testEmptyTagName(),org.eclipse.jgit.api.DiffCommandTest.testDiffModified(),org.eclipse.jgit.pgm.Commit.run(),org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_6_f2_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive(),org.eclipse.jgit.api.MergeCommandTest.prepareSuccessfulMerge(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.StatusCommandTest.testDifferentStates(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_2_f2_f14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkNotModifiedThoughNormalized(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile(),org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirsAndNewIndexEntry(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile(),org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword(),org.eclipse.jgit.pgm.FetchTest.testFetchForceUpdate(),org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange(),org.eclipse.jgit.api.MergeCommandTest.addAllAndCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ResetTest.testResetPrevious(),org.eclipse.jgit.merge.MergerTest.failingDeleteOfDirectoryWithUntrackedContent(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders(),org.eclipse.jgit.lib.ReflogResolveTest.resolveDate(),org.eclipse.jgit.pgm.RemoteTest.setUp(),org.eclipse.jgit.merge.MergerTest.checkContentMergeNoConflict_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.TagCommandTest.testDeleteFullName(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines(),org.eclipse.jgit.pgm.CleanTest.testCleanDeleteDirs(),org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch(),org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail(),org.eclipse.jgit.api.CommitOnlyTest.prepare_f3_f2_14(org.eclipse.jgit.api.Git, int, boolean),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing(),org.eclipse.jgit.pgm.DescribeTest.testHeadNoTag(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent(),org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage(),org.eclipse.jgit.gitrepo.RepoCommand.call(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveIncludesSubmoduleDirectory(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutBranch(),org.eclipse.jgit.api.RebaseCommandTest.testUpToDate(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly(),org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward(),org.eclipse.jgit.api.LsRemoteCommandTest.setUp(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit(),org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug(),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule(),org.eclipse.jgit.api.PushCommandTest.testPush(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile(),org.eclipse.jgit.pgm.TextBuiltinTest.testCleanDeleteDirs(),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutLink(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail(),org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery(),org.eclipse.jgit.api.MergeCommandTest.testFastForward(),org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers(),org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting(),org.eclipse.jgit.api.BlameCommandTest.testRename(java.lang.String, java.lang.String),org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines(),org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule(),org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testNonDeletableFilesOnWindows(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree(),org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification(),org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits(),org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile(),org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward(),org.eclipse.jgit.api.AddCommandTest.testExecutableRetention(),org.eclipse.jgit.pgm.ArchiveTest.commitBazAndFooSlashBar(),org.eclipse.jgit.pgm.MergeTest.testFastForward(),org.eclipse.jgit.api.CherryPickCommandTest.doTestCherryPick(boolean),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches(),org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileThenFileWithFolderInIndex(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinCleanFilter(),org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge(),org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths(),org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags(),org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_4(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict(),org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithLongFilename(),org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDir(),org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits(),org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches(),org.eclipse.jgit.api.BlameCommandTest.testSingleRevision(),org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions(),org.eclipse.jgit.api.BlameCommandTest.testEditAllLines(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits(),org.eclipse.jgit.api.FetchCommandTest.testFetch(),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateBrokenSymLink(),org.eclipse.jgit.api.TagCommandTest.testInvalidTagName(),org.eclipse.jgit.api.ApplyCommandTest.init(java.lang.String, boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testContentMerge(),org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit(),org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes(),org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PullCommandTest.testPullFastForward(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate(),org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.commitRm(java.lang.String),org.eclipse.jgit.api.LogCommandTest.createCommits(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict(),org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule(),org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits(),org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex(),org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging(),org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMergesWithUnrelatedSide(boolean),org.eclipse.jgit.pgm.TagTest.testTagTwice(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesContent(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules(),org.eclipse.jgit.api.RebaseCommandTest.doTestRebasePreservingMerges(boolean),org.eclipse.jgit.lib.IndexModificationTimesTest.testModify(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_14(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lfs.server.fs.PushTest.testPushSimple(),org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal(),org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate(),org.eclipse.jgit.api.CheckoutCommandTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash(),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_UnsetMerge_Conflict(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesWithoutIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict(),org.eclipse.jgit.api.LogCommandTest.setCommitsAndMerge(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutNewBranch(),org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed(),org.eclipse.jgit.pgm.ResetTest.testResetSelf(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit(),org.eclipse.jgit.pgm.ArchiveTest.testTarPreservesMode(),org.eclipse.jgit.api.PullCommandWithRebaseTest.setUp(),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits(),org.eclipse.jgit.api.CommitOnlyTest.executeAndCheck_f1_12(org.eclipse.jgit.api.Git, int),org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge(),org.eclipse.jgit.pgm.ResetTest.testResetEmptyPath(),org.eclipse.jgit.pgm.ArchiveTest.testArchivePreservesMode(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_deleteFileAndCreateBranchAndRestoreFromCommit(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint(),org.eclipse.jgit.merge.MergerTest.checkMergeConflictingNewTrees(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge(),org.eclipse.jgit.api.RevertCommandTest.prepareRevert(org.eclipse.jgit.api.Git),org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex(),org.eclipse.jgit.api.CherryPickCommandTest.prepareCherryPick(org.eclipse.jgit.api.Git),org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames(),org.eclipse.jgit.api.CommitCommandTest.testReflogs(),org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet(),org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile(),org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree(),org.eclipse.jgit.api.MergeCommandTest.testMergeTag(),org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict(),org.eclipse.jgit.merge.MergerTest.checkMergeMergeableFilesWithTreeInIndex(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToEmptyDirs(),org.eclipse.jgit.util.FilterCommandsTest.testBuiltinSmudgeFilter(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply(),org.eclipse.jgit.api.MergeCommandTest.testMergeMessage(),org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion(),org.eclipse.jgit.api.DiffCommandTest.testDiffCached(),org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit(),org.eclipse.jgit.api.PushCommandTest.testPushWithLease(),org.eclipse.jgit.pgm.ArchiveTest.testTarWithSubdir(),org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple(),org.eclipse.jgit.api.StashDropCommandTest.setUp(),org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec(),org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions(),org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal(),org.eclipse.jgit.api.FetchAndPullCommandsRecurseSubmodulesTest.updateSubmoduleRevision(),org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenFileWithMissingInWorkingTree(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime(),org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge(),org.eclipse.jgit.pgm.MergeTest.testSquash(),org.eclipse.jgit.api.DescribeCommandTest.modify(java.lang.String),org.eclipse.jgit.attributes.merge.MergeGitAttributeTest.mergeBinaryFile_SetMerge_Conflict(),org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder(),org.eclipse.jgit.api.PathCheckoutCommandTest.setupConflictingState(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeLinkToNonEmptyDirs(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_modifyExisting(),org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch(),org.eclipse.jgit.api.PullCommandTest.testPullConflict(),org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines(),org.eclipse.jgit.util.HookTest.testAllCommitHooks(),org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged(),org.eclipse.jgit.pgm.StatusTest.commitChangesInTestBranch(org.eclipse.jgit.api.Git),org.eclipse.jgit.pgm.ReflogTest.testBranch(),org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules(),org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutChangeFileToNonEmptyDirs(),org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFolderThenMissingWithFileInWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.setUp(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup(),org.eclipse.jgit.pgm.MergeTest.testMerge(),org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries(),org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff(),org.eclipse.jgit.pgm.DescribeTest.secondCommit(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutAllPaths(),org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles(),org.eclipse.jgit.treewalk.FileTreeIteratorTest.testSymlinkModifiedNotNormalized(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutSingleFile(),org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull(),org.eclipse.jgit.pgm.ArchiveTest.commitGreeting(),org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree(),org.eclipse.jgit.pgm.ArchiveTest.commitFoo(),org.eclipse.jgit.pgm.ResetTest.resetPath(boolean, boolean),org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible(),org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects(),org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile(),org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits(),org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate(),org.eclipse.jgit.transport.PushOptionsTest.addCommit(org.eclipse.jgit.api.Git),org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees(),org.eclipse.jgit.pgm.BranchTest.setUp(),org.eclipse.jgit.api.MergeCommandTest.testMergeInItself(),org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode),org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag(),org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardDetachedHead(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.merge.MergerTest.checkMergeEqualTreesInCore_noRepo(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.merge.MergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateSymLink(),org.eclipse.jgit.pgm.CheckoutTest.fileModeTestFileWithFolderInIndex(),org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder(),org.eclipse.jgit.api.ReflogCommandTest.setUp(),org.eclipse.jgit.pgm.DescribeTest.initialCommitAndTag(),org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath(),org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead(),org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit(),org.eclipse.jgit.gitrepo.RepoCommandTest.setUp(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.api.CheckoutCommandTest.testSmudgeFilter_createNew(),org.eclipse.jgit.api.CleanCommandTest.testFilesShouldBeCleanedInSubSubFolders(),org.eclipse.jgit.pgm.TagTest.setUp(),org.eclipse.jgit.pgm.LsRemoteTest.setUp(),org.eclipse.jgit.submodule.SubmoduleDeinitTest.commitSubmoduleCreation(java.lang.String, org.eclipse.jgit.api.Git),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit(),org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits(),org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate(),org.eclipse.jgit.merge.MergerTest.checkFileReplacedByFolderInOurs(org.eclipse.jgit.merge.MergeStrategy),org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk(),org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment(),org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged(),org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort(),org.eclipse.jgit.api.BlameCommandTest.testTwoRenames(),org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution(),org.eclipse.jgit.lib.IndexDiffTest.testConflicting(),org.eclipse.jgit.pgm.ArchiveTest.testArchiveWithFiles(),org.eclipse.jgit.pgm.CheckoutTest.testCheckoutHead(),org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile()	true	2953
8668.json	org.eclipse.jgit.patch.FileHeader.eq(int, int, int, int)	8658.json	org.eclipse.jgit.patch.FileHeader.parseGitFileName(int, int)	true	3176
9447.json	org.eclipse.jgit.lib.CommitBuilder.setParentIds(java.util.List<? extends org.eclipse.jgit.lib.AnyObjectId>)	1034.json,null,2840.json,null,6979.json	org.eclipse.jgit.merge.RecursiveMerger.createCommitForTree(org.eclipse.jgit.lib.ObjectId, java.util.List<org.eclipse.jgit.revwalk.RevCommit>),org.eclipse.jgit.transport.PushCertificateStore.saveCert(org.eclipse.jgit.lib.ObjectInserter, org.eclipse.jgit.dircache.DirCache, org.eclipse.jgit.transport.PushCertificateStore.PendingCert, org.eclipse.jgit.lib.ObjectId),org.eclipse.jgit.internal.ketch.StageBuilder.makeStageList(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Repository, org.eclipse.jgit.lib.ObjectInserter),org.eclipse.jgit.junit.TestRepository.CommitBuilder.create(),org.eclipse.jgit.api.CommitCommand.call()	true	3176
161.json	org.eclipse.jgit.pgm.debug.VerifyReftable.id(org.eclipse.jgit.lib.ObjectId)	160.json	org.eclipse.jgit.pgm.debug.VerifyReftable.verify(org.eclipse.jgit.lib.Ref, org.eclipse.jgit.internal.storage.reftable.RefCursor)	true	297
7425.json	org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status)	7405.json,7402.json,7404.json	org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.RebaseCommand.processStep(org.eclipse.jgit.lib.RebaseTodoLine, boolean),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitFlattening(org.eclipse.jgit.revwalk.RevCommit)	true	2741
919.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictChange(org.eclipse.jgit.merge.MergeChunk)	916.json	org.eclipse.jgit.merge.MergeFormatterPass.writeConflictMetadata(org.eclipse.jgit.merge.MergeChunk)	true	1171
5163.json	org.eclipse.jgit.internal.storage.pack.DeltaEncoder.writeVarint(long)	noCall	noCall	true	2900
9009.json	org.eclipse.jgit.lib.Repository.readRevertHead()	null	org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution()	true	1989
1303.json	org.eclipse.jgit.transport.PreUploadHookChain.onEndNegotiateRound(org.eclipse.jgit.transport.UploadPack, java.util.Collection<? extends org.eclipse.jgit.lib.ObjectId>, int, int, boolean)	noCall	noCall	true	2374
3323.json	org.eclipse.jgit.internal.storage.reftable.ReftableWriter.Stats.objBytes()	135.json	org.eclipse.jgit.pgm.debug.WriteReftable.run()	true	297
6119.json	org.eclipse.jgit.storage.pack.PackStatistics.ObjectType.getBytes()	noCall	noCall	true	1094
3883.json	org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.getReaderOptions()	3543.json,3504.json,3713.json,null	org.eclipse.jgit.internal.storage.dfs.DfsInserter.StreamLoader.getCachedBytes(),org.eclipse.jgit.internal.storage.dfs.DfsInserter.insertBuffer(long),org.eclipse.jgit.internal.storage.dfs.DfsReader.getOptions(),org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects()	true	2410
8519.json	org.eclipse.jgit.util.IntList.set(int, int)	6501.json,null	org.eclipse.jgit.diff.MyersDiff.MiddleEdit.EditPaths.calculate(int),org.eclipse.jgit.util.IntListTest.testSet()	true	3169
5546.json	org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()	null,null,null,18.json,null,null,7401.json,null,null,7195.json,null,null,null,null,null,null,null,7425.json,6979.json,null,7405.json,null,null,null,null,null,null,null,null,380.json,null,272.json,null,null,1030.json,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded(),org.eclipse.jgit.awtui.CommitGraphPane.CommitTableModel.authorFor(org.eclipse.jgit.revplot.PlotCommit<org.eclipse.jgit.awtui.SwingCommitList.SwingLane>),org.eclipse.jgit.junit.TestRepository.amend(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.junit.TestRepository.CommitBuilder),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod(),org.eclipse.jgit.api.RebaseCommand.autoStashApply(),org.eclipse.jgit.blame.Candidate.getAuthor(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded(),org.eclipse.jgit.api.CherryPickCommand.call(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnOneRef(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_unsupportedEncoding(),org.eclipse.jgit.junit.TestRepositoryTest.amendRef(),org.eclipse.jgit.junit.TestRepository.cherryPick(org.eclipse.jgit.lib.AnyObjectId),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded(),org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange(),org.eclipse.jgit.api.RebaseCommand.stop(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.api.RebaseResult.Status),org.eclipse.jgit.api.CommitCommand.call(),org.eclipse.jgit.transport.PushCertificateStoreTest.saveOneCertOnMultipleRefs(),org.eclipse.jgit.api.RebaseCommand.cherryPickCommitPreservingMerges(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime(),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2(),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat(),org.eclipse.jgit.api.StashCreateCommandTest.validateStashedCommit(org.eclipse.jgit.revwalk.RevCommit, int),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.pgm.Show.show(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_illegalEncoding(),org.eclipse.jgit.junit.TestRepositoryTest.cherryPick(),org.eclipse.jgit.merge.SquashMessageFormatter.format(java.util.List<org.eclipse.jgit.revwalk.RevCommit>, org.eclipse.jgit.lib.Ref),org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents(),org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits()	true	3176
4636.json	org.eclipse.jgit.internal.storage.file.PackReverseIndex.findObject(long)	null,null,3812.json,3849.json,4118.json,null	org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObject(),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindObjectWrongOffset(),org.eclipse.jgit.internal.storage.dfs.DfsPackFile.representation(org.eclipse.jgit.internal.storage.dfs.DfsObjectRepresentation, long, org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.internal.storage.file.PackReverseIndex),org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject.openStream(),org.eclipse.jgit.internal.storage.file.PackFile.findObjectForOffset(long),org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffset()	true	3176
3751.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.checkGarbagePacks(java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	3747.json	org.eclipse.jgit.internal.storage.dfs.DfsReader.selectObjectRepresentation(org.eclipse.jgit.internal.storage.pack.PackWriter, org.eclipse.jgit.lib.ProgressMonitor, java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.ObjectToPack>)	true	108
8318.json	org.eclipse.jgit.util.GitDateFormatter.formatDate(org.eclipse.jgit.lib.PersonIdent)	null,null,null,null,null,null,380.json,1031.json,null,null,null,null,null,null,null	org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward(),org.eclipse.jgit.util.GitDateFormatterTest.ISO(),org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict(),org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit(),org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT(),org.eclipse.jgit.util.GitDateFormatterTest.LOCALE(),org.eclipse.jgit.pgm.Log.show(org.eclipse.jgit.revwalk.RevCommit),org.eclipse.jgit.merge.SquashMessageFormatter.toString(org.eclipse.jgit.lib.PersonIdent),org.eclipse.jgit.util.GitDateFormatterTest.RAW(),org.eclipse.jgit.util.GitDateFormatterTest.LOCALELOCAL(),org.eclipse.jgit.api.MergeCommandTest.testSquashMerge(),org.eclipse.jgit.util.GitDateFormatterTest.SHORT(),org.eclipse.jgit.util.GitDateFormatterTest.RFC(),org.eclipse.jgit.util.GitDateFormatterTest.LOCAL(),org.eclipse.jgit.util.GitDateFormatterTest.RELATIVE()	true	2423
2385.json	org.eclipse.jgit.transport.PackParser.getLockMessage()	4698.json	org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.parse(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor)	true	2692
